// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.PropertyName.hpp"


namespace ModdingAPI::Exposed::UnityEngine {
struct __AudioExtensionManager_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_ListenerSpatializerExtensionDefinitions;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_SourceSpatializerExtensionDefinitions;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_SourceAmbisonicDecoderExtensionDefinitions;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_SourceExtensionsToUpdate;
  int32_t m_NextStopIndex;
  bool m_BuiltinDefinitionsRegistered;
  ModdingAPI::Exposed::UnityEngine::PropertyName m_SpatializerName;
  ModdingAPI::Exposed::UnityEngine::PropertyName m_SpatializerExtensionName;
  ModdingAPI::Exposed::UnityEngine::PropertyName m_ListenerSpatializerExtensionName;
};

struct __AudioExtensionManager_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __AudioExtensionManager_Il2CppClass {
  Il2CppClass_1 _1;
  __AudioExtensionManager_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __AudioExtensionManager_Il2CppVtbl vtbl;
};

class AudioExtensionManager {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C80228;
  static inline    __AudioExtensionManager_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __AudioExtensionManager_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__AudioExtensionManager_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __AudioExtensionManager_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*> m_ListenerSpatializerExtensionDefinitions = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_ListenerSpatializerExtensionDefinitions; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*> m_SourceSpatializerExtensionDefinitions = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_SourceSpatializerExtensionDefinitions; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*> m_SourceAmbisonicDecoderExtensionDefinitions = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_SourceAmbisonicDecoderExtensionDefinitions; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*> m_SourceExtensionsToUpdate = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_SourceExtensionsToUpdate; }
  );
  static inline __CppStaticProperty<int32_t> m_NextStopIndex = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_NextStopIndex; }
  );
  static inline __CppStaticProperty<bool> m_BuiltinDefinitionsRegistered = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_BuiltinDefinitionsRegistered; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::PropertyName> m_SpatializerName = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::PropertyName>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_SpatializerName; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::PropertyName> m_SpatializerExtensionName = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::PropertyName>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_SpatializerExtensionName; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::PropertyName> m_ListenerSpatializerExtensionName = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::PropertyName>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_ListenerSpatializerExtensionName; }
  );

  // Static methods:
  static inline ModdingAPI::Exposed::UnityEngine::AudioSourceExtension* AddSpatializerExtension(ModdingAPI::Exposed::UnityEngine::AudioSource* source) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AudioSourceExtension*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioSource*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1528A90))(source);
  }
  static inline ModdingAPI::Exposed::UnityEngine::AudioSourceExtension* AddAmbisonicDecoderExtension(ModdingAPI::Exposed::UnityEngine::AudioSource* source) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AudioSourceExtension*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioSource*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1528E00))(source);
  }
  static inline void WriteExtensionProperties(ModdingAPI::Exposed::UnityEngine::AudioSourceExtension* extension, System_String* extensionName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioSourceExtension*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1529100))(extension, extensionName);
  }
  static inline ModdingAPI::Exposed::UnityEngine::AudioListenerExtension* AddSpatializerExtension(ModdingAPI::Exposed::UnityEngine::AudioListener* listener) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AudioListenerExtension*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioListener*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1529400))(listener);
  }
  static inline void WriteExtensionProperties(ModdingAPI::Exposed::UnityEngine::AudioListenerExtension* extension, System_String* extensionName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioListenerExtension*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1529770))(extension, extensionName);
  }
  static inline void AddExtensionToManager(ModdingAPI::Exposed::UnityEngine::AudioSourceExtension* extension) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioSourceExtension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1529A70))(extension);
  }
  static inline void RemoveExtensionFromManager(ModdingAPI::Exposed::UnityEngine::AudioSourceExtension* extension) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioSourceExtension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1529B90))(extension);
  }
  static inline void Update() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1529D80))();
  }
  static inline void GetReadyToPlay(ModdingAPI::Exposed::UnityEngine::AudioSourceExtension* extension) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioSourceExtension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x152A2F0))(extension);
  }
  static inline void RegisterBuiltinDefinitions() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x152A4E0))();
  }
  static inline ModdingAPI::Exposed::UnityEngine::Object* GetAudioListener() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Object*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x152A690))();
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x152A6E0))();
  }
};
}