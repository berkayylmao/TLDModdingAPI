// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Matrix4x4.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.LayerMask.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Bounds.hpp"
#include "ModdingAPI.Exposed.Pathfinding.Int3.hpp"
#include "ModdingAPI.Exposed.Pathfinding.IntRect.hpp"
#include "ModdingAPI.Exposed.Pathfinding.Int2.hpp"
#include "ModdingAPI.Exposed.Pathfinding.NNInfo.hpp"
#include "ModdingAPI.Exposed.Pathfinding.Voxels.VoxelMesh.hpp"
#include "ModdingAPI.Exposed.Pathfinding.Voxels.ExtraMesh.hpp"
#include "ModdingAPI.Exposed.Pathfinding.GraphHitInfo.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Bounds.hpp"
#include "ModdingAPI::Exposed::UnityEngine::LayerMask.hpp"


namespace ModdingAPI::Exposed::Pathfinding {
struct __RecastGraph_Il2CppStaticFields {
};

struct __RecastGraph_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_CountNodes;
  VirtualInvokeData _5_GetNodes;
  VirtualInvokeData _6_RelocateNodes;
  VirtualInvokeData _7_GetNearest;
  VirtualInvokeData _8_GetNearestForce;
  VirtualInvokeData _9_Awake;
  VirtualInvokeData _10_OnDestroy;
  VirtualInvokeData _11_ScanInternal;
  VirtualInvokeData _12_NodeColor;
  VirtualInvokeData _13_SerializeExtraInfo;
  VirtualInvokeData _14_DeserializeExtraInfo;
  VirtualInvokeData _15_PostDeserialization;
  VirtualInvokeData _16_SerializeSettings;
  VirtualInvokeData _17_DeserializeSettings;
  VirtualInvokeData _18_OnDrawGizmos;
  VirtualInvokeData _19_UnloadGizmoMeshes;
  VirtualInvokeData _21_Linecast;
  VirtualInvokeData _22_Linecast;
  VirtualInvokeData _23_Linecast;
  VirtualInvokeData _24_Linecast;
  VirtualInvokeData _25_UpdateArea;
  VirtualInvokeData _26_UpdateAreaInit;
  VirtualInvokeData _27_CanUpdateAsync;
  VirtualInvokeData _28_GetVertex;
  VirtualInvokeData _29_GetVertexArrayIndex;
  VirtualInvokeData _30_GetTileCoordinates;
};

struct __RecastGraph_Il2CppClass {
  Il2CppClass_1 _1;
  __RecastGraph_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __RecastGraph_Il2CppVtbl vtbl;
};

class RecastGraph {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C54578;
  static inline    RecastGraph* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C5B318;
  static inline    __RecastGraph_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline RecastGraph* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (RecastGraph**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __RecastGraph_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__RecastGraph_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __RecastGraph_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::System::Byte_array* _sguid;
  ModdingAPI::Exposed::AstarPath* active;
  uint32_t initialPenalty;
  bool open;
  uint32_t graphIndex;
  System_String* name;
  bool drawGizmos;
  bool infoScreenOpen;
  ModdingAPI::Exposed::UnityEngine::Matrix4x4 matrix;
  ModdingAPI::Exposed::UnityEngine::Matrix4x4 inverseMatrix;
  bool dynamic;
  float characterRadius;
  float contourMaxError;
  float cellSize;
  float cellHeight;
  float walkableHeight;
  float walkableClimb;
  float maxSlope;
  float maxEdgeLength;
  float minRegionSize;
  int32_t editorTileSize;
  int32_t tileSizeX;
  int32_t tileSizeZ;
  bool nearestSearchOnlyXZ;
  bool useTiles;
  bool scanEmptyGraph;
  int32_t relevantGraphSurfaceMode;
  bool rasterizeColliders;
  bool rasterizeMeshes;
  bool rasterizeTerrain;
  bool rasterizeTrees;
  float colliderRasterizeDetail;
  ModdingAPI::Exposed::UnityEngine::Vector3 forcedBoundsCenter;
  ModdingAPI::Exposed::UnityEngine::Vector3 forcedBoundsSize;
  ModdingAPI::Exposed::UnityEngine::LayerMask mask;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* tagMask;
  bool showMeshOutline;
  bool showNodeConnections;
  bool showMeshSurface;
  int32_t terrainSampleSize;
  ModdingAPI::Exposed::Pathfinding::Voxels::Voxelize* globalVox;
  int32_t tileXCount;
  int32_t tileZCount;
  ModdingAPI::Exposed::Pathfinding::RecastGraph::NavmeshTile_array* tiles;
  bool batchTileUpdate;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* batchUpdatedTiles;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* cachedInt2_int_dict;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* cachedInt3_int_dict;
  ModdingAPI::Exposed::System::Int32_array* BoxColliderTris;
  ModdingAPI::Exposed::UnityEngine::Vector3_array* BoxColliderVerts;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* capsuleCache;

  // Member methods:
  ModdingAPI::Exposed::UnityEngine::Bounds get_forcedBounds() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Bounds(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x218D340))(this);
  }
  ModdingAPI::Exposed::Pathfinding::Int3 GetVertex(int32_t index) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::Int3(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x218D3B0))(this, index);
  }
  int32_t GetTileIndex(int32_t index) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x218D450))(this, index);
  }
  int32_t GetVertexArrayIndex(int32_t index) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x218D460))(this, index);
  }
  void GetTileCoordinates(int32_t tileIndex, int32_t x, int32_t z) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x218D470))(this, tileIndex, x, z);
  }
  ModdingAPI::Exposed::Pathfinding::RecastGraph::NavmeshTile_array* GetTiles() {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::RecastGraph::NavmeshTile_array*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33E1A0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Bounds GetTileBounds(ModdingAPI::Exposed::Pathfinding::IntRect rect) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Bounds(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::Pathfinding::IntRect)>(Helpers::Memory::GetInstance().MakeAbsolute(0x218D490))(this, rect);
  }
  ModdingAPI::Exposed::UnityEngine::Bounds GetTileBounds(int32_t x, int32_t z, int32_t width, int32_t depth) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Bounds(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x218D500))(this, x, z, width, depth);
  }
  ModdingAPI::Exposed::Pathfinding::Int2 GetTileCoordinates(ModdingAPI::Exposed::UnityEngine::Vector3 p) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::Int2(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x218DA50))(this, p);
  }
  void OnDestroy() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x218DCC0))(this);
  }
  void RelocateNodes(ModdingAPI::Exposed::UnityEngine::Matrix4x4 oldMatrix, ModdingAPI::Exposed::UnityEngine::Matrix4x4 newMatrix) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::UnityEngine::Matrix4x4, ModdingAPI::Exposed::UnityEngine::Matrix4x4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x218DD90))(this, oldMatrix, newMatrix);
  }
  void GetNodes(ModdingAPI::Exposed::Pathfinding::GraphNodeDelegateCancelable* del) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::Pathfinding::GraphNodeDelegateCancelable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x218E5C0))(this, del);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 ClosestPointOnNode(ModdingAPI::Exposed::Pathfinding::TriangleMeshNode* node, ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::Pathfinding::TriangleMeshNode*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x218E6D0))(this, node, pos);
  }
  bool ContainsPoint(ModdingAPI::Exposed::Pathfinding::TriangleMeshNode* node, ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::Pathfinding::TriangleMeshNode*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x218EAD0))(this, node, pos);
  }
  void SnapForceBoundsToScene() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x218F040))(this);
  }
  void GetRecastMeshObjs(ModdingAPI::Exposed::UnityEngine::Bounds bounds, ModdingAPI::Exposed::System::Collections::Generic::List_T_* buffer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::UnityEngine::Bounds, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x218F340))(this, bounds, buffer);
  }
  ModdingAPI::Exposed::Pathfinding::IntRect GetTouchingTiles(ModdingAPI::Exposed::UnityEngine::Bounds b) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::IntRect(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::UnityEngine::Bounds)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2190580))(this, b);
  }
  ModdingAPI::Exposed::Pathfinding::IntRect GetTouchingTilesRound(ModdingAPI::Exposed::UnityEngine::Bounds b) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::IntRect(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::UnityEngine::Bounds)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21909D0))(this, b);
  }
  int32_t CanUpdateAsync(ModdingAPI::Exposed::Pathfinding::GraphUpdateObject* o) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::Pathfinding::GraphUpdateObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2190E20))(this, o);
  }
  void UpdateAreaInit(ModdingAPI::Exposed::Pathfinding::GraphUpdateObject* o) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::Pathfinding::GraphUpdateObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2190E40))(this, o);
  }
  void UpdateArea(ModdingAPI::Exposed::Pathfinding::GraphUpdateObject* guo) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::Pathfinding::GraphUpdateObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2191210))(this, guo);
  }
  void ConnectTileWithNeighbours(ModdingAPI::Exposed::Pathfinding::RecastGraph::NavmeshTile* tile) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::Pathfinding::RecastGraph::NavmeshTile*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2191890))(this, tile);
  }
  void RemoveConnectionsFromTile(ModdingAPI::Exposed::Pathfinding::RecastGraph::NavmeshTile* tile) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::Pathfinding::RecastGraph::NavmeshTile*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2191A90))(this, tile);
  }
  void RemoveConnectionsFromTo(ModdingAPI::Exposed::Pathfinding::RecastGraph::NavmeshTile* a, ModdingAPI::Exposed::Pathfinding::RecastGraph::NavmeshTile* b) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::Pathfinding::RecastGraph::NavmeshTile*, ModdingAPI::Exposed::Pathfinding::RecastGraph::NavmeshTile*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2191C90))(this, a, b);
  }
  ModdingAPI::Exposed::Pathfinding::NNInfo GetNearest(ModdingAPI::Exposed::UnityEngine::Vector3 position, ModdingAPI::Exposed::Pathfinding::NNConstraint* constraint, ModdingAPI::Exposed::Pathfinding::GraphNode* hint) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::NNInfo(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::Pathfinding::NNConstraint*, ModdingAPI::Exposed::Pathfinding::GraphNode*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2191E90))(this, position, constraint, hint);
  }
  ModdingAPI::Exposed::Pathfinding::NNInfo GetNearestForce(ModdingAPI::Exposed::UnityEngine::Vector3 position, ModdingAPI::Exposed::Pathfinding::NNConstraint* constraint) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::NNInfo(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::Pathfinding::NNConstraint*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2191EF0))(this, position, constraint);
  }
  ModdingAPI::Exposed::Pathfinding::GraphNode* PointOnNavmesh(ModdingAPI::Exposed::UnityEngine::Vector3 position, ModdingAPI::Exposed::Pathfinding::NNConstraint* constraint) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::GraphNode*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::Pathfinding::NNConstraint*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21927D0))(this, position, constraint);
  }
  void ScanInternal(ModdingAPI::Exposed::OnScanStatus* statusCallback) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::OnScanStatus*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2192AF0))(this, statusCallback);
  }
  void ScanTiledNavmesh(ModdingAPI::Exposed::OnScanStatus* statusCallback) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::OnScanStatus*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2192C10))(this, statusCallback);
  }
  void ScanAllTiles(ModdingAPI::Exposed::OnScanStatus* statusCallback) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::OnScanStatus*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2192C20))(this, statusCallback);
  }
  void BuildTileMesh(ModdingAPI::Exposed::Pathfinding::Voxels::Voxelize* vox, int32_t x, int32_t z) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::Pathfinding::Voxels::Voxelize*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2193E30))(this, vox, x, z);
  }
  ModdingAPI::Exposed::Pathfinding::RecastGraph::NavmeshTile* CreateTile(ModdingAPI::Exposed::Pathfinding::Voxels::Voxelize* vox, ModdingAPI::Exposed::Pathfinding::Voxels::VoxelMesh mesh, int32_t x, int32_t z) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::RecastGraph::NavmeshTile*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::Pathfinding::Voxels::Voxelize*, ModdingAPI::Exposed::Pathfinding::Voxels::VoxelMesh, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2194800))(this, vox, mesh, x, z);
  }
  void CreateNodeConnections(ModdingAPI::Exposed::Pathfinding::TriangleMeshNode_array* nodes) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::Pathfinding::TriangleMeshNode_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2195560))(this, nodes);
  }
  void ConnectTiles(ModdingAPI::Exposed::Pathfinding::RecastGraph::NavmeshTile* tile1, ModdingAPI::Exposed::Pathfinding::RecastGraph::NavmeshTile* tile2) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::Pathfinding::RecastGraph::NavmeshTile*, ModdingAPI::Exposed::Pathfinding::RecastGraph::NavmeshTile*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2195C00))(this, tile1, tile2);
  }
  void StartBatchTileUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2196F40))(this);
  }
  void EndBatchTileUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2197000))(this);
  }
  void ReplaceTile(int32_t x, int32_t z, ModdingAPI::Exposed::Pathfinding::Int3_array* verts, ModdingAPI::Exposed::System::Int32_array* tris, bool worldSpace) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, int32_t, int32_t, ModdingAPI::Exposed::Pathfinding::Int3_array*, ModdingAPI::Exposed::System::Int32_array*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2197480))(this, x, z, verts, tris, worldSpace);
  }
  void ReplaceTile(int32_t x, int32_t z, int32_t w, int32_t d, ModdingAPI::Exposed::Pathfinding::Int3_array* verts, ModdingAPI::Exposed::System::Int32_array* tris, bool worldSpace) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, int32_t, int32_t, int32_t, int32_t, ModdingAPI::Exposed::Pathfinding::Int3_array*, ModdingAPI::Exposed::System::Int32_array*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21974D0))(this, x, z, w, d, verts, tris, worldSpace);
  }
  void CollectTreeMeshes(ModdingAPI::Exposed::UnityEngine::Terrain* terrain, ModdingAPI::Exposed::System::Collections::Generic::List_T_* extraMeshes) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::UnityEngine::Terrain*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2198B20))(this, terrain, extraMeshes);
  }
  void CollectTerrainMeshes(ModdingAPI::Exposed::UnityEngine::Bounds bounds, bool rasterizeTrees, ModdingAPI::Exposed::System::Collections::Generic::List_T_* extraMeshes) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::UnityEngine::Bounds, bool, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2199520))(this, bounds, rasterizeTrees, extraMeshes);
  }
  void CollectColliderMeshes(ModdingAPI::Exposed::UnityEngine::Bounds bounds, ModdingAPI::Exposed::System::Collections::Generic::List_T_* extraMeshes) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::UnityEngine::Bounds, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2199F10))(this, bounds, extraMeshes);
  }
  bool CollectMeshes(ModdingAPI::Exposed::System::Collections::Generic::List_T_* extraMeshes, ModdingAPI::Exposed::UnityEngine::Bounds bounds) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::UnityEngine::Bounds)>(Helpers::Memory::GetInstance().MakeAbsolute(0x219A300))(this, extraMeshes, bounds);
  }
  ModdingAPI::Exposed::Pathfinding::Voxels::ExtraMesh RasterizeCollider(ModdingAPI::Exposed::UnityEngine::Collider* col) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::Voxels::ExtraMesh(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::UnityEngine::Collider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x219A630))(this, col);
  }
  ModdingAPI::Exposed::Pathfinding::Voxels::ExtraMesh RasterizeCollider(ModdingAPI::Exposed::UnityEngine::Collider* col, ModdingAPI::Exposed::UnityEngine::Matrix4x4 localToWorldMatrix) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::Voxels::ExtraMesh(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::UnityEngine::Collider*, ModdingAPI::Exposed::UnityEngine::Matrix4x4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x219A760))(this, col, localToWorldMatrix);
  }
  bool Linecast(ModdingAPI::Exposed::UnityEngine::Vector3 origin, ModdingAPI::Exposed::UnityEngine::Vector3 end) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x219C370))(this, origin, end);
  }
  bool Linecast(ModdingAPI::Exposed::UnityEngine::Vector3 origin, ModdingAPI::Exposed::UnityEngine::Vector3 end, ModdingAPI::Exposed::Pathfinding::GraphNode* hint, ModdingAPI::Exposed::Pathfinding::GraphHitInfo hit) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::Pathfinding::GraphNode*, ModdingAPI::Exposed::Pathfinding::GraphHitInfo)>(Helpers::Memory::GetInstance().MakeAbsolute(0x219C490))(this, origin, end, hint, hit);
  }
  bool Linecast(ModdingAPI::Exposed::UnityEngine::Vector3 origin, ModdingAPI::Exposed::UnityEngine::Vector3 end, ModdingAPI::Exposed::Pathfinding::GraphNode* hint) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::Pathfinding::GraphNode*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x219C4F0))(this, origin, end, hint);
  }
  bool Linecast(ModdingAPI::Exposed::UnityEngine::Vector3 tmp_origin, ModdingAPI::Exposed::UnityEngine::Vector3 tmp_end, ModdingAPI::Exposed::Pathfinding::GraphNode* hint, ModdingAPI::Exposed::Pathfinding::GraphHitInfo hit, ModdingAPI::Exposed::System::Collections::Generic::List_T_* trace) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::Pathfinding::GraphNode*, ModdingAPI::Exposed::Pathfinding::GraphHitInfo, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x219C570))(this, tmp_origin, tmp_end, hint, hit, trace);
  }
  void OnDrawGizmos(bool drawNodes) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x219C5D0))(this, drawNodes);
  }
  void SerializeSettings(ModdingAPI::Exposed::Pathfinding::Serialization::GraphSerializationContext* ctx) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::Pathfinding::Serialization::GraphSerializationContext*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x219CAD0))(this, ctx);
  }
  void DeserializeSettings(ModdingAPI::Exposed::Pathfinding::Serialization::GraphSerializationContext* ctx) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::Pathfinding::Serialization::GraphSerializationContext*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x219D0B0))(this, ctx);
  }
  void SerializeExtraInfo(ModdingAPI::Exposed::Pathfinding::Serialization::GraphSerializationContext* ctx) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::Pathfinding::Serialization::GraphSerializationContext*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x219D870))(this, ctx);
  }
  void DeserializeExtraInfo(ModdingAPI::Exposed::Pathfinding::Serialization::GraphSerializationContext* ctx) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*, ModdingAPI::Exposed::Pathfinding::Serialization::GraphSerializationContext*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x219DD50))(this, ctx);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::RecastGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x219E690))(this);
  }

  // Static methods:
  static inline ModdingAPI::Exposed::Pathfinding::RecastGraph::NavmeshTile* NewEmptyTile(int32_t x, int32_t z) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::RecastGraph::NavmeshTile*(__fastcall*)(int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x218E350))(x, z);
  }
  static inline void GetSceneMeshes(ModdingAPI::Exposed::UnityEngine::Bounds bounds, ModdingAPI::Exposed::System::Collections::Generic::List_T_* tagMask, ModdingAPI::Exposed::UnityEngine::LayerMask layerMask, ModdingAPI::Exposed::System::Collections::Generic::List_T_* meshes) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Bounds, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::UnityEngine::LayerMask, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x218FC50))(bounds, tagMask, layerMask, meshes);
  }
};
}