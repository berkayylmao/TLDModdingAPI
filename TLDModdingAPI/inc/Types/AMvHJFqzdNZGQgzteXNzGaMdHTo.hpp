// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.LxkJpyUADsZPRZMLfAsHKjqyPPaU.hpp"


namespace ModdingAPI::Exposed {
struct __AMvHJFqzdNZGQgzteXNzGaMdHTo_Il2CppStaticFields {
  bool mTZEECHzEVJQuNVCpBpvFGxIZiuP;
  int32_t zmLMDDLrNwRBSjXQFWcreWGFHmc;
  System_String* VVVRTBsjSLzMTMGenVOGUJlEAkgi;
  ModdingAPI::Exposed::AMvHJFqzdNZGQgzteXNzGaMdHTo::QrDaZQbRFfFuBYCIVJCeFcKoYSQ* xJtBQNtgKyiqPHboktMiwadYBiT;
  ModdingAPI::Exposed::LxkJpyUADsZPRZMLfAsHKjqyPPaU miHhXpxgVvtmuCILjENnoHrMrIu;
};

struct __AMvHJFqzdNZGQgzteXNzGaMdHTo_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __AMvHJFqzdNZGQgzteXNzGaMdHTo_Il2CppClass {
  Il2CppClass_1 _1;
  __AMvHJFqzdNZGQgzteXNzGaMdHTo_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __AMvHJFqzdNZGQgzteXNzGaMdHTo_Il2CppVtbl vtbl;
};

class AMvHJFqzdNZGQgzteXNzGaMdHTo {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C6CE38;
  static inline    __AMvHJFqzdNZGQgzteXNzGaMdHTo_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __AMvHJFqzdNZGQgzteXNzGaMdHTo_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__AMvHJFqzdNZGQgzteXNzGaMdHTo_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __AMvHJFqzdNZGQgzteXNzGaMdHTo_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Static fields:
  static inline __CppStaticProperty<bool> mTZEECHzEVJQuNVCpBpvFGxIZiuP = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->mTZEECHzEVJQuNVCpBpvFGxIZiuP; }
  );
  static inline __CppStaticProperty<int32_t> zmLMDDLrNwRBSjXQFWcreWGFHmc = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->zmLMDDLrNwRBSjXQFWcreWGFHmc; }
  );
  static inline __CppStaticProperty<System_String*> VVVRTBsjSLzMTMGenVOGUJlEAkgi = __CppStaticProperty<System_String*>(
   []() { return &GetStaticClassInstance()->pStaticFields->VVVRTBsjSLzMTMGenVOGUJlEAkgi; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::AMvHJFqzdNZGQgzteXNzGaMdHTo::QrDaZQbRFfFuBYCIVJCeFcKoYSQ*> xJtBQNtgKyiqPHboktMiwadYBiT = __CppStaticProperty<ModdingAPI::Exposed::AMvHJFqzdNZGQgzteXNzGaMdHTo::QrDaZQbRFfFuBYCIVJCeFcKoYSQ*>(
   []() { return &GetStaticClassInstance()->pStaticFields->xJtBQNtgKyiqPHboktMiwadYBiT; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::LxkJpyUADsZPRZMLfAsHKjqyPPaU> miHhXpxgVvtmuCILjENnoHrMrIu = __CppStaticProperty<ModdingAPI::Exposed::LxkJpyUADsZPRZMLfAsHKjqyPPaU>(
   []() { return &GetStaticClassInstance()->pStaticFields->miHhXpxgVvtmuCILjENnoHrMrIu; }
  );

  // Static methods:
  static inline int32_t QVNltfeeFfGNLjzSdaopNZQQuKYa(int32_t , void* ) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t, void*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3678E0))(, );
  }
  static inline int32_t stlBMjynXKytiYKdnSrKfqxiGAS(int32_t , void* ) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t, void*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x367990))(, );
  }
  static inline int32_t IjqCCqaxnjcjwFlkKsTnRPfDHgfq(int32_t , void* ) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t, void*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x367AC0))(, );
  }
  static inline int32_t qXcBwlSSRkFvztFfYEHipaRNllI(int32_t , void* ) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t, void*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x367B70))(, );
  }
  static inline int32_t zVujoKROsBuvaxcgEtxHgffPcOF(int32_t , void* ) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t, void*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x367CA0))(, );
  }
  static inline int32_t dtbzajdiCgfQRMSltSkQVILQoEA(int32_t , void* ) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t, void*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x367D50))(, );
  }
  static inline int32_t MsxBIPwNIntpVhtYUctYEKcaGjT(int32_t , void* ) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t, void*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x367E80))(, );
  }
  static inline int32_t iiRcSiBfsfNnZstPHgKsxICQNbS(int32_t , void* ) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t, void*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x367F30))(, );
  }
  static inline int32_t WvOGikxrfaKeFXCoQCTXFzaFxyke(int32_t , void* ) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t, void*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x368060))(, );
  }
  static inline int32_t XZwnpFXFTyylgCKjAVCVBYZNarO(int32_t , void* ) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t, void*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x368110))(, );
  }
  static inline bool get_supportsGetStateEx() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x368240))();
  }
  static inline int32_t get_version() {
    return reinterpret_cast<int32_t(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x3682E0))();
  }
  static inline ModdingAPI::Exposed::AMvHJFqzdNZGQgzteXNzGaMdHTo::QrDaZQbRFfFuBYCIVJCeFcKoYSQ* get_getStateExDelegate() {
    return reinterpret_cast<ModdingAPI::Exposed::AMvHJFqzdNZGQgzteXNzGaMdHTo::QrDaZQbRFfFuBYCIVJCeFcKoYSQ*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x368380))();
  }
  static inline bool GuVVddsaSlRNPCHzyhboyTejCIU(int32_t , System_String* , int32_t ) {
    return reinterpret_cast<bool(__fastcall*)(int32_t, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x368420))(, , );
  }
  static inline bool SLttdXyOqAeAJdayLunwgHGLWOx() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x3688D0))();
  }
  static inline bool yiUfWNqTVmzlRtHObjHMlDOInW() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x368AA0))();
  }
  static inline bool gVTDrnWWxugBXcrVAwqfISDZATF() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x368C70))();
  }
  static inline bool rSoAqiFeQNGMscKAgVNMkQjbxXmL() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x368E40))();
  }
  static inline bool YoqexdWVHMXsQomrUnTpAlBjAZo() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x369010))();
  }
  static inline bool RVOufqzhKVkzthfpoVrzefrgtSA() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x3691E0))();
  }
  static inline bool ywTXNuTFEDNFTaeyOAQtBJQnrsTg() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x369270))();
  }
  static inline void aQlcEIKjaeLdGuWXCewSxmNZOoWI() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x3693E0))();
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x3694B0))();
  }
};
}