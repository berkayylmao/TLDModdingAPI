// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Color.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Rect.hpp"


namespace ModdingAPI::Exposed::UnityEngine::UI {
struct __Graphic_Il2CppStaticFields {
  ModdingAPI::Exposed::UnityEngine::Material* s_DefaultUI;
  ModdingAPI::Exposed::UnityEngine::Texture2D* s_WhiteTexture;
  ModdingAPI::Exposed::UnityEngine::Mesh* s_Mesh;
  ModdingAPI::Exposed::UnityEngine::UI::VertexHelper* s_VertexHelper;
};

struct __Graphic_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_Awake;
  VirtualInvokeData _5_OnEnable;
  VirtualInvokeData _6_Start;
  VirtualInvokeData _7_OnDisable;
  VirtualInvokeData _8_OnDestroy;
  VirtualInvokeData _9_IsActive;
  VirtualInvokeData _10_OnRectTransformDimensionsChange;
  VirtualInvokeData _11_OnBeforeTransformParentChanged;
  VirtualInvokeData _12_OnTransformParentChanged;
  VirtualInvokeData _13_OnDidApplyAnimationProperties;
  VirtualInvokeData _14_OnCanvasGroupChanged;
  VirtualInvokeData _15_OnCanvasHierarchyChanged;
  VirtualInvokeData _16_IsDestroyed;
  VirtualInvokeData _18_UnityEngine_UI_ICanvasElement_get_transform;
  VirtualInvokeData _22_get_color;
  VirtualInvokeData _23_set_color;
  VirtualInvokeData _24_get_raycastTarget;
  VirtualInvokeData _25_set_raycastTarget;
  VirtualInvokeData _26_SetAllDirty;
  VirtualInvokeData _27_SetLayoutDirty;
  VirtualInvokeData _28_SetVerticesDirty;
  VirtualInvokeData _29_SetMaterialDirty;
  VirtualInvokeData _30_get_rectTransform;
  VirtualInvokeData _31_get_defaultMaterial;
  VirtualInvokeData _32_get_material;
  VirtualInvokeData _33_set_material;
  VirtualInvokeData _34_get_materialForRendering;
  VirtualInvokeData _35_get_mainTexture;
  VirtualInvokeData _36_OnCullingChanged;
  VirtualInvokeData _37_Rebuild;
  VirtualInvokeData _38_LayoutComplete;
  VirtualInvokeData _39_GraphicUpdateComplete;
  VirtualInvokeData _40_UpdateMaterial;
  VirtualInvokeData _41_UpdateGeometry;
  VirtualInvokeData _42_OnFillVBO;
  VirtualInvokeData _43_OnPopulateMesh;
  VirtualInvokeData _44_OnPopulateMesh;
  VirtualInvokeData _45_SetNativeSize;
  VirtualInvokeData _46_Raycast;
  VirtualInvokeData _47_CrossFadeColor;
  VirtualInvokeData _48_CrossFadeColor;
  VirtualInvokeData _49_CrossFadeAlpha;
};

struct __Graphic_Il2CppClass {
  Il2CppClass_1 _1;
  __Graphic_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Graphic_Il2CppVtbl vtbl;
};

class Graphic {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C25E08;
  static inline    __Graphic_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __Graphic_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__Graphic_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __Graphic_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::UnityEngine::Material* m_Material;
  ModdingAPI::Exposed::UnityEngine::Color m_Color;
  bool m_RaycastTarget;
  ModdingAPI::Exposed::UnityEngine::RectTransform* m_RectTransform;
  ModdingAPI::Exposed::UnityEngine::CanvasRenderer* m_CanvasRenderer;
  ModdingAPI::Exposed::UnityEngine::Canvas* m_Canvas;
  bool m_VertsDirty;
  bool m_MaterialDirty;
  ModdingAPI::Exposed::UnityEngine::Events::UnityAction* m_OnDirtyLayoutCallback;
  ModdingAPI::Exposed::UnityEngine::Events::UnityAction* m_OnDirtyVertsCallback;
  ModdingAPI::Exposed::UnityEngine::Events::UnityAction* m_OnDirtyMaterialCallback;
  ModdingAPI::Exposed::UnityEngine::UI::CoroutineTween::TweenRunner_T_* m_ColorTweenRunner;
  bool _useLegacyMeshGeneration_k__BackingField;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2BD00))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Color get_color() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Color(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2BFF0))(this);
  }
  void set_color(ModdingAPI::Exposed::UnityEngine::Color value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*, ModdingAPI::Exposed::UnityEngine::Color)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2C000))(this, value);
  }
  bool get_raycastTarget() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD4200))(this);
  }
  void set_raycastTarget(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x57C630))(this, value);
  }
  bool get_useLegacyMeshGeneration() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2C090))(this);
  }
  void set_useLegacyMeshGeneration(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC73E50))(this, value);
  }
  void SetAllDirty() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2C0A0))(this);
  }
  void SetLayoutDirty() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2C0F0))(this);
  }
  void SetVerticesDirty() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2C1D0))(this);
  }
  void SetMaterialDirty() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2C2A0))(this);
  }
  void OnRectTransformDimensionsChange() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2C370))(this);
  }
  void OnBeforeTransformParentChanged() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2C4F0))(this);
  }
  void OnTransformParentChanged() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2C5E0))(this);
  }
  int32_t get_depth() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2C6D0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::RectTransform* get_rectTransform() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::RectTransform*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2C740))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Canvas* get_canvas() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Canvas*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2C7D0))(this);
  }
  void CacheCanvas() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2C890))(this);
  }
  ModdingAPI::Exposed::UnityEngine::CanvasRenderer* get_canvasRenderer() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::CanvasRenderer*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2CAA0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Material* get_defaultMaterial() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Material*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2CB30))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Material* get_material() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Material*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2CBC0))(this);
  }
  void set_material(ModdingAPI::Exposed::UnityEngine::Material* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*, ModdingAPI::Exposed::UnityEngine::Material*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2CC90))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Material* get_materialForRendering() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Material*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2CD60))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Texture* get_mainTexture() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Texture*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2CFA0))(this);
  }
  void OnEnable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2D040))(this);
  }
  void OnDisable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2D1F0))(this);
  }
  void OnCanvasHierarchyChanged() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2D3A0))(this);
  }
  void OnCullingChanged() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2D500))(this);
  }
  void Rebuild(int32_t update) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2D610))(this, update);
  }
  void LayoutComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void GraphicUpdateComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void UpdateMaterial() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2D6D0))(this);
  }
  void UpdateGeometry() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2D7E0))(this);
  }
  void DoMeshGeneration() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2D800))(this);
  }
  void DoLegacyMeshGeneration() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2DC50))(this);
  }
  void OnFillVBO(ModdingAPI::Exposed::System::Collections::Generic::List_T_* vbo) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, vbo);
  }
  void OnPopulateMesh(ModdingAPI::Exposed::UnityEngine::Mesh* m) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*, ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2E330))(this, m);
  }
  void OnPopulateMesh(ModdingAPI::Exposed::UnityEngine::UI::VertexHelper* vh) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*, ModdingAPI::Exposed::UnityEngine::UI::VertexHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2E420))(this, vh);
  }
  void OnDidApplyAnimationProperties() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD6A210))(this);
  }
  void SetNativeSize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  bool Raycast(ModdingAPI::Exposed::UnityEngine::Vector2 sp, ModdingAPI::Exposed::UnityEngine::Camera* eventCamera) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*, ModdingAPI::Exposed::UnityEngine::Vector2, ModdingAPI::Exposed::UnityEngine::Camera*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2E640))(this, sp, eventCamera);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 PixelAdjustPoint(ModdingAPI::Exposed::UnityEngine::Vector2 point) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2EA20))(this, point);
  }
  ModdingAPI::Exposed::UnityEngine::Rect GetPixelAdjustedRect() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Rect(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2ED20))(this);
  }
  void CrossFadeColor(ModdingAPI::Exposed::UnityEngine::Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*, ModdingAPI::Exposed::UnityEngine::Color, float, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2F080))(this, targetColor, duration, ignoreTimeScale, useAlpha);
  }
  void CrossFadeColor(ModdingAPI::Exposed::UnityEngine::Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha, bool useRGB) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*, ModdingAPI::Exposed::UnityEngine::Color, float, bool, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2F0C0))(this, targetColor, duration, ignoreTimeScale, useAlpha, useRGB);
  }
  void CrossFadeAlpha(float alpha, float duration, bool ignoreTimeScale) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*, float, float, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2F4E0))(this, alpha, duration, ignoreTimeScale);
  }
  void RegisterDirtyLayoutCallback(ModdingAPI::Exposed::UnityEngine::Events::UnityAction* action) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*, ModdingAPI::Exposed::UnityEngine::Events::UnityAction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2F600))(this, action);
  }
  void UnregisterDirtyLayoutCallback(ModdingAPI::Exposed::UnityEngine::Events::UnityAction* action) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*, ModdingAPI::Exposed::UnityEngine::Events::UnityAction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2F6C0))(this, action);
  }
  void RegisterDirtyVerticesCallback(ModdingAPI::Exposed::UnityEngine::Events::UnityAction* action) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*, ModdingAPI::Exposed::UnityEngine::Events::UnityAction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2F780))(this, action);
  }
  void UnregisterDirtyVerticesCallback(ModdingAPI::Exposed::UnityEngine::Events::UnityAction* action) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*, ModdingAPI::Exposed::UnityEngine::Events::UnityAction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2F840))(this, action);
  }
  void RegisterDirtyMaterialCallback(ModdingAPI::Exposed::UnityEngine::Events::UnityAction* action) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*, ModdingAPI::Exposed::UnityEngine::Events::UnityAction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2F900))(this, action);
  }
  void UnregisterDirtyMaterialCallback(ModdingAPI::Exposed::UnityEngine::Events::UnityAction* action) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*, ModdingAPI::Exposed::UnityEngine::Events::UnityAction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2F9C0))(this, action);
  }
  ModdingAPI::Exposed::UnityEngine::Transform* UnityEngine::UI::ICanvasElement::get_transform() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Transform*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4117E0))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Material*> s_DefaultUI = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Material*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_DefaultUI; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Texture2D*> s_WhiteTexture = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Texture2D*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_WhiteTexture; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Mesh*> s_Mesh = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Mesh*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_Mesh; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::UI::VertexHelper*> s_VertexHelper = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::UI::VertexHelper*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_VertexHelper; }
  );

  // Static methods:
  static inline ModdingAPI::Exposed::UnityEngine::Material* get_defaultGraphicMaterial() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Material*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2BE80))();
  }
  static inline ModdingAPI::Exposed::UnityEngine::Mesh* get_workerMesh() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Mesh*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2E090))();
  }
  static inline ModdingAPI::Exposed::UnityEngine::Color CreateColorFromAlpha(float alpha) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Color(__fastcall*)(float)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2F4B0))(alpha);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xE2FA80))();
  }
};
}