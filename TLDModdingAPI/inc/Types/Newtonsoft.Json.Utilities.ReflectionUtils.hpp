// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Nullable_T_.hpp"


namespace ModdingAPI::Exposed::Newtonsoft::Json::Utilities {
struct __ReflectionUtils_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Type_array* EmptyTypes;
};

struct __ReflectionUtils_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __ReflectionUtils_Il2CppClass {
  Il2CppClass_1 _1;
  __ReflectionUtils_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __ReflectionUtils_Il2CppVtbl vtbl;
};

class ReflectionUtils {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C91798;
  static inline    __ReflectionUtils_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __ReflectionUtils_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__ReflectionUtils_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __ReflectionUtils_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type_array*> EmptyTypes = __CppStaticProperty<ModdingAPI::Exposed::System::Type_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->EmptyTypes; }
  );

  // Static methods:
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x14292E0))();
  }
  static inline bool IsVirtual(ModdingAPI::Exposed::System::Reflection::PropertyInfo* propertyInfo) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Reflection::PropertyInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1429390))(propertyInfo);
  }
  static inline ModdingAPI::Exposed::System::Reflection::MethodInfo* GetBaseDefinition(ModdingAPI::Exposed::System::Reflection::PropertyInfo* propertyInfo) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Reflection::MethodInfo*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::PropertyInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1429490))(propertyInfo);
  }
  static inline bool IsPublic(ModdingAPI::Exposed::System::Reflection::PropertyInfo* property) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Reflection::PropertyInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1429570))(property);
  }
  static inline ModdingAPI::Exposed::System::Type* GetObjectType(Il2CppObject* v) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type*(__fastcall*)(Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1429650))(v);
  }
  static inline System_String* GetTypeName(ModdingAPI::Exposed::System::Type* t, int32_t assemblyFormat, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationBinder* binder) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Type*, int32_t, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationBinder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1429670))(t, assemblyFormat, binder);
  }
  static inline System_String* RemoveAssemblyDetails(System_String* fullyQualifiedTypeName) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1429770))(fullyQualifiedTypeName);
  }
  static inline bool HasDefaultConstructor(ModdingAPI::Exposed::System::Type* t, bool nonPublic) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Type*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14299E0))(t, nonPublic);
  }
  static inline ModdingAPI::Exposed::System::Reflection::ConstructorInfo* GetDefaultConstructor(ModdingAPI::Exposed::System::Type* t) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Reflection::ConstructorInfo*(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1429AE0))(t);
  }
  static inline ModdingAPI::Exposed::System::Reflection::ConstructorInfo* GetDefaultConstructor(ModdingAPI::Exposed::System::Type* t, bool nonPublic) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Reflection::ConstructorInfo*(__fastcall*)(ModdingAPI::Exposed::System::Type*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1429B80))(t, nonPublic);
  }
  static inline bool IsNullable(ModdingAPI::Exposed::System::Type* t) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1429D90))(t);
  }
  static inline bool IsNullableType(ModdingAPI::Exposed::System::Type* t) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1429E70))(t);
  }
  static inline ModdingAPI::Exposed::System::Type* EnsureNotNullableType(ModdingAPI::Exposed::System::Type* t) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type*(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1429F80))(t);
  }
  static inline bool IsGenericDefinition(ModdingAPI::Exposed::System::Type* type, ModdingAPI::Exposed::System::Type* genericInterfaceDefinition) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142A030))(type, genericInterfaceDefinition);
  }
  static inline bool ImplementsGenericDefinition(ModdingAPI::Exposed::System::Type* type, ModdingAPI::Exposed::System::Type* genericInterfaceDefinition) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142A090))(type, genericInterfaceDefinition);
  }
  static inline bool ImplementsGenericDefinition(ModdingAPI::Exposed::System::Type* type, ModdingAPI::Exposed::System::Type* genericInterfaceDefinition, ModdingAPI::Exposed::System::Type* implementingType) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142A150))(type, genericInterfaceDefinition, implementingType);
  }
  static inline bool InheritsGenericDefinition(ModdingAPI::Exposed::System::Type* type, ModdingAPI::Exposed::System::Type* genericClassDefinition) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142A3B0))(type, genericClassDefinition);
  }
  static inline bool InheritsGenericDefinition(ModdingAPI::Exposed::System::Type* type, ModdingAPI::Exposed::System::Type* genericClassDefinition, ModdingAPI::Exposed::System::Type* implementingType) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142A470))(type, genericClassDefinition, implementingType);
  }
  static inline bool InheritsGenericDefinitionInternal(ModdingAPI::Exposed::System::Type* currentType, ModdingAPI::Exposed::System::Type* genericClassDefinition, ModdingAPI::Exposed::System::Type* implementingType) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142A610))(currentType, genericClassDefinition, implementingType);
  }
  static inline ModdingAPI::Exposed::System::Type* GetCollectionItemType(ModdingAPI::Exposed::System::Type* type) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type*(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142A750))(type);
  }
  static inline void GetDictionaryKeyValueTypes(ModdingAPI::Exposed::System::Type* dictionaryType, ModdingAPI::Exposed::System::Type* keyType, ModdingAPI::Exposed::System::Type* valueType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142AA40))(dictionaryType, keyType, valueType);
  }
  static inline ModdingAPI::Exposed::System::Type* GetMemberUnderlyingType(ModdingAPI::Exposed::System::Reflection::MemberInfo* member) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::MemberInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142AD20))(member);
  }
  static inline bool IsIndexedProperty(ModdingAPI::Exposed::System::Reflection::MemberInfo* member) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Reflection::MemberInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142AF30))(member);
  }
  static inline bool IsIndexedProperty(ModdingAPI::Exposed::System::Reflection::PropertyInfo* property) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Reflection::PropertyInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142B0D0))(property);
  }
  static inline Il2CppObject* GetMemberValue(ModdingAPI::Exposed::System::Reflection::MemberInfo* member, Il2CppObject* target) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::MemberInfo*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142B190))(member, target);
  }
  static inline void SetMemberValue(ModdingAPI::Exposed::System::Reflection::MemberInfo* member, Il2CppObject* target, Il2CppObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Reflection::MemberInfo*, Il2CppObject*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142B4A0))(member, target, value);
  }
  static inline bool CanReadMemberValue(ModdingAPI::Exposed::System::Reflection::MemberInfo* member, bool nonPublic) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Reflection::MemberInfo*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142B720))(member, nonPublic);
  }
  static inline bool CanSetMemberValue(ModdingAPI::Exposed::System::Reflection::MemberInfo* member, bool nonPublic, bool canSetReadOnly) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Reflection::MemberInfo*, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142B8D0))(member, nonPublic, canSetReadOnly);
  }
  static inline ModdingAPI::Exposed::System::Collections::Generic::List_T_* GetFieldsAndProperties(ModdingAPI::Exposed::System::Type* type, int32_t bindingAttr) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::System::Type*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142BA90))(type, bindingAttr);
  }
  static inline bool IsOverridenGenericMember(ModdingAPI::Exposed::System::Reflection::MemberInfo* memberInfo, int32_t bindingAttr) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Reflection::MemberInfo*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142C3C0))(memberInfo, bindingAttr);
  }
  static inline ModdingAPI::Exposed::System::Attribute_array* GetAttributes(Il2CppObject* attributeProvider, ModdingAPI::Exposed::System::Type* attributeType, bool inherit) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Attribute_array*(__fastcall*)(Il2CppObject*, ModdingAPI::Exposed::System::Type*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142C610))(attributeProvider, attributeType, inherit);
  }
  static inline void SplitFullyQualifiedTypeName(System_String* fullyQualifiedTypeName, System_String* typeName, System_String* assemblyName) {
    reinterpret_cast<void(__fastcall*)(System_String*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142CD60))(fullyQualifiedTypeName, typeName, assemblyName);
  }
  static inline ModdingAPI::Exposed::System::Nullable_T_ GetAssemblyDelimiterIndex(System_String* fullyQualifiedTypeName) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Nullable_T_(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142CF50))(fullyQualifiedTypeName);
  }
  static inline ModdingAPI::Exposed::System::Reflection::MemberInfo* GetMemberInfoFromType(ModdingAPI::Exposed::System::Type* targetType, ModdingAPI::Exposed::System::Reflection::MemberInfo* memberInfo) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Reflection::MemberInfo*(__fastcall*)(ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Reflection::MemberInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142D040))(targetType, memberInfo);
  }
  static inline ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* GetFields(ModdingAPI::Exposed::System::Type* targetType, int32_t bindingAttr) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::System::Type*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142D3A0))(targetType, bindingAttr);
  }
  static inline void GetChildPrivateFields(ModdingAPI::Exposed::System::Collections::Generic::IList_T_* initialFields, ModdingAPI::Exposed::System::Type* targetType, int32_t bindingAttr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Generic::IList_T_*, ModdingAPI::Exposed::System::Type*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142D570))(initialFields, targetType, bindingAttr);
  }
  static inline ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* GetProperties(ModdingAPI::Exposed::System::Type* targetType, int32_t bindingAttr) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::System::Type*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142D810))(targetType, bindingAttr);
  }
  static inline int32_t RemoveFlag(int32_t bindingAttr, int32_t flag) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142DBA0))(bindingAttr, flag);
  }
  static inline void GetChildPrivateProperties(ModdingAPI::Exposed::System::Collections::Generic::IList_T_* initialProperties, ModdingAPI::Exposed::System::Type* targetType, int32_t bindingAttr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Generic::IList_T_*, ModdingAPI::Exposed::System::Type*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142DBB0))(initialProperties, targetType, bindingAttr);
  }
  static inline Il2CppObject* GetDefaultValue(ModdingAPI::Exposed::System::Type* type) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x142E180))(type);
  }
};
}