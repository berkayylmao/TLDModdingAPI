// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Color.hpp"


namespace ModdingAPI::Exposed {
struct __Panel_Cooking_Il2CppStaticFields {
};

struct __Panel_Cooking_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __Panel_Cooking_Il2CppClass {
  Il2CppClass_1 _1;
  __Panel_Cooking_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Panel_Cooking_Il2CppVtbl vtbl;
};

class Panel_Cooking {
public:
  // Il2Cpp fields:
  __Panel_Cooking_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_TitleCooking;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_TitleWaterOnly;
  float m_MinutesToBoilWaterPerLiter;
  float m_MinutesToMeltSnowPerLiter;
  float m_MinutesToPurifyPerLiter;
  float m_MinutesReadyTimeBoilingWater;
  float m_MinutesGraceTimeInterruptedCooking;
  System_String* m_MeltAndBoilAudio;
  System_String* m_PutSnowInPotAudio;
  System_String* m_PutWaterInPotAudio;
  float m_HoursRemainingFullFireSprite;
  ModdingAPI::Exposed::UnityEngine::Color m_ScrollListSelectedColor;
  ModdingAPI::Exposed::UnityEngine::Color m_ScrollListUnselectedColor;
  ModdingAPI::Exposed::ScrollList* m_FoodScrollList;
  ModdingAPI::Exposed::UILabel* m_Label_EstimatedFireDuration;
  ModdingAPI::Exposed::UILabel* m_Label_FireTemperature;
  ModdingAPI::Exposed::ButtonLegendContainer* m_ButtonLegendContainer;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_MouseButtonParent;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ActionButtonObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ActionSecondaryButtonObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ButtonIncreaseWater;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ButtonDecreaseWater;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ButtonIncreaseWaterBG;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ButtonDecreaseWaterBG;
  ModdingAPI::Exposed::UILabel* m_WaterAmountLabel;
  ModdingAPI::Exposed::UnityEngine::Transform* m_WaterSelectTransform;
  System_String* m_MeltSnowIcon;
  System_String* m_BoilWaterIcon;
  ModdingAPI::Exposed::UITexture* m_Texture_CookedItem;
  ModdingAPI::Exposed::UILabel* m_Label_CookedItemName;
  ModdingAPI::Exposed::UILabel* m_Label_CookedItemDesc;
  ModdingAPI::Exposed::UILabel* m_Label_CookedItemCalories;
  ModdingAPI::Exposed::UILabel* m_Label_CookedItemWeight;
  ModdingAPI::Exposed::UILabel* m_Label_CookedItemCookTime;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SortLabel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SortButtonsObject;
  ModdingAPI::Exposed::UIButton* m_DefaultSortButton;
  ModdingAPI::Exposed::UIButton_array* m_SortButtons;
  ModdingAPI::Exposed::UnityEngine::Color m_CookingHoverTextColor;
  ModdingAPI::Exposed::UnityEngine::Color m_ReadyHoverTextColor;
  ModdingAPI::Exposed::UnityEngine::Color m_RuinedHoverTextColor;
  ModdingAPI::Exposed::UILabel* m_Label_ButtonAction;
  ModdingAPI::Exposed::UILabel* m_Label_ButtonSecondaryAction;
  float m_BoilWaterLiters;
  float m_MeltSnowLiters;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_FireContainer;
  ModdingAPI::Exposed::Fire* m_Fire;
  ModdingAPI::Exposed::CookingPotItem* m_CookingPotInteractedWith;
  int32_t m_CookingFilter;
  int32_t m_SelectedFoodIndexVal;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_FoodList;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_CookingItemList;
  ModdingAPI::Exposed::FireManager* m_FireManager;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_DoWaterDelegates;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_OnWaterUpDelegates;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_OnWaterDownDelegates;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_WaterButtonStrings;
  ModdingAPI::Exposed::UIButton* m_SelectedSortButton;
  System_String* m_SelectedSortOldSprite;
  System_String* m_SortName;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* m_SortFlipDictionary;
  int32_t m_SelectedSortIndex;

  // Member methods:
  int32_t get_m_SelectedFoodIndex() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F3E90))(this);
  }
  void set_m_SelectedFoodIndex(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F3EA0))(this, value);
  }
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F42A0))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F4650))(this);
  }
  void Refresh() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F4C30))(this);
  }
  void Enable(bool enable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F4C90))(this, enable);
  }
  bool IsEnabled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x165DF10))(this);
  }
  void SetCookingPot(ModdingAPI::Exposed::CookingPotItem* cookingPot) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*, ModdingAPI::Exposed::CookingPotItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F50A0))(this, cookingPot);
  }
  void SetCookingFilter(int32_t filter) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F50B0))(this, filter);
  }
  void UpdateSortNavigation() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F50C0))(this);
  }
  void UpdateSortLabels() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F52C0))(this);
  }
  void RefreshFireDurationLabel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F5650))(this);
  }
  void OnScrollItemSelect(int32_t itemIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F58F0))(this, itemIndex);
  }
  void OnDoAction() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F59A0))(this);
  }
  void OnDoActionSecondary() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F5BC0))(this);
  }
  void OnCook() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F5DC0))(this);
  }
  void OnBoil() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F6430))(this);
  }
  void OnBoilUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F6670))(this);
  }
  void OnBoilDown() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F6950))(this);
  }
  void OnMeltSnow() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F6B10))(this);
  }
  void OnMeltSnowUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F6DA0))(this);
  }
  void OnMeltSnowDown() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F6F90))(this);
  }
  void OnDoWater() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F7100))(this);
  }
  void OnWaterDown() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F71E0))(this);
  }
  void OnWaterUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F72C0))(this);
  }
  void PlayButtonClick() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F73A0))(this);
  }
  void SetFireContainer(ModdingAPI::Exposed::UnityEngine::GameObject* go) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F7430))(this, go);
  }
  void ExitCookingInterface() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F7530))(this);
  }
  void UpdateScrollLists() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F7640))(this);
  }
  void ScrollDown() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F7820))(this);
  }
  void ScrollUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F78F0))(this);
  }
  bool SelectedFoodIsSnow() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F79B0))(this);
  }
  bool SelectedFoodIsWater() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F7A60))(this);
  }
  ModdingAPI::Exposed::GearItem* GetSelectedFood() {
    return reinterpret_cast<ModdingAPI::Exposed::GearItem*(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F7B70))(this);
  }
  ModdingAPI::Exposed::UnityEngine::GameObject* GetBoilableWaterSupply() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GameObject*(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F7C30))(this);
  }
  void RefreshFoodList() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F7DC0))(this);
  }
  void RefreshFood() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F93C0))(this);
  }
  void RefreshWater() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F95E0))(this);
  }
  void RefreshSnow() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F9A10))(this);
  }
  void MakeDefaultSelections() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F9D20))(this);
  }
  void OnSortChange(ModdingAPI::Exposed::UIButton* sortButtonClicked) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*, ModdingAPI::Exposed::UIButton*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F9D30))(this, sortButtonClicked);
  }
  void ClampMeltSnowAmount() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17FA100))(this);
  }
  void ClampWaterBoilAmount() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17FA230))(this);
  }
  bool PlayerHasEnoughPotableWaterForCookingItem(ModdingAPI::Exposed::Cookable* cookable) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*, ModdingAPI::Exposed::Cookable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17FA460))(this, cookable);
  }
  bool HaveEnoughUnitsToStartCooking(ModdingAPI::Exposed::GearItem* gi) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17FA5F0))(this, gi);
  }
  void UpdateGearItem() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17FA710))(this);
  }
  void EnableActionButton(bool enabled) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17FAFC0))(this, enabled);
  }
  void UpdateButtonLegend() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17FB150))(this);
  }
  void UpdateGamepadControls() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17FB680))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Cooking*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17FB770))(this);
  }
};
}