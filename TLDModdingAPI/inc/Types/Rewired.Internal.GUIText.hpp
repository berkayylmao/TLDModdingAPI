// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Color.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"


namespace ModdingAPI::Exposed::Rewired::Internal {
struct __GUIText_Il2CppStaticFields {
};

struct __GUIText_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __GUIText_Il2CppClass {
  Il2CppClass_1 _1;
  __GUIText_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __GUIText_Il2CppVtbl vtbl;
};

class GUIText {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C90820;
  static inline    GUIText* _pStaticObjectInstance = nullptr;

public:
// Singleton object getter:
  static inline GUIText* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (GUIText**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

  // Il2Cpp fields:
  __GUIText_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  System_String* vikwPrQhZHLiPGaRvfpyWfRZOFh;
  ModdingAPI::Exposed::UnityEngine::GUIStyle* OcGAuwhIJgrxWSaVOoZlNqXxvyj;
  int32_t wwRwSTPXrzfuaghfVCzquAjCOcR;
  int32_t lvCYeZIZnsIqZdSlpcKpbriFkBM;
  float pimRGOGdSCLXmjZVAEIGujurZvh;
  ModdingAPI::Exposed::UnityEngine::Font* hXQpSFLPqMAUOqfhOhOAInMGiSS;
  int32_t HPDffOiknHiPVPCvbLbTmwGIBnb;
  int32_t ZXhQhgFXDUwCsBurfQcLcWnPTdI;
  ModdingAPI::Exposed::UnityEngine::Color JgNNADJBebESJZkdbRXSIujtJiP;
  ModdingAPI::Exposed::UnityEngine::Vector2 _pixelOffset;
  bool _useUnityUI;
  bool HxIhnfZFhJVDrxDUPVcIGpSFtDf;
  bool eOwaGcgfSrgSMNvUToKACpQYMJG;
  bool guLsldEsxZuhLgOmyRRfjbvOiOK;
  bool YKrAIzAOIoJRHxsYQkbCXOgDICe;
  bool CpnrBFtOfLavDrRbGhIweUKFJWzz;
  bool CmFptOrxMxcxlOykRjVabQhDGiB;
  bool GrAcPsXYYrNDCFWlGvsqsNxqYfO;
  ModdingAPI::Exposed::UnityEngine::UI::Text* astypMtnnMKgNiFZEWbZYkCoEQTC;
  bool oAePuugaZghPJjAjmfhcyotDGEk;
  bool PKKHHbUcbfIwUScUAqmsaPAfFILi;

  // Member methods:
  System_String* get_text() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335360))(this);
  }
  void set_text(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A3E0))(this, value);
  }
  int32_t get_anchor() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36F810))(this);
  }
  void set_anchor(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x58F320))(this, value);
  }
  int32_t get_alignment() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36F820))(this);
  }
  void set_alignment(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x58F3F0))(this, value);
  }
  float get_lineSpacing() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x581030))(this);
  }
  void set_lineSpacing(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x58F400))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Font* get_font() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Font*(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319970))(this);
  }
  void set_font(ModdingAPI::Exposed::UnityEngine::Font* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*, ModdingAPI::Exposed::UnityEngine::Font*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x58F410))(this, value);
  }
  int32_t get_fontSize() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8E0))(this);
  }
  void set_fontSize(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x58F4B0))(this, value);
  }
  int32_t get_fontStyle() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D900))(this);
  }
  void set_fontStyle(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x58F550))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Color get_color() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Color(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D920))(this);
  }
  void set_color(ModdingAPI::Exposed::UnityEngine::Color value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*, ModdingAPI::Exposed::UnityEngine::Color)>(Helpers::Memory::GetInstance().MakeAbsolute(0x58F5C0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 get_pixelOffset() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x58F720))(this);
  }
  void set_pixelOffset(ModdingAPI::Exposed::UnityEngine::Vector2 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x58F740))(this, value);
  }
  bool get_useUnityUI() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x58F760))(this);
  }
  void set_useUnityUI(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x58F770))(this, value);
  }
  void Awake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x58F7C0))(this);
  }
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x58F7D0))(this);
  }
  void OnGUI() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x58F820))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x58FB70))(this);
  }
  void OnValidate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x58FD60))(this);
  }
  void VqOPtKQsrYKpNBYRNIrbRWuqEwQ() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x58FDF0))(this);
  }
  void WicqsyKDYIOhFgzLYGiILnfyAnl() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x590950))(this);
  }
  void yLlSUNJpnLjwWgtFnTiVESYNTJMo() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x590AA0))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Internal::GUIText*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x591270))(this);
  }

  // Static methods:
  static inline ModdingAPI::Exposed::Rewired::Internal::GUIText* GetOrAddComponent(ModdingAPI::Exposed::UnityEngine::GameObject* gameObject) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Internal::GUIText*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x590F50))(gameObject);
  }
  static inline ModdingAPI::Exposed::Rewired::Internal::GUIText* CreateLogger(ModdingAPI::Exposed::UnityEngine::GameObject* gameObject) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Internal::GUIText*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x591090))(gameObject);
  }
};
}