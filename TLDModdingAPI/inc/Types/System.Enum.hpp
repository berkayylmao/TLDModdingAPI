// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Decimal.hpp"
#include "ModdingAPI.Exposed.System.DateTime.hpp"
#include "ModdingAPI::Exposed::System::Enum::EnumResult.hpp"


namespace ModdingAPI::Exposed::System {
struct __Enum_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Char_array* enumSeperatorCharArray;
};

struct __Enum_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_CompareTo;
  VirtualInvokeData _5_ToString;
  VirtualInvokeData _6_GetTypeCode;
  VirtualInvokeData _7_System_IConvertible_ToBoolean;
  VirtualInvokeData _8_System_IConvertible_ToChar;
  VirtualInvokeData _9_System_IConvertible_ToSByte;
  VirtualInvokeData _10_System_IConvertible_ToByte;
  VirtualInvokeData _11_System_IConvertible_ToInt16;
  VirtualInvokeData _12_System_IConvertible_ToUInt16;
  VirtualInvokeData _13_System_IConvertible_ToInt32;
  VirtualInvokeData _14_System_IConvertible_ToUInt32;
  VirtualInvokeData _15_System_IConvertible_ToInt64;
  VirtualInvokeData _16_System_IConvertible_ToUInt64;
  VirtualInvokeData _17_System_IConvertible_ToSingle;
  VirtualInvokeData _18_System_IConvertible_ToDouble;
  VirtualInvokeData _19_System_IConvertible_ToDecimal;
  VirtualInvokeData _20_System_IConvertible_ToDateTime;
  VirtualInvokeData _21_ToString;
  VirtualInvokeData _22_System_IConvertible_ToType;
};

struct __Enum_Il2CppClass {
  Il2CppClass_1 _1;
  __Enum_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Enum_Il2CppVtbl vtbl;
};

class Enum {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C7E348;
  static inline    Enum* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C6BE18;
  static inline    __Enum_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline Enum* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (Enum**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __Enum_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__Enum_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __Enum_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member methods:
  Il2CppObject* get_value() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Enum*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x654F50))(this);
  }
  Il2CppObject* GetValue() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Enum*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x654F50))(this);
  }
  bool InternalHasFlag(ModdingAPI::Exposed::System::Enum* flags) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Enum*, ModdingAPI::Exposed::System::Enum*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x655090))(this, flags);
  }
  int32_t get_hashcode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Enum*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x655140))(this);
  }
  bool Equals(Il2CppObject* obj) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Enum*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6551C0))(this, obj);
  }
  int32_t GetHashCode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Enum*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x655140))(this);
  }
  System_String* ToString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Enum*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6551D0))(this);
  }
  System_String* ToString(System_String* format, ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Enum*, System_String*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6553E0))(this, format, provider);
  }
  int32_t CompareTo(Il2CppObject* target) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Enum*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6553F0))(this, target);
  }
  System_String* ToString(System_String* format) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Enum*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6556F0))(this, format);
  }
  System_String* ToString(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Enum*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x655F40))(this, provider);
  }
  bool HasFlag(ModdingAPI::Exposed::System::Enum* flag) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Enum*, ModdingAPI::Exposed::System::Enum*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x655F60))(this, flag);
  }
  int32_t GetTypeCode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Enum*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6561A0))(this);
  }
  bool System::IConvertible::ToBoolean(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Enum*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x656560))(this, provider);
  }
  wchar_t System::IConvertible::ToChar(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<wchar_t(__fastcall*)(ModdingAPI::Exposed::System::Enum*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x656750))(this, provider);
  }
  char System::IConvertible::ToSByte(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<char(__fastcall*)(ModdingAPI::Exposed::System::Enum*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x656940))(this, provider);
  }
  uint8_t System::IConvertible::ToByte(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<uint8_t(__fastcall*)(ModdingAPI::Exposed::System::Enum*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x656B30))(this, provider);
  }
  int16_t System::IConvertible::ToInt16(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<int16_t(__fastcall*)(ModdingAPI::Exposed::System::Enum*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x656D20))(this, provider);
  }
  uint16_t System::IConvertible::ToUInt16(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<uint16_t(__fastcall*)(ModdingAPI::Exposed::System::Enum*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x656F10))(this, provider);
  }
  int32_t System::IConvertible::ToInt32(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Enum*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x657100))(this, provider);
  }
  uint32_t System::IConvertible::ToUInt32(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<uint32_t(__fastcall*)(ModdingAPI::Exposed::System::Enum*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6572F0))(this, provider);
  }
  int64_t System::IConvertible::ToInt64(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::System::Enum*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6574E0))(this, provider);
  }
  uint64_t System::IConvertible::ToUInt64(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<uint64_t(__fastcall*)(ModdingAPI::Exposed::System::Enum*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6576D0))(this, provider);
  }
  float System::IConvertible::ToSingle(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::System::Enum*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6578C0))(this, provider);
  }
  double System::IConvertible::ToDouble(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::System::Enum*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x657AB0))(this, provider);
  }
  ModdingAPI::Exposed::System::Decimal System::IConvertible::ToDecimal(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Decimal(__fastcall*)(ModdingAPI::Exposed::System::Enum*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x657CA0))(this, provider);
  }
  ModdingAPI::Exposed::System::DateTime System::IConvertible::ToDateTime(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(ModdingAPI::Exposed::System::Enum*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x657EB0))(this, provider);
  }
  Il2CppObject* System::IConvertible::ToType(ModdingAPI::Exposed::System::Type* type, ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Enum*, ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x657F80))(this, type, provider);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Enum*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Char_array*> enumSeperatorCharArray = __CppStaticProperty<ModdingAPI::Exposed::System::Char_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->enumSeperatorCharArray; }
  );

  // Static methods:
  static inline ModdingAPI::Exposed::System::Enum::ValuesAndNames* GetCachedValuesAndNames(ModdingAPI::Exposed::System::RuntimeType* enumType, bool getNames) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Enum::ValuesAndNames*(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6521F0))(enumType, getNames);
  }
  static inline System_String* InternalFormattedHexString(Il2CppObject* value) {
    return reinterpret_cast<System_String*(__fastcall*)(Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6525C0))(value);
  }
  static inline System_String* InternalFormat(ModdingAPI::Exposed::System::RuntimeType* eT, Il2CppObject* value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6529E0))(eT, value);
  }
  static inline System_String* InternalFlagsFormat(ModdingAPI::Exposed::System::RuntimeType* eT, Il2CppObject* value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x652B50))(eT, value);
  }
  static inline uint64_t ToUInt64(Il2CppObject* value) {
    return reinterpret_cast<uint64_t(__fastcall*)(Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x652EF0))(value);
  }
  static inline int32_t InternalCompareTo(Il2CppObject* o1, Il2CppObject* o2) {
    return reinterpret_cast<int32_t(__fastcall*)(Il2CppObject*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6530D0))(o1, o2);
  }
  static inline ModdingAPI::Exposed::System::RuntimeType* InternalGetUnderlyingType(ModdingAPI::Exposed::System::RuntimeType* enumType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::RuntimeType*(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6531F0))(enumType);
  }
  static inline bool GetEnumValuesAndNames(ModdingAPI::Exposed::System::RuntimeType* enumType, ModdingAPI::Exposed::System::UInt64_array* values, ModdingAPI::Exposed::System::String_array* names) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*, ModdingAPI::Exposed::System::UInt64_array*, ModdingAPI::Exposed::System::String_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x653240))(enumType, values, names);
  }
  static inline Il2CppObject* InternalBoxEnum(ModdingAPI::Exposed::System::RuntimeType* enumType, int64_t value) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x653280))(enumType, value);
  }
  static inline Il2CppObject* Parse(ModdingAPI::Exposed::System::Type* enumType, System_String* value) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Type*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6532B0))(enumType, value);
  }
  static inline Il2CppObject* Parse(ModdingAPI::Exposed::System::Type* enumType, System_String* value, bool ignoreCase) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Type*, System_String*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x653360))(enumType, value, ignoreCase);
  }
  static inline bool TryParseEnum(ModdingAPI::Exposed::System::Type* enumType, System_String* value, bool ignoreCase, ModdingAPI::Exposed::System::Enum::EnumResult parseResult) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Type*, System_String*, bool, ModdingAPI::Exposed::System::Enum::EnumResult)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6534F0))(enumType, value, ignoreCase, parseResult);
  }
  static inline ModdingAPI::Exposed::System::Type* GetUnderlyingType(ModdingAPI::Exposed::System::Type* enumType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type*(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x653C80))(enumType);
  }
  static inline ModdingAPI::Exposed::System::Array* GetValues(ModdingAPI::Exposed::System::Type* enumType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Array*(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x653D60))(enumType);
  }
  static inline ModdingAPI::Exposed::System::UInt64_array* InternalGetValues(ModdingAPI::Exposed::System::RuntimeType* enumType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::UInt64_array*(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x653E40))(enumType);
  }
  static inline System_String* GetName(ModdingAPI::Exposed::System::Type* enumType, Il2CppObject* value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Type*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x653EF0))(enumType, value);
  }
  static inline ModdingAPI::Exposed::System::String_array* GetNames(ModdingAPI::Exposed::System::Type* enumType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x653FE0))(enumType);
  }
  static inline ModdingAPI::Exposed::System::String_array* InternalGetNames(ModdingAPI::Exposed::System::RuntimeType* enumType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6540C0))(enumType);
  }
  static inline Il2CppObject* ToObject(ModdingAPI::Exposed::System::Type* enumType, Il2CppObject* value) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Type*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x654170))(enumType, value);
  }
  static inline bool IsDefined(ModdingAPI::Exposed::System::Type* enumType, Il2CppObject* value) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Type*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x654700))(enumType, value);
  }
  static inline System_String* Format(ModdingAPI::Exposed::System::Type* enumType, Il2CppObject* value, System_String* format) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Type*, Il2CppObject*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6547F0))(enumType, value, format);
  }
  static inline Il2CppObject* ToObject(ModdingAPI::Exposed::System::Type* enumType, char value) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Type*, char)>(Helpers::Memory::GetInstance().MakeAbsolute(0x658040))(enumType, value);
  }
  static inline Il2CppObject* ToObject(ModdingAPI::Exposed::System::Type* enumType, int16_t value) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Type*, int16_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x658260))(enumType, value);
  }
  static inline Il2CppObject* ToObject(ModdingAPI::Exposed::System::Type* enumType, int32_t value) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Type*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x658480))(enumType, value);
  }
  static inline Il2CppObject* ToObject(ModdingAPI::Exposed::System::Type* enumType, uint8_t value) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Type*, uint8_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6586A0))(enumType, value);
  }
  static inline Il2CppObject* ToObject(ModdingAPI::Exposed::System::Type* enumType, uint16_t value) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Type*, uint16_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6588C0))(enumType, value);
  }
  static inline Il2CppObject* ToObject(ModdingAPI::Exposed::System::Type* enumType, uint32_t value) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Type*, uint32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x658AE0))(enumType, value);
  }
  static inline Il2CppObject* ToObject(ModdingAPI::Exposed::System::Type* enumType, int64_t value) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Type*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x658D00))(enumType, value);
  }
  static inline Il2CppObject* ToObject(ModdingAPI::Exposed::System::Type* enumType, uint64_t value) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Type*, uint64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x658F20))(enumType, value);
  }
  static inline Il2CppObject* ToObject(ModdingAPI::Exposed::System::Type* enumType, wchar_t value) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Type*, wchar_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x659140))(enumType, value);
  }
  static inline Il2CppObject* ToObject(ModdingAPI::Exposed::System::Type* enumType, bool value) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Type*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x659360))(enumType, value);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x659580))();
  }
};
}