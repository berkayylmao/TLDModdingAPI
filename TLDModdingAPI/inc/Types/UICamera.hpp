// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.RaycastHit.hpp"
#include "ModdingAPI.Exposed.UICamera.DepthEntry.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Plane.hpp"
#include "ModdingAPI.Exposed.UnityEngine.LayerMask.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Ray.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Vector3.hpp"
#include "ModdingAPI::Exposed::UICamera::DepthEntry.hpp"


namespace ModdingAPI::Exposed {
struct __UICamera_Il2CppStaticFields {
  ModdingAPI::Exposed::BetterList_T_* list;
  ModdingAPI::Exposed::UICamera::GetKeyStateFunc* GetKeyDown;
  ModdingAPI::Exposed::UICamera::GetKeyStateFunc* GetKeyUp;
  ModdingAPI::Exposed::UICamera::GetKeyStateFunc* GetKey;
  ModdingAPI::Exposed::UICamera::GetAxisFunc* GetAxis;
  ModdingAPI::Exposed::UICamera::OnScreenResize* onScreenResize;
  ModdingAPI::Exposed::UICamera::OnCustomInput* onCustomInput;
  bool showTooltips;
  ModdingAPI::Exposed::UnityEngine::Vector2 lastTouchPosition;
  ModdingAPI::Exposed::UnityEngine::Vector3 lastWorldPosition;
  ModdingAPI::Exposed::UnityEngine::RaycastHit lastHit;
  ModdingAPI::Exposed::UICamera* current;
  ModdingAPI::Exposed::UnityEngine::Camera* currentCamera;
  int32_t mCurrentScheme;
  int32_t currentTouchID;
  ModdingAPI::Exposed::UnityEngine::KeyCode currentKey;
  ModdingAPI::Exposed::UICamera::MouseOrTouch* currentTouch;
  bool inputHasFocus;
  ModdingAPI::Exposed::UnityEngine::GameObject* mGenericHandler;
  ModdingAPI::Exposed::UnityEngine::GameObject* fallThrough;
  ModdingAPI::Exposed::UICamera::VoidDelegate* onClick;
  ModdingAPI::Exposed::UICamera::VoidDelegate* onDoubleClick;
  ModdingAPI::Exposed::UICamera::BoolDelegate* onHover;
  ModdingAPI::Exposed::UICamera::BoolDelegate* onPress;
  ModdingAPI::Exposed::UICamera::BoolDelegate* onSelect;
  ModdingAPI::Exposed::UICamera::FloatDelegate* onScroll;
  ModdingAPI::Exposed::UICamera::VectorDelegate* onDrag;
  ModdingAPI::Exposed::UICamera::VoidDelegate* onDragStart;
  ModdingAPI::Exposed::UICamera::ObjectDelegate* onDragOver;
  ModdingAPI::Exposed::UICamera::ObjectDelegate* onDragOut;
  ModdingAPI::Exposed::UICamera::VoidDelegate* onDragEnd;
  ModdingAPI::Exposed::UICamera::ObjectDelegate* onDrop;
  ModdingAPI::Exposed::UICamera::KeyCodeDelegate* onKey;
  ModdingAPI::Exposed::UICamera::BoolDelegate* onTooltip;
  ModdingAPI::Exposed::UICamera::MoveDelegate* onMouseMove;
  ModdingAPI::Exposed::UnityEngine::GameObject* mCurrentSelection;
  ModdingAPI::Exposed::UICamera::MouseOrTouch_array* mMouse;
  ModdingAPI::Exposed::UnityEngine::GameObject* mHover;
  ModdingAPI::Exposed::UICamera::MouseOrTouch* controller;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* activeTouches;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* mTouchIDs;
  int32_t mWidth;
  int32_t mHeight;
  bool isDragging;
  ModdingAPI::Exposed::UnityEngine::GameObject* lastHoveredObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* _hoveredObject;
  ModdingAPI::Exposed::UICamera::DepthEntry mHit;
  ModdingAPI::Exposed::BetterList_T_* mHits;
  ModdingAPI::Exposed::UnityEngine::Plane m2DPlane;
  int32_t mNotifying;
  bool mUsingTouchEvents;
  ModdingAPI::Exposed::UICamera::GetTouchCountCallback* GetInputTouchCount;
  ModdingAPI::Exposed::UICamera::GetTouchCallback* GetInputTouch;
};

struct __UICamera_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __UICamera_Il2CppClass {
  Il2CppClass_1 _1;
  __UICamera_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __UICamera_Il2CppVtbl vtbl;
};

class UICamera {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C5CBB0;
  static inline    __UICamera_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __UICamera_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__UICamera_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __UICamera_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  int32_t eventType;
  bool eventsGoToColliders;
  ModdingAPI::Exposed::UnityEngine::LayerMask eventReceiverMask;
  bool debug;
  bool useMouse;
  bool useTouch;
  bool allowMultiTouch;
  bool useKeyboard;
  bool useController;
  bool stickyTooltip;
  float tooltipDelay;
  bool longPressTooltip;
  float mouseDragThreshold;
  float mouseClickThreshold;
  float touchDragThreshold;
  float touchClickThreshold;
  float rangeDistance;
  System_String* scrollAxisName;
  System_String* verticalAxisName;
  System_String* secondaryVerticalAxisName;
  System_String* horizontalAxisName;
  System_String* secondaryHorizontalAxisName;
  bool commandClick;
  ModdingAPI::Exposed::UnityEngine::KeyCode submitKey0;
  ModdingAPI::Exposed::UnityEngine::KeyCode submitKey1;
  ModdingAPI::Exposed::UnityEngine::KeyCode cancelKey0;
  ModdingAPI::Exposed::UnityEngine::KeyCode cancelKey1;
  System_String* submitKey;
  System_String* cancelKey;
  ModdingAPI::Exposed::UnityEngine::GameObject* mTooltip;
  ModdingAPI::Exposed::UnityEngine::Camera* mCam;
  float mTooltipTime;
  float mNextRaycast;

  // Member methods:
  bool get_stickyPress() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UICamera*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x403F70))(this);
  }
  bool get_handlesEvents() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UICamera*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20CC8A0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Camera* get_cachedCamera() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Camera*(__fastcall*)(ModdingAPI::Exposed::UICamera*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20CC970))(this);
  }
  void Awake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UICamera*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D1A30))(this);
  }
  void OnEnable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UICamera*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D1F10))(this);
  }
  void OnDisable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UICamera*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D20E0))(this);
  }
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UICamera*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D21A0))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UICamera*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D2720))(this);
  }
  void LateUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UICamera*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D3050))(this);
  }
  void ProcessMouse() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UICamera*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D3290))(this);
  }
  void ProcessTouches() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UICamera*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D4470))(this);
  }
  void ProcessFakeTouches() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UICamera*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D4FC0))(this);
  }
  void ProcessOthers() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UICamera*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void ProcessPress(bool pressed, float click, float drag) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UICamera*, bool, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D5850))(this, pressed, click, drag);
  }
  void ProcessRelease(bool isMouse, float drag) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UICamera*, bool, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D6B10))(this, isMouse, drag);
  }
  void ProcessTouch(bool pressed, bool released) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UICamera*, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D7730))(this, pressed, released);
  }
  void ShowTooltip(bool val) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UICamera*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D7BC0))(this, val);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UICamera*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D80B0))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::BetterList_T_*> list = __CppStaticProperty<ModdingAPI::Exposed::BetterList_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->list; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::GetKeyStateFunc*> GetKeyDown = __CppStaticProperty<ModdingAPI::Exposed::UICamera::GetKeyStateFunc*>(
   []() { return &GetStaticClassInstance()->pStaticFields->GetKeyDown; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::GetKeyStateFunc*> GetKeyUp = __CppStaticProperty<ModdingAPI::Exposed::UICamera::GetKeyStateFunc*>(
   []() { return &GetStaticClassInstance()->pStaticFields->GetKeyUp; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::GetKeyStateFunc*> GetKey = __CppStaticProperty<ModdingAPI::Exposed::UICamera::GetKeyStateFunc*>(
   []() { return &GetStaticClassInstance()->pStaticFields->GetKey; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::GetAxisFunc*> GetAxis = __CppStaticProperty<ModdingAPI::Exposed::UICamera::GetAxisFunc*>(
   []() { return &GetStaticClassInstance()->pStaticFields->GetAxis; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::OnScreenResize*> onScreenResize = __CppStaticProperty<ModdingAPI::Exposed::UICamera::OnScreenResize*>(
   []() { return &GetStaticClassInstance()->pStaticFields->onScreenResize; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::OnCustomInput*> onCustomInput = __CppStaticProperty<ModdingAPI::Exposed::UICamera::OnCustomInput*>(
   []() { return &GetStaticClassInstance()->pStaticFields->onCustomInput; }
  );
  static inline __CppStaticProperty<bool> showTooltips = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->showTooltips; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Vector2> lastTouchPosition = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Vector2>(
   []() { return &GetStaticClassInstance()->pStaticFields->lastTouchPosition; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Vector3> lastWorldPosition = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Vector3>(
   []() { return &GetStaticClassInstance()->pStaticFields->lastWorldPosition; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::RaycastHit> lastHit = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::RaycastHit>(
   []() { return &GetStaticClassInstance()->pStaticFields->lastHit; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera*> current = __CppStaticProperty<ModdingAPI::Exposed::UICamera*>(
   []() { return &GetStaticClassInstance()->pStaticFields->current; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Camera*> currentCamera = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Camera*>(
   []() { return &GetStaticClassInstance()->pStaticFields->currentCamera; }
  );
  static inline __CppStaticProperty<int32_t> mCurrentScheme = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->mCurrentScheme; }
  );
  static inline __CppStaticProperty<int32_t> currentTouchID = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->currentTouchID; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::KeyCode> currentKey = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::KeyCode>(
   []() { return &GetStaticClassInstance()->pStaticFields->currentKey; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::MouseOrTouch*> currentTouch = __CppStaticProperty<ModdingAPI::Exposed::UICamera::MouseOrTouch*>(
   []() { return &GetStaticClassInstance()->pStaticFields->currentTouch; }
  );
  static inline __CppStaticProperty<bool> inputHasFocus = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->inputHasFocus; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::GameObject*> mGenericHandler = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::GameObject*>(
   []() { return &GetStaticClassInstance()->pStaticFields->mGenericHandler; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::GameObject*> fallThrough = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::GameObject*>(
   []() { return &GetStaticClassInstance()->pStaticFields->fallThrough; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::VoidDelegate*> onClick = __CppStaticProperty<ModdingAPI::Exposed::UICamera::VoidDelegate*>(
   []() { return &GetStaticClassInstance()->pStaticFields->onClick; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::VoidDelegate*> onDoubleClick = __CppStaticProperty<ModdingAPI::Exposed::UICamera::VoidDelegate*>(
   []() { return &GetStaticClassInstance()->pStaticFields->onDoubleClick; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::BoolDelegate*> onHover = __CppStaticProperty<ModdingAPI::Exposed::UICamera::BoolDelegate*>(
   []() { return &GetStaticClassInstance()->pStaticFields->onHover; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::BoolDelegate*> onPress = __CppStaticProperty<ModdingAPI::Exposed::UICamera::BoolDelegate*>(
   []() { return &GetStaticClassInstance()->pStaticFields->onPress; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::BoolDelegate*> onSelect = __CppStaticProperty<ModdingAPI::Exposed::UICamera::BoolDelegate*>(
   []() { return &GetStaticClassInstance()->pStaticFields->onSelect; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::FloatDelegate*> onScroll = __CppStaticProperty<ModdingAPI::Exposed::UICamera::FloatDelegate*>(
   []() { return &GetStaticClassInstance()->pStaticFields->onScroll; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::VectorDelegate*> onDrag = __CppStaticProperty<ModdingAPI::Exposed::UICamera::VectorDelegate*>(
   []() { return &GetStaticClassInstance()->pStaticFields->onDrag; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::VoidDelegate*> onDragStart = __CppStaticProperty<ModdingAPI::Exposed::UICamera::VoidDelegate*>(
   []() { return &GetStaticClassInstance()->pStaticFields->onDragStart; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::ObjectDelegate*> onDragOver = __CppStaticProperty<ModdingAPI::Exposed::UICamera::ObjectDelegate*>(
   []() { return &GetStaticClassInstance()->pStaticFields->onDragOver; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::ObjectDelegate*> onDragOut = __CppStaticProperty<ModdingAPI::Exposed::UICamera::ObjectDelegate*>(
   []() { return &GetStaticClassInstance()->pStaticFields->onDragOut; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::VoidDelegate*> onDragEnd = __CppStaticProperty<ModdingAPI::Exposed::UICamera::VoidDelegate*>(
   []() { return &GetStaticClassInstance()->pStaticFields->onDragEnd; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::ObjectDelegate*> onDrop = __CppStaticProperty<ModdingAPI::Exposed::UICamera::ObjectDelegate*>(
   []() { return &GetStaticClassInstance()->pStaticFields->onDrop; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::KeyCodeDelegate*> onKey = __CppStaticProperty<ModdingAPI::Exposed::UICamera::KeyCodeDelegate*>(
   []() { return &GetStaticClassInstance()->pStaticFields->onKey; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::BoolDelegate*> onTooltip = __CppStaticProperty<ModdingAPI::Exposed::UICamera::BoolDelegate*>(
   []() { return &GetStaticClassInstance()->pStaticFields->onTooltip; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::MoveDelegate*> onMouseMove = __CppStaticProperty<ModdingAPI::Exposed::UICamera::MoveDelegate*>(
   []() { return &GetStaticClassInstance()->pStaticFields->onMouseMove; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::GameObject*> mCurrentSelection = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::GameObject*>(
   []() { return &GetStaticClassInstance()->pStaticFields->mCurrentSelection; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::MouseOrTouch_array*> mMouse = __CppStaticProperty<ModdingAPI::Exposed::UICamera::MouseOrTouch_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->mMouse; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::GameObject*> mHover = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::GameObject*>(
   []() { return &GetStaticClassInstance()->pStaticFields->mHover; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::MouseOrTouch*> controller = __CppStaticProperty<ModdingAPI::Exposed::UICamera::MouseOrTouch*>(
   []() { return &GetStaticClassInstance()->pStaticFields->controller; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*> activeTouches = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->activeTouches; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*> mTouchIDs = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->mTouchIDs; }
  );
  static inline __CppStaticProperty<int32_t> mWidth = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->mWidth; }
  );
  static inline __CppStaticProperty<int32_t> mHeight = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->mHeight; }
  );
  static inline __CppStaticProperty<bool> isDragging = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->isDragging; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::GameObject*> lastHoveredObject = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::GameObject*>(
   []() { return &GetStaticClassInstance()->pStaticFields->lastHoveredObject; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::GameObject*> _hoveredObject = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::GameObject*>(
   []() { return &GetStaticClassInstance()->pStaticFields->_hoveredObject; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::DepthEntry> mHit = __CppStaticProperty<ModdingAPI::Exposed::UICamera::DepthEntry>(
   []() { return &GetStaticClassInstance()->pStaticFields->mHit; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::BetterList_T_*> mHits = __CppStaticProperty<ModdingAPI::Exposed::BetterList_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->mHits; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Plane> m2DPlane = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Plane>(
   []() { return &GetStaticClassInstance()->pStaticFields->m2DPlane; }
  );
  static inline __CppStaticProperty<int32_t> mNotifying = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->mNotifying; }
  );
  static inline __CppStaticProperty<bool> mUsingTouchEvents = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->mUsingTouchEvents; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::GetTouchCountCallback*> GetInputTouchCount = __CppStaticProperty<ModdingAPI::Exposed::UICamera::GetTouchCountCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->GetInputTouchCount; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UICamera::GetTouchCallback*> GetInputTouch = __CppStaticProperty<ModdingAPI::Exposed::UICamera::GetTouchCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->GetInputTouch; }
  );

  // Static methods:
  static inline int32_t get_currentScheme() {
    return reinterpret_cast<int32_t(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x20CC490))();
  }
  static inline void set_currentScheme(int32_t value) {
    reinterpret_cast<void(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(value);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Ray get_currentRay() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Ray(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x20CC530))();
  }
  static inline ModdingAPI::Exposed::UnityEngine::GameObject* get_genericEventHandler() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GameObject*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x20CC750))();
  }
  static inline void set_genericEventHandler(ModdingAPI::Exposed::UnityEngine::GameObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20CC7F0))(value);
  }
  static inline ModdingAPI::Exposed::UnityEngine::GameObject* get_hoveredObject() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GameObject*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x20CCA40))();
  }
  static inline void set_hoveredObject(ModdingAPI::Exposed::UnityEngine::GameObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20CCAE0))(value);
  }
  static inline bool get_isOverUI() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x20CCBA0))();
  }
  static inline ModdingAPI::Exposed::UnityEngine::GameObject* get_selectedObject() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GameObject*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x20CCEF0))();
  }
  static inline void set_selectedObject(ModdingAPI::Exposed::UnityEngine::GameObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20CD000))(value);
  }
  static inline bool IsPressed(ModdingAPI::Exposed::UnityEngine::GameObject* go) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20CD730))(go);
  }
  static inline int32_t get_touchCount() {
    return reinterpret_cast<int32_t(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x20CDA00))();
  }
  static inline int32_t CountInputSources() {
    return reinterpret_cast<int32_t(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x20CDA90))();
  }
  static inline int32_t get_dragCount() {
    return reinterpret_cast<int32_t(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x20CDDB0))();
  }
  static inline ModdingAPI::Exposed::UnityEngine::Camera* get_mainCamera() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Camera*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x20CE0D0))();
  }
  static inline ModdingAPI::Exposed::UICamera* get_eventHandler() {
    return reinterpret_cast<ModdingAPI::Exposed::UICamera*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x20CE1B0))();
  }
  static inline int32_t CompareFunc(ModdingAPI::Exposed::UICamera* a, ModdingAPI::Exposed::UICamera* b) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UICamera*, ModdingAPI::Exposed::UICamera*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20CE390))(a, b);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Rigidbody* FindRootRigidbody(ModdingAPI::Exposed::UnityEngine::Transform* trans) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Rigidbody*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Transform*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20CE580))(trans);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Rigidbody2D* FindRootRigidbody2D(ModdingAPI::Exposed::UnityEngine::Transform* trans) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Rigidbody2D*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Transform*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20CE6F0))(trans);
  }
  static inline bool Raycast(ModdingAPI::Exposed::UnityEngine::Vector3 inPos) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20CE860))(inPos);
  }
  static inline bool IsVisible(ModdingAPI::Exposed::UnityEngine::Vector3 worldPoint, ModdingAPI::Exposed::UnityEngine::GameObject* go) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D0750))(worldPoint, go);
  }
  static inline bool IsVisible(ModdingAPI::Exposed::UICamera::DepthEntry de) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UICamera::DepthEntry)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D0890))(de);
  }
  static inline bool IsHighlighted(ModdingAPI::Exposed::UnityEngine::GameObject* go) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D09D0))(go);
  }
  static inline ModdingAPI::Exposed::UICamera* FindCameraForLayer(int32_t layer) {
    return reinterpret_cast<ModdingAPI::Exposed::UICamera*(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D0B20))(layer);
  }
  static inline int32_t GetDirection(ModdingAPI::Exposed::UnityEngine::KeyCode up, ModdingAPI::Exposed::UnityEngine::KeyCode down) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::KeyCode, ModdingAPI::Exposed::UnityEngine::KeyCode)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D0CE0))(up, down);
  }
  static inline int32_t GetDirection(ModdingAPI::Exposed::UnityEngine::KeyCode up0, ModdingAPI::Exposed::UnityEngine::KeyCode up1, ModdingAPI::Exposed::UnityEngine::KeyCode down0, ModdingAPI::Exposed::UnityEngine::KeyCode down1) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::KeyCode, ModdingAPI::Exposed::UnityEngine::KeyCode, ModdingAPI::Exposed::UnityEngine::KeyCode, ModdingAPI::Exposed::UnityEngine::KeyCode)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D0E10))(up0, up1, down0, down1);
  }
  static inline void Notify(ModdingAPI::Exposed::UnityEngine::GameObject* go, System_String* funcName, Il2CppObject* obj) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GameObject*, System_String*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D1000))(go, funcName, obj);
  }
  static inline ModdingAPI::Exposed::UICamera::MouseOrTouch* GetMouse(int32_t button) {
    return reinterpret_cast<ModdingAPI::Exposed::UICamera::MouseOrTouch*(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D12A0))(button);
  }
  static inline ModdingAPI::Exposed::UICamera::MouseOrTouch* GetTouch(int32_t id) {
    return reinterpret_cast<ModdingAPI::Exposed::UICamera::MouseOrTouch*(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D1370))(id);
  }
  static inline void RemoveTouch(int32_t id) {
    reinterpret_cast<void(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D1800))(id);
  }
  static inline void SetSchemeOverride(int32_t newScheme) {
    reinterpret_cast<void(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D7D40))(newScheme);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x20D81F0))();
  }
};
}