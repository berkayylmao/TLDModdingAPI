// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"
#include "ModdingAPI.Exposed.ArrowItem.SurfaceResponseInfo.hpp"


namespace ModdingAPI::Exposed {
struct __ArrowItem_Il2CppStaticFields {
};

struct __ArrowItem_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __ArrowItem_Il2CppClass {
  Il2CppClass_1 _1;
  __ArrowItem_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __ArrowItem_Il2CppVtbl vtbl;
};

class ArrowItem {
public:
  // Il2Cpp fields:
  __ArrowItem_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ArrowMesh;
  ModdingAPI::Exposed::UnityEngine::LineRenderer* m_LineRenderer;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_PlacementHelper;
  bool m_CapsuleCollisionDebug;
  ModdingAPI::Exposed::UnityEngine::Vector3_array* m_LinePoints;
  int32_t m_LineBase;
  int32_t m_LineNumPts;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_FirstContact;
  float m_FirstContactTime;
  float m_ReleaseVelocity;
  float m_ReleaseDrag;
  float m_VictimDamage;
  float m_XZDampeningScalar;
  ModdingAPI::Exposed::UnityEngine::Vector2 m_XZDampeningRange;
  float m_ImpactVelocityScalar;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_BrokenArrow;
  System_String* m_FlightAudio;
  System_String* m_ImpactAudio;
  System_String* m_BreakAudio;
  float m_ImpactAudioCooldown;
  float m_GearImpactForce;
  float m_GearImpactUpwardForce;
  float m_GearImpactTorqueForce;
  ModdingAPI::Exposed::GearItem* m_GearItem;
  ModdingAPI::Exposed::UnityEngine::Rigidbody* m_Rigidbody;
  int32_t m_ContactCount;
  float m_EmbeddedDepth;
  ModdingAPI::Exposed::BaseAi* m_EmbeddedInAi;
  float m_EmbeddedInAiDeadTime;
  float m_FallOutTimer;
  float m_ReleaseTime;
  float m_LastEffectTime;
  uint32_t m_FlightAudioId;
  bool m_Initialized;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_LastPosition;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_LastVelocity;
  ModdingAPI::Exposed::ArrowSaveData* m_DeferredSaveData;
  int32_t m_DeferredSaveRetryCounter;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_LastCollisionPoint;
  float m_BlockImpactAudioUntil;
  bool m_FellThroughWorld;

  // Member methods:
  void Awake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F9FCB0))(this);
  }
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void Reset() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F9FCC0))(this);
  }
  ModdingAPI::Exposed::ArrowSaveData* Serialize() {
    return reinterpret_cast<ModdingAPI::Exposed::ArrowSaveData*(__fastcall*)(ModdingAPI::Exposed::ArrowItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F9FEB0))(this);
  }
  void Deserialize(ModdingAPI::Exposed::ArrowSaveData* asd) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*, ModdingAPI::Exposed::ArrowSaveData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA0880))(this, asd);
  }
  void ApplyForcesToGear(ModdingAPI::Exposed::GearItem* gi, ModdingAPI::Exposed::UnityEngine::Vector3 normal) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*, ModdingAPI::Exposed::GearItem*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA0BE0))(this, gi, normal);
  }
  void FixedUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA0E50))(this);
  }
  void LateUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA1250))(this);
  }
  void Fire() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA1CF0))(this);
  }
  bool InFlight(bool onlyConsiderFirstImpact) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::ArrowItem*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA25A0))(this, onlyConsiderFirstImpact);
  }
  bool BelongsToPlayer() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::ArrowItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA2700))(this);
  }
  void DetachIntoWorld() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA27E0))(this);
  }
  void SetPlacementHelperEnabled(bool enabled) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA3260))(this, enabled);
  }
  void OnCollisionEnter(ModdingAPI::Exposed::UnityEngine::Collision* collision) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*, ModdingAPI::Exposed::UnityEngine::Collision*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA3350))(this, collision);
  }
  void StopArrow() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA3980))(this);
  }
  void HandleCollisionWithObject(ModdingAPI::Exposed::UnityEngine::GameObject* collider, ModdingAPI::Exposed::UnityEngine::Vector3 collisionPoint, ModdingAPI::Exposed::UnityEngine::Vector3 collisionNormal) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*, ModdingAPI::Exposed::UnityEngine::GameObject*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA4440))(this, collider, collisionPoint, collisionNormal);
  }
  void OnCollisionStay(ModdingAPI::Exposed::UnityEngine::Collision* collision) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*, ModdingAPI::Exposed::UnityEngine::Collision*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA64B0))(this, collision);
  }
  void ParentToObject(ModdingAPI::Exposed::UnityEngine::Transform* t) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*, ModdingAPI::Exposed::UnityEngine::Transform*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA6DD0))(this, t);
  }
  void PlayImpactAudio(System_String* surfaceTag) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA71C0))(this, surfaceTag);
  }
  ModdingAPI::Exposed::ArrowItem::SurfaceResponseInfo GetSurfaceResponseInfo(System_String* surfaceTag, bool isSecondaryHit) {
    return reinterpret_cast<ModdingAPI::Exposed::ArrowItem::SurfaceResponseInfo(__fastcall*)(ModdingAPI::Exposed::ArrowItem*, System_String*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA73C0))(this, surfaceTag, isSecondaryHit);
  }
  void FallFree() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA78F0))(this);
  }
  void Break() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA7E10))(this);
  }
  ModdingAPI::Exposed::BaseAi* InflictDamage(ModdingAPI::Exposed::UnityEngine::GameObject* victim, float damageScalar, bool stickIn, System_String* collider, ModdingAPI::Exposed::UnityEngine::Vector3 collisionPoint) {
    return reinterpret_cast<ModdingAPI::Exposed::BaseAi*(__fastcall*)(ModdingAPI::Exposed::ArrowItem*, ModdingAPI::Exposed::UnityEngine::GameObject*, float, bool, System_String*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA8490))(this, victim, damageScalar, stickIn, collider, collisionPoint);
  }
  void MaybeScareWildlife() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA8910))(this);
  }
  void RefreshLineRenderer() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA8AC0))(this);
  }
  void Initialize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA8D90))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ArrowItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1FA9000))(this);
  }
};
}