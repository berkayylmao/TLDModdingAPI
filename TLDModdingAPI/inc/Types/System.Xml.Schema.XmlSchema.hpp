// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System::Xml::Schema {
struct __XmlSchema_Il2CppStaticFields {
  int32_t globalIdCounter;
};

struct __XmlSchema_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_OnAdd;
  VirtualInvokeData _5_OnRemove;
  VirtualInvokeData _6_OnClear;
  VirtualInvokeData _7_get_IdAttribute;
  VirtualInvokeData _8_set_IdAttribute;
  VirtualInvokeData _9_SetUnhandledAttributes;
  VirtualInvokeData _10_AddAnnotation;
  VirtualInvokeData _11_get_NameAttribute;
  VirtualInvokeData _12_set_NameAttribute;
  VirtualInvokeData _13_Clone;
};

struct __XmlSchema_Il2CppClass {
  Il2CppClass_1 _1;
  __XmlSchema_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __XmlSchema_Il2CppVtbl vtbl;
};

class XmlSchema {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C3FF08;
  static inline    XmlSchema* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C3DF38;
  static inline    __XmlSchema_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline XmlSchema* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (XmlSchema**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __XmlSchema_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__XmlSchema_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __XmlSchema_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  int32_t XmlSchemaObject_lineNum;
  int32_t XmlSchemaObject_linePos;
  System_String* XmlSchemaObject_sourceUri;
  ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializerNamespaces* XmlSchemaObject_namespaces;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject* XmlSchemaObject_parent;
  bool XmlSchemaObject_isProcessing;
  int32_t attributeFormDefault;
  int32_t elementFormDefault;
  int32_t blockDefault;
  int32_t finalDefault;
  System_String* targetNs;
  System_String* version;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectCollection* includes;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectCollection* items;
  System_String* id;
  ModdingAPI::Exposed::System::Xml::XmlAttribute_array* moreAttributes;
  bool isCompiled;
  bool isCompiledBySet;
  bool isPreprocessed;
  bool isRedefined;
  int32_t errorCount;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* attributes;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* attributeGroups;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* elements;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* types;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* groups;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* notations;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* identityConstraints;
  ModdingAPI::Exposed::System::Collections::ArrayList* importedSchemas;
  ModdingAPI::Exposed::System::Collections::ArrayList* importedNamespaces;
  int32_t schemaId;
  ModdingAPI::Exposed::System::Uri* baseUri;
  bool isChameleon;
  ModdingAPI::Exposed::System::Collections::Hashtable* ids;
  ModdingAPI::Exposed::System::Xml::XmlDocument* document;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC72330))(this);
  }
  bool CompileSchema(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaCollection* xsc, ModdingAPI::Exposed::System::Xml::XmlResolver* resolver, ModdingAPI::Exposed::System::Xml::Schema::SchemaInfo* schemaInfo, System_String* ns, ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler* validationEventHandler, ModdingAPI::Exposed::System::Xml::XmlNameTable* nameTable, bool CompileContentModel) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaCollection*, ModdingAPI::Exposed::System::Xml::XmlResolver*, ModdingAPI::Exposed::System::Xml::Schema::SchemaInfo*, System_String*, ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler*, ModdingAPI::Exposed::System::Xml::XmlNameTable*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC72AE0))(this, xsc, resolver, schemaInfo, ns, validationEventHandler, nameTable, CompileContentModel);
  }
  void CompileSchemaInSet(ModdingAPI::Exposed::System::Xml::XmlNameTable* nameTable, ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler* eventHandler, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaCompilationSettings* compilationSettings) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, ModdingAPI::Exposed::System::Xml::XmlNameTable*, ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaCompilationSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC72E90))(this, nameTable, eventHandler, compilationSettings);
  }
  int32_t get_AttributeFormDefault() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8A0))(this);
  }
  void set_AttributeFormDefault(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8B0))(this, value);
  }
  int32_t get_BlockDefault() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8E0))(this);
  }
  void set_BlockDefault(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8F0))(this, value);
  }
  int32_t get_FinalDefault() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D900))(this);
  }
  void set_FinalDefault(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D910))(this, value);
  }
  int32_t get_ElementFormDefault() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8C0))(this);
  }
  void set_ElementFormDefault(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8D0))(this, value);
  }
  System_String* get_TargetNamespace() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319980))(this);
  }
  void set_TargetNamespace(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A430))(this, value);
  }
  System_String* get_Version() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A440))(this);
  }
  void set_Version(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A450))(this, value);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectCollection* get_Includes() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectCollection*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383960))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectCollection* get_Items() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectCollection*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3199C0))(this);
  }
  bool get_IsCompiledBySet() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5EF7F0))(this);
  }
  void set_IsCompiledBySet(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8A4D20))(this, value);
  }
  bool get_IsPreprocessed() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5EF7C0))(this);
  }
  void set_IsPreprocessed(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC73030))(this, value);
  }
  bool get_IsRedefined() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5EF7E0))(this);
  }
  void set_IsRedefined(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC73040))(this, value);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* get_Attributes() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC73050))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* get_AttributeGroups() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC731B0))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* get_SchemaTypes() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC73310))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* get_Elements() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC73470))(this);
  }
  System_String* get_Id() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319930))(this);
  }
  void set_Id(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A4C0))(this, value);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* get_Groups() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3BC850))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* get_Notations() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x30F140))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* get_IdentityConstraints() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x307710))(this);
  }
  ModdingAPI::Exposed::System::Uri* get_BaseUri() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Uri*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3F11D0))(this);
  }
  void set_BaseUri(ModdingAPI::Exposed::System::Uri* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, ModdingAPI::Exposed::System::Uri*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3F11E0))(this, value);
  }
  int32_t get_SchemaId() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC735D0))(this);
  }
  bool get_IsChameleon() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC73690))(this);
  }
  void set_IsChameleon(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC736A0))(this, value);
  }
  ModdingAPI::Exposed::System::Collections::Hashtable* get_Ids() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Hashtable*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3EBFF0))(this);
  }
  ModdingAPI::Exposed::System::Xml::XmlDocument* get_Document() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlDocument*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC736B0))(this);
  }
  int32_t get_ErrorCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAF70E0))(this);
  }
  void set_ErrorCount(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC73810))(this, value);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchema* Clone() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC73820))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchema* DeepClone() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC739D0))(this);
  }
  System_String* get_IdAttribute() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319930))(this);
  }
  void set_IdAttribute(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A4C0))(this, value);
  }
  void SetIsCompiled(bool isCompiled) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC73E50))(this, isCompiled);
  }
  void SetUnhandledAttributes(ModdingAPI::Exposed::System::Xml::XmlAttribute_array* moreAttributes) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, ModdingAPI::Exposed::System::Xml::XmlAttribute_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x477710))(this, moreAttributes);
  }
  void AddAnnotation(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaAnnotation* annotation) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaAnnotation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC73E60))(this, annotation);
  }
  ModdingAPI::Exposed::System::Collections::ArrayList* get_ImportedSchemas() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::ArrayList*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC73E80))(this);
  }
  ModdingAPI::Exposed::System::Collections::ArrayList* get_ImportedNamespaces() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::ArrayList*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC73FE0))(this);
  }
  void GetExternalSchemasList(ModdingAPI::Exposed::System::Collections::IList* extList, ModdingAPI::Exposed::System::Xml::Schema::XmlSchema* schema) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, ModdingAPI::Exposed::System::Collections::IList*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC74140))(this, extList, schema);
  }

  // Static fields:
  static inline __CppStaticProperty<int32_t> globalIdCounter = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->globalIdCounter; }
  );

  // Static methods:
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xC74320))();
  }
};
}