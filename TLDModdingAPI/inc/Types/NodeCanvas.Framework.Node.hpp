// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Vector2.hpp"


namespace ModdingAPI::Exposed::NodeCanvas::Framework {
struct __Node_Il2CppStaticFields {
};

struct __Node_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_get_graph;
  VirtualInvokeData _5_get_tag;
  VirtualInvokeData _6_get_name;
  VirtualInvokeData _7_set_name;
  VirtualInvokeData _8_get_description;
  VirtualInvokeData _9_get_priority;
  VirtualInvokeData _16_OnCreate;
  VirtualInvokeData _17_OnValidate;
  VirtualInvokeData _18_OnDestroy;
  VirtualInvokeData _19_CanConnectToTarget;
  VirtualInvokeData _20_CanConnectFromSource;
  VirtualInvokeData _21_GetAdditionalState;
  VirtualInvokeData _22_OnExecute;
  VirtualInvokeData _23_OnReset;
  VirtualInvokeData _24_OnParentConnected;
  VirtualInvokeData _25_OnParentDisconnected;
  VirtualInvokeData _26_OnChildConnected;
  VirtualInvokeData _27_OnChildDisconnected;
  VirtualInvokeData _28_OnGraphStarted;
  VirtualInvokeData _29_OnGraphStoped;
  VirtualInvokeData _30_OnGraphPaused;
  VirtualInvokeData _31_OnGraphUnpaused;
  VirtualInvokeData _32_OnDrawGizmos;
  VirtualInvokeData _33_OnDrawGizmosSelected;
  VirtualInvokeData _65535__ctor;
};

struct __Node_Il2CppClass {
  Il2CppClass_1 _1;
  __Node_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Node_Il2CppVtbl vtbl;
};

class Node {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C948A0;
  static inline    __Node_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __Node_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__Node_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __Node_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::UnityEngine::Vector2 _position;
  System_String* _UID;
  System_String* _name;
  System_String* _tag;
  System_String* _comment;
  bool _isBreakpoint;
  ModdingAPI::Exposed::NodeCanvas::Framework::Graph* _graph;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* _inConnections;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* _outConnections;
  int32_t _ID;
  int32_t _status;
  System_String* _nameCache;
  System_String* _descriptionCache;
  int32_t _priorityCache;
  bool _isChecked_k__BackingField;
  bool _breakPointReached_k__BackingField;

  // Member methods:
  ModdingAPI::Exposed::NodeCanvas::Framework::Graph* get_graph() {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::Graph*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319960))(this);
  }
  void set_graph(ModdingAPI::Exposed::NodeCanvas::Framework::Graph* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::NodeCanvas::Framework::Graph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x31F420))(this, value);
  }
  int32_t get_ID() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5E8B70))(this);
  }
  void set_ID(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5E8B80))(this, value);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* get_inConnections() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319980))(this);
  }
  void set_inConnections(ModdingAPI::Exposed::System::Collections::Generic::List_T_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A430))(this, value);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* get_outConnections() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A440))(this);
  }
  void set_outConnections(ModdingAPI::Exposed::System::Collections::Generic::List_T_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A450))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 get_position() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E568A0))(this);
  }
  void set_position(ModdingAPI::Exposed::UnityEngine::Vector2 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E568C0))(this, value);
  }
  System_String* get_UID() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E568E0))(this);
  }
  System_String* get_customName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110A0))(this);
  }
  void set_customName(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310F00))(this, value);
  }
  System_String* get_tag() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110B0))(this);
  }
  void set_tag(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110C0))(this, value);
  }
  System_String* get_comments() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335370))(this);
  }
  void set_comments(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A410))(this, value);
  }
  bool get_isBreakpoint() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F6810))(this);
  }
  void set_isBreakpoint(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6CE3F0))(this, value);
  }
  System_String* get_name() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E56A10))(this);
  }
  void set_name(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310F00))(this, value);
  }
  System_String* get_description() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E56B80))(this);
  }
  int32_t get_priority() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E56C80))(this);
  }
  int32_t get_status() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F11E0))(this);
  }
  void set_status(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F11F0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Component* get_graphAgent() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Component*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E56D60))(this);
  }
  ModdingAPI::Exposed::NodeCanvas::Framework::IBlackboard* get_graphBlackboard() {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::IBlackboard*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E56E30))(this);
  }
  bool get_isChecked() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6C1EA0))(this);
  }
  void set_isChecked(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E56F30))(this, value);
  }
  bool get_breakPointReached() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6C1E70))(this);
  }
  void set_breakPointReached(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6C1E80))(this, value);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E56F40))(this);
  }
  ModdingAPI::Exposed::NodeCanvas::Framework::Node* Duplicate(ModdingAPI::Exposed::NodeCanvas::Framework::Graph* targetGraph) {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::Node*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::NodeCanvas::Framework::Graph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E57410))(this, targetGraph);
  }
  void OnCreate(ModdingAPI::Exposed::NodeCanvas::Framework::Graph* assignedGraph) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::NodeCanvas::Framework::Graph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, assignedGraph);
  }
  void OnValidate(ModdingAPI::Exposed::NodeCanvas::Framework::Graph* assignedGraph) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::NodeCanvas::Framework::Graph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, assignedGraph);
  }
  void OnDestroy() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  int32_t Execute(ModdingAPI::Exposed::UnityEngine::Component* agent, ModdingAPI::Exposed::NodeCanvas::Framework::IBlackboard* blackboard) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::UnityEngine::Component*, ModdingAPI::Exposed::NodeCanvas::Framework::IBlackboard*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E577A0))(this, agent, blackboard);
  }
  void Reset(bool recursively) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E577D0))(this, recursively);
  }
  ModdingAPI::Exposed::System::Collections::IEnumerator* YieldBreak(ModdingAPI::Exposed::System::Action* resume) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IEnumerator*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::System::Action*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E57900))(this, resume);
  }
  int32_t Error(Il2CppObject* msg) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E57A50))(this, msg);
  }
  int32_t Fail(System_String* msg) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E57BE0))(this, msg);
  }
  void Warn(System_String* msg) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E57CA0))(this, msg);
  }
  void SetStatus(int32_t status) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F11F0))(this, status);
  }
  void SendEvent(ModdingAPI::Exposed::ParadoxNotion::EventData* eventData) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::ParadoxNotion::EventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E57D60))(this, eventData);
  }
  void RegisterEvents(ModdingAPI::Exposed::System::String_array* eventNames) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::System::String_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E57D90))(this, eventNames);
  }
  void RegisterEvents(ModdingAPI::Exposed::UnityEngine::Component* targetAgent, ModdingAPI::Exposed::System::String_array* eventNames) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::UnityEngine::Component*, ModdingAPI::Exposed::System::String_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E57DD0))(this, targetAgent, eventNames);
  }
  void UnRegisterEvents(ModdingAPI::Exposed::System::String_array* eventNames) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::System::String_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E57FB0))(this, eventNames);
  }
  void UnRegisterEvents(ModdingAPI::Exposed::UnityEngine::Component* targetAgent, ModdingAPI::Exposed::System::String_array* eventNames) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::UnityEngine::Component*, ModdingAPI::Exposed::System::String_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E580E0))(this, targetAgent, eventNames);
  }
  void UnregisterAllEvents() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E58200))(this);
  }
  void UnregisterAllEvents(ModdingAPI::Exposed::UnityEngine::Component* targetAgent) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::UnityEngine::Component*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E58320))(this, targetAgent);
  }
  bool CanConnectToTarget(ModdingAPI::Exposed::NodeCanvas::Framework::Node* targetNode) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x403F70))(this, targetNode);
  }
  bool CanConnectFromSource(ModdingAPI::Exposed::NodeCanvas::Framework::Node* sourceNode) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x403F70))(this, sourceNode);
  }
  ModdingAPI::Exposed::UnityEngine::Coroutine* StartCoroutine(ModdingAPI::Exposed::System::Collections::IEnumerator* routine) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Coroutine*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::System::Collections::IEnumerator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E589F0))(this, routine);
  }
  void StopCoroutine(ModdingAPI::Exposed::UnityEngine::Coroutine* routine) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::UnityEngine::Coroutine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E58A20))(this, routine);
  }
  ModdingAPI::Exposed::NodeCanvas::Framework::Node_array* GetParentNodes() {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::Node_array*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E58A50))(this);
  }
  ModdingAPI::Exposed::NodeCanvas::Framework::Node_array* GetChildNodes() {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::Node_array*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E58C70))(this);
  }
  bool IsChildOf(ModdingAPI::Exposed::NodeCanvas::Framework::Node* parentNode) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E58E90))(this, parentNode);
  }
  bool IsParentOf(ModdingAPI::Exposed::NodeCanvas::Framework::Node* childNode) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E590D0))(this, childNode);
  }
  System_String* GetAdditionalState() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this);
  }
  int32_t OnExecute(ModdingAPI::Exposed::UnityEngine::Component* agent, ModdingAPI::Exposed::NodeCanvas::Framework::IBlackboard* blackboard) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::UnityEngine::Component*, ModdingAPI::Exposed::NodeCanvas::Framework::IBlackboard*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F11E0))(this, agent, blackboard);
  }
  void OnReset() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void OnParentConnected(int32_t connectionIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, connectionIndex);
  }
  void OnParentDisconnected(int32_t connectionIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, connectionIndex);
  }
  void OnChildConnected(int32_t connectionIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, connectionIndex);
  }
  void OnChildDisconnected(int32_t connectionIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, connectionIndex);
  }
  void OnGraphStarted() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void OnGraphStoped() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void OnGraphPaused() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void OnGraphUnpaused() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  System_String* ToString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E59310))(this);
  }
  void OnDrawGizmos() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E594D0))(this);
  }
  void OnDrawGizmosSelected() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E595E0))(this);
  }

  // Static methods:
  static inline ModdingAPI::Exposed::NodeCanvas::Framework::Node* Create(ModdingAPI::Exposed::NodeCanvas::Framework::Graph* targetGraph, ModdingAPI::Exposed::System::Type* nodeType, ModdingAPI::Exposed::UnityEngine::Vector2 pos) {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::Node*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Graph*, ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E57170))(targetGraph, nodeType, pos);
  }
  static inline bool IsNewConnectionAllowed(ModdingAPI::Exposed::NodeCanvas::Framework::Node* sourceNode, ModdingAPI::Exposed::NodeCanvas::Framework::Node* targetNode, ModdingAPI::Exposed::NodeCanvas::Framework::Connection* refConnection) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::NodeCanvas::Framework::Connection*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E58440))(sourceNode, targetNode, refConnection);
  }
  static inline bool AreNodesConnected(ModdingAPI::Exposed::NodeCanvas::Framework::Node* a, ModdingAPI::Exposed::NodeCanvas::Framework::Node* b) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E58680))(a, b);
  }
};
}