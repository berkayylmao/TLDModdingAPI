// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed {
struct __Panel_Debug_Il2CppStaticFields {
};

struct __Panel_Debug_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __Panel_Debug_Il2CppClass {
  Il2CppClass_1 _1;
  __Panel_Debug_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Panel_Debug_Il2CppVtbl vtbl;
};

class Panel_Debug {
public:
  // Il2Cpp fields:
  __Panel_Debug_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::UnityEngine::Texture* m_DebugAiBackgroundTexture;
  ModdingAPI::Exposed::ConsoleComboBox_array* m_ComboBoxes;
  ModdingAPI::Exposed::Panel_Debug::DebugElement_array* m_Elements;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* m_SetDictionary;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_SetNames;
  float m_MenuItemSpacing;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_LocationList;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* m_LocationLookup;

  // Member methods:
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BFFEB0))(this);
  }
  void InitializeSet() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C02720))(this);
  }
  void Enable(bool enable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C02730))(this, enable);
  }
  bool IsEnabled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x165DF10))(this);
  }
  void OnCancel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C02870))(this);
  }
  void OnBack() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C02880))(this);
  }
  void ExitDebugPanel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C02870))(this);
  }
  void SetLineActive(int32_t index, bool state) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C02910))(this, index, state);
  }
  bool ApplyToggleVsync(ModdingAPI::Exposed::ConsoleComboBox* comboBox) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, ModdingAPI::Exposed::ConsoleComboBox*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C02B10))(this, comboBox);
  }
  ModdingAPI::Exposed::System::String_array* PopulateAchievements() {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C02CA0))(this);
  }
  bool UnlockAchievement(ModdingAPI::Exposed::ConsoleComboBox* comboBox) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, ModdingAPI::Exposed::ConsoleComboBox*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C02E30))(this, comboBox);
  }
  bool UnlockEpisode(ModdingAPI::Exposed::ConsoleComboBox* comboBox) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, ModdingAPI::Exposed::ConsoleComboBox*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C02FA0))(this, comboBox);
  }
  ModdingAPI::Exposed::System::String_array* PopulateLoadZoneOptions() {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C03220))(this);
  }
  ModdingAPI::Exposed::System::String_array* PopulateLoadInteriorOptions() {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C03810))(this);
  }
  void GenerateLocationLookup() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C059F0))(this);
  }
  void GenerateLocationList() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C06420))(this);
  }
  ModdingAPI::Exposed::System::String_array* PopulateTimelineOptionsToArray() {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C06850))(this);
  }
  ModdingAPI::Exposed::System::String_array* PopulateLoadLocationOptions() {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C06BB0))(this);
  }
  bool ApplyLoadLocationLoad(ModdingAPI::Exposed::ConsoleComboBox* comboBox) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, ModdingAPI::Exposed::ConsoleComboBox*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(this, comboBox);
  }
  bool ApplyShowTODSlider(ModdingAPI::Exposed::ConsoleComboBox* comboBox) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, ModdingAPI::Exposed::ConsoleComboBox*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C06C40))(this, comboBox);
  }
  ModdingAPI::Exposed::System::String_array* PopulateMovieOptions() {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C06D00))(this);
  }
  bool ApplyPlayMovie(ModdingAPI::Exposed::ConsoleComboBox* comboBox) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, ModdingAPI::Exposed::ConsoleComboBox*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C06D90))(this, comboBox);
  }
  bool ApplyPlayTimeline(ModdingAPI::Exposed::ConsoleComboBox* comboBox) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, ModdingAPI::Exposed::ConsoleComboBox*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C06E40))(this, comboBox);
  }
  bool ApplyShowDaysSurvived(ModdingAPI::Exposed::ConsoleComboBox* comboBox) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, ModdingAPI::Exposed::ConsoleComboBox*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C070E0))(this, comboBox);
  }
  bool Toggle4DON(ModdingAPI::Exposed::ConsoleComboBox* comboBox) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, ModdingAPI::Exposed::ConsoleComboBox*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C071A0))(this, comboBox);
  }
  bool OverrideDay4DON(ModdingAPI::Exposed::ConsoleComboBox* comboBox) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, ModdingAPI::Exposed::ConsoleComboBox*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C072B0))(this, comboBox);
  }
  bool TransitionToDay4DON(ModdingAPI::Exposed::ConsoleComboBox* comboBox) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, ModdingAPI::Exposed::ConsoleComboBox*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C073E0))(this, comboBox);
  }
  bool CompleteTimer4DON(ModdingAPI::Exposed::ConsoleComboBox* comboBox) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, ModdingAPI::Exposed::ConsoleComboBox*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C074A0))(this, comboBox);
  }
  bool ResetBadgeProgress4DON(ModdingAPI::Exposed::ConsoleComboBox* comboBox) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, ModdingAPI::Exposed::ConsoleComboBox*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C07580))(this, comboBox);
  }
  bool DisableAimBreathing(ModdingAPI::Exposed::ConsoleComboBox* comboBox) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, ModdingAPI::Exposed::ConsoleComboBox*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C07660))(this, comboBox);
  }
  bool DisableAimSway(ModdingAPI::Exposed::ConsoleComboBox* comboBox) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, ModdingAPI::Exposed::ConsoleComboBox*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C07720))(this, comboBox);
  }
  bool DisableAimStamina(ModdingAPI::Exposed::ConsoleComboBox* comboBox) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, ModdingAPI::Exposed::ConsoleComboBox*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C077E0))(this, comboBox);
  }
  bool DisableAimShake(ModdingAPI::Exposed::ConsoleComboBox* comboBox) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, ModdingAPI::Exposed::ConsoleComboBox*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C078A0))(this, comboBox);
  }
  bool DisableAmbientSway(ModdingAPI::Exposed::ConsoleComboBox* comboBox) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, ModdingAPI::Exposed::ConsoleComboBox*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C07960))(this, comboBox);
  }
  bool DisableAimDepthOfField(ModdingAPI::Exposed::ConsoleComboBox* comboBox) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, ModdingAPI::Exposed::ConsoleComboBox*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C07A20))(this, comboBox);
  }
  bool DisableAllAimingMotion(ModdingAPI::Exposed::ConsoleComboBox* comboBox) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*, ModdingAPI::Exposed::ConsoleComboBox*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C07C10))(this, comboBox);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Debug*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C07CE0))(this);
  }

  // Static methods:
  static inline ModdingAPI::Exposed::System::Collections::Generic::List_T_* PopulateTimelineOptions() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C068E0))();
  }
};
}