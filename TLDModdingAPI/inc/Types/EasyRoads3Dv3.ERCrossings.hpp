// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Vector3.hpp"


namespace ModdingAPI::Exposed::EasyRoads3Dv3 {
struct __ERCrossings_Il2CppStaticFields {
};

struct __ERCrossings_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __ERCrossings_Il2CppClass {
  Il2CppClass_1 _1;
  __ERCrossings_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __ERCrossings_Il2CppVtbl vtbl;
};

class ERCrossings {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C89708;
  static inline    ERCrossings* _pStaticObjectInstance = nullptr;

public:
// Singleton object getter:
  static inline ERCrossings* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (ERCrossings**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

  // Il2Cpp fields:
  __ERCrossings_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* startConnectionV3;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* endConnectionV3;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftConnectionV3;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightConnectionV3;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* startConnectionUV;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* endConnectionUV;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftConnectionUV;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightConnectionUV;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* startConnectionTris;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* endConnectionTris;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftConnectionTris;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightConnectionTris;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftSidewalkStartV3;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightSidewalkStartV3;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftSidewalkEndV3;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightSidewalkEndV3;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftSidewalkStartUV;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightSidewalkStartUV;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftSidewalkEndUV;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightSidewalkEndUV;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftSidewalkLeftV3;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftSidewalkRightV3;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightSidewalkLeftV3;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightSidewalkRightV3;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftSidewalkLeftUV;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftSidewalkRightUV;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightSidewalkLeftUV;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightSidewalkRightUV;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftSidewalkStartTris;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightSidewalkStartTris;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftSidewalkEndTris;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightSidewalkEndTris;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftSidewalkLeftTris;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftSidewalkRightTris;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightSidewalkLeftTris;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightSidewalkRightTris;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* uvArrayFront;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* uvArrayBack;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* uvArrayLeft;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* uvArrayRight;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* OQOCCQDCCO;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* ODCDCOODCQ;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* OCDCDQQCDD;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* OCCDCQDDDD;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* OQCQCCCQQC;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* OOOCCCCODQ;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* OCDDDQCCOO;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* ODQQCQDOQC;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* OQOCCQDCCOStart;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* ODCDCOODCQStart;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* OCDCDQQCDDStart;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* OCCDCQDDDDStart;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* OQCQCCCQQCStart;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* OOOCCCCODQStart;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* OCDDDQCCOOStart;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* ODQQCQDOQCStart;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* frontLeftRoadInts;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* frontRightRoadInts;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* backLeftRoadInts;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* backRightRoadInts;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftLeftRoadInts;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftRightRoadInts;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightLeftRoadInts;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightRightRoadInts;
  int32_t leftStartSidewalkCornerInt;
  int32_t rightStartSidewalkCornerInt;
  int32_t leftEndSidewalkCornerInt;
  int32_t rightEndSidewalkCornerInt;
  int32_t leftLeftSidewalkCornerInt;
  int32_t rightLeftSidewalkCornerInt;
  int32_t leftRightSidewalkCornerInt;
  int32_t rightRightSidewalkCornerInt;
  ModdingAPI::Exposed::UnityEngine::Vector3_array* sidewalkControlPoints;
  ModdingAPI::Exposed::System::Boolean_array* sidewalkControlStatus;
  bool copySettingsFlag;
  bool generalSettingsFlag;
  bool connectionSettingsFlag;
  bool cornerSettingsFlag;
  bool sidewalkSettingsFlag;
  ModdingAPI::Exposed::System::String_array* QDOOOQOOQQQQD;
  int32_t selectedConnection;
  float startAngle;
  bool roundedCorners;
  float roundingRadius;
  int32_t roundingSegments;
  float innerSegmentDistance;
  bool tCrossing;
  bool tStraightBending;
  bool oldTCrossing;
  int32_t tCrossingLeftRight;
  int32_t oldtCrossingLeftRight;
  int32_t geometryType;
  float resolution;
  bool includeSidewalks;
  bool defaultSidewalkEnabledStatus;
  bool planarUVs;
  float planarTiling;
  bool isSceneObject;
  int32_t connectionHandling;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadTypesDynamic;
  int32_t frontRoadTypeInt;
  double frontRoadTypeID;
  float frontRoadWidth;
  ModdingAPI::Exposed::UnityEngine::Material* frontMaterial;
  ModdingAPI::Exposed::UnityEngine::Material* frontRoadMaterial;
  float frontRoadUVTiling;
  int32_t backRoadTypeInt;
  double backRoadTypeID;
  float backRoadWidth;
  ModdingAPI::Exposed::UnityEngine::Material* backMaterial;
  ModdingAPI::Exposed::UnityEngine::Material* backRoadMaterial;
  float backRoadUVTiling;
  int32_t leftRoadTypeInt;
  double leftRoadTypeID;
  float leftRoadWidth;
  ModdingAPI::Exposed::UnityEngine::Material* leftMaterial;
  ModdingAPI::Exposed::UnityEngine::Material* leftRoadMaterial;
  float leftRoadUVTiling;
  int32_t rightRoadTypeInt;
  double rightRoadTypeID;
  float rightRoadWidth;
  ModdingAPI::Exposed::UnityEngine::Material* rightMaterial;
  ModdingAPI::Exposed::UnityEngine::Material* rightRoadMaterial;
  float rightRoadUVTiling;
  int32_t selectedRoadType;
  bool uniformCornersFlag;
  int32_t selectedCorner;
  int32_t selectedCornerPreset;
  System_String* cornerPresetName;
  int32_t selectedSidewalkPreset;
  System_String* sidewalkPresetName;
  int32_t OQDOOOQODCCorner;
  ModdingAPI::Exposed::UnityEngine::Vector3 leftBottom;
  ModdingAPI::Exposed::UnityEngine::Vector3 rightBottom;
  ModdingAPI::Exposed::UnityEngine::Vector3 leftTop;
  ModdingAPI::Exposed::UnityEngine::Vector3 rightTop;
  ModdingAPI::Exposed::UnityEngine::Vector3 frontCenter;
  ModdingAPI::Exposed::UnityEngine::Vector3 backCenter;
  ModdingAPI::Exposed::UnityEngine::Vector3 leftCenter;
  ModdingAPI::Exposed::UnityEngine::Vector3 rightCenter;
  int32_t prefabId;
  ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* prefabScript;
  ModdingAPI::Exposed::EasyRoads3Dv3::QDOODOQQDQODD* connectionElement;
  int32_t crossingOuterElement;
  System_String* crossingName;
  bool guiChanged;
  bool includeSidewalkChangeFlag;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* debugVecs;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* normalPairs;
  float maxConnectionWidth;

  // Member methods:
  void ODCQOCQDOO() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4AFBF0))(this);
  }
  bool UpdateToRoadType(ModdingAPI::Exposed::EasyRoads3Dv3::QDQDOOQQDQODD* sourcePreset, ModdingAPI::Exposed::System::Collections::Generic::List_T_* updatedRoads) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*, ModdingAPI::Exposed::EasyRoads3Dv3::QDQDOOQQDQODD*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4AFC00))(this, sourcePreset, updatedRoads);
  }
  bool RoadIsUpdated(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* rd, ModdingAPI::Exposed::System::Collections::Generic::List_T_* updatedRoads) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4B0E50))(this, rd, updatedRoads);
  }
  int32_t SetRoadTypeInt(double id) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4B1020))(this, id);
  }
  void OOOQQCCQQC(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings* source) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4B11E0))(this, source);
  }
  void OODQDDCQDC() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4B34A0))(this);
  }
  void OODDODOQCQ(bool sidewalkSceneHandleFlag, bool rebuildRoads) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4B4190))(this, sidewalkSceneHandleFlag, rebuildRoads);
  }
  void OQOQQCDODO() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void OODOQQQCDD(bool rebuildRoads) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4B5700))(this, rebuildRoads);
  }
  void ODQDCQOQQC(int32_t el, ModdingAPI::Exposed::System::Collections::Generic::List_T_* trIntArray, ModdingAPI::Exposed::System::Collections::Generic::List_T_* uvArray, ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftSidewalkIntArray, ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightSidewalkIntArray, int32_t startend) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*, int32_t, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4B9280))(this, el, trIntArray, uvArray, leftSidewalkIntArray, rightSidewalkIntArray, startend);
  }
  void OQCQCQDDCD(int32_t el, ModdingAPI::Exposed::UnityEngine::Material* roadMaterial, int32_t leftCorner, int32_t rightCorner, int32_t leftVecCount, int32_t rightVecCount) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*, int32_t, ModdingAPI::Exposed::UnityEngine::Material*, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4BA0C0))(this, el, roadMaterial, leftCorner, rightCorner, leftVecCount, rightVecCount);
  }
  void OQDQDQOQDO(ModdingAPI::Exposed::System::Collections::Generic::List_T_* meshVecs, ModdingAPI::Exposed::System::Collections::Generic::List_T_* connectionVecInts, ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadShapeVecs, ModdingAPI::Exposed::System::Collections::Generic::List_T_* vecArrays, ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftSidewalkArray, ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightSidewalkArray, int32_t connectionElement, int32_t startend) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4BB200))(this, meshVecs, connectionVecInts, roadShapeVecs, vecArrays, leftSidewalkArray, rightSidewalkArray, connectionElement, startend);
  }
  void OCQCDCQDOD() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4BC750))(this);
  }
  void OQOOOCDQQO(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularBase* scr, int32_t el) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularBase*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4BE050))(this, scr, el);
  }
  void OCOCOODCCO() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4BF640))(this);
  }
  void OOQCCDCDCO(int32_t el) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4C0110))(this, el);
  }
  void ODCOCDDOCC() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4C1320))(this);
  }
  void ODDQDQDQQC() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4C1970))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4C1B80))(this);
  }

  // Static methods:
  static inline void OCCCQDQOOD(ModdingAPI::Exposed::System::Collections::Generic::List_T_* sourceVecs, ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadShapeVecs, ModdingAPI::Exposed::UnityEngine::Vector3 centerPoint, ModdingAPI::Exposed::UnityEngine::Vector3 startPoint, float halfWayDistance) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4BC070))(sourceVecs, roadShapeVecs, centerPoint, startPoint, halfWayDistance);
  }
  static inline System_String* GetRoadShapeVecString(ModdingAPI::Exposed::System::Collections::Generic::List_T_* vecs, ModdingAPI::Exposed::System::Collections::Generic::List_T_* lvecs, ModdingAPI::Exposed::System::Collections::Generic::List_T_* rvecs, int32_t matchCount) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4BC310))(vecs, lvecs, rvecs, matchCount);
  }
};
}