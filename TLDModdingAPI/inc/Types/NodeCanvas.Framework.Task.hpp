// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::NodeCanvas::Framework {
struct __Task_Il2CppStaticFields {
};

struct __Task_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_NodeCanvas_Framework_ISubParametersContainer_GetSubParameters;
  VirtualInvokeData _5_Duplicate;
  VirtualInvokeData _6_OnCreate;
  VirtualInvokeData _7_OnValidate;
  VirtualInvokeData _8_get_agentType;
  VirtualInvokeData _9_get_info;
  VirtualInvokeData _10_OnInit;
  VirtualInvokeData _11_OnDrawGizmos;
  VirtualInvokeData _12_OnDrawGizmosSelected;
};

struct __Task_Il2CppClass {
  Il2CppClass_1 _1;
  __Task_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Task_Il2CppVtbl vtbl;
};

class Task {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C6DD98;
  static inline    __Task_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __Task_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__Task_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __Task_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  bool _isDisabled;
  ModdingAPI::Exposed::NodeCanvas::Framework::Internal::TaskAgentParameter* overrideAgent;
  ModdingAPI::Exposed::NodeCanvas::Framework::IBlackboard* _blackboard;
  ModdingAPI::Exposed::NodeCanvas::Framework::ITaskSystem* _ownerSystem;
  ModdingAPI::Exposed::UnityEngine::Component* current;
  System_String* _taskName;
  System_String* _taskDescription;
  System_String* _obsoleteInfo;
  System_String* _firstWarningMessage_k__BackingField;

  // Member methods:
  ModdingAPI::Exposed::NodeCanvas::Framework::BBParameter_array* NodeCanvas::Framework::ISubParametersContainer::GetSubParameters() {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::BBParameter_array*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E59A00))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  ModdingAPI::Exposed::NodeCanvas::Framework::Task* Duplicate(ModdingAPI::Exposed::NodeCanvas::Framework::ITaskSystem* newOwnerSystem) {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::Task*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*, ModdingAPI::Exposed::NodeCanvas::Framework::ITaskSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E59C80))(this, newOwnerSystem);
  }
  void OnCreate(ModdingAPI::Exposed::NodeCanvas::Framework::ITaskSystem* ownerSystem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*, ModdingAPI::Exposed::NodeCanvas::Framework::ITaskSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, ownerSystem);
  }
  void OnValidate(ModdingAPI::Exposed::NodeCanvas::Framework::ITaskSystem* ownerSystem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*, ModdingAPI::Exposed::NodeCanvas::Framework::ITaskSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, ownerSystem);
  }
  void SetOwnerSystem(ModdingAPI::Exposed::NodeCanvas::Framework::ITaskSystem* newOwnerSystem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*, ModdingAPI::Exposed::NodeCanvas::Framework::ITaskSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E59DB0))(this, newOwnerSystem);
  }
  ModdingAPI::Exposed::NodeCanvas::Framework::ITaskSystem* get_ownerSystem() {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::ITaskSystem*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110B0))(this);
  }
  void set_ownerSystem(ModdingAPI::Exposed::NodeCanvas::Framework::ITaskSystem* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*, ModdingAPI::Exposed::NodeCanvas::Framework::ITaskSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110C0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Component* get_ownerAgent() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Component*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E59E80))(this);
  }
  ModdingAPI::Exposed::NodeCanvas::Framework::IBlackboard* get_ownerBlackboard() {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::IBlackboard*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E59F80))(this);
  }
  float get_ownerElapsedTime() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5A020))(this);
  }
  bool get_isActive() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5A0C0))(this);
  }
  void set_isActive(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5A0D0))(this, value);
  }
  System_String* get_obsolete() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5A0E0))(this);
  }
  System_String* get_name() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5A1E0))(this);
  }
  System_String* get_description() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5A330))(this);
  }
  ModdingAPI::Exposed::System::Type* get_agentType() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this);
  }
  System_String* get_summaryInfo() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5A430))(this);
  }
  System_String* get_info() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5A630))(this);
  }
  System_String* get_agentInfo() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5A640))(this);
  }
  bool get_agentIsOverride() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9451E0))(this);
  }
  void set_agentIsOverride(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5A6E0))(this, value);
  }
  System_String* get_overrideAgentParameterName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5A900))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Component* get_agent() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Component*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5A910))(this);
  }
  ModdingAPI::Exposed::NodeCanvas::Framework::IBlackboard* get_blackboard() {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::IBlackboard*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110A0))(this);
  }
  void set_blackboard(ModdingAPI::Exposed::NodeCanvas::Framework::IBlackboard* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*, ModdingAPI::Exposed::NodeCanvas::Framework::IBlackboard*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5AA20))(this, value);
  }
  System_String* get_firstWarningMessage() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A440))(this);
  }
  void set_firstWarningMessage(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A450))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Coroutine* StartCoroutine(ModdingAPI::Exposed::System::Collections::IEnumerator* routine) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Coroutine*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*, ModdingAPI::Exposed::System::Collections::IEnumerator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E589F0))(this, routine);
  }
  void StopCoroutine(ModdingAPI::Exposed::UnityEngine::Coroutine* routine) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*, ModdingAPI::Exposed::UnityEngine::Coroutine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E58A20))(this, routine);
  }
  void SendEvent(ModdingAPI::Exposed::ParadoxNotion::EventData* eventData) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*, ModdingAPI::Exposed::ParadoxNotion::EventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5AAA0))(this, eventData);
  }
  System_String* OnInit() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this);
  }
  bool Set(ModdingAPI::Exposed::UnityEngine::Component* newAgent, ModdingAPI::Exposed::NodeCanvas::Framework::IBlackboard* newBB) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*, ModdingAPI::Exposed::UnityEngine::Component*, ModdingAPI::Exposed::NodeCanvas::Framework::IBlackboard*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5ABB0))(this, newAgent, newBB);
  }
  bool Initialize(ModdingAPI::Exposed::UnityEngine::Component* newAgent) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*, ModdingAPI::Exposed::UnityEngine::Component*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5B080))(this, newAgent);
  }
  bool InitializeAttributes(ModdingAPI::Exposed::UnityEngine::Component* newAgent) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*, ModdingAPI::Exposed::UnityEngine::Component*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5B380))(this, newAgent);
  }
  bool Error(System_String* error) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5B6B0))(this, error);
  }
  void RegisterEvent(System_String* eventName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5B7E0))(this, eventName);
  }
  void RegisterEvents(ModdingAPI::Exposed::System::String_array* eventNames) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*, ModdingAPI::Exposed::System::String_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5B8E0))(this, eventNames);
  }
  void UnRegisterEvent(System_String* eventName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5BAA0))(this, eventName);
  }
  void UnRegisterEvents(ModdingAPI::Exposed::System::String_array* eventNames) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*, ModdingAPI::Exposed::System::String_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5BCB0))(this, eventNames);
  }
  void UnRegisterAllEvents() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5BDF0))(this);
  }
  System_String* GetWarning() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5BF20))(this);
  }
  System_String* Internal_GetWarning() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5BF40))(this);
  }
  System_String* ToString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5C4D0))(this);
  }
  void OnDrawGizmos() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void OnDrawGizmosSelected() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }

  // Static methods:
  static inline ModdingAPI::Exposed::NodeCanvas::Framework::Task* Create(ModdingAPI::Exposed::System::Type* type, ModdingAPI::Exposed::NodeCanvas::Framework::ITaskSystem* newOwnerSystem) {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::Task*(__fastcall*)(ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::NodeCanvas::Framework::ITaskSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E59B00))(type, newOwnerSystem);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Component* TransformAgent(ModdingAPI::Exposed::UnityEngine::Component* input, ModdingAPI::Exposed::System::Type* type) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Component*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Component*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E5AE90))(input, type);
  }
};
}