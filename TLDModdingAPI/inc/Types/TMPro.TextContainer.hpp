// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Rect.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector4.hpp"


namespace ModdingAPI::Exposed::TMPro {
struct __TextContainer_Il2CppStaticFields {
  ModdingAPI::Exposed::UnityEngine::Vector2 k_defaultSize;
};

struct __TextContainer_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_Awake;
  VirtualInvokeData _5_OnEnable;
  VirtualInvokeData _6_Start;
  VirtualInvokeData _7_OnDisable;
  VirtualInvokeData _8_OnDestroy;
  VirtualInvokeData _9_IsActive;
  VirtualInvokeData _10_OnRectTransformDimensionsChange;
  VirtualInvokeData _11_OnBeforeTransformParentChanged;
  VirtualInvokeData _12_OnTransformParentChanged;
  VirtualInvokeData _13_OnDidApplyAnimationProperties;
  VirtualInvokeData _14_OnCanvasGroupChanged;
  VirtualInvokeData _15_OnCanvasHierarchyChanged;
  VirtualInvokeData _16_IsDestroyed;
};

struct __TextContainer_Il2CppClass {
  Il2CppClass_1 _1;
  __TextContainer_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __TextContainer_Il2CppVtbl vtbl;
};

class TextContainer {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C26C58;
  static inline    __TextContainer_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __TextContainer_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__TextContainer_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __TextContainer_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  bool m_hasChanged;
  ModdingAPI::Exposed::UnityEngine::Vector2 m_pivot;
  int32_t m_anchorPosition;
  ModdingAPI::Exposed::UnityEngine::Rect m_rect;
  bool m_isDefaultWidth;
  bool m_isDefaultHeight;
  bool m_isAutoFitting;
  ModdingAPI::Exposed::UnityEngine::Vector3_array* m_corners;
  ModdingAPI::Exposed::UnityEngine::Vector3_array* m_worldCorners;
  ModdingAPI::Exposed::UnityEngine::Vector4 m_margins;
  ModdingAPI::Exposed::UnityEngine::RectTransform* m_rectTransform;
  ModdingAPI::Exposed::TMPro::TextMeshPro* m_textMeshPro;

  // Member methods:
  bool get_hasChanged() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x318510))(this);
  }
  void set_hasChanged(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5161B0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 get_pivot() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB3750))(this);
  }
  void set_pivot(ModdingAPI::Exposed::UnityEngine::Vector2 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB3770))(this, value);
  }
  int32_t get_anchorPosition() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x37AAF0))(this);
  }
  void set_anchorPosition(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB3880))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Rect get_rect() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Rect(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310F10))(this);
  }
  void set_rect(ModdingAPI::Exposed::UnityEngine::Rect value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*, ModdingAPI::Exposed::UnityEngine::Rect)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB3A10))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 get_size() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB3A70))(this);
  }
  void set_size(ModdingAPI::Exposed::UnityEngine::Vector2 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB3A90))(this, value);
  }
  float get_width() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB3BB0))(this);
  }
  void set_width(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB3BC0))(this, value);
  }
  float get_height() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB3C10))(this);
  }
  void set_height(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB3C20))(this, value);
  }
  bool get_isDefaultWidth() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F6810))(this);
  }
  bool get_isDefaultHeight() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x921400))(this);
  }
  bool get_isAutoFitting() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA11E00))(this);
  }
  void set_isAutoFitting(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB3C70))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3_array* get_corners() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3_array*(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319960))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3_array* get_worldCorners() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3_array*(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319980))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector4 get_margins() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector4(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F49C0))(this);
  }
  void set_margins(ModdingAPI::Exposed::UnityEngine::Vector4 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*, ModdingAPI::Exposed::UnityEngine::Vector4)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB3C80))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::RectTransform* get_rectTransform() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::RectTransform*(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB3DF0))(this);
  }
  ModdingAPI::Exposed::TMPro::TextMeshPro* get_textMeshPro() {
    return reinterpret_cast<ModdingAPI::Exposed::TMPro::TextMeshPro*(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB3EC0))(this);
  }
  void Awake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB3F90))(this);
  }
  void OnEnable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB40B0))(this);
  }
  void OnDisable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void OnContainerChanged() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB40C0))(this);
  }
  void OnRectTransformDimensionsChange() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB4380))(this);
  }
  void SetRect(ModdingAPI::Exposed::UnityEngine::Vector2 size) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB4860))(this, size);
  }
  void UpdateCorners() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB48B0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 GetPivot(int32_t anchor) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB4B90))(this, anchor);
  }
  int32_t GetAnchorPosition(ModdingAPI::Exposed::UnityEngine::Vector2 pivot) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB4D40))(this, pivot);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TextContainer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB50D0))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Vector2> k_defaultSize = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Vector2>(
   []() { return &GetStaticClassInstance()->pStaticFields->k_defaultSize; }
  );

  // Static methods:
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xAB5180))();
  }
};
}