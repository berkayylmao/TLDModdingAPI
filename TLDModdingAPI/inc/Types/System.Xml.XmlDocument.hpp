// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System::Xml {
struct __XmlDocument_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Xml::EmptyEnumerator* EmptyEnumerator;
  ModdingAPI::Exposed::System::Xml::Schema::IXmlSchemaInfo* NotKnownSchemaInfo;
  ModdingAPI::Exposed::System::Xml::Schema::IXmlSchemaInfo* ValidSchemaInfo;
  ModdingAPI::Exposed::System::Xml::Schema::IXmlSchemaInfo* InvalidSchemaInfo;
};

struct __XmlDocument_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_System_ICloneable_Clone;
  VirtualInvokeData _5_System_Collections_IEnumerable_GetEnumerator;
  VirtualInvokeData _6_get_Name;
  VirtualInvokeData _7_get_Value;
  VirtualInvokeData _8_set_Value;
  VirtualInvokeData _9_get_NodeType;
  VirtualInvokeData _10_get_ParentNode;
  VirtualInvokeData _11_get_ChildNodes;
  VirtualInvokeData _12_get_PreviousSibling;
  VirtualInvokeData _13_get_NextSibling;
  VirtualInvokeData _14_get_Attributes;
  VirtualInvokeData _15_get_OwnerDocument;
  VirtualInvokeData _16_get_FirstChild;
  VirtualInvokeData _17_get_LastChild;
  VirtualInvokeData _18_get_IsContainer;
  VirtualInvokeData _19_get_LastNode;
  VirtualInvokeData _20_set_LastNode;
  VirtualInvokeData _21_RemoveChild;
  VirtualInvokeData _22_AppendChild;
  VirtualInvokeData _23_AppendChildForLoad;
  VirtualInvokeData _24_IsValidChildType;
  VirtualInvokeData _25_CanInsertAfter;
  VirtualInvokeData _26_get_HasChildNodes;
  VirtualInvokeData _27_CloneNode;
  VirtualInvokeData _28_CopyChildren;
  VirtualInvokeData _29_get_NamespaceURI;
  VirtualInvokeData _30_get_Prefix;
  VirtualInvokeData _31_get_LocalName;
  VirtualInvokeData _32_get_IsReadOnly;
  VirtualInvokeData _33_get_InnerText;
  VirtualInvokeData _34_set_InnerText;
  VirtualInvokeData _35_set_InnerXml;
  VirtualInvokeData _36_get_BaseURI;
  VirtualInvokeData _37_WriteTo;
  VirtualInvokeData _38_WriteContentTo;
  VirtualInvokeData _39_RemoveAll;
  VirtualInvokeData _40_GetPrefixOfNamespace;
  VirtualInvokeData _41_SetParent;
  VirtualInvokeData _42_SetParentForLoad;
  VirtualInvokeData _43_FindChild;
  VirtualInvokeData _44_GetEventArgs;
  VirtualInvokeData _45_BeforeEvent;
  VirtualInvokeData _46_AfterEvent;
  VirtualInvokeData _47_get_IsText;
  VirtualInvokeData _48_get_DocumentType;
  VirtualInvokeData _49_get_Declaration;
  VirtualInvokeData _50_set_XmlResolver;
  VirtualInvokeData _51_CreateCDataSection;
  VirtualInvokeData _52_CreateComment;
  VirtualInvokeData _53_CreateDocumentType;
  VirtualInvokeData _54_CreateDocumentFragment;
  VirtualInvokeData _55_CreateEntityReference;
  VirtualInvokeData _56_CreateProcessingInstruction;
  VirtualInvokeData _57_CreateXmlDeclaration;
  VirtualInvokeData _58_CreateTextNode;
  VirtualInvokeData _59_CreateSignificantWhitespace;
  VirtualInvokeData _60_CreateWhitespace;
  VirtualInvokeData _61_CreateAttribute;
  VirtualInvokeData _62_CreateDefaultAttribute;
  VirtualInvokeData _63_CreateElement;
  VirtualInvokeData _64_Load;
  VirtualInvokeData _65_LoadXml;
};

struct __XmlDocument_Il2CppClass {
  Il2CppClass_1 _1;
  __XmlDocument_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __XmlDocument_Il2CppVtbl vtbl;
};

class XmlDocument {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C6D3F8;
  static inline    XmlDocument* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C3F2A0;
  static inline    __XmlDocument_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline XmlDocument* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (XmlDocument**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __XmlDocument_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__XmlDocument_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __XmlDocument_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::System::Xml::XmlNode* parentNode;
  ModdingAPI::Exposed::System::Xml::XmlImplementation* implementation;
  ModdingAPI::Exposed::System::Xml::DomNameTable* domNameTable;
  ModdingAPI::Exposed::System::Xml::XmlLinkedNode* lastChild;
  ModdingAPI::Exposed::System::Xml::XmlNamedNodeMap* entities;
  ModdingAPI::Exposed::System::Collections::Hashtable* htElementIdMap;
  ModdingAPI::Exposed::System::Collections::Hashtable* htElementIDAttrDecl;
  ModdingAPI::Exposed::System::Xml::Schema::SchemaInfo* schemaInfo;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet* schemas;
  bool reportValidity;
  bool actualLoadingStatus;
  ModdingAPI::Exposed::System::Xml::XmlNodeChangedEventHandler* onNodeInsertingDelegate;
  ModdingAPI::Exposed::System::Xml::XmlNodeChangedEventHandler* onNodeInsertedDelegate;
  ModdingAPI::Exposed::System::Xml::XmlNodeChangedEventHandler* onNodeRemovingDelegate;
  ModdingAPI::Exposed::System::Xml::XmlNodeChangedEventHandler* onNodeRemovedDelegate;
  ModdingAPI::Exposed::System::Xml::XmlNodeChangedEventHandler* onNodeChangingDelegate;
  ModdingAPI::Exposed::System::Xml::XmlNodeChangedEventHandler* onNodeChangedDelegate;
  bool fEntRefNodesPresent;
  bool fCDataNodesPresent;
  bool preserveWhitespace;
  bool isLoading;
  System_String* strDocumentName;
  System_String* strDocumentFragmentName;
  System_String* strCommentName;
  System_String* strTextName;
  System_String* strCDataSectionName;
  System_String* strEntityName;
  System_String* strID;
  System_String* strXmlns;
  System_String* strXml;
  System_String* strSpace;
  System_String* strLang;
  System_String* strEmpty;
  System_String* strNonSignificantWhitespaceName;
  System_String* strSignificantWhitespaceName;
  System_String* strReservedXmlns;
  System_String* strReservedXml;
  System_String* baseURI;
  ModdingAPI::Exposed::System::Xml::XmlResolver* resolver;
  bool bSetResolver;
  Il2CppObject* objLock;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C3050))(this);
  }
  void ::ctor(ModdingAPI::Exposed::System::Xml::XmlImplementation* imp) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlImplementation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C32C0))(this, imp);
  }
  ModdingAPI::Exposed::System::Xml::Schema::SchemaInfo* get_DtdSchemaInfo() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::SchemaInfo*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319980))(this);
  }
  void set_DtdSchemaInfo(ModdingAPI::Exposed::System::Xml::Schema::SchemaInfo* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::Schema::SchemaInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A430))(this, value);
  }
  ModdingAPI::Exposed::System::Xml::XmlName* AddXmlName(System_String* prefix, System_String* localName, System_String* namespaceURI, ModdingAPI::Exposed::System::Xml::Schema::IXmlSchemaInfo* schemaInfo) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlName*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*, System_String*, System_String*, ModdingAPI::Exposed::System::Xml::Schema::IXmlSchemaInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C38D0))(this, prefix, localName, namespaceURI, schemaInfo);
  }
  ModdingAPI::Exposed::System::Xml::XmlName* GetXmlName(System_String* prefix, System_String* localName, System_String* namespaceURI, ModdingAPI::Exposed::System::Xml::Schema::IXmlSchemaInfo* schemaInfo) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlName*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*, System_String*, System_String*, ModdingAPI::Exposed::System::Xml::Schema::IXmlSchemaInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C3900))(this, prefix, localName, namespaceURI, schemaInfo);
  }
  ModdingAPI::Exposed::System::Xml::XmlName* AddAttrXmlName(System_String* prefix, System_String* localName, System_String* namespaceURI, ModdingAPI::Exposed::System::Xml::Schema::IXmlSchemaInfo* schemaInfo) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlName*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*, System_String*, System_String*, ModdingAPI::Exposed::System::Xml::Schema::IXmlSchemaInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C3930))(this, prefix, localName, namespaceURI, schemaInfo);
  }
  bool AddIdInfo(ModdingAPI::Exposed::System::Xml::XmlName* eleName, ModdingAPI::Exposed::System::Xml::XmlName* attrName) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlName*, ModdingAPI::Exposed::System::Xml::XmlName*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C3AD0))(this, eleName, attrName);
  }
  ModdingAPI::Exposed::System::Xml::XmlName* GetIDInfoByElement_(ModdingAPI::Exposed::System::Xml::XmlName* eleName) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlName*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlName*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C3C90))(this, eleName);
  }
  ModdingAPI::Exposed::System::Xml::XmlName* GetIDInfoByElement(ModdingAPI::Exposed::System::Xml::XmlName* eleName) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlName*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlName*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C3DF0))(this, eleName);
  }
  ModdingAPI::Exposed::System::WeakReference* GetElement(ModdingAPI::Exposed::System::Collections::ArrayList* elementList, ModdingAPI::Exposed::System::Xml::XmlElement* elem) {
    return reinterpret_cast<ModdingAPI::Exposed::System::WeakReference*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Collections::ArrayList*, ModdingAPI::Exposed::System::Xml::XmlElement*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C3F60))(this, elementList, elem);
  }
  void AddElementWithId(System_String* id, ModdingAPI::Exposed::System::Xml::XmlElement* elem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*, ModdingAPI::Exposed::System::Xml::XmlElement*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C44C0))(this, id, elem);
  }
  void RemoveElementWithId(System_String* id, ModdingAPI::Exposed::System::Xml::XmlElement* elem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*, ModdingAPI::Exposed::System::Xml::XmlElement*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C4990))(this, id, elem);
  }
  ModdingAPI::Exposed::System::Xml::XmlNode* CloneNode(bool deep) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlNode*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C4B00))(this, deep);
  }
  int32_t get_NodeType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C4B90))(this);
  }
  ModdingAPI::Exposed::System::Xml::XmlNode* get_ParentNode() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlNode*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this);
  }
  ModdingAPI::Exposed::System::Xml::XmlDocumentType* get_DocumentType() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlDocumentType*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C4BA0))(this);
  }
  ModdingAPI::Exposed::System::Xml::XmlDeclaration* get_Declaration() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlDeclaration*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C4C80))(this);
  }
  ModdingAPI::Exposed::System::Xml::XmlImplementation* get_Implementation() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlImplementation*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335360))(this);
  }
  System_String* get_Name() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319850))(this);
  }
  System_String* get_LocalName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319850))(this);
  }
  ModdingAPI::Exposed::System::Xml::XmlElement* get_DocumentElement() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlElement*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C4D80))(this);
  }
  bool get_IsContainer() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x403F70))(this);
  }
  ModdingAPI::Exposed::System::Xml::XmlLinkedNode* get_LastNode() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlLinkedNode*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110B0))(this);
  }
  void set_LastNode(ModdingAPI::Exposed::System::Xml::XmlLinkedNode* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlLinkedNode*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110C0))(this, value);
  }
  ModdingAPI::Exposed::System::Xml::XmlDocument* get_OwnerDocument() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlDocument*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this);
  }
  void set_Schemas(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A450))(this, value);
  }
  bool get_CanReportValidity() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3199B0))(this);
  }
  bool get_HasSetResolver() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C4E60))(this);
  }
  ModdingAPI::Exposed::System::Xml::XmlResolver* GetResolver() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlResolver*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33E120))(this);
  }
  void set_XmlResolver(ModdingAPI::Exposed::System::Xml::XmlResolver* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlResolver*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C4E70))(this, value);
  }
  bool IsValidChildType(int32_t type) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C5080))(this, type);
  }
  bool HasNodeTypeInPrevSiblings(int32_t nt, ModdingAPI::Exposed::System::Xml::XmlNode* refNode) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, int32_t, ModdingAPI::Exposed::System::Xml::XmlNode*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C5260))(this, nt, refNode);
  }
  bool HasNodeTypeInNextSiblings(int32_t nt, ModdingAPI::Exposed::System::Xml::XmlNode* refNode) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, int32_t, ModdingAPI::Exposed::System::Xml::XmlNode*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C5340))(this, nt, refNode);
  }
  bool CanInsertAfter(ModdingAPI::Exposed::System::Xml::XmlNode* newChild, ModdingAPI::Exposed::System::Xml::XmlNode* refChild) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlNode*, ModdingAPI::Exposed::System::Xml::XmlNode*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C53B0))(this, newChild, refChild);
  }
  ModdingAPI::Exposed::System::Xml::XmlAttribute* CreateAttribute(System_String* name) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlAttribute*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C5590))(this, name);
  }
  void SetDefaultNamespace(System_String* prefix, System_String* localName, System_String* namespaceURI) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C57D0))(this, prefix, localName, namespaceURI);
  }
  ModdingAPI::Exposed::System::Xml::XmlCDataSection* CreateCDataSection(System_String* data) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlCDataSection*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C58B0))(this, data);
  }
  ModdingAPI::Exposed::System::Xml::XmlComment* CreateComment(System_String* data) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlComment*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C5A20))(this, data);
  }
  ModdingAPI::Exposed::System::Xml::XmlDocumentType* CreateDocumentType(System_String* name, System_String* publicId, System_String* systemId, System_String* internalSubset) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlDocumentType*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*, System_String*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C5B80))(this, name, publicId, systemId, internalSubset);
  }
  ModdingAPI::Exposed::System::Xml::XmlDocumentFragment* CreateDocumentFragment() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlDocumentFragment*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C5D10))(this);
  }
  ModdingAPI::Exposed::System::Xml::XmlElement* CreateElement(System_String* name) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlElement*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C5EF0))(this, name);
  }
  void AddDefaultAttributes(ModdingAPI::Exposed::System::Xml::XmlElement* elem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlElement*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C6080))(this, elem);
  }
  ModdingAPI::Exposed::System::Xml::Schema::SchemaElementDecl* GetSchemaElementDecl(ModdingAPI::Exposed::System::Xml::XmlElement* elem) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::SchemaElementDecl*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlElement*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C63B0))(this, elem);
  }
  ModdingAPI::Exposed::System::Xml::XmlAttribute* PrepareDefaultAttribute(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef* attdef, System_String* attrPrefix, System_String* attrLocalname, System_String* attrNamespaceURI) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlAttribute*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*, System_String*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C65E0))(this, attdef, attrPrefix, attrLocalname, attrNamespaceURI);
  }
  ModdingAPI::Exposed::System::Xml::XmlEntityReference* CreateEntityReference(System_String* name) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlEntityReference*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C6740))(this, name);
  }
  ModdingAPI::Exposed::System::Xml::XmlProcessingInstruction* CreateProcessingInstruction(System_String* target, System_String* data) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlProcessingInstruction*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C68A0))(this, target, data);
  }
  ModdingAPI::Exposed::System::Xml::XmlDeclaration* CreateXmlDeclaration(System_String* version, System_String* encoding, System_String* standalone) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlDeclaration*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C6A10))(this, version, encoding, standalone);
  }
  ModdingAPI::Exposed::System::Xml::XmlText* CreateTextNode(System_String* text) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlText*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C6B90))(this, text);
  }
  ModdingAPI::Exposed::System::Xml::XmlSignificantWhitespace* CreateSignificantWhitespace(System_String* text) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlSignificantWhitespace*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C6CF0))(this, text);
  }
  ModdingAPI::Exposed::System::Xml::XmlWhitespace* CreateWhitespace(System_String* text) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlWhitespace*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C6E50))(this, text);
  }
  ModdingAPI::Exposed::System::Xml::XmlAttribute* CreateAttribute(System_String* qualifiedName, System_String* namespaceURI) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlAttribute*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C6FB0))(this, qualifiedName, namespaceURI);
  }
  ModdingAPI::Exposed::System::Xml::XmlElement* CreateElement(System_String* qualifiedName, System_String* namespaceURI) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlElement*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C7140))(this, qualifiedName, namespaceURI);
  }
  ModdingAPI::Exposed::System::Xml::XmlNode* ImportNodeInternal(ModdingAPI::Exposed::System::Xml::XmlNode* node, bool deep) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlNode*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlNode*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C72D0))(this, node, deep);
  }
  void ImportAttributes(ModdingAPI::Exposed::System::Xml::XmlNode* fromElem, ModdingAPI::Exposed::System::Xml::XmlNode* toElem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlNode*, ModdingAPI::Exposed::System::Xml::XmlNode*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C7850))(this, fromElem, toElem);
  }
  void ImportChildren(ModdingAPI::Exposed::System::Xml::XmlNode* fromNode, ModdingAPI::Exposed::System::Xml::XmlNode* toNode, bool deep) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlNode*, ModdingAPI::Exposed::System::Xml::XmlNode*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C79D0))(this, fromNode, toNode, deep);
  }
  ModdingAPI::Exposed::System::Xml::XmlNameTable* get_NameTable() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlNameTable*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C7AA0))(this);
  }
  ModdingAPI::Exposed::System::Xml::XmlAttribute* CreateAttribute(System_String* prefix, System_String* localName, System_String* namespaceURI) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlAttribute*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C7AC0))(this, prefix, localName, namespaceURI);
  }
  ModdingAPI::Exposed::System::Xml::XmlAttribute* CreateDefaultAttribute(System_String* prefix, System_String* localName, System_String* namespaceURI) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlAttribute*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C7C50))(this, prefix, localName, namespaceURI);
  }
  ModdingAPI::Exposed::System::Xml::XmlElement* CreateElement(System_String* prefix, System_String* localName, System_String* namespaceURI) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlElement*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C7DF0))(this, prefix, localName, namespaceURI);
  }
  bool get_IsReadOnly() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(this);
  }
  ModdingAPI::Exposed::System::Xml::XmlNamedNodeMap* get_Entities() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlNamedNodeMap*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C7FA0))(this);
  }
  void set_Entities(ModdingAPI::Exposed::System::Xml::XmlNamedNodeMap* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlNamedNodeMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A410))(this, value);
  }
  bool get_IsLoading() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C80F0))(this);
  }
  void set_IsLoading(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C8100))(this, value);
  }
  bool get_ActualLoadingStatus() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A470))(this);
  }
  ModdingAPI::Exposed::System::Xml::XmlTextReader* SetupReader(ModdingAPI::Exposed::System::Xml::XmlTextReader* tr) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlTextReader*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C8110))(this, tr);
  }
  void Load(ModdingAPI::Exposed::System::Xml::XmlReader* reader) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C8210))(this, reader);
  }
  void LoadXml(System_String* xml) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C8430))(this, xml);
  }
  void set_InnerText(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C87E0))(this, value);
  }
  void set_InnerXml(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C8850))(this, value);
  }
  void WriteTo(ModdingAPI::Exposed::System::Xml::XmlWriter* w) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlWriter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C8870))(this, w);
  }
  void WriteContentTo(ModdingAPI::Exposed::System::Xml::XmlWriter* xw) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlWriter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C8890))(this, xw);
  }
  ModdingAPI::Exposed::System::Xml::XmlNodeChangedEventArgs* GetEventArgs(ModdingAPI::Exposed::System::Xml::XmlNode* node, ModdingAPI::Exposed::System::Xml::XmlNode* oldParent, ModdingAPI::Exposed::System::Xml::XmlNode* newParent, System_String* oldValue, System_String* newValue, int32_t action) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlNodeChangedEventArgs*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlNode*, ModdingAPI::Exposed::System::Xml::XmlNode*, ModdingAPI::Exposed::System::Xml::XmlNode*, System_String*, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C8B10))(this, node, oldParent, newParent, oldValue, newValue, action);
  }
  ModdingAPI::Exposed::System::Xml::XmlNodeChangedEventArgs* GetInsertEventArgsForLoad(ModdingAPI::Exposed::System::Xml::XmlNode* node, ModdingAPI::Exposed::System::Xml::XmlNode* newParent) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlNodeChangedEventArgs*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlNode*, ModdingAPI::Exposed::System::Xml::XmlNode*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C8D00))(this, node, newParent);
  }
  void BeforeEvent(ModdingAPI::Exposed::System::Xml::XmlNodeChangedEventArgs* args) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlNodeChangedEventArgs*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C8EC0))(this, args);
  }
  void AfterEvent(ModdingAPI::Exposed::System::Xml::XmlNodeChangedEventArgs* args) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlNodeChangedEventArgs*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C8F10))(this, args);
  }
  ModdingAPI::Exposed::System::Xml::XmlAttribute* GetDefaultAttribute(ModdingAPI::Exposed::System::Xml::XmlElement* elem, System_String* attrPrefix, System_String* attrLocalname, System_String* attrNamespaceURI) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlAttribute*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlElement*, System_String*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C8F60))(this, elem, attrPrefix, attrLocalname, attrNamespaceURI);
  }
  ModdingAPI::Exposed::System::Xml::XmlEntity* GetEntityNode(System_String* name) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlEntity*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C9230))(this, name);
  }
  System_String* get_BaseURI() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33E100))(this);
  }
  void SetBaseURI(System_String* inBaseURI) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33E110))(this, inBaseURI);
  }
  ModdingAPI::Exposed::System::Xml::XmlNode* AppendChildForLoad(ModdingAPI::Exposed::System::Xml::XmlNode* newChild, ModdingAPI::Exposed::System::Xml::XmlDocument* doc) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlNode*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlDocument*, ModdingAPI::Exposed::System::Xml::XmlNode*, ModdingAPI::Exposed::System::Xml::XmlDocument*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C9330))(this, newChild, doc);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::EmptyEnumerator*> EmptyEnumerator = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::EmptyEnumerator*>(
   []() { return &GetStaticClassInstance()->pStaticFields->EmptyEnumerator; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::IXmlSchemaInfo*> NotKnownSchemaInfo = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::IXmlSchemaInfo*>(
   []() { return &GetStaticClassInstance()->pStaticFields->NotKnownSchemaInfo; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::IXmlSchemaInfo*> ValidSchemaInfo = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::IXmlSchemaInfo*>(
   []() { return &GetStaticClassInstance()->pStaticFields->ValidSchemaInfo; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::IXmlSchemaInfo*> InvalidSchemaInfo = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::IXmlSchemaInfo*>(
   []() { return &GetStaticClassInstance()->pStaticFields->InvalidSchemaInfo; }
  );

  // Static methods:
  static inline void CheckName(System_String* name) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C37D0))(name);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x8C9570))();
  }
};
}