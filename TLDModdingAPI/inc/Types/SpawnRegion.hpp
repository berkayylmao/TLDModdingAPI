// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Quaternion.hpp"


namespace ModdingAPI::Exposed {
struct __SpawnRegion_Il2CppStaticFields {
  ModdingAPI::Exposed::SpawnRegionDataProxy* m_SpawnRegionDataProxy;
  ModdingAPI::Exposed::SpawnDataProxy_array* m_SpawnDataProxyPool;
};

struct __SpawnRegion_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __SpawnRegion_Il2CppClass {
  Il2CppClass_1 _1;
  __SpawnRegion_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __SpawnRegion_Il2CppVtbl vtbl;
};

class SpawnRegion {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C86D10;
  static inline    __SpawnRegion_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __SpawnRegion_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__SpawnRegion_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __SpawnRegion_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SpawnablePrefab;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_AuroraSpawnablePrefab;
  bool m_CanSpawnInBlizzard;
  bool m_OverrideDistanceToCamera;
  bool m_OverrideCameraLineOfSight;
  float m_ChanceActive;
  float m_HoursReRollActive;
  float m_Radius;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_Center;
  float m_TopDownTerrainHeight;
  float m_SpawnHeightCap;
  ModdingAPI::Exposed::WanderRegion* m_WanderRegion;
  int32_t m_MaxSimultaneousSpawnsDayPilgrim;
  int32_t m_MaxSimultaneousSpawnsNightPilgrim;
  float m_MaxRespawnsPerDayPilgrim;
  int32_t m_MaxSimultaneousSpawnsDayVoyageur;
  int32_t m_MaxSimultaneousSpawnsNightVoyageur;
  float m_MaxRespawnsPerDayVoyageur;
  int32_t m_MaxSimultaneousSpawnsDayStalker;
  int32_t m_MaxSimultaneousSpawnsNightStalker;
  float m_MaxRespawnsPerDayStalker;
  int32_t m_MaxSimultaneousSpawnsDayInterloper;
  int32_t m_MaxSimultaneousSpawnsNightInterloper;
  float m_MaxRespawnsPerDayInterloper;
  int32_t m_AiDifficulty;
  System_String* m_PackGroupId;
  int32_t m_AiTypeSpawned;
  bool m_ControlledByRandomSpawner;
  int32_t m_WildlifeMode;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_Spawns;
  int32_t m_NumRespawnsPending;
  float m_ElapasedHoursNextRespawnAllowed;
  float m_ElapsedHoursAtLastActiveReRoll;
  float m_NumHoursBetweenRespawns;
  int32_t m_NumTrapped;
  float m_HoursNextTrapReset;
  ModdingAPI::Exposed::SWS::PathManager_array* m_PathManagers;
  ModdingAPI::Exposed::Den* m_Den;
  int32_t m_SpawnGuidCounter;
  int32_t m_CurrentWaypointPathIndex;
  bool m_StartHasBeenCalled;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_DeferredSpawnsWithRandomPosition;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_DeferredSpawnsWithSavedPosition;
  ModdingAPI::Exposed::System::Collections::Generic::Queue_T_* m_PendingSerializedRespawnInfoQueue;
  int32_t m_DeferredSpawnWildlifeMode;
  bool m_HasBeenDisabledByAurora;
  bool m_WasActiveBeforeAurora;
  int32_t m_AiSubTypeSpawned;
  int32_t m_WolfTypeSpawned;
  int32_t m_AutoCloneIndex;

  // Member methods:
  void Awake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CF8B90))(this);
  }
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CF8CE0))(this);
  }
  void UpdateDeferredDeserializeFromManager() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CF95E0))(this);
  }
  void UpdateFromManager() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CF9610))(this);
  }
  System_String* Serialize() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CF97B0))(this);
  }
  void Deserialize(System_String* text) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFA010))(this, text);
  }
  void RemoveFromSpawnRegion(ModdingAPI::Exposed::BaseAi* bai) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFA370))(this, bai);
  }
  bool CanTrap() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFA5B0))(this);
  }
  void OnTrap() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFA6A0))(this);
  }
  void MaybeReRollActive() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFA6B0))(this);
  }
  void OnAuroraEnabled(bool enabled) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFA8E0))(this, enabled);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3_array* GetWaypointCircuit() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3_array*(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFAB50))(this);
  }
  bool ShouldSleepInDenAfterWaypointLoop() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFAD70))(this);
  }
  float GetDenSleepDurationInHours() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFAEF0))(this);
  }
  ModdingAPI::Exposed::WanderRegion* GetWanderRegion(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    return reinterpret_cast<ModdingAPI::Exposed::WanderRegion*(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFB050))(this, pos);
  }
  ModdingAPI::Exposed::UnityEngine::GameObject* GetClosestActiveSpawn(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GameObject*(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFB2B0))(this, pos);
  }
  void SetRandomWaypointCircuit() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFB570))(this);
  }
  bool HasWoundedWildlife() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFB610))(this);
  }
  void SetActive(bool active) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFB7E0))(this, active);
  }
  int32_t GetNumActiveSpawns() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFBA60))(this);
  }
  int32_t GetCurrentActivePopulation(int32_t wildlifeMode) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFBCA0))(this, wildlifeMode);
  }
  bool SpawnPositionOnScreenTooClose(ModdingAPI::Exposed::UnityEngine::Vector3 spawnPos) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFBE50))(this, spawnPos);
  }
  bool HasSerializedRespawnPending() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFC040))(this);
  }
  ModdingAPI::Exposed::BaseAi* MaybeSpawnPendingSerializedRespawn(int32_t wildlifeMode) {
    return reinterpret_cast<ModdingAPI::Exposed::BaseAi*(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFC0D0))(this, wildlifeMode);
  }
  bool Spawn(int32_t wildlifeMode) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFC360))(this, wildlifeMode);
  }
  bool HasSameWildlifeMode(ModdingAPI::Exposed::BaseAi* baseAi, int32_t wildlifeMode) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFC8C0))(this, baseAi, wildlifeMode);
  }
  void AddActiveSpawns(int32_t numToActivate, int32_t wildlifeMode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFC8E0))(this, numToActivate, wildlifeMode);
  }
  void RemoveActiveSpawns(int32_t numToDeActivate, int32_t wildlifeMode, bool isAdjustingOtherWildlifeMode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, int32_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFC930))(this, numToDeActivate, wildlifeMode, isAdjustingOtherWildlifeMode);
  }
  bool SpawnRegionCloseEnoughForSpawning() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFD100))(this);
  }
  void Respawn(int32_t wildlifeMode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFD210))(this, wildlifeMode);
  }
  bool RespawnAllowed() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFD330))(this);
  }
  int32_t CalculateTargetPopulation() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFD410))(this);
  }
  void AdjustOtherModePopulation() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFD5E0))(this);
  }
  void AdjustActiveSpawnRegionPopulation() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFD640))(this);
  }
  ModdingAPI::Exposed::BaseAi* InstantiateSpawnInternal(int32_t wildlifetype, ModdingAPI::Exposed::UnityEngine::Vector3 pos, ModdingAPI::Exposed::UnityEngine::Quaternion rotation) {
    return reinterpret_cast<ModdingAPI::Exposed::BaseAi*(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, int32_t, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Quaternion)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFDAE0))(this, wildlifetype, pos, rotation);
  }
  ModdingAPI::Exposed::BaseAi* InstantiateSpawnFromSaveData(ModdingAPI::Exposed::SpawnDataProxy* spawnData, int32_t wildlifeMode) {
    return reinterpret_cast<ModdingAPI::Exposed::BaseAi*(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, ModdingAPI::Exposed::SpawnDataProxy*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFDDB0))(this, spawnData, wildlifeMode);
  }
  ModdingAPI::Exposed::BaseAi* InstantiateSpawn(ModdingAPI::Exposed::UnityEngine::Vector3 spawnPos, ModdingAPI::Exposed::UnityEngine::Quaternion spawnRotation, int32_t mode, int32_t wildlifeMode) {
    return reinterpret_cast<ModdingAPI::Exposed::BaseAi*(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Quaternion, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFE280))(this, spawnPos, spawnRotation, mode, wildlifeMode);
  }
  bool PositionValidForSpawn(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFE880))(this, pos);
  }
  bool TryGetSpawnPositionAndRotation(ModdingAPI::Exposed::UnityEngine::Vector3 spawnPos, ModdingAPI::Exposed::UnityEngine::Quaternion spawnRotation) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Quaternion)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFEA00))(this, spawnPos, spawnRotation);
  }
  ModdingAPI::Exposed::BaseAi* InstantiateAndPlaceSpawn(int32_t wildlifeMode) {
    return reinterpret_cast<ModdingAPI::Exposed::BaseAi*(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFEF80))(this, wildlifeMode);
  }
  ModdingAPI::Exposed::BaseAi* AttemptInstantiateAndPlaceSpawnFromSave(int32_t wildlifeMode, ModdingAPI::Exposed::PendingSerializedRespawnInfo* pendingSerializedRespawnInfo) {
    return reinterpret_cast<ModdingAPI::Exposed::BaseAi*(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, int32_t, ModdingAPI::Exposed::PendingSerializedRespawnInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFF2B0))(this, wildlifeMode, pendingSerializedRespawnInfo);
  }
  bool SpawnPositionTooCloseToCamera(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFF550))(this, pos);
  }
  void QueueSerializedRespawnPending(ModdingAPI::Exposed::SpawnDataProxy* saveData) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, ModdingAPI::Exposed::SpawnDataProxy*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFF7D0))(this, saveData);
  }
  void SpawnWithSavedPositions(ModdingAPI::Exposed::System::Collections::Generic::List_T_* spawns, int32_t wildlifeMode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFF950))(this, spawns, wildlifeMode);
  }
  void SpawnWithRandomPositions(ModdingAPI::Exposed::System::Collections::Generic::List_T_* spawns, int32_t wildlifeMode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFFAD0))(this, spawns, wildlifeMode);
  }
  bool CanDoReRoll() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFFC70))(this);
  }
  void MaybeReduceNumTrapped() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFFCB0))(this);
  }
  bool SpawningSupppressedByExperienceMode() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFFDC0))(this);
  }
  void SetBoundingSphereBasedOnWaypoints(int32_t waypointIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1D000A0))(this, waypointIndex);
  }
  int32_t GetMaxSimultaneousSpawnsDay() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1D00210))(this);
  }
  int32_t GetMaxSimultaneousSpawnsNight() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1D004A0))(this);
  }
  float GetNumHoursBetweenRespawns() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1D00800))(this);
  }
  void OnDestroy() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1D00920))(this);
  }
  bool HasDeferredDeserializeCompleted() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1D00A70))(this);
  }
  void UpdateDeferredDeserialize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1D00B20))(this);
  }
  bool IsPredator() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1D00DC0))(this);
  }
  void MaybeSuspendForAurora() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1D00DD0))(this);
  }
  void MaybeResumeAfterAurora() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1D00F40))(this);
  }
  float GetCustomModeMaxRespawnsPerDay() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1D01000))(this);
  }
  int32_t GetCustomModeMaxSpawnsDay() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1D01260))(this);
  }
  int32_t GetCustomModeMaxSpawnsNight() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1D014B0))(this);
  }
  float GetCustomSpawnRegionChanceActiveScale() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1D01700))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1D01FC0))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::SpawnRegionDataProxy*> m_SpawnRegionDataProxy = __CppStaticProperty<ModdingAPI::Exposed::SpawnRegionDataProxy*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_SpawnRegionDataProxy; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::SpawnDataProxy_array*> m_SpawnDataProxyPool = __CppStaticProperty<ModdingAPI::Exposed::SpawnDataProxy_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_SpawnDataProxyPool; }
  );

  // Static methods:
  static inline System_String* GetPrefabNameFromInstanceName(System_String* name) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFD9A0))(name);
  }
  static inline void LogWarning(System_String* output) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFF130))(output);
  }
  static inline void Log(System_String* output) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CFF1F0))(output);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1D02400))();
  }
};
}