// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Quaternion.hpp"


namespace ModdingAPI::Exposed {
struct __AnimatedInteraction_Il2CppStaticFields {
  bool s_ControlFOV;
  bool s_StartResumingFOVRequested;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* s_AnimatedInteractionList;
};

struct __AnimatedInteraction_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __AnimatedInteraction_Il2CppClass {
  Il2CppClass_1 _1;
  __AnimatedInteraction_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __AnimatedInteraction_Il2CppVtbl vtbl;
};

class AnimatedInteraction {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C29EF8;
  static inline    __AnimatedInteraction_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __AnimatedInteraction_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__AnimatedInteraction_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __AnimatedInteraction_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  int32_t m_ControlMode;
  System_String* m_Trigger;
  float m_ApproachAngle;
  float m_ApproachAngleAcceptableOffset;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SyncBone;
  float m_Fov;
  float m_SecondsToSync;
  float m_FovSecondsToSync;
  bool m_SyncPosition;
  bool m_SyncOrientation;
  bool m_SyncPitchFromSyncBone;
  bool m_StartAnimationAfterSync;
  bool m_ApplyRootOrientation;
  bool m_InfiniteInteractions;
  int32_t m_MaxInteractionCount;
  bool m_HandsInWeaponSpace;
  bool m_PropInWeaponSpace;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SpawnedPropPrefab;
  bool m_AddPropToInventoryOnComplete;
  ModdingAPI::Exposed::UnityEngine::GameObject_array* m_AnimatedProps;
  ModdingAPI::Exposed::LocalizedString* m_LocID_Interactable;
  ModdingAPI::Exposed::LocalizedString* m_LocID_NonInteractable;
  int32_t m_AnimationLayersDisabled;
  float m_HipAndShoulderWeight;
  bool m_UseHoverTextColor;
  bool m_OverrideNearPlane;
  float m_NearPlane;
  int32_t m_CompletionAction;
  ModdingAPI::Exposed::BodyHarvest* m_BodyHarvest;
  bool m_InteractionConstrained;
  float m_InteractionConstrainedAngleDegrees;
  bool m_UnequipImmediate;
  bool m_LoadAnimation;
  ModdingAPI::Exposed::FPAnimationState* m_FPAnimationState;
  float m_FatigueCost;
  ModdingAPI::Exposed::LocalizedString* m_LocID_LowFatigueMessage;
  float m_StaminaCost;
  ModdingAPI::Exposed::LocalizedString* m_LocID_LowStaminaMessage;
  ModdingAPI::Exposed::TimelineRef* m_TimelineRef;
  bool m_UseSyncNodeAsTimelineFPAnchor;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_TimelineBindingOverrides;
  ModdingAPI::Exposed::LocalizedString* m_LocID_SprainedWristMessage;
  ModdingAPI::Exposed::LocalizedString* m_LocID_SprainedAnkleMessage;
  bool m_UseLegacyCameraOffset;
  bool m_RadialSync;
  float m_RadialSyncRadius;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SpawnedProp;
  int32_t m_InteractionCount;
  float m_SecondsLeftToSync;
  float m_SecondsLeftToTransitionOut;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_StartPosition;
  float m_OriginalFov;
  ModdingAPI::Exposed::UnityEngine::Quaternion m_StartRotation;
  ModdingAPI::Exposed::UnityEngine::Quaternion m_StartCamRotation;
  ModdingAPI::Exposed::System::Action* m_OnAnimationCompleted;
  bool m_ItemStowed;
  int32_t m_State;
  float m_DesiredFov;
  bool m_HasStartedResumingFOV;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_SyncNodeOriginalPosition;

  // Member methods:
  void Awake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C9DAF0))(this);
  }
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C9DD30))(this);
  }
  bool CheckCompletionActionPossible() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C9DD50))(this);
  }
  bool StartAnimatedInteraction(ModdingAPI::Exposed::System::Action* onAnimationCompleted, bool forceInteraction) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*, ModdingAPI::Exposed::System::Action*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C9DE20))(this, onAnimationCompleted, forceInteraction);
  }
  void OnDestroy() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C9DF20))(this);
  }
  void DoInteraction() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C9DFE0))(this);
  }
  bool ProcessInteraction() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C9E270))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C9E6D0))(this);
  }
  void UpdateDequipping() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C9E9D0))(this);
  }
  void UpdateStowItemInHand() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C9EAD0))(this);
  }
  bool MaybeStowItemInHand() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C9EBD0))(this);
  }
  void OnItemInHandStowed() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17FE270))(this);
  }
  void OnPlayInteractAnimation() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C9EF10))(this);
  }
  void MaybeMoveSyncBoneToRadius() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C9F100))(this);
  }
  void MaybeDisableStaminaRecharge() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C9F550))(this);
  }
  void MaybeEnableStaminaRecharge() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C9F640))(this);
  }
  void MaybeOverrideNearPlane() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C9F730))(this);
  }
  void MaybeResetNearPlane() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C9F830))(this);
  }
  void MaybePopToSync() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C9F920))(this);
  }
  void UpdateTransitionOut() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C9FE90))(this);
  }
  void MaybeSetCameraFov() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA0080))(this);
  }
  void MaybeResumeFov() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA01B0))(this);
  }
  void MaybeBlendToSyncBone() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA0400))(this);
  }
  void MaybeSpawnProp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA09F0))(this);
  }
  void OnTimelineLoaded() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA0EC0))(this);
  }
  void OnTimelineLoadingFailed() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA1050))(this);
  }
  void MaybeTriggerAnimation() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA1100))(this);
  }
  void OnEnterPlaying(bool success) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA15C0))(this, success);
  }
  void DoTriggerAnimation() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA16A0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Animator* GetAnimator(ModdingAPI::Exposed::UnityEngine::GameObject* parent) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Animator*(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA1B30))(this, parent);
  }
  void MaybeAddSpawnedPropToInventory() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA1C50))(this);
  }
  float GetFovTransitionDuration() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA20F0))(this);
  }
  void OnInteractionComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA2110))(this);
  }
  void DoOnInteractionComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA2250))(this);
  }
  System_String* GetHoverText() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA28D0))(this);
  }
  bool RespectContrainsts() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA2990))(this);
  }
  bool CanInteract() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA2C30))(this);
  }
  void MaybePerformCompletionAction() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA2F60))(this);
  }
  void DoBodyHarvest() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA2F80))(this);
  }
  void AddSyncNodeTimelineOverride() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA3110))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AnimatedInteraction*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA3E30))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<bool> s_ControlFOV = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_ControlFOV; }
  );
  static inline __CppStaticProperty<bool> s_StartResumingFOVRequested = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_StartResumingFOVRequested; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*> s_AnimatedInteractionList = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_AnimatedInteractionList; }
  );

  // Static methods:
  static inline bool IsFovControlled() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA32B0))();
  }
  static inline void StartResumingFov() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA3350))();
  }
  static inline void Reset() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA33F0))();
  }
  static inline void DeserializeAll(System_String* serialized) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA34D0))(serialized);
  }
  static inline System_String* SerializeAll() {
    return reinterpret_cast<System_String*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA3780))();
  }
  static inline bool InProgress() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA3C40))();
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1CA3FB0))();
  }
};
}