// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System::Runtime::Serialization {
struct __ObjectHolder_Il2CppStaticFields {
};

struct __ObjectHolder_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __ObjectHolder_Il2CppClass {
  Il2CppClass_1 _1;
  __ObjectHolder_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __ObjectHolder_Il2CppVtbl vtbl;
};

class ObjectHolder {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C84E98;
  static inline    __ObjectHolder_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __ObjectHolder_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__ObjectHolder_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __ObjectHolder_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  Il2CppObject* m_object;
  int64_t m_id;
  int32_t m_missingElementsRemaining;
  int32_t m_missingDecendents;
  ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo* m_serInfo;
  ModdingAPI::Exposed::System::Runtime::Serialization::ISerializationSurrogate* m_surrogate;
  ModdingAPI::Exposed::System::Runtime::Serialization::FixupHolderList* m_missingElements;
  ModdingAPI::Exposed::System::Runtime::Serialization::LongList* m_dependentObjects;
  ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder* m_next;
  int32_t m_flags;
  bool m_markForFixupWhenAvailable;
  ModdingAPI::Exposed::System::Runtime::Serialization::ValueTypeFixupInfo* m_valueFixup;
  ModdingAPI::Exposed::System::Runtime::Serialization::TypeLoadExceptionHolder* m_typeLoad;
  bool m_reachable;

  // Member methods:
  void ::ctor(int64_t objID) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA427C0))(this, objID);
  }
  void ::ctor(Il2CppObject* obj, int64_t objID, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo* info, ModdingAPI::Exposed::System::Runtime::Serialization::ISerializationSurrogate* surrogate, int64_t idOfContainingObj, ModdingAPI::Exposed::System::Reflection::FieldInfo* field, ModdingAPI::Exposed::System::Int32_array* arrayIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*, Il2CppObject*, int64_t, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo*, ModdingAPI::Exposed::System::Runtime::Serialization::ISerializationSurrogate*, int64_t, ModdingAPI::Exposed::System::Reflection::FieldInfo*, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA42880))(this, obj, objID, info, surrogate, idOfContainingObj, field, arrayIndex);
  }
  void ::ctor(System_String* obj, int64_t objID, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo* info, ModdingAPI::Exposed::System::Runtime::Serialization::ISerializationSurrogate* surrogate, int64_t idOfContainingObj, ModdingAPI::Exposed::System::Reflection::FieldInfo* field, ModdingAPI::Exposed::System::Int32_array* arrayIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*, System_String*, int64_t, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo*, ModdingAPI::Exposed::System::Runtime::Serialization::ISerializationSurrogate*, int64_t, ModdingAPI::Exposed::System::Reflection::FieldInfo*, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA42B70))(this, obj, objID, info, surrogate, idOfContainingObj, field, arrayIndex);
  }
  void IncrementDescendentFixups(int32_t amount) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA42D40))(this, amount);
  }
  void DecrementFixupsRemaining(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectManager* manager) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*, ModdingAPI::Exposed::System::Runtime::Serialization::ObjectManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA42D50))(this, manager);
  }
  void RemoveDependency(int64_t id) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA42DC0))(this, id);
  }
  void AddFixup(ModdingAPI::Exposed::System::Runtime::Serialization::FixupHolder* fixup, ModdingAPI::Exposed::System::Runtime::Serialization::ObjectManager* manager) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*, ModdingAPI::Exposed::System::Runtime::Serialization::FixupHolder*, ModdingAPI::Exposed::System::Runtime::Serialization::ObjectManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA42E60))(this, fixup, manager);
  }
  void UpdateDescendentDependencyChain(int32_t amount, ModdingAPI::Exposed::System::Runtime::Serialization::ObjectManager* manager) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*, int32_t, ModdingAPI::Exposed::System::Runtime::Serialization::ObjectManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA430B0))(this, amount, manager);
  }
  void AddDependency(int64_t dependentObject) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA43120))(this, dependentObject);
  }
  void UpdateData(Il2CppObject* obj, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo* info, ModdingAPI::Exposed::System::Runtime::Serialization::ISerializationSurrogate* surrogate, int64_t idOfContainer, ModdingAPI::Exposed::System::Reflection::FieldInfo* field, ModdingAPI::Exposed::System::Int32_array* arrayIndex, ModdingAPI::Exposed::System::Runtime::Serialization::ObjectManager* manager) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*, Il2CppObject*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo*, ModdingAPI::Exposed::System::Runtime::Serialization::ISerializationSurrogate*, int64_t, ModdingAPI::Exposed::System::Reflection::FieldInfo*, ModdingAPI::Exposed::System::Int32_array*, ModdingAPI::Exposed::System::Runtime::Serialization::ObjectManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA433F0))(this, obj, info, surrogate, idOfContainer, field, arrayIndex, manager);
  }
  void MarkForCompletionWhenAvailable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA43660))(this);
  }
  void SetFlags() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA43670))(this);
  }
  bool get_IsIncompleteObjectReference() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x702900))(this);
  }
  void set_IsIncompleteObjectReference(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA43740))(this, value);
  }
  bool get_RequiresDelayedFixup() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA43760))(this);
  }
  bool get_RequiresValueTypeFixup() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x702910))(this);
  }
  bool get_ValueTypeFixupPerformed() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA43770))(this);
  }
  void set_ValueTypeFixupPerformed(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA437A0))(this, value);
  }
  bool get_HasISerializable() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9B2750))(this);
  }
  bool get_HasSurrogate() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA437B0))(this);
  }
  bool get_CanSurrogatedObjectValueChange() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA437C0))(this);
  }
  bool get_CanObjectValueChange() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA438A0))(this);
  }
  int32_t get_DirectlyDependentObjects() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x37AAE0))(this);
  }
  int32_t get_TotalDependentObjects() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA438C0))(this);
  }
  bool get_Reachable() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7DA960))(this);
  }
  void set_Reachable(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5C3740))(this, value);
  }
  bool get_TypeLoadExceptionReachable() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA438D0))(this);
  }
  ModdingAPI::Exposed::System::Runtime::Serialization::TypeLoadExceptionHolder* get_TypeLoadException() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Runtime::Serialization::TypeLoadExceptionHolder*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3199C0))(this);
  }
  void set_TypeLoadException(ModdingAPI::Exposed::System::Runtime::Serialization::TypeLoadExceptionHolder* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*, ModdingAPI::Exposed::System::Runtime::Serialization::TypeLoadExceptionHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A4B0))(this, value);
  }
  Il2CppObject* get_ObjectValue() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311320))(this);
  }
  void SetObjectValue(Il2CppObject* obj, ModdingAPI::Exposed::System::Runtime::Serialization::ObjectManager* manager) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*, Il2CppObject*, ModdingAPI::Exposed::System::Runtime::Serialization::ObjectManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA438E0))(this, obj, manager);
  }
  ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo* get_SerializationInfo() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110B0))(this);
  }
  void set_SerializationInfo(ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110C0))(this, value);
  }
  ModdingAPI::Exposed::System::Runtime::Serialization::ISerializationSurrogate* get_Surrogate() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Runtime::Serialization::ISerializationSurrogate*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335370))(this);
  }
  ModdingAPI::Exposed::System::Runtime::Serialization::LongList* get_DependentObjects() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Runtime::Serialization::LongList*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319960))(this);
  }
  void set_DependentObjects(ModdingAPI::Exposed::System::Runtime::Serialization::LongList* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*, ModdingAPI::Exposed::System::Runtime::Serialization::LongList*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x31F420))(this, value);
  }
  bool get_RequiresSerInfoFixup() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA43A30))(this);
  }
  void set_RequiresSerInfoFixup(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA43A50))(this, value);
  }
  ModdingAPI::Exposed::System::Runtime::Serialization::ValueTypeFixupInfo* get_ValueFixup() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Runtime::Serialization::ValueTypeFixupInfo*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383960))(this);
  }
  bool get_CompletelyFixed() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA43A70))(this);
  }
  int64_t get_ContainerID() {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::ObjectHolder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA43A90))(this);
  }
};
}