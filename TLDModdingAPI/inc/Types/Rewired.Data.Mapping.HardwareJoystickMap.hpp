// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Guid.hpp"
#include "ModdingAPI.Exposed.Rewired.HardwareControllerMapIdentifier.hpp"


namespace ModdingAPI::Exposed::Rewired::Data::Mapping {
struct __HardwareJoystickMap_Il2CppStaticFields {
};

struct __HardwareJoystickMap_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_GetElementIdentifierNames;
  VirtualInvokeData _5_GetElementIdentifierIds;
  VirtualInvokeData _6_ContainsElementIdentifier;
  VirtualInvokeData _7_GetMappableElementIdentifierInfo;
  VirtualInvokeData _8_Rewired_Data_Mapping_IHardwareControllerMap_Internal_get_ElementIdentifiers;
  VirtualInvokeData _9_Rewired_Data_Mapping_IHardwareControllerMap_Internal_GetElementIdentifier;
};

struct __HardwareJoystickMap_Il2CppClass {
  Il2CppClass_1 _1;
  __HardwareJoystickMap_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __HardwareJoystickMap_Il2CppVtbl vtbl;
};

class HardwareJoystickMap {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C237B8;
  static inline    __HardwareJoystickMap_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __HardwareJoystickMap_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__HardwareJoystickMap_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __HardwareJoystickMap_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  System_String* controllerName;
  System_String* editorControllerName;
  System_String* description;
  System_String* controllerGuid;
  ModdingAPI::Exposed::System::String_array* templateGuids;
  bool hideInLists;
  ModdingAPI::Exposed::Rewired::JoystickType_array* joystickTypes;
  ModdingAPI::Exposed::Rewired::ControllerElementIdentifier_array* elementIdentifiers;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::CompoundElement_array* compoundElements;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_DirectInput* directInput;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_RawInput* rawInput;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_XInput* xInput;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_OSX* osx;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Linux* linux;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_WindowsUWP* windowsUWP;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback* fallback_Windows;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback* fallback_WindowsUWP;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback* fallback_OSX;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback* fallback_Linux;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback* fallback_Linux_PreConfigured;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback* fallback_Android;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback* fallback_iOS;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback* fallback_Blackberry;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback* fallback_WindowsPhone8;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback* fallback_XBox360;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback* fallback_XBoxOne;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback* fallback_PS3;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback* fallback_PS4;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback* fallback_PSM;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback* fallback_PSVita;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback* fallback_Wii;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback* fallback_WiiU;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback* fallback_AmazonFireTV;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback* fallback_RazerForgeTV;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_WebGL* webGL;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Ouya* ouya;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_XboxOne* xboxOne;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_PS4* ps4;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_NintendoSwitch* nintendoSwitch;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Stadia* stadia;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_InternalDriver* internalDriver;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_SDL2* sdl2_Linux;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_SDL2* sdl2_Windows;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_SDL2* sdl2_OSX;
  int32_t elementIdentifierIdCounter;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x892A80))(this);
  }
  void ::ctor(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap* source) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*, ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x894AD0))(this, source);
  }
  System_String* get_ControllerName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335360))(this);
  }
  System_String* get_EditorControllerName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110A0))(this);
  }
  ModdingAPI::Exposed::System::Guid get_Guid() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Guid(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8957F0))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* get_TemplateGuids() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8958B0))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* get_ElementIdentifiers() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x895A40))(this);
  }
  int32_t get_elementIdentifierCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x895BD0))(this);
  }
  bool get_HideInLists() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5DE420))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* get_JoystickTypes() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x895BE0))(this);
  }
  ModdingAPI::Exposed::System::String_array* GetElementIdentifierNames() {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x895D70))(this);
  }
  ModdingAPI::Exposed::System::Int32_array* GetElementIdentifierIds() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Int32_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x895FA0))(this);
  }
  ModdingAPI::Exposed::Rewired::ControllerElementIdentifier* GetElementIdentifier(int32_t id) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ControllerElementIdentifier*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x896140))(this, id);
  }
  bool ContainsElementIdentifier(int32_t id) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8961D0))(this, id);
  }
  int32_t GetElementIdentifierInfo(int32_t type, ModdingAPI::Exposed::System::String_array* names, ModdingAPI::Exposed::System::Int32_array* ids) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*, int32_t, ModdingAPI::Exposed::System::String_array*, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8961F0))(this, type, names, ids);
  }
  int32_t GetMappableElementIdentifierInfo(ModdingAPI::Exposed::System::String_array* names, ModdingAPI::Exposed::System::Int32_array* ids) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*, ModdingAPI::Exposed::System::String_array*, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x896730))(this, names, ids);
  }
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap* Clone() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x896BF0))(this);
  }
  int32_t IndexOfElementIdentifier(int32_t id) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x896D40))(this, id);
  }
  int32_t GetEffectiveElementIdentifierType(ModdingAPI::Exposed::Rewired::HardwareControllerMapIdentifier hardwareMapIdentifier, int32_t elementIdentifierId, bool isDefaultMap) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*, ModdingAPI::Exposed::Rewired::HardwareControllerMapIdentifier, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x896DE0))(this, hardwareMapIdentifier, elementIdentifierId, isDefaultMap);
  }
  bool GetEffectiveAxisRange(ModdingAPI::Exposed::Rewired::HardwareControllerMapIdentifier hardwareMapIdentifier, int32_t elementIdentifierId, bool isDefaultMap, int32_t axisRange) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*, ModdingAPI::Exposed::Rewired::HardwareControllerMapIdentifier, int32_t, bool, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x896E80))(this, hardwareMapIdentifier, elementIdentifierId, isDefaultMap, axisRange);
  }
  void GetElementIdentifiersForControllerElements(ModdingAPI::Exposed::Rewired::HardwareControllerMapIdentifier hardwareMapIdentifier, bool isDefaultMap, ModdingAPI::Exposed::System::Int32_array* buttons, ModdingAPI::Exposed::System::Int32_array* axes) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*, ModdingAPI::Exposed::Rewired::HardwareControllerMapIdentifier, bool, ModdingAPI::Exposed::System::Int32_array*, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x896F40))(this, hardwareMapIdentifier, isDefaultMap, buttons, axes);
  }
  bool Matches(ModdingAPI::Exposed::Rewired::BridgedControllerHWInfo* bridgedControllerHWInfo, bool strictMatch, bool isDefaultMap, int32_t actualInputPlatform, int32_t variantIndex, ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform* platformMap) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*, ModdingAPI::Exposed::Rewired::BridgedControllerHWInfo*, bool, bool, int32_t, int32_t, ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x897010))(this, bridgedControllerHWInfo, strictMatch, isDefaultMap, actualInputPlatform, variantIndex, platformMap);
  }
  ModdingAPI::Exposed::Rewired::HardwareJoystickMap_InputManager* GetDefaultHardwareJoystickMap_InputManager(int32_t inputSource) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::HardwareJoystickMap_InputManager*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x897640))(this, inputSource);
  }
  ModdingAPI::Exposed::System::String_array* GetTemplateGuidsOrig() {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319970))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* Rewired::Data::Mapping::IHardwareControllerMap_Internal::get_ElementIdentifiers() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x897A50))(this);
  }
  ModdingAPI::Exposed::Rewired::Interfaces::IControllerElementIdentifierCommon_Internal* Rewired::Data::Mapping::IHardwareControllerMap_Internal::GetElementIdentifier(int32_t id) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Interfaces::IControllerElementIdentifierCommon_Internal*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x897BB0))(this, id);
  }
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback_Base* FindFallbackMatch(ModdingAPI::Exposed::Rewired::BridgedControllerHWInfo* bridgedControllerHWInfo, bool strictMatch, bool isDefaultMap, int32_t actualInputPlatform, int32_t variantIndex) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback_Base*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*, ModdingAPI::Exposed::Rewired::BridgedControllerHWInfo*, bool, bool, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x897BC0))(this, bridgedControllerHWInfo, strictMatch, isDefaultMap, actualInputPlatform, variantIndex);
  }
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback_Base* FindFallbackMap(int32_t inputSource, bool isDefaultMap, int32_t actualInputPlatform, int32_t variantIndex) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_Fallback_Base*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*, int32_t, bool, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8982A0))(this, inputSource, isDefaultMap, actualInputPlatform, variantIndex);
  }
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_SDL2_Base* FindSDL2Match(ModdingAPI::Exposed::Rewired::BridgedControllerHWInfo* bridgedControllerHWInfo, bool strictMatch, bool isDefaultMap, int32_t actualInputPlatform, int32_t variantIndex) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_SDL2_Base*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*, ModdingAPI::Exposed::Rewired::BridgedControllerHWInfo*, bool, bool, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x898A80))(this, bridgedControllerHWInfo, strictMatch, isDefaultMap, actualInputPlatform, variantIndex);
  }
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_SDL2_Base* FindSDL2Map(int32_t inputSource, bool isDefaultMap, int32_t actualInputPlatform, int32_t variantIndex) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform_SDL2_Base*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*, int32_t, bool, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x898CC0))(this, inputSource, isDefaultMap, actualInputPlatform, variantIndex);
  }
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform* GetSpecificPlatformMap(ModdingAPI::Exposed::Rewired::HardwareControllerMapIdentifier hardwareMapIdentifier) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*, ModdingAPI::Exposed::Rewired::HardwareControllerMapIdentifier)>(Helpers::Memory::GetInstance().MakeAbsolute(0x898F60))(this, hardwareMapIdentifier);
  }
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform* GetSpecificPlatformRoot(int32_t exactInputPlatform) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x899070))(this, exactInputPlatform);
  }

  // Static methods:
  static inline bool Matches(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform* platform, ModdingAPI::Exposed::Rewired::BridgedControllerHWInfo* bridgedControllerHWInfo, bool strictMatch, int32_t variantIndex, ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform* platformMap) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform*, ModdingAPI::Exposed::Rewired::BridgedControllerHWInfo*, bool, int32_t, ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap::Platform*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x896FD0))(platform, bridgedControllerHWInfo, strictMatch, variantIndex, platformMap);
  }
};
}