// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.AI.OffMeshLinkData.hpp"
#include "ModdingAPI.Exposed.UnityEngine.AI.NavMeshHit.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Vector3.hpp"
#include "ModdingAPI::Exposed::UnityEngine::AI::NavMeshHit.hpp"


namespace ModdingAPI::Exposed::UnityEngine::AI {
struct __NavMeshAgent_Il2CppStaticFields {
};

struct __NavMeshAgent_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __NavMeshAgent_Il2CppClass {
  Il2CppClass_1 _1;
  __NavMeshAgent_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __NavMeshAgent_Il2CppVtbl vtbl;
};

class NavMeshAgent {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C4D8E0;
  static inline    NavMeshAgent* _pStaticObjectInstance = nullptr;

public:
// Singleton object getter:
  static inline NavMeshAgent* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (NavMeshAgent**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

  // Il2Cpp fields:
  __NavMeshAgent_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x389390))(this);
  }
  bool SetDestination(ModdingAPI::Exposed::UnityEngine::Vector3 target) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156B770))(this, target);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 get_destination() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156B830))(this);
  }
  void set_destination(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156B8B0))(this, value);
  }
  void INTERNAL_get_destination(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156B910))(this, value);
  }
  void INTERNAL_set_destination(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156B970))(this, value);
  }
  float get_stoppingDistance() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156B9D0))(this);
  }
  void set_stoppingDistance(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156BA20))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 get_velocity() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156BA80))(this);
  }
  void set_velocity(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156BB00))(this, value);
  }
  void INTERNAL_get_velocity(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156BB60))(this, value);
  }
  void INTERNAL_set_velocity(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156BBC0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 get_nextPosition() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156BC20))(this);
  }
  void set_nextPosition(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156BCA0))(this, value);
  }
  void INTERNAL_get_nextPosition(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156BD00))(this, value);
  }
  void INTERNAL_set_nextPosition(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156BD60))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 get_steeringTarget() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156BDC0))(this);
  }
  void INTERNAL_get_steeringTarget(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156BE40))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 get_desiredVelocity() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156BEA0))(this);
  }
  void INTERNAL_get_desiredVelocity(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156BF20))(this, value);
  }
  float get_remainingDistance() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156BF80))(this);
  }
  float get_baseOffset() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156BFD0))(this);
  }
  void set_baseOffset(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C020))(this, value);
  }
  bool get_isOnOffMeshLink() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C080))(this);
  }
  void ActivateCurrentOffMeshLink(bool activated) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C0D0))(this, activated);
  }
  ModdingAPI::Exposed::UnityEngine::AI::OffMeshLinkData get_currentOffMeshLinkData() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AI::OffMeshLinkData(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C130))(this);
  }
  ModdingAPI::Exposed::UnityEngine::AI::OffMeshLinkData GetCurrentOffMeshLinkDataInternal() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AI::OffMeshLinkData(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C130))(this);
  }
  ModdingAPI::Exposed::UnityEngine::AI::OffMeshLinkData get_nextOffMeshLinkData() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AI::OffMeshLinkData(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C1B0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::AI::OffMeshLinkData GetNextOffMeshLinkDataInternal() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AI::OffMeshLinkData(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C1B0))(this);
  }
  void CompleteOffMeshLink() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C230))(this);
  }
  bool get_autoTraverseOffMeshLink() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C280))(this);
  }
  void set_autoTraverseOffMeshLink(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C2D0))(this, value);
  }
  bool get_autoBraking() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C330))(this);
  }
  void set_autoBraking(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C380))(this, value);
  }
  bool get_autoRepath() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C3E0))(this);
  }
  void set_autoRepath(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C430))(this, value);
  }
  bool get_hasPath() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C490))(this);
  }
  bool get_pathPending() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C4E0))(this);
  }
  bool get_isPathStale() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C530))(this);
  }
  int32_t get_pathStatus() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C580))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 get_pathEndPosition() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C5D0))(this);
  }
  void INTERNAL_get_pathEndPosition(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C650))(this, value);
  }
  bool Warp(ModdingAPI::Exposed::UnityEngine::Vector3 newPosition) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C6B0))(this, newPosition);
  }
  void Move(ModdingAPI::Exposed::UnityEngine::Vector3 offset) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C770))(this, offset);
  }
  void Stop() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C830))(this);
  }
  void StopInternal() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C830))(this);
  }
  void Stop(bool stopUpdates) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C830))(this, stopUpdates);
  }
  void Resume() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C880))(this);
  }
  bool get_isStopped() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C8D0))(this);
  }
  void set_isStopped(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C920))(this, value);
  }
  void ResetPath() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C980))(this);
  }
  bool SetPath(ModdingAPI::Exposed::UnityEngine::AI::NavMeshPath* path) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::AI::NavMeshPath*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C9D0))(this, path);
  }
  ModdingAPI::Exposed::UnityEngine::AI::NavMeshPath* get_path() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AI::NavMeshPath*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156CA30))(this);
  }
  void set_path(ModdingAPI::Exposed::UnityEngine::AI::NavMeshPath* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::AI::NavMeshPath*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156CBF0))(this, value);
  }
  void CopyPathTo(ModdingAPI::Exposed::UnityEngine::AI::NavMeshPath* path) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::AI::NavMeshPath*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156CCB0))(this, path);
  }
  bool FindClosestEdge(ModdingAPI::Exposed::UnityEngine::AI::NavMeshHit hit) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::AI::NavMeshHit)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156CD10))(this, hit);
  }
  bool Raycast(ModdingAPI::Exposed::UnityEngine::Vector3 targetPosition, ModdingAPI::Exposed::UnityEngine::AI::NavMeshHit hit) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::AI::NavMeshHit)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156CD70))(this, targetPosition, hit);
  }
  bool CalculatePath(ModdingAPI::Exposed::UnityEngine::Vector3 targetPosition, ModdingAPI::Exposed::UnityEngine::AI::NavMeshPath* path) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::AI::NavMeshPath*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156CE50))(this, targetPosition, path);
  }
  bool CalculatePathInternal(ModdingAPI::Exposed::UnityEngine::Vector3 targetPosition, ModdingAPI::Exposed::UnityEngine::AI::NavMeshPath* path) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::AI::NavMeshPath*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156CF30))(this, targetPosition, path);
  }
  bool SamplePathPosition(int32_t areaMask, float maxDistance, ModdingAPI::Exposed::UnityEngine::AI::NavMeshHit hit) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, int32_t, float, ModdingAPI::Exposed::UnityEngine::AI::NavMeshHit)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D010))(this, areaMask, maxDistance, hit);
  }
  void SetLayerCost(int32_t layer, float cost) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D090))(this, layer, cost);
  }
  float GetLayerCost(int32_t layer) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D100))(this, layer);
  }
  void SetAreaCost(int32_t areaIndex, float areaCost) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D160))(this, areaIndex, areaCost);
  }
  float GetAreaCost(int32_t areaIndex) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D1D0))(this, areaIndex);
  }
  ModdingAPI::Exposed::UnityEngine::Object* get_navMeshOwner() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Object*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D230))(this);
  }
  int32_t get_agentTypeID() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D280))(this);
  }
  void set_agentTypeID(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D2D0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Object* GetOwnerInternal() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Object*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D230))(this);
  }
  int32_t get_walkableMask() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D330))(this);
  }
  void set_walkableMask(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D380))(this, value);
  }
  int32_t get_areaMask() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D3E0))(this);
  }
  void set_areaMask(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D430))(this, value);
  }
  float get_speed() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D490))(this);
  }
  void set_speed(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D4E0))(this, value);
  }
  float get_angularSpeed() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D540))(this);
  }
  void set_angularSpeed(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D590))(this, value);
  }
  float get_acceleration() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D5F0))(this);
  }
  void set_acceleration(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D640))(this, value);
  }
  bool get_updatePosition() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D6A0))(this);
  }
  void set_updatePosition(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D6F0))(this, value);
  }
  bool get_updateRotation() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D750))(this);
  }
  void set_updateRotation(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D7A0))(this, value);
  }
  bool get_updateUpAxis() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D800))(this);
  }
  void set_updateUpAxis(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D850))(this, value);
  }
  float get_radius() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D8B0))(this);
  }
  void set_radius(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D900))(this, value);
  }
  float get_height() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D960))(this);
  }
  void set_height(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156D9B0))(this, value);
  }
  int32_t get_obstacleAvoidanceType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156DA10))(this);
  }
  void set_obstacleAvoidanceType(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156DA60))(this, value);
  }
  int32_t get_avoidancePriority() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156DAC0))(this);
  }
  void set_avoidancePriority(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156DB10))(this, value);
  }
  bool get_isOnNavMesh() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156DB70))(this);
  }

  // Static methods:
  static inline bool INTERNAL_CALL_SetDestination(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent* self, ModdingAPI::Exposed::UnityEngine::Vector3 target) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156B7D0))(self, target);
  }
  static inline bool INTERNAL_CALL_Warp(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent* self, ModdingAPI::Exposed::UnityEngine::Vector3 newPosition) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C710))(self, newPosition);
  }
  static inline void INTERNAL_CALL_Move(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent* self, ModdingAPI::Exposed::UnityEngine::Vector3 offset) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156C7D0))(self, offset);
  }
  static inline bool INTERNAL_CALL_Raycast(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent* self, ModdingAPI::Exposed::UnityEngine::Vector3 targetPosition, ModdingAPI::Exposed::UnityEngine::AI::NavMeshHit hit) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::AI::NavMeshHit)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156CDE0))(self, targetPosition, hit);
  }
  static inline bool INTERNAL_CALL_CalculatePathInternal(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent* self, ModdingAPI::Exposed::UnityEngine::Vector3 targetPosition, ModdingAPI::Exposed::UnityEngine::AI::NavMeshPath* path) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::AI::NavMeshPath*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156CFA0))(self, targetPosition, path);
  }
};
}