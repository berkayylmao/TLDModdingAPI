// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System::Net {
struct __WebConnectionStream_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Byte_array* crlf;
};

struct __WebConnectionStream_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_CreateObjRef;
  VirtualInvokeData _5_InitializeLifetimeService;
  VirtualInvokeData _6_Dispose;
  VirtualInvokeData _7_get_CanRead;
  VirtualInvokeData _8_get_CanSeek;
  VirtualInvokeData _9_get_CanWrite;
  VirtualInvokeData _10_get_Length;
  VirtualInvokeData _11_get_Position;
  VirtualInvokeData _12_set_Position;
  VirtualInvokeData _13_get_ReadTimeout;
  VirtualInvokeData _14_get_WriteTimeout;
  VirtualInvokeData _15_Close;
  VirtualInvokeData _16_Dispose;
  VirtualInvokeData _17_Flush;
  VirtualInvokeData _18_BeginRead;
  VirtualInvokeData _19_EndRead;
  VirtualInvokeData _20_ReadAsync;
  VirtualInvokeData _21_BeginWrite;
  VirtualInvokeData _22_EndWrite;
  VirtualInvokeData _23_WriteAsync;
  VirtualInvokeData _24_Seek;
  VirtualInvokeData _25_Read;
  VirtualInvokeData _26_ReadByte;
  VirtualInvokeData _27_Write;
  VirtualInvokeData _28_WriteByte;
};

struct __WebConnectionStream_Il2CppClass {
  Il2CppClass_1 _1;
  __WebConnectionStream_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __WebConnectionStream_Il2CppVtbl vtbl;
};

class WebConnectionStream {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C40F30;
  static inline    __WebConnectionStream_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __WebConnectionStream_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__WebConnectionStream_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __WebConnectionStream_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  Il2CppObject* MarshalByRefObject__identity;
  ModdingAPI::Exposed::System::IO::Stream::ReadWriteTask* Stream__activeReadWriteTask;
  ModdingAPI::Exposed::System::Threading::SemaphoreSlim* Stream__asyncActiveSemaphore;
  bool isRead;
  ModdingAPI::Exposed::System::Net::WebConnection* cnc;
  ModdingAPI::Exposed::System::Net::HttpWebRequest* request;
  ModdingAPI::Exposed::System::Byte_array* readBuffer;
  int32_t readBufferOffset;
  int32_t readBufferSize;
  int32_t stream_length;
  int64_t contentLength;
  int64_t totalRead;
  int64_t totalWritten;
  bool nextReadCalled;
  int32_t pendingReads;
  int32_t pendingWrites;
  ModdingAPI::Exposed::System::Threading::ManualResetEvent* pending;
  bool allowBuffering;
  bool sendChunked;
  ModdingAPI::Exposed::System::IO::MemoryStream* writeBuffer;
  bool requestWritten;
  ModdingAPI::Exposed::System::Byte_array* headers;
  bool disposed;
  bool headersSent;
  Il2CppObject* locker;
  bool initRead;
  bool read_eof;
  bool complete_request_written;
  int32_t read_timeout;
  int32_t write_timeout;
  ModdingAPI::Exposed::System::AsyncCallback* cb_wrapper;
  bool IgnoreIOErrors;
  bool _GetResponseOnClose_k__BackingField;

  // Member methods:
  void ::ctor(ModdingAPI::Exposed::System::Net::WebConnection* cnc, ModdingAPI::Exposed::System::Net::WebConnectionData* data) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, ModdingAPI::Exposed::System::Net::WebConnection*, ModdingAPI::Exposed::System::Net::WebConnectionData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAFFD20))(this, cnc, data);
  }
  void ::ctor(ModdingAPI::Exposed::System::Net::WebConnection* cnc, ModdingAPI::Exposed::System::Net::HttpWebRequest* request) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, ModdingAPI::Exposed::System::Net::WebConnection*, ModdingAPI::Exposed::System::Net::HttpWebRequest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB00280))(this, cnc, request);
  }
  bool CheckAuthHeader(System_String* headerName) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB006F0))(this, headerName);
  }
  bool IsNtlmAuth() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB00800))(this);
  }
  void CheckResponseInBuffer() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB00920))(this);
  }
  ModdingAPI::Exposed::System::Net::WebConnection* get_Connection() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Net::WebConnection*(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335370))(this);
  }
  int32_t get_ReadTimeout() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x307730))(this);
  }
  int32_t get_WriteTimeout() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x307740))(this);
  }
  bool get_CompleteRequestWritten() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB00970))(this);
  }
  void set_SendChunked(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x875310))(this, value);
  }
  void set_ReadBuffer(ModdingAPI::Exposed::System::Byte_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, ModdingAPI::Exposed::System::Byte_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x31F420))(this, value);
  }
  void set_ReadBufferOffset(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383910))(this, value);
  }
  void set_ReadBufferSize(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383930))(this, value);
  }
  ModdingAPI::Exposed::System::Byte_array* get_WriteBuffer() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Byte_array*(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB00980))(this);
  }
  int32_t get_WriteBufferLength() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB009B0))(this);
  }
  void ForceCompletion() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB009E0))(this);
  }
  void CheckComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB00A30))(this);
  }
  void ReadAll() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB00A70))(this);
  }
  void WriteCallbackWrapper(ModdingAPI::Exposed::System::IAsyncResult* r) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, ModdingAPI::Exposed::System::IAsyncResult*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB00F70))(this, r);
  }
  void ReadCallbackWrapper(ModdingAPI::Exposed::System::IAsyncResult* r) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, ModdingAPI::Exposed::System::IAsyncResult*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB010F0))(this, r);
  }
  int32_t Read(ModdingAPI::Exposed::System::Byte_array* buffer, int32_t offset, int32_t size) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB01270))(this, buffer, offset, size);
  }
  ModdingAPI::Exposed::System::IAsyncResult* BeginRead(ModdingAPI::Exposed::System::Byte_array* buffer, int32_t offset, int32_t size, ModdingAPI::Exposed::System::AsyncCallback* cb, Il2CppObject* state) {
    return reinterpret_cast<ModdingAPI::Exposed::System::IAsyncResult*(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t, ModdingAPI::Exposed::System::AsyncCallback*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB01440))(this, buffer, offset, size, cb, state);
  }
  int32_t EndRead(ModdingAPI::Exposed::System::IAsyncResult* r) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, ModdingAPI::Exposed::System::IAsyncResult*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB01930))(this, r);
  }
  void WriteAsyncCB(ModdingAPI::Exposed::System::IAsyncResult* r) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, ModdingAPI::Exposed::System::IAsyncResult*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB01D40))(this, r);
  }
  ModdingAPI::Exposed::System::IAsyncResult* BeginWrite(ModdingAPI::Exposed::System::Byte_array* buffer, int32_t offset, int32_t size, ModdingAPI::Exposed::System::AsyncCallback* cb, Il2CppObject* state) {
    return reinterpret_cast<ModdingAPI::Exposed::System::IAsyncResult*(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t, ModdingAPI::Exposed::System::AsyncCallback*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB020A0))(this, buffer, offset, size, cb, state);
  }
  void CheckWriteOverflow(int64_t contentLength, int64_t totalWritten, int64_t size) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, int64_t, int64_t, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB02C00))(this, contentLength, totalWritten, size);
  }
  void EndWrite(ModdingAPI::Exposed::System::IAsyncResult* r) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, ModdingAPI::Exposed::System::IAsyncResult*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB02D10))(this, r);
  }
  void Write(ModdingAPI::Exposed::System::Byte_array* buffer, int32_t offset, int32_t size) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB03010))(this, buffer, offset, size);
  }
  void Flush() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void SetHeadersAsync(bool setInternalLength, ModdingAPI::Exposed::System::Net::SimpleAsyncCallback* callback) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, bool, ModdingAPI::Exposed::System::Net::SimpleAsyncCallback*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB031F0))(this, setInternalLength, callback);
  }
  bool SetHeadersAsync(ModdingAPI::Exposed::System::Net::SimpleAsyncResult* result, bool setInternalLength) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, ModdingAPI::Exposed::System::Net::SimpleAsyncResult*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB03440))(this, result, setInternalLength);
  }
  bool get_RequestWritten() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x931E50))(this);
  }
  bool WriteRequestAsync(ModdingAPI::Exposed::System::Net::SimpleAsyncResult* result) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, ModdingAPI::Exposed::System::Net::SimpleAsyncResult*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB03A00))(this, result);
  }
  void InternalClose() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB03D90))(this);
  }
  bool get_GetResponseOnClose() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB03DA0))(this);
  }
  void Close() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB03DB0))(this);
  }
  void KillBuffer() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB04190))(this);
  }
  int64_t Seek(int64_t a, int32_t b) {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, int64_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB041A0))(this, a, b);
  }
  bool get_CanSeek() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(this);
  }
  bool get_CanRead() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB041F0))(this);
  }
  bool get_CanWrite() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB04210))(this);
  }
  int64_t get_Length() {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB04230))(this);
  }
  int64_t get_Position() {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB042E0))(this);
  }
  void set_Position(int64_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::WebConnectionStream*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB04330))(this, value);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*> crlf = __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->crlf; }
  );

  // Static methods:
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xB04380))();
  }
};
}