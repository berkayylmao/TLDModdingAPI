// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.Newtonsoft.Json.JsonPosition.hpp"
#include "ModdingAPI.Exposed.System.Decimal.hpp"
#include "ModdingAPI.Exposed.System.Nullable_T_.hpp"
#include "ModdingAPI.Exposed.System.DateTime.hpp"
#include "ModdingAPI.Exposed.System.DateTimeOffset.hpp"
#include "ModdingAPI.Exposed.System.Guid.hpp"
#include "ModdingAPI.Exposed.System.TimeSpan.hpp"


namespace ModdingAPI::Exposed::Newtonsoft::Json::Serialization {
struct __TraceJsonWriter_Il2CppStaticFields {
};

struct __TraceJsonWriter_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_System_IDisposable_Dispose;
  VirtualInvokeData _5_OnStringEscapeHandlingChanged;
  VirtualInvokeData _6_Close;
  VirtualInvokeData _7_WriteStartObject;
  VirtualInvokeData _8_WriteEndObject;
  VirtualInvokeData _9_WriteStartArray;
  VirtualInvokeData _10_WriteEndArray;
  VirtualInvokeData _11_WriteStartConstructor;
  VirtualInvokeData _12_WriteEndConstructor;
  VirtualInvokeData _13_WritePropertyName;
  VirtualInvokeData _14_WritePropertyName;
  VirtualInvokeData _15_WriteEnd;
  VirtualInvokeData _16_WriteToken;
  VirtualInvokeData _17_WriteEnd;
  VirtualInvokeData _18_WriteIndent;
  VirtualInvokeData _19_WriteValueDelimiter;
  VirtualInvokeData _20_WriteIndentSpace;
  VirtualInvokeData _21_WriteNull;
  VirtualInvokeData _22_WriteUndefined;
  VirtualInvokeData _23_WriteRaw;
  VirtualInvokeData _24_WriteRawValue;
  VirtualInvokeData _25_WriteValue;
  VirtualInvokeData _26_WriteValue;
  VirtualInvokeData _27_WriteValue;
  VirtualInvokeData _28_WriteValue;
  VirtualInvokeData _29_WriteValue;
  VirtualInvokeData _30_WriteValue;
  VirtualInvokeData _31_WriteValue;
  VirtualInvokeData _32_WriteValue;
  VirtualInvokeData _33_WriteValue;
  VirtualInvokeData _34_WriteValue;
  VirtualInvokeData _35_WriteValue;
  VirtualInvokeData _36_WriteValue;
  VirtualInvokeData _37_WriteValue;
  VirtualInvokeData _38_WriteValue;
  VirtualInvokeData _39_WriteValue;
  VirtualInvokeData _40_WriteValue;
  VirtualInvokeData _41_WriteValue;
  VirtualInvokeData _42_WriteValue;
  VirtualInvokeData _43_WriteValue;
  VirtualInvokeData _44_WriteValue;
  VirtualInvokeData _45_WriteValue;
  VirtualInvokeData _46_WriteValue;
  VirtualInvokeData _47_WriteValue;
  VirtualInvokeData _48_WriteValue;
  VirtualInvokeData _49_WriteValue;
  VirtualInvokeData _50_WriteValue;
  VirtualInvokeData _51_WriteValue;
  VirtualInvokeData _52_WriteValue;
  VirtualInvokeData _53_WriteValue;
  VirtualInvokeData _54_WriteValue;
  VirtualInvokeData _55_WriteValue;
  VirtualInvokeData _56_WriteValue;
  VirtualInvokeData _57_WriteValue;
  VirtualInvokeData _58_WriteValue;
  VirtualInvokeData _59_WriteValue;
  VirtualInvokeData _60_WriteValue;
  VirtualInvokeData _61_WriteValue;
  VirtualInvokeData _62_WriteValue;
  VirtualInvokeData _63_WriteComment;
  VirtualInvokeData _64_Dispose;
};

struct __TraceJsonWriter_Il2CppClass {
  Il2CppClass_1 _1;
  __TraceJsonWriter_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __TraceJsonWriter_Il2CppVtbl vtbl;
};

class TraceJsonWriter {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C6DDD8;
  static inline    __TraceJsonWriter_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __TraceJsonWriter_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__TraceJsonWriter_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __TraceJsonWriter_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* JsonWriter__stack;
  ModdingAPI::Exposed::Newtonsoft::Json::JsonPosition JsonWriter__currentPosition;
  int32_t JsonWriter__currentState;
  int32_t JsonWriter__formatting;
  bool JsonWriter__CloseOutput_k__BackingField;
  int32_t JsonWriter__dateFormatHandling;
  int32_t JsonWriter__dateTimeZoneHandling;
  int32_t JsonWriter__stringEscapeHandling;
  int32_t JsonWriter__floatFormatHandling;
  System_String* JsonWriter__dateFormatString;
  ModdingAPI::Exposed::System::Globalization::CultureInfo* JsonWriter__culture;
  ModdingAPI::Exposed::Newtonsoft::Json::JsonWriter* _innerWriter;
  ModdingAPI::Exposed::Newtonsoft::Json::JsonTextWriter* _textWriter;
  ModdingAPI::Exposed::System::IO::StringWriter* _sw;

  // Member methods:
  void ::ctor(ModdingAPI::Exposed::Newtonsoft::Json::JsonWriter* innerWriter) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, ModdingAPI::Exposed::Newtonsoft::Json::JsonWriter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB77D20))(this, innerWriter);
  }
  System_String* GetSerializedJsonMessage() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78090))(this);
  }
  void WriteValue(ModdingAPI::Exposed::System::Decimal value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, ModdingAPI::Exposed::System::Decimal)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB780C0))(this, value);
  }
  void WriteValue(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78150))(this, value);
  }
  void WriteValue(uint8_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, uint8_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB781D0))(this, value);
  }
  void WriteValue(ModdingAPI::Exposed::System::Nullable_T_ value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, ModdingAPI::Exposed::System::Nullable_T_)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78250))(this, value);
  }
  void WriteValue(wchar_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, wchar_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78360))(this, value);
  }
  void WriteValue(ModdingAPI::Exposed::System::Byte_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, ModdingAPI::Exposed::System::Byte_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB783E0))(this, value);
  }
  void WriteValue(ModdingAPI::Exposed::System::DateTime value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, ModdingAPI::Exposed::System::DateTime)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78480))(this, value);
  }
  void WriteValue(ModdingAPI::Exposed::System::DateTimeOffset value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, ModdingAPI::Exposed::System::DateTimeOffset)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78500))(this, value);
  }
  void WriteValue(double value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78590))(this, value);
  }
  void WriteUndefined() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78610))(this);
  }
  void WriteNull() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78680))(this);
  }
  void WriteValue(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB786F0))(this, value);
  }
  void WriteValue(ModdingAPI::Exposed::System::Guid value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, ModdingAPI::Exposed::System::Guid)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78770))(this, value);
  }
  void WriteValue(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78800))(this, value);
  }
  void WriteValue(int64_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78880))(this, value);
  }
  void WriteValue(Il2CppObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78900))(this, value);
  }
  void WriteValue(char value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, char)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78970))(this, value);
  }
  void WriteValue(int16_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, int16_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB789F0))(this, value);
  }
  void WriteValue(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78A70))(this, value);
  }
  void WriteValue(ModdingAPI::Exposed::System::TimeSpan value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, ModdingAPI::Exposed::System::TimeSpan)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78AF0))(this, value);
  }
  void WriteValue(uint32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, uint32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78B70))(this, value);
  }
  void WriteValue(uint64_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, uint64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78BF0))(this, value);
  }
  void WriteValue(ModdingAPI::Exposed::System::Uri* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, ModdingAPI::Exposed::System::Uri*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78C70))(this, value);
  }
  void WriteValue(uint16_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, uint16_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78CE0))(this, value);
  }
  void WriteComment(System_String* text) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78D60))(this, text);
  }
  void WriteStartArray() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78DD0))(this);
  }
  void WriteEndArray() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78E50))(this);
  }
  void WriteStartConstructor(System_String* name) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78EB0))(this, name);
  }
  void WriteEndConstructor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78F40))(this);
  }
  void WritePropertyName(System_String* name) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB78FA0))(this, name);
  }
  void WritePropertyName(System_String* name, bool escape) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, System_String*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB79010))(this, name, escape);
  }
  void WriteStartObject() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB79090))(this);
  }
  void WriteEndObject() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB79110))(this);
  }
  void WriteRawValue(System_String* json) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB79170))(this, json);
  }
  void WriteRaw(System_String* json) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB791F0))(this, json);
  }
  void Close() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::TraceJsonWriter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB79250))(this);
  }
};
}