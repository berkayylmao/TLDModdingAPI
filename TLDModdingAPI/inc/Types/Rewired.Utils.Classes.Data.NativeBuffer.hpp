// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::Rewired::Utils::Classes::Data {
struct __NativeBuffer_Il2CppStaticFields {
};

struct __NativeBuffer_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_Dispose;
  VirtualInvokeData _5_Dispose;
};

struct __NativeBuffer_Il2CppClass {
  Il2CppClass_1 _1;
  __NativeBuffer_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __NativeBuffer_Il2CppVtbl vtbl;
};

class NativeBuffer {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C6C0A0;
  static inline    __NativeBuffer_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __NativeBuffer_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__NativeBuffer_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __NativeBuffer_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t ThkPhoVJcQIFcrIStuBBMfbJKPm;
  int32_t fGVoYLByMhxlQJpmnxfZbCAYpxK;
  bool IPjKDfWEXfJCxnkfIfovlZZlcJe;

  // Member methods:
  intptr_t get_Pointer() {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311320))(this);
  }
  int32_t get_Length() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FED20))(this);
  }
  uint8_t get_Item(int32_t index) {
    return reinterpret_cast<uint8_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4CF10))(this, index);
  }
  void set_Item(int32_t index, uint8_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, int32_t, uint8_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4CFF0))(this, index, value);
  }
  void ::ctor(int32_t size) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4D0D0))(this, size);
  }
  intptr_t GetPointer(int32_t offset) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4D120))(this, offset);
  }
  System_String* DumpToHexString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4D210))(this);
  }
  bool ReadBit(int32_t byteIndex, uint8_t bit) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, int32_t, uint8_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4D4F0))(this, byteIndex, bit);
  }
  uint8_t ReadByte(int32_t startIndex) {
    return reinterpret_cast<uint8_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4D640))(this, startIndex);
  }
  int16_t ReadShort(int32_t startIndex) {
    return reinterpret_cast<int16_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4D730))(this, startIndex);
  }
  uint16_t ReadUShort(int32_t startIndex) {
    return reinterpret_cast<uint16_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4D850))(this, startIndex);
  }
  int32_t ReadInt(int32_t startIndex) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4D970))(this, startIndex);
  }
  uint32_t ReadUInt(int32_t startIndex) {
    return reinterpret_cast<uint32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4DAB0))(this, startIndex);
  }
  int64_t ReadLong(int32_t startIndex) {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4DBD0))(this, startIndex);
  }
  uint64_t ReadULong(int32_t startIndex) {
    return reinterpret_cast<uint64_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4DCF0))(this, startIndex);
  }
  float ReadFloat(int32_t startIndex) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4DE40))(this, startIndex);
  }
  double ReadDouble(int32_t startIndex) {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4DF60))(this, startIndex);
  }
  void Read(ModdingAPI::Exposed::System::Byte_array* buffer, int32_t numBytesToRead, int32_t readStartIndex, int32_t writeStartIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4E080))(this, buffer, numBytesToRead, readStartIndex, writeStartIndex);
  }
  void Read(intptr_t buffer, int32_t bufferLength, int32_t numBytesToRead, int32_t readStartIndex, int32_t writeStartIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, intptr_t, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4E440))(this, buffer, bufferLength, numBytesToRead, readStartIndex, writeStartIndex);
  }
  int32_t TryReadBytes(ModdingAPI::Exposed::System::Byte_array* buffer, int32_t numBytesToRead, int32_t readStartIndex, int32_t writeStartIndex) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4E820))(this, buffer, numBytesToRead, readStartIndex, writeStartIndex);
  }
  int32_t TryReadBytes(intptr_t buffer, int32_t bufferLength, int32_t numBytesToRead, int32_t readStartIndex, int32_t writeStartIndex) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, intptr_t, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4E9B0))(this, buffer, bufferLength, numBytesToRead, readStartIndex, writeStartIndex);
  }
  void WriteBit(int32_t byteIndex, uint8_t bit, bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, int32_t, uint8_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4EB30))(this, byteIndex, bit, value);
  }
  void Write(uint8_t byte, int32_t startIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, uint8_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4ECF0))(this, byte, startIndex);
  }
  void Write(int16_t bytes, int32_t startIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, int16_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4EE30))(this, bytes, startIndex);
  }
  void Write(uint16_t bytes, int32_t startIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, uint16_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4EF70))(this, bytes, startIndex);
  }
  void Write(int32_t bytes, int32_t startIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4F090))(this, bytes, startIndex);
  }
  void Write(uint32_t bytes, int32_t startIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, uint32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4F1D0))(this, bytes, startIndex);
  }
  void Write(int64_t bytes, int32_t startIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, int64_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4F300))(this, bytes, startIndex);
  }
  void Write(uint64_t bytes, int32_t startIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, uint64_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4F420))(this, bytes, startIndex);
  }
  void Write(float bytes, int32_t startIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4F540))(this, bytes, startIndex);
  }
  void Write(double bytes, int32_t startIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, double, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4F690))(this, bytes, startIndex);
  }
  void Write(ModdingAPI::Exposed::System::Byte_array* bytes, int32_t numBytesToWrite, int32_t writeStartIndex, int32_t readStartIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4F7D0))(this, bytes, numBytesToWrite, writeStartIndex, readStartIndex);
  }
  void Write(intptr_t bytes, int32_t bufferLength, int32_t numBytesToWrite, int32_t writeStartIndex, int32_t readStartIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, intptr_t, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4FBC0))(this, bytes, bufferLength, numBytesToWrite, writeStartIndex, readStartIndex);
  }
  int32_t TryWriteBytes(ModdingAPI::Exposed::System::Byte_array* bytes, int32_t numBytesToWrite, int32_t writeStartIndex, int32_t readStartIndex) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB4FFB0))(this, bytes, numBytesToWrite, writeStartIndex, readStartIndex);
  }
  int32_t TryWriteBytes(intptr_t bytes, int32_t bufferLength, int32_t numBytesToWrite, int32_t writeStartIndex, int32_t readStartIndex) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, intptr_t, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB50140))(this, bytes, bufferLength, numBytesToWrite, writeStartIndex, readStartIndex);
  }
  int32_t TryFill(uint8_t value, int32_t numBytesToWrite, int32_t writeStartIndex) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, uint8_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB502E0))(this, value, numBytesToWrite, writeStartIndex);
  }
  bool Resize(int32_t size, bool preserveData) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB50380))(this, size, preserveData);
  }
  void Clear() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB50680))(this);
  }
  void Release() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB506A0))(this);
  }
  System_String* ToString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB50780))(this);
  }
  void Dispose() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB50A90))(this);
  }
  void Finalize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB50B40))(this);
  }
  void Dispose(bool disposing) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB50BC0))(this, disposing);
  }

  // Static methods:
  static inline bool Copy(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer* source, ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer* destination) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*, ModdingAPI::Exposed::Rewired::Utils::Classes::Data::NativeBuffer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB50C80))(source, destination);
  }
};
}