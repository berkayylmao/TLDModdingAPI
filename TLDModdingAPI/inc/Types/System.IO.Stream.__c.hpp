// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.IO.Stream.ReadWriteParameters.hpp"
#include "ModdingAPI.Exposed.System.Threading.Tasks.VoidTaskResult.hpp"


namespace ModdingAPI::Exposed::System::IO::Stream {
struct ____c_Il2CppStaticFields {
  ModdingAPI::Exposed::System::IO::Stream::__c* __9;
  ModdingAPI::Exposed::System::Func_TResult_* __9__4_0;
  ModdingAPI::Exposed::System::Func_T__TResult_* __9__39_0;
  ModdingAPI::Exposed::System::Func_T1__T2__T3__T4__TResult_* __9__43_0;
  ModdingAPI::Exposed::System::Func_T1__T2__TResult_* __9__43_1;
  ModdingAPI::Exposed::System::Func_T__TResult_* __9__46_0;
  ModdingAPI::Exposed::System::Action_T1__T2_* __9__47_0;
  ModdingAPI::Exposed::System::Func_T1__T2__T3__T4__TResult_* __9__53_0;
  ModdingAPI::Exposed::System::Func_T1__T2__TResult_* __9__53_1;
};

struct ____c_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct ____c_Il2CppClass {
  Il2CppClass_1 _1;
  ____c_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  ____c_Il2CppVtbl vtbl;
};

class __c {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C95D40;
  static inline    ____c_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline ____c_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (____c_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  ____c_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::IO::Stream::__c*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  ModdingAPI::Exposed::System::Threading::SemaphoreSlim* _EnsureAsyncActiveSemaphoreInitialized_b__4_0() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Threading::SemaphoreSlim*(__fastcall*)(ModdingAPI::Exposed::System::IO::Stream::__c*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCA3FC0))(this);
  }
  int32_t _BeginReadInternal_b__39_0(Il2CppObject* _p0_) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::IO::Stream::__c*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCA4110))(this, _p0_);
  }
  ModdingAPI::Exposed::System::IAsyncResult* _BeginEndReadAsync_b__43_0(ModdingAPI::Exposed::System::IO::Stream* stream, ModdingAPI::Exposed::System::IO::Stream::ReadWriteParameters args, ModdingAPI::Exposed::System::AsyncCallback* callback, Il2CppObject* state) {
    return reinterpret_cast<ModdingAPI::Exposed::System::IAsyncResult*(__fastcall*)(ModdingAPI::Exposed::System::IO::Stream::__c*, ModdingAPI::Exposed::System::IO::Stream*, ModdingAPI::Exposed::System::IO::Stream::ReadWriteParameters, ModdingAPI::Exposed::System::AsyncCallback*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCA4210))(this, stream, args, callback, state);
  }
  int32_t _BeginEndReadAsync_b__43_1(ModdingAPI::Exposed::System::IO::Stream* stream, ModdingAPI::Exposed::System::IAsyncResult* asyncResult) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::IO::Stream::__c*, ModdingAPI::Exposed::System::IO::Stream*, ModdingAPI::Exposed::System::IAsyncResult*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCA4280))(this, stream, asyncResult);
  }
  int32_t _BeginWriteInternal_b__46_0(Il2CppObject* _p0_) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::IO::Stream::__c*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCA42B0))(this, _p0_);
  }
  void _RunReadWriteTaskWhenReady_b__47_0(ModdingAPI::Exposed::System::Threading::Tasks::Task* t, Il2CppObject* state) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::IO::Stream::__c*, ModdingAPI::Exposed::System::Threading::Tasks::Task*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCA43B0))(this, t, state);
  }
  ModdingAPI::Exposed::System::IAsyncResult* _BeginEndWriteAsync_b__53_0(ModdingAPI::Exposed::System::IO::Stream* stream, ModdingAPI::Exposed::System::IO::Stream::ReadWriteParameters args, ModdingAPI::Exposed::System::AsyncCallback* callback, Il2CppObject* state) {
    return reinterpret_cast<ModdingAPI::Exposed::System::IAsyncResult*(__fastcall*)(ModdingAPI::Exposed::System::IO::Stream::__c*, ModdingAPI::Exposed::System::IO::Stream*, ModdingAPI::Exposed::System::IO::Stream::ReadWriteParameters, ModdingAPI::Exposed::System::AsyncCallback*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCA44A0))(this, stream, args, callback, state);
  }
  ModdingAPI::Exposed::System::Threading::Tasks::VoidTaskResult _BeginEndWriteAsync_b__53_1(ModdingAPI::Exposed::System::IO::Stream* stream, ModdingAPI::Exposed::System::IAsyncResult* asyncResult) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Threading::Tasks::VoidTaskResult(__fastcall*)(ModdingAPI::Exposed::System::IO::Stream::__c*, ModdingAPI::Exposed::System::IO::Stream*, ModdingAPI::Exposed::System::IAsyncResult*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCA4510))(this, stream, asyncResult);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::IO::Stream::__c*> __9 = __CppStaticProperty<ModdingAPI::Exposed::System::IO::Stream::__c*>(
   []() { return &GetStaticClassInstance()->pStaticFields->__9; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Func_TResult_*> __9__4_0 = __CppStaticProperty<ModdingAPI::Exposed::System::Func_TResult_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->__9__4_0; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Func_T__TResult_*> __9__39_0 = __CppStaticProperty<ModdingAPI::Exposed::System::Func_T__TResult_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->__9__39_0; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Func_T1__T2__T3__T4__TResult_*> __9__43_0 = __CppStaticProperty<ModdingAPI::Exposed::System::Func_T1__T2__T3__T4__TResult_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->__9__43_0; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Func_T1__T2__TResult_*> __9__43_1 = __CppStaticProperty<ModdingAPI::Exposed::System::Func_T1__T2__TResult_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->__9__43_1; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Func_T__TResult_*> __9__46_0 = __CppStaticProperty<ModdingAPI::Exposed::System::Func_T__TResult_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->__9__46_0; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Action_T1__T2_*> __9__47_0 = __CppStaticProperty<ModdingAPI::Exposed::System::Action_T1__T2_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->__9__47_0; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Func_T1__T2__T3__T4__TResult_*> __9__53_0 = __CppStaticProperty<ModdingAPI::Exposed::System::Func_T1__T2__T3__T4__TResult_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->__9__53_0; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Func_T1__T2__TResult_*> __9__53_1 = __CppStaticProperty<ModdingAPI::Exposed::System::Func_T1__T2__TResult_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->__9__53_1; }
  );

  // Static methods:
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xCA3E80))();
  }
};
}