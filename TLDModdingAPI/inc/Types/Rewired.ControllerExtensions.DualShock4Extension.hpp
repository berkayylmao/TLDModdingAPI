// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Color.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Quaternion.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"


namespace ModdingAPI::Exposed::Rewired::ControllerExtensions {
struct __DualShock4Extension_Il2CppStaticFields {
};

struct __DualShock4Extension_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_Clear;
  VirtualInvokeData _5_SourceUpdated;
  VirtualInvokeData _6_UpdateData;
  VirtualInvokeData _7_Clone;
  VirtualInvokeData _8_get_vibrationMotorCount;
  VirtualInvokeData _9_SetVibration;
  VirtualInvokeData _10_SetVibration;
  VirtualInvokeData _11_SetVibration;
  VirtualInvokeData _12_SetVibration;
  VirtualInvokeData _13_GetVibration;
  VirtualInvokeData _14_StopVibration;
  VirtualInvokeData _15_GetAccelerometerValue;
  VirtualInvokeData _16_GetAccelerometerValueRaw;
  VirtualInvokeData _17_Rewired_ControllerExtensions_IDualShock4Extension_GetGyroscopeValueRaw;
  VirtualInvokeData _18_Rewired_ControllerExtensions_IDualShock4Extension_GetGyroscopeValue;
  VirtualInvokeData _19_GetOrientation;
  VirtualInvokeData _20_ResetOrientation;
  VirtualInvokeData _21_SetLightColor;
  VirtualInvokeData _22_SetLightColor;
  VirtualInvokeData _23_SetLightColor;
  VirtualInvokeData _24_get_maxTouches;
  VirtualInvokeData _25_get_touchCount;
  VirtualInvokeData _26_GetTouchId;
  VirtualInvokeData _27_GetTouchPosition;
  VirtualInvokeData _28_GetTouchPositionByTouchId;
  VirtualInvokeData _29_IsTouching;
  VirtualInvokeData _30_IsTouchingByTouchId;
  VirtualInvokeData _31_SetVibration;
  VirtualInvokeData _32_SetVibration;
};

struct __DualShock4Extension_Il2CppClass {
  Il2CppClass_1 _1;
  __DualShock4Extension_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __DualShock4Extension_Il2CppVtbl vtbl;
};

class DualShock4Extension {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C75348;
  static inline    __DualShock4Extension_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __DualShock4Extension_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__DualShock4Extension_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __DualShock4Extension_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::Rewired::Controller* Extension_eRiZsSFDNrFJxnreKaUhJBCLIKi;
  ModdingAPI::Exposed::Rewired::Interfaces::IControllerExtensionSource* Extension_ovJjdavCVCSQaRYvkKYaPvETjMV;
  int32_t _reInputId;
  ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension::hLQTMydbDwhaMjkYagjMfABYPlZ* ovJjdavCVCSQaRYvkKYaPvETjMV;
  bool UoXkAnIJxXijBfrPZfnpCsonNFA;
  ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::TimerAbs_array* KosJyRCFGBmXDFYPLNJGraJLqqn;

  // Member methods:
  ModdingAPI::Exposed::Rewired::Joystick* get_joystick() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Joystick*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x817280))(this);
  }
  void ::ctor(ModdingAPI::Exposed::Rewired::Drivers::Interfaces::IDriver_DualShock4* driver) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, ModdingAPI::Exposed::Rewired::Drivers::Interfaces::IDriver_DualShock4*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x817390))(this, driver);
  }
  void ::ctor(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension* source) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x817580))(this, source);
  }
  int32_t get_vibrationMotorCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x817760))(this);
  }
  void SetVibration(int32_t motorIndex, float motorLevel) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x817860))(this, motorIndex, motorLevel);
  }
  void SetVibration(int32_t motorIndex, float motorLevel, float duration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, int32_t, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x817880))(this, motorIndex, motorLevel, duration);
  }
  void SetVibration(int32_t motorIndex, float motorLevel, bool stopOtherMotors) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, int32_t, float, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8178A0))(this, motorIndex, motorLevel, stopOtherMotors);
  }
  void SetVibration(int32_t motorIndex, float motorLevel, float duration, bool stopOtherMotors) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, int32_t, float, float, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8178C0))(this, motorIndex, motorLevel, duration, stopOtherMotors);
  }
  float GetVibration(int32_t motorIndex) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x817B50))(this, motorIndex);
  }
  void StopVibration() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x817D40))(this);
  }
  float GetVibration(int32_t motor) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x817FD0))(this, motor);
  }
  void SetVibration(int32_t motor, float motorLevel) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8181C0))(this, motor, motorLevel);
  }
  void SetVibration(int32_t motor, float motorLevel, float duration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, int32_t, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8181E0))(this, motor, motorLevel, duration);
  }
  void SetVibration(int32_t motor, float motorLevel, bool stopOtherMotors) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, int32_t, float, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x818200))(this, motor, motorLevel, stopOtherMotors);
  }
  void SetVibration(int32_t motor, float motorLevel, float duration, bool stopOtherMotors) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, int32_t, float, float, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x818220))(this, motor, motorLevel, duration, stopOtherMotors);
  }
  void SetVibration(float leftMotorLevel, float rightMotorLevel) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x818740))(this, leftMotorLevel, rightMotorLevel);
  }
  void SetVibration(float leftMotorLevel, float rightMotorLevel, float leftMotorDuration, float rightMotorDuration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, float, float, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x818760))(this, leftMotorLevel, rightMotorLevel, leftMotorDuration, rightMotorDuration);
  }
  float get_lightColorRed() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x818AF0))(this);
  }
  void set_lightColorRed(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x818C80))(this, value);
  }
  float get_lightColorGreen() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x818DE0))(this);
  }
  void set_lightColorGreen(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x818F30))(this, value);
  }
  float get_lightColorBlue() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x818FF0))(this);
  }
  void set_lightColorBlue(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x819130))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Color GetLightColor() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Color(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x819280))(this);
  }
  void SetLightColor(ModdingAPI::Exposed::UnityEngine::Color color) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, ModdingAPI::Exposed::UnityEngine::Color)>(Helpers::Memory::GetInstance().MakeAbsolute(0x819470))(this, color);
  }
  void SetLightColor(float red, float green, float blue) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, float, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8196B0))(this, red, green, blue);
  }
  void SetLightColor(float red, float green, float blue, float intensity) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, float, float, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8197E0))(this, red, green, blue, intensity);
  }
  void SetLightFlash(float onDuration, float offDuration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x819A20))(this, onDuration, offDuration);
  }
  void StopLightFlash() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x819C10))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetAccelerometerValueRaw() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x819D70))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetAccelerometerValue() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81A080))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetLastGyroscopeValueRaw() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81A380))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetLastGyroscopeValue() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81A530))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetGyroscopeValueRaw() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81A840))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetGyroscopeValue() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81AB20))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Quaternion GetOrientation() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Quaternion(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81ACD0))(this);
  }
  void ResetOrientation() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81AEA0))(this);
  }
  int32_t get_maxTouches() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81AFF0))(this);
  }
  int32_t get_touchCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81B110))(this);
  }
  int32_t GetTouchId(int32_t index) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81B220))(this, index);
  }
  bool GetTouchPosition(int32_t index, ModdingAPI::Exposed::UnityEngine::Vector2 position) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, int32_t, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81B3D0))(this, index, position);
  }
  bool GetTouchPositionByTouchId(int32_t touchId, ModdingAPI::Exposed::UnityEngine::Vector2 position) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, int32_t, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81B590))(this, touchId, position);
  }
  bool GetTouchPositionAbsolute(int32_t index, ModdingAPI::Exposed::UnityEngine::Vector2 position) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, int32_t, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81B7E0))(this, index, position);
  }
  bool GetTouchPositionAbsoluteByTouchId(int32_t touchId, ModdingAPI::Exposed::UnityEngine::Vector2 position) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, int32_t, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81BB10))(this, touchId, position);
  }
  bool IsTouching(int32_t index) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81BE10))(this, index);
  }
  bool IsTouchingByTouchId(int32_t touchId) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81BFB0))(this, touchId);
  }
  float get_batteryLevel() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81C130))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 Rewired::ControllerExtensions::IDualShock4Extension::GetGyroscopeValue() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81C250))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 Rewired::ControllerExtensions::IDualShock4Extension::GetGyroscopeValueRaw() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81C280))(this);
  }
  void UpdateData(int32_t ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81C2B0))(this, );
  }
  void SourceUpdated(ModdingAPI::Exposed::Rewired::Interfaces::IControllerExtensionSource* ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, ModdingAPI::Exposed::Rewired::Interfaces::IControllerExtensionSource*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81C410))(this, );
  }
  ModdingAPI::Exposed::Rewired::Controller::Extension* Clone() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Controller::Extension*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81C4F0))(this);
  }
  void TjSCsCuKRPHYrJnKinvAHWyqKyl() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81C640))(this);
  }
  void kAgdYhzIkUgCLKYsnFgFdkDFBomp(int32_t , float , float ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerExtensions::DualShock4Extension*, int32_t, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81C780))(this, , , );
  }
};
}