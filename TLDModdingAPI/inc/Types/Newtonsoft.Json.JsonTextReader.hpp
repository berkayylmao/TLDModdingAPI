// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.Newtonsoft.Json.JsonPosition.hpp"
#include "ModdingAPI.Exposed.System.Nullable_T_.hpp"
#include "ModdingAPI.Exposed.Newtonsoft.Json.Utilities.StringBuffer.hpp"
#include "ModdingAPI.Exposed.Newtonsoft.Json.Utilities.StringReference.hpp"


namespace ModdingAPI::Exposed::Newtonsoft::Json {
struct __JsonTextReader_Il2CppStaticFields {
};

struct __JsonTextReader_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_System_IDisposable_Dispose;
  VirtualInvokeData _5_get_TokenType;
  VirtualInvokeData _6_get_Value;
  VirtualInvokeData _7_get_ValueType;
  VirtualInvokeData _8_get_Depth;
  VirtualInvokeData _9_get_Path;
  VirtualInvokeData _10_Read;
  VirtualInvokeData _11_ReadAsInt32;
  VirtualInvokeData _12_ReadAsString;
  VirtualInvokeData _13_ReadAsBytes;
  VirtualInvokeData _14_ReadAsDouble;
  VirtualInvokeData _15_ReadAsBoolean;
  VirtualInvokeData _16_ReadAsDecimal;
  VirtualInvokeData _17_ReadAsDateTime;
  VirtualInvokeData _18_ReadAsDateTimeOffset;
  VirtualInvokeData _19_Dispose;
  VirtualInvokeData _20_Close;
  VirtualInvokeData _21_HasLineInfo;
  VirtualInvokeData _22_get_LineNumber;
  VirtualInvokeData _23_get_LinePosition;
};

struct __JsonTextReader_Il2CppClass {
  Il2CppClass_1 _1;
  __JsonTextReader_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __JsonTextReader_Il2CppVtbl vtbl;
};

class JsonTextReader {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C6D940;
  static inline    __JsonTextReader_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __JsonTextReader_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__JsonTextReader_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __JsonTextReader_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  int32_t JsonReader__tokenType;
  Il2CppObject* JsonReader__value;
  wchar_t _quoteChar;
  int32_t _currentState;
  ModdingAPI::Exposed::Newtonsoft::Json::JsonPosition JsonReader__currentPosition;
  ModdingAPI::Exposed::System::Globalization::CultureInfo* JsonReader__culture;
  int32_t JsonReader__dateTimeZoneHandling;
  ModdingAPI::Exposed::System::Nullable_T_ JsonReader__maxDepth;
  bool JsonReader__hasExceededMaxDepth;
  int32_t _dateParseHandling;
  int32_t _floatParseHandling;
  System_String* JsonReader__dateFormatString;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* JsonReader__stack;
  bool JsonReader__CloseInput_k__BackingField;
  bool JsonReader__SupportMultipleContent_k__BackingField;
  ModdingAPI::Exposed::System::IO::TextReader* _reader;
  ModdingAPI::Exposed::System::Char_array* _chars;
  int32_t _charsUsed;
  int32_t _charPos;
  int32_t _lineStartPos;
  int32_t _lineNumber;
  bool _isEndOfFile;
  ModdingAPI::Exposed::Newtonsoft::Json::Utilities::StringBuffer _stringBuffer;
  ModdingAPI::Exposed::Newtonsoft::Json::Utilities::StringReference _stringReference;
  ModdingAPI::Exposed::Newtonsoft::Json::IArrayPool_T_* _arrayPool;
  ModdingAPI::Exposed::Newtonsoft::Json::Utilities::PropertyNameTable* NameTable;

  // Member methods:
  void ::ctor(ModdingAPI::Exposed::System::IO::TextReader* reader) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, ModdingAPI::Exposed::System::IO::TextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCF8500))(this, reader);
  }
  void EnsureBufferNotEmpty() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCF85E0))(this);
  }
  void OnNewLine(int32_t pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCF8630))(this, pos);
  }
  void ParseString(wchar_t quote, int32_t readType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, wchar_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCF8640))(this, quote, readType);
  }
  void ShiftBufferIfNeeded() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCF8BE0))(this);
  }
  int32_t ReadData(bool append) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCF8CC0))(this, append);
  }
  int32_t ReadData(bool append, int32_t charsRequired) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, bool, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCF8CD0))(this, append, charsRequired);
  }
  bool EnsureChars(int32_t relativePosition, bool append) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCF8FD0))(this, relativePosition, append);
  }
  bool ReadChars(int32_t relativePosition, bool append) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCF9070))(this, relativePosition, append);
  }
  bool Read() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCF9100))(this);
  }
  ModdingAPI::Exposed::System::Nullable_T_ ReadAsInt32() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Nullable_T_(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCF9420))(this);
  }
  ModdingAPI::Exposed::System::Nullable_T_ ReadAsDateTime() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Nullable_T_(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCF94D0))(this);
  }
  System_String* ReadAsString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCF9590))(this);
  }
  ModdingAPI::Exposed::System::Byte_array* ReadAsBytes() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Byte_array*(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCF9640))(this);
  }
  Il2CppObject* ReadStringValue(int32_t readType) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCF9C80))(this, readType);
  }
  ModdingAPI::Exposed::Newtonsoft::Json::JsonReaderException* CreateUnexpectedCharacterException(wchar_t c) {
    return reinterpret_cast<ModdingAPI::Exposed::Newtonsoft::Json::JsonReaderException*(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, wchar_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFA5B0))(this, c);
  }
  ModdingAPI::Exposed::System::Nullable_T_ ReadAsBoolean() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Nullable_T_(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFA6A0))(this);
  }
  void ProcessValueComma() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFB0D0))(this);
  }
  Il2CppObject* ReadNumberValue(int32_t readType) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFB190))(this, readType);
  }
  ModdingAPI::Exposed::System::Nullable_T_ ReadAsDateTimeOffset() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Nullable_T_(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFB810))(this);
  }
  ModdingAPI::Exposed::System::Nullable_T_ ReadAsDecimal() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Nullable_T_(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFB8E0))(this);
  }
  ModdingAPI::Exposed::System::Nullable_T_ ReadAsDouble() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Nullable_T_(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFB9B0))(this);
  }
  void HandleNull() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFBA70))(this);
  }
  void ReadFinished() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFBBF0))(this);
  }
  bool ReadNullChar() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFBDA0))(this);
  }
  void EnsureBuffer() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFBDF0))(this);
  }
  void ReadStringIntoBuffer(wchar_t quote) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, wchar_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFBE50))(this, quote);
  }
  void WriteCharToBuffer(wchar_t writeChar, int32_t lastWritePosition, int32_t writeToPosition) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, wchar_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFC510))(this, writeChar, lastWritePosition, writeToPosition);
  }
  wchar_t ParseUnicode() {
    return reinterpret_cast<wchar_t(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFC580))(this);
  }
  void ReadNumberIntoBuffer() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFC7A0))(this);
  }
  void ClearRecentString() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFCA30))(this);
  }
  bool ParsePostValue() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFCA50))(this);
  }
  bool ParseObject() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFCD80))(this);
  }
  bool ParseProperty() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFCF90))(this);
  }
  bool ValidIdentifierChar(wchar_t value) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, wchar_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFD2C0))(this, value);
  }
  void ParseUnquotedProperty() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFD380))(this);
  }
  bool ParseValue() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFD5B0))(this);
  }
  void ProcessLineFeed() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFE060))(this);
  }
  void ProcessCarriageReturn(bool append) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFE080))(this, append);
  }
  bool EatWhitespace(bool oneOrMore) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFE100))(this, oneOrMore);
  }
  void ParseConstructor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFE290))(this);
  }
  void ParseNumber(int32_t readType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFE700))(this, readType);
  }
  void ParseComment(bool setToken) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFFB50))(this, setToken);
  }
  void EndComment(bool setToken, int32_t initialPosition, int32_t endPosition) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, bool, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFFF70))(this, setToken, initialPosition, endPosition);
  }
  bool MatchValue(System_String* value) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCFFFC0))(this, value);
  }
  bool MatchValueWithTrailingSeparator(System_String* value) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD00110))(this, value);
  }
  bool IsSeparator(wchar_t c) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, wchar_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD00310))(this, c);
  }
  void ParseTrue() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD004C0))(this);
  }
  void ParseNull() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD005D0))(this);
  }
  void ParseUndefined() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD006C0))(this);
  }
  void ParseFalse() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD007B0))(this);
  }
  Il2CppObject* ParseNumberNegativeInfinity(int32_t readType) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD008C0))(this, readType);
  }
  Il2CppObject* ParseNumberPositiveInfinity(int32_t readType) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD00AB0))(this, readType);
  }
  Il2CppObject* ParseNumberNaN(int32_t readType) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD00CA0))(this, readType);
  }
  void Close() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD00E90))(this);
  }
  bool HasLineInfo() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x403F70))(this);
  }
  int32_t get_LineNumber() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD00F30))(this);
  }
  int32_t get_LinePosition() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonTextReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD00F80))(this);
  }

  // Static methods:
  static inline void BlockCopyChars(ModdingAPI::Exposed::System::Char_array* src, int32_t srcOffset, ModdingAPI::Exposed::System::Char_array* dst, int32_t dstOffset, int32_t count) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Char_array*, int32_t, ModdingAPI::Exposed::System::Char_array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC12A00))(src, srcOffset, dst, dstOffset, count);
  }
};
}