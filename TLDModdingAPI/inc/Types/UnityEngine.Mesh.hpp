// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Bounds.hpp"


namespace ModdingAPI::Exposed::UnityEngine {
struct __Mesh_Il2CppStaticFields {
};

struct __Mesh_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __Mesh_Il2CppClass {
  Il2CppClass_1 _1;
  __Mesh_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Mesh_Il2CppVtbl vtbl;
};

class Mesh {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C25140;
  static inline    __Mesh_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __Mesh_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__Mesh_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __Mesh_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106E710))(this);
  }
  int32_t get_indexFormat() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106E830))(this);
  }
  void set_indexFormat(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106E880))(this, value);
  }
  ModdingAPI::Exposed::System::Int32_array* GetTrianglesImpl(int32_t submesh, bool applyBaseVertex) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Int32_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106E8E0))(this, submesh, applyBaseVertex);
  }
  ModdingAPI::Exposed::System::Int32_array* GetIndicesImpl(int32_t submesh, bool applyBaseVertex) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Int32_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106E950))(this, submesh, applyBaseVertex);
  }
  void SetIndicesImpl(int32_t submesh, int32_t topology, ModdingAPI::Exposed::System::Array* indices, int32_t arraySize, bool calculateBounds, int32_t baseVertex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t, int32_t, ModdingAPI::Exposed::System::Array*, int32_t, bool, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106E9C0))(this, submesh, topology, indices, arraySize, calculateBounds, baseVertex);
  }
  void PrintErrorCantAccessChannel(int32_t ch) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106EA50))(this, ch);
  }
  bool HasChannel(int32_t ch) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106EAB0))(this, ch);
  }
  void SetArrayForChannelImpl(int32_t channel, int32_t format, int32_t dim, ModdingAPI::Exposed::System::Array* values, int32_t arraySize) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t, int32_t, int32_t, ModdingAPI::Exposed::System::Array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106EB10))(this, channel, format, dim, values, arraySize);
  }
  ModdingAPI::Exposed::System::Array* GetAllocArrayFromChannelImpl(int32_t channel, int32_t format, int32_t dim) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106EB90))(this, channel, format, dim);
  }
  int32_t get_blendShapeCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106EC10))(this);
  }
  void ClearBlendShapes() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106EC60))(this);
  }
  System_String* GetBlendShapeName(int32_t shapeIndex) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106ECB0))(this, shapeIndex);
  }
  int32_t GetBlendShapeFrameCount(int32_t shapeIndex) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106ED10))(this, shapeIndex);
  }
  float GetBlendShapeFrameWeight(int32_t shapeIndex, int32_t frameIndex) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106ED70))(this, shapeIndex, frameIndex);
  }
  void GetBlendShapeFrameVertices(int32_t shapeIndex, int32_t frameIndex, ModdingAPI::Exposed::UnityEngine::Vector3_array* deltaVertices, ModdingAPI::Exposed::UnityEngine::Vector3_array* deltaNormals, ModdingAPI::Exposed::UnityEngine::Vector3_array* deltaTangents) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t, int32_t, ModdingAPI::Exposed::UnityEngine::Vector3_array*, ModdingAPI::Exposed::UnityEngine::Vector3_array*, ModdingAPI::Exposed::UnityEngine::Vector3_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106EDE0))(this, shapeIndex, frameIndex, deltaVertices, deltaNormals, deltaTangents);
  }
  void AddBlendShapeFrame(System_String* shapeName, float frameWeight, ModdingAPI::Exposed::UnityEngine::Vector3_array* deltaVertices, ModdingAPI::Exposed::UnityEngine::Vector3_array* deltaNormals, ModdingAPI::Exposed::UnityEngine::Vector3_array* deltaTangents) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, System_String*, float, ModdingAPI::Exposed::UnityEngine::Vector3_array*, ModdingAPI::Exposed::UnityEngine::Vector3_array*, ModdingAPI::Exposed::UnityEngine::Vector3_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106EE60))(this, shapeName, frameWeight, deltaVertices, deltaNormals, deltaTangents);
  }
  ModdingAPI::Exposed::UnityEngine::BoneWeight_array* get_boneWeights() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::BoneWeight_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106EEF0))(this);
  }
  void set_boneWeights(ModdingAPI::Exposed::UnityEngine::BoneWeight_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::UnityEngine::BoneWeight_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106EF40))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Matrix4x4_array* get_bindposes() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Matrix4x4_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106EFA0))(this);
  }
  void set_bindposes(ModdingAPI::Exposed::UnityEngine::Matrix4x4_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::UnityEngine::Matrix4x4_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106EFF0))(this, value);
  }
  bool get_isReadable() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106F050))(this);
  }
  bool get_canAccess() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106F0A0))(this);
  }
  int32_t get_vertexCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106F0F0))(this);
  }
  int32_t get_subMeshCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106F140))(this);
  }
  void set_subMeshCount(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106F190))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Bounds get_bounds() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Bounds(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106F1F0))(this);
  }
  void set_bounds(ModdingAPI::Exposed::UnityEngine::Bounds value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::UnityEngine::Bounds)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106F280))(this, value);
  }
  void ClearImpl(bool keepVertexLayout) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106F2E0))(this, keepVertexLayout);
  }
  void RecalculateBoundsImpl() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106F340))(this);
  }
  void RecalculateNormalsImpl() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106F390))(this);
  }
  void MarkDynamicImpl() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106F3E0))(this);
  }
  void UploadMeshDataImpl(bool markNoLongerReadable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106F430))(this, markNoLongerReadable);
  }
  int32_t GetTopologyImpl(int32_t submesh) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106F490))(this, submesh);
  }
  int32_t GetUVChannel(int32_t uvIndex) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106F4F0))(this, uvIndex);
  }
  void SetSizedArrayForChannel(int32_t channel, int32_t format, int32_t dim, ModdingAPI::Exposed::System::Array* values, int32_t valuesCount) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t, int32_t, int32_t, ModdingAPI::Exposed::System::Array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106F680))(this, channel, format, dim, values, valuesCount);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3_array* get_vertices() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106F7B0))(this);
  }
  void set_vertices(ModdingAPI::Exposed::UnityEngine::Vector3_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::UnityEngine::Vector3_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106F860))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3_array* get_normals() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106F8F0))(this);
  }
  void set_normals(ModdingAPI::Exposed::UnityEngine::Vector3_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::UnityEngine::Vector3_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106F9B0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector4_array* get_tangents() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector4_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106FA40))(this);
  }
  void set_tangents(ModdingAPI::Exposed::UnityEngine::Vector4_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::UnityEngine::Vector4_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106FB00))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2_array* get_uv() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106FBE0))(this);
  }
  void set_uv(ModdingAPI::Exposed::UnityEngine::Vector2_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::UnityEngine::Vector2_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106FCA0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2_array* get_uv2() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106FD30))(this);
  }
  void set_uv2(ModdingAPI::Exposed::UnityEngine::Vector2_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::UnityEngine::Vector2_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106FDF0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2_array* get_uv3() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106FE80))(this);
  }
  void set_uv3(ModdingAPI::Exposed::UnityEngine::Vector2_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::UnityEngine::Vector2_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106FF40))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2_array* get_uv4() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106FFD0))(this);
  }
  void set_uv4(ModdingAPI::Exposed::UnityEngine::Vector2_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::UnityEngine::Vector2_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1070090))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Color_array* get_colors() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Color_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1070120))(this);
  }
  void set_colors(ModdingAPI::Exposed::UnityEngine::Color_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::UnityEngine::Color_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10701E0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Color32_array* get_colors32() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Color32_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10702C0))(this);
  }
  void set_colors32(ModdingAPI::Exposed::UnityEngine::Color32_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::UnityEngine::Color32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1070360))(this, value);
  }
  void SetVertices(ModdingAPI::Exposed::System::Collections::Generic::List_T_* inVertices) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1070430))(this, inVertices);
  }
  void SetNormals(ModdingAPI::Exposed::System::Collections::Generic::List_T_* inNormals) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10704C0))(this, inNormals);
  }
  void SetTangents(ModdingAPI::Exposed::System::Collections::Generic::List_T_* inTangents) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1070550))(this, inTangents);
  }
  void SetColors(ModdingAPI::Exposed::System::Collections::Generic::List_T_* inColors) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1070680))(this, inColors);
  }
  void SetUVs(int32_t channel, ModdingAPI::Exposed::System::Collections::Generic::List_T_* uvs) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10707B0))(this, channel, uvs);
  }
  void PrintErrorCantAccessIndices() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1070920))(this);
  }
  bool CheckCanAccessSubmesh(int32_t submesh, bool errorAboutTriangles) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1070A20))(this, submesh, errorAboutTriangles);
  }
  bool CheckCanAccessSubmeshTriangles(int32_t submesh) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1070C00))(this, submesh);
  }
  bool CheckCanAccessSubmeshIndices(int32_t submesh) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1070C10))(this, submesh);
  }
  ModdingAPI::Exposed::System::Int32_array* get_triangles() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Int32_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1070C20))(this);
  }
  void set_triangles(ModdingAPI::Exposed::System::Int32_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1070D40))(this, value);
  }
  ModdingAPI::Exposed::System::Int32_array* GetTriangles(int32_t submesh) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Int32_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1070DF0))(this, submesh);
  }
  ModdingAPI::Exposed::System::Int32_array* GetTriangles(int32_t submesh, bool applyBaseVertex) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Int32_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1070EB0))(this, submesh, applyBaseVertex);
  }
  ModdingAPI::Exposed::System::Int32_array* GetIndices(int32_t submesh) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Int32_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1070F80))(this, submesh);
  }
  ModdingAPI::Exposed::System::Int32_array* GetIndices(int32_t submesh, bool applyBaseVertex) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Int32_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1071080))(this, submesh, applyBaseVertex);
  }
  void SetTrianglesImpl(int32_t submesh, ModdingAPI::Exposed::System::Array* triangles, int32_t arraySize, bool calculateBounds, int32_t baseVertex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t, ModdingAPI::Exposed::System::Array*, int32_t, bool, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1071180))(this, submesh, triangles, arraySize, calculateBounds, baseVertex);
  }
  void SetTriangles(ModdingAPI::Exposed::System::Int32_array* triangles, int32_t submesh) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::System::Int32_array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1071220))(this, triangles, submesh);
  }
  void SetTriangles(ModdingAPI::Exposed::System::Int32_array* triangles, int32_t submesh, bool calculateBounds, int32_t baseVertex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::System::Int32_array*, int32_t, bool, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10712A0))(this, triangles, submesh, calculateBounds, baseVertex);
  }
  void SetTriangles(ModdingAPI::Exposed::System::Collections::Generic::List_T_* triangles, int32_t submesh) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1071320))(this, triangles, submesh);
  }
  void SetTriangles(ModdingAPI::Exposed::System::Collections::Generic::List_T_* triangles, int32_t submesh, bool calculateBounds, int32_t baseVertex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t, bool, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1071460))(this, triangles, submesh, calculateBounds, baseVertex);
  }
  void SetIndices(ModdingAPI::Exposed::System::Int32_array* indices, int32_t topology, int32_t submesh, bool calculateBounds) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::System::Int32_array*, int32_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10715A0))(this, indices, topology, submesh, calculateBounds);
  }
  void SetIndices(ModdingAPI::Exposed::System::Int32_array* indices, int32_t topology, int32_t submesh, bool calculateBounds, int32_t baseVertex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::System::Int32_array*, int32_t, int32_t, bool, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1071630))(this, indices, topology, submesh, calculateBounds, baseVertex);
  }
  void Clear(bool keepVertexLayout) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106F2E0))(this, keepVertexLayout);
  }
  void Clear() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10716C0))(this);
  }
  void RecalculateBounds() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1071720))(this);
  }
  void RecalculateNormals() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10718B0))(this);
  }
  void MarkDynamic() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1071A40))(this);
  }
  void UploadMeshData(bool markNoLongerReadable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1071AE0))(this, markNoLongerReadable);
  }
  int32_t GetTopology(int32_t submesh) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1071B90))(this, submesh);
  }
  void get_bounds_Injected(ModdingAPI::Exposed::UnityEngine::Bounds ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::UnityEngine::Bounds)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1071D10))(this, ret);
  }
  void set_bounds_Injected(ModdingAPI::Exposed::UnityEngine::Bounds value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::UnityEngine::Bounds)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1071D70))(this, value);
  }

  // Static methods:
  static inline void Internal_Create(ModdingAPI::Exposed::UnityEngine::Mesh* mono) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106E7E0))(mono);
  }
  static inline int32_t DefaultDimensionForChannel(int32_t channel) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106F5A0))(channel);
  }
};
}