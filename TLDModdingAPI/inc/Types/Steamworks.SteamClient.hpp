// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.Steamworks.HSteamPipe.hpp"
#include "ModdingAPI::Exposed::Steamworks::HSteamPipe.hpp"
#include "ModdingAPI.Exposed.Steamworks.HSteamUser.hpp"
#include "ModdingAPI::Exposed::Steamworks::HSteamUser.hpp"


namespace ModdingAPI::Exposed::Steamworks {
struct __SteamClient_Il2CppStaticFields {
};

struct __SteamClient_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __SteamClient_Il2CppClass {
  Il2CppClass_1 _1;
  __SteamClient_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __SteamClient_Il2CppVtbl vtbl;
};

class SteamClient {
public:
  // Il2Cpp fields:
  __SteamClient_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Static methods:
  static inline ModdingAPI::Exposed::Steamworks::HSteamPipe CreateSteamPipe() {
    return reinterpret_cast<ModdingAPI::Exposed::Steamworks::HSteamPipe(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D24B0))();
  }
  static inline bool BReleaseSteamPipe(ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamPipe)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D24D0))(hSteamPipe);
  }
  static inline ModdingAPI::Exposed::Steamworks::HSteamUser ConnectToGlobalUser(ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe) {
    return reinterpret_cast<ModdingAPI::Exposed::Steamworks::HSteamUser(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamPipe)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D2500))(hSteamPipe);
  }
  static inline ModdingAPI::Exposed::Steamworks::HSteamUser CreateLocalUser(ModdingAPI::Exposed::Steamworks::HSteamPipe phSteamPipe, int32_t eAccountType) {
    return reinterpret_cast<ModdingAPI::Exposed::Steamworks::HSteamUser(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamPipe, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D2530))(phSteamPipe, eAccountType);
  }
  static inline void ReleaseUser(ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, ModdingAPI::Exposed::Steamworks::HSteamUser hUser) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamPipe, ModdingAPI::Exposed::Steamworks::HSteamUser)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D2570))(hSteamPipe, hUser);
  }
  static inline intptr_t GetISteamUser(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D25B0))(hSteamUser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamGameServer(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D27E0))(hSteamUser, hSteamPipe, pchVersion);
  }
  static inline void SetLocalIPBinding(uint32_t unIP, uint16_t usPort) {
    reinterpret_cast<void(__fastcall*)(uint32_t, uint16_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D2A10))(unIP, usPort);
  }
  static inline intptr_t GetISteamFriends(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D2A50))(hSteamUser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamUtils(ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D2C80))(hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamMatchmaking(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D2EA0))(hSteamUser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamMatchmakingServers(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D30D0))(hSteamUser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamGenericInterface(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D3300))(hSteamUser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamUserStats(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D3530))(hSteamUser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamGameServerStats(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamuser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D3760))(hSteamuser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamApps(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D3990))(hSteamUser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamNetworking(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D3BC0))(hSteamUser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamRemoteStorage(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamuser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D3DF0))(hSteamuser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamScreenshots(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamuser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D4020))(hSteamuser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamGameSearch(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamuser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D4250))(hSteamuser, hSteamPipe, pchVersion);
  }
  static inline uint32_t GetIPCCallCount() {
    return reinterpret_cast<uint32_t(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D4480))();
  }
  static inline void SetWarningMessageHook(ModdingAPI::Exposed::Steamworks::SteamAPIWarningMessageHook_t* pFunction) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Steamworks::SteamAPIWarningMessageHook_t*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D44A0))(pFunction);
  }
  static inline bool BShutdownIfAllPipesClosed() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D44D0))();
  }
  static inline intptr_t GetISteamHTTP(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamuser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D44F0))(hSteamuser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamController(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D4720))(hSteamUser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamUGC(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D4950))(hSteamUser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamAppList(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D4B80))(hSteamUser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamMusic(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamuser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D4DB0))(hSteamuser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamMusicRemote(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamuser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D4FE0))(hSteamuser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamHTMLSurface(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamuser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D5210))(hSteamuser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamInventory(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamuser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D5440))(hSteamuser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamVideo(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamuser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D5670))(hSteamuser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamParentalSettings(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamuser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D58A0))(hSteamuser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamInput(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D5AD0))(hSteamUser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamParties(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D5D00))(hSteamUser, hSteamPipe, pchVersion);
  }
  static inline intptr_t GetISteamRemotePlay(ModdingAPI::Exposed::Steamworks::HSteamUser hSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe hSteamPipe, System_String* pchVersion) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Steamworks::HSteamUser, ModdingAPI::Exposed::Steamworks::HSteamPipe, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26D5F30))(hSteamUser, hSteamPipe, pchVersion);
  }
};
}