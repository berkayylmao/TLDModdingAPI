// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System::Xml::Schema {
struct __SchemaNames_Il2CppStaticFields {
};

struct __SchemaNames_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __SchemaNames_Il2CppClass {
  Il2CppClass_1 _1;
  __SchemaNames_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __SchemaNames_Il2CppVtbl vtbl;
};

class SchemaNames {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C8A120;
  static inline    __SchemaNames_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __SchemaNames_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__SchemaNames_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __SchemaNames_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::System::Xml::XmlNameTable* nameTable;
  System_String* NsDataType;
  System_String* NsDataTypeAlias;
  System_String* NsDataTypeOld;
  System_String* NsXml;
  System_String* NsXmlNs;
  System_String* NsXdr;
  System_String* NsXdrAlias;
  System_String* NsXs;
  System_String* NsXsi;
  System_String* XsiType;
  System_String* XsiNil;
  System_String* XsiSchemaLocation;
  System_String* XsiNoNamespaceSchemaLocation;
  System_String* XsdSchema;
  System_String* XdrSchema;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnPCData;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXml;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXmlNs;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnDtDt;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXmlLang;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnName;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnType;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnMaxOccurs;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnMinOccurs;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnInfinite;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnModel;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnOpen;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnClosed;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnContent;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnMixed;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnEmpty;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnEltOnly;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnTextOnly;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnOrder;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnSeq;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnOne;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnMany;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnRequired;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnYes;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnNo;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnString;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnID;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnIDRef;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnIDRefs;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnEntity;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnEntities;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnNmToken;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnNmTokens;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnEnumeration;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnDefault;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXdrSchema;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXdrElementType;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXdrElement;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXdrGroup;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXdrAttributeType;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXdrAttribute;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXdrDataType;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXdrDescription;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXdrExtends;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXdrAliasSchema;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnDtType;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnDtValues;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnDtMaxLength;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnDtMinLength;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnDtMax;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnDtMin;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnDtMinExclusive;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnDtMaxExclusive;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnTargetNamespace;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnVersion;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnFinalDefault;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnBlockDefault;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnFixed;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnAbstract;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnBlock;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnSubstitutionGroup;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnFinal;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnNillable;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnRef;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnBase;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnDerivedBy;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnNamespace;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnProcessContents;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnRefer;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnPublic;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnSystem;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnSchemaLocation;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnValue;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnUse;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnForm;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnElementFormDefault;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnAttributeFormDefault;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnItemType;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnMemberTypes;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXPath;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdSchema;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdAnnotation;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdInclude;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdImport;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdElement;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdAttribute;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdAttributeGroup;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdAnyAttribute;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdGroup;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdAll;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdChoice;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdSequence;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdAny;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdNotation;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdSimpleType;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdComplexType;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdUnique;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdKey;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdKeyRef;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdSelector;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdField;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdMinExclusive;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdMinInclusive;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdMaxInclusive;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdMaxExclusive;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdTotalDigits;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdFractionDigits;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdLength;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdMinLength;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdMaxLength;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdEnumeration;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdPattern;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdDocumentation;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdAppinfo;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnSource;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdComplexContent;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdSimpleContent;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdRestriction;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdExtension;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdUnion;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdList;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdWhiteSpace;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdRedefine;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnXsdAnyType;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName_array* TokenToQName;

  // Member methods:
  void ::ctor(ModdingAPI::Exposed::System::Xml::XmlNameTable* nameTable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaNames*, ModdingAPI::Exposed::System::Xml::XmlNameTable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6C5030))(this, nameTable);
  }
  void CreateTokenToQNameTable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaNames*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6C7FC0))(this);
  }
  int32_t SchemaTypeFromRoot(System_String* localName, System_String* ns) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaNames*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6CB4B0))(this, localName, ns);
  }
  bool IsXSDRoot(System_String* localName, System_String* ns) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaNames*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6CB570))(this, localName, ns);
  }
  bool IsXDRRoot(System_String* localName, System_String* ns) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaNames*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6CB600))(this, localName, ns);
  }
};
}