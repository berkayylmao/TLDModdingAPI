// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Quaternion.hpp"


namespace ModdingAPI::Exposed {
struct __PlayerAnimation_Il2CppStaticFields {
  int32_t NumStates;
};

struct __PlayerAnimation_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __PlayerAnimation_Il2CppClass {
  Il2CppClass_1 _1;
  __PlayerAnimation_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __PlayerAnimation_Il2CppVtbl vtbl;
};

class PlayerAnimation {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C22388;
  static inline    __PlayerAnimation_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __PlayerAnimation_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__PlayerAnimation_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __PlayerAnimation_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  bool m_EnableAnimationDrivenViewBob;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Root;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_WorldSpaceView;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_WeaponSpaceView;
  ModdingAPI::Exposed::ClothingSpawner* m_ClothingSpawner;
  ModdingAPI::Exposed::PlayerAnimation::SerializedParams* m_SerializedParams;
  ModdingAPI::Exposed::UnityEngine::Camera* m_WeaponCamera;
  ModdingAPI::Exposed::UnityEngine::Camera* m_InspectCamera;
  float m_WeaponCameraFOV;
  float m_InspectCameraFOV;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_CameraSpaceObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_CameraBone;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_CameraFOV;
  bool m_DebugOverrideCameraFov;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_OverrideCameraFOV;
  float m_MaxBlurSize;
  ModdingAPI::Exposed::UnityEngine::Animator* m_Animator;
  ModdingAPI::Exposed::StruggleMeshTable* m_StruggleMeshTable;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_FPMesh_MaleHands;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_FPMesh_FemaleHands;
  ModdingAPI::Exposed::UnityEngine::GameObject_array* m_ClothingItems;
  ModdingAPI::Exposed::UnityEngine::GameObject_array* m_ActiveTorsoClothing;
  ModdingAPI::Exposed::UnityEngine::GameObject_array* m_ActiveHandsClothing;
  ModdingAPI::Exposed::UnityEngine::GameObject_array* m_ActiveStoryTorsoClothing;
  ModdingAPI::Exposed::UnityEngine::GameObject_array* m_ActiveStoryHandsClothing;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_RightPropPoint;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_LeftPropPoint;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ShoulderPropPoint;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ArrowSpawnPropPoint;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ArrowFirePropPoint;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ShoulderJoint;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_CameraWeaponOffset;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_GAMEDATA;
  float m_LookDegreesPerSecond;
  int32_t m_CameraBasedHandPositioningMode;
  bool m_DisableCameraTracking;
  ModdingAPI::Exposed::CameraBasedJointPositioning* m_CameraTracking_Standard;
  ModdingAPI::Exposed::CameraBasedJointPositioning* m_CameraTracking_Aiming;
  ModdingAPI::Exposed::CameraBasedJointPositioning* m_CameraTracking_None;
  float m_DampedVelocitySeconds;
  int32_t m_FingersLayerIndex;
  int32_t m_HipLayerIndex;
  int32_t m_ShoulderOffsetLayerIndex;
  bool m_ItemEquippedByPlayer;
  ModdingAPI::Exposed::PlayerStateTransitions* m_PlayerStateTransitions;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_HandsMesh;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_EnabledWeapon;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_GlobalAnimators;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* m_AnimationEventDictionary;
  ModdingAPI::Exposed::FirstPersonWeapon* m_EquippedFirstPersonWeaponRightHand;
  ModdingAPI::Exposed::FirstPersonWeapon* m_EquippedFirstPersonWeaponLeftHand;
  ModdingAPI::Exposed::FirstPersonWeapon* m_EquippedFirstPersonWeaponShoulder;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_LookAtTarget;
  ModdingAPI::Exposed::UnityEngine::Vector2 m_StartCameraAngles;
  bool m_LookAtActive;
  bool m_StartHasBeenCalled;
  int32_t m_State;
  int32_t m_PriorState;
  ModdingAPI::Exposed::UnityEngine::Vector3_array* m_LastVelocities;
  ModdingAPI::Exposed::System::Single_array* m_LastVelocitiesTimestamps;
  int32_t m_DampedVelocityIndex;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_Aim_Complete;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_Aim_Cancel_Complete;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_AnimatedInteractionComplete;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_BrandishBegin;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_BrandishMidSwing;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_Ignite;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_IgniteComplete;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_Equip_ShowItem;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_Equip_Complete;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_Fire_FX;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_Fire_Complete;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_Hidden;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_HiddenComplete;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_ExtinguishFX;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_PlacementMode_PlaceItem;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_PlacementMode_PlaceComplete;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_RoundLoaded;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_ClipLoaded;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_RoundsUnloaded;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_ReloadComplete;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_Throw_ReleaseItem;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_UseNow;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_UseComplete;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_StruggleRevolverFired;
  ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* m_AnimationEvent_Generic_StruggleRevolverFiredComplete;
  int32_t m_AnimParameter_CameraPitch;
  int32_t m_AnimParameter_HasUnloadedAmmo;
  int32_t m_AnimParameter_IsAiming;
  int32_t m_AnimParameter_IsBurnedOut;
  int32_t m_AnimParameter_IsEquipped;
  int32_t m_AnimParameter_IsJammed;
  int32_t m_AnimParameter_IsLightSource;
  int32_t m_AnimParameter_Is_Limping_Left;
  int32_t m_AnimParameter_Is_Limping_Right;
  int32_t m_AnimParameter_Is_Climbing;
  int32_t m_AnimParameter_IsLoaded;
  int32_t m_AnimParameter_IsSurvivor;
  int32_t m_AnimParameter_IsWeapon;
  int32_t m_AnimParameter_Lightsource_IgniterIsFire;
  int32_t m_AnimParameter_Lightsource_Lit;
  int32_t m_AnimParameter_MovementForward;
  int32_t m_AnimParameter_MovementForwardDamped;
  int32_t m_AnimParameter_MovementSideways;
  int32_t m_AnimParameter_MovementSidewaysDamped;
  int32_t m_AnimParameter_MovementSpeed;
  int32_t m_AnimParameter_MovementInput;
  int32_t m_AnimParameter_ReloadCount;
  int32_t m_AnimParameter_RoundsLoaded;
  int32_t m_AnimParameter_SprintInput;
  int32_t m_AnimParameter_Stamina;
  int32_t m_AnimParameter_StumbleId;
  int32_t m_AnimParameter_Trigger_Breakdown_Intro;
  int32_t m_AnimParameter_Trigger_Breakdown_Cancel;
  int32_t m_AnimParameter_Trigger_Breakdown_StartLoop;
  int32_t m_AnimParameter_Trigger_Breakdown_ExitLoop;
  int32_t m_AnimParameter_Trigger_Generic_Aim;
  int32_t m_AnimParameter_Trigger_Generic_Aim_Cancel;
  int32_t m_AnimParameter_Trigger_Generic_Brandish;
  int32_t m_AnimParameter_Trigger_Generic_Equip;
  int32_t m_AnimParameter_Trigger_Generic_Equip_Immediate;
  int32_t m_AnimParameter_Trigger_Generic_Extinguish;
  int32_t m_AnimParameter_Trigger_Generic_Extinguish_Cancel;
  int32_t m_AnimParameter_Trigger_Generic_Fire;
  int32_t m_AnimParameter_Trigger_Generic_Hip_Fire;
  int32_t m_AnimParameter_Trigger_Generic_Ignite;
  int32_t m_AnimParameter_Trigger_Generic_Ignite_Confirm;
  int32_t m_AnimParameter_Trigger_Generic_Ignite_Cancel;
  int32_t m_AnimParameter_Trigger_Generic_Kill;
  int32_t m_AnimParameter_Trigger_Generic_PlacementMode_Pickup;
  int32_t m_AnimParameter_Trigger_Generic_PlacementMode_Place;
  int32_t m_AnimParameter_Trigger_Generic_Reload_Single;
  int32_t m_AnimParameter_Trigger_Generic_Stow;
  int32_t m_AnimParameter_Trigger_Generic_Throw;
  int32_t m_AnimParameter_Trigger_Generic_Unstow;
  int32_t m_AnimParameter_Trigger_Generic_Unequip;
  int32_t m_AnimParameter_Trigger_Limp;
  int32_t m_AnimParameter_Trigger_Struggle_Start;
  int32_t m_AnimParameter_Trigger_Struggle_End;
  int32_t m_AnimParameter_Trigger_Stumble;
  int32_t m_AnimParameter_Trigger_Generic_Use;
  int32_t m_AnimParameter_WeaponId;
  int32_t m_AnimParameter_WeaponId_Float;
  int32_t m_AnimParameter_WeaponFatigue;
  int32_t m_AnimParameter_WildlifeId;
  int32_t m_AnimParameter_SetSpearMultiplier;
  int32_t m_AnimParameter_RecoverSpearMultiplier;
  int32_t m_AnimParameter_PlaybackSpeedMultiplier;
  int32_t m_AnimParameter_AimStaminaDepleted;
  float m_DefaultPlaybackSpeedMultiplier;
  int32_t m_AnimParameter_Trigger_Spear_Struggle_Entry;
  int32_t m_AnimParameter_Trigger_Spear_Exit_Success;
  int32_t m_AnimParameter_Trigger_Spear_Exit_Fail;
  int32_t m_AnimParameter_Trigger_Spear_Exit_Success_Death;
  int32_t m_AnimParameter_Struggle_Revolver_Available;
  int32_t m_AnimParameter_Struggle_Fire_Revolver;
  int32_t m_AnimParameter_Trigger_WolfPassBite;
  int32_t m_AnimState_Idle;
  float m_FadeAudioCinematicGoal;
  int32_t m_CameraLayer;
  int32_t m_HipAndShoulderOffsetLayerDisableCount;
  float m_HipAndShoulderOffsetLayerTimer;
  bool m_HipAndShoulderOffsetLayerFadeOutRequested;
  bool m_HipAndShoulderOffsetLayerOverride;
  ModdingAPI::Exposed::PlayerAnimation::AnimatorParametersCache* m_AnimatorParametersCache;
  ModdingAPI::Exposed::CinematicManager* m_FPCinematicManager;
  bool m_CinematicRefPotsitionInitialized;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_WorldSpaceViewRefPosition;
  ModdingAPI::Exposed::UnityEngine::Quaternion m_WorldSpaceViewRefRotation;
  bool m_EnableMotionFromRef;
  int32_t m_AnimatedInteractionLayersDisabled;

  // Member methods:
  void Awake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DCC980))(this);
  }
  void OnDestroy() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DCCB50))(this);
  }
  void OnEnvironmentChanged(bool isIndoor) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DCCD20))(this, isIndoor);
  }
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DCCF50))(this);
  }
  System_String* Serialize() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DCF890))(this);
  }
  void Deserialize(System_String* text) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DCF930))(this, text);
  }
  void RequestMotionFromRef(ModdingAPI::Exposed::UnityEngine::Vector3 refPosition, ModdingAPI::Exposed::UnityEngine::Quaternion refRotation) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Quaternion)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DCFA10))(this, refPosition, refRotation);
  }
  bool IsMotionFromRefEnabled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DCFA40))(this);
  }
  bool IsHipShoulderLayerDisabledPending() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DCFA50))(this);
  }
  void EnableHipAndShoulderOffsetLayerOverride(bool enable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DCFA60))(this, enable);
  }
  void MaybeFadeoutHipShoulder(ModdingAPI::Exposed::UnityEngine::Vector3 localVelocity) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DCFA70))(this, localVelocity);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DCFE60))(this);
  }
  void OnAnimatorMove() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD0860))(this);
  }
  void DisableMotionFromRef() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD1070))(this);
  }
  void Reset() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD1080))(this);
  }
  void ResetBoolIfExists(int32_t hash) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD12F0))(this, hash);
  }
  void ResetWeaponParams() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD1340))(this);
  }
  void ResetParams() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD1470))(this);
  }
  void ResetStruggleStartEnd() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD18F0))(this);
  }
  bool FirstPersonHandsEnabled(ModdingAPI::Exposed::GearItem* gearItem) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD1920))(this, gearItem);
  }
  bool FirstPersonHandsEnabled(int32_t weaponID) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD1A20))(this, weaponID);
  }
  void ClearParametersCache() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD1BB0))(this);
  }
  bool MaybeSetState(int32_t state) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD1C50))(this, state);
  }
  int32_t GetState() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C1D480))(this);
  }
  bool GetAnimatorIsIdle() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD2110))(this);
  }
  bool TryGetFXObject(System_String* name, ModdingAPI::Exposed::UnityEngine::GameObject* fxGameObject) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, System_String*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD21B0))(this, name, fxGameObject);
  }
  bool GetFirstPersonWeaponCanSwitch() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD2370))(this);
  }
  void SaveCameraBasedHandPositioning(ModdingAPI::Exposed::UnityEngine::RuntimeAnimatorController* controller) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::UnityEngine::RuntimeAnimatorController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD2450))(this, controller);
  }
  void LoadCameraBasedHandPositioning(ModdingAPI::Exposed::UnityEngine::RuntimeAnimatorController* controller) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::UnityEngine::RuntimeAnimatorController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD25B0))(this, controller);
  }
  void RestoreCameraBasedHandPositioning() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD2710))(this);
  }
  void UpdateShoulderRotation() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD2750))(this);
  }
  bool AnimIsPlaying(int32_t id) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD2AE0))(this, id);
  }
  void CancelReload() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD2B80))(this);
  }
  void Trigger_Struggle_Start(int32_t weaponType, int32_t wildlifeType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD2C40))(this, weaponType, wildlifeType);
  }
  void Trigger_Spear_Struggle_Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD2D60))(this);
  }
  void SetParameterSetSpearMultiplier(float multiplier) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD2DF0))(this, multiplier);
  }
  void SetParameterRecoverSpearMultiplier(float multiplier) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD2E80))(this, multiplier);
  }
  void Trigger_Struggle_End() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD2F10))(this);
  }
  bool Trigger_Brandish(ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* brandishBegin, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* midSwingEvent) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD2F90))(this, brandishBegin, midSwingEvent);
  }
  void OnAnimationEvent_BrandishMidSwing() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD30B0))(this);
  }
  void OnAnimationEvent_BrandishComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD30E0))(this);
  }
  void OnAnimationEvent_BrandishBegin() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD30F0))(this);
  }
  bool BrandishIsPlaying() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD3120))(this);
  }
  void Trigger_AnimatedInteraction(System_String* trigger, bool weaponSpace, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* onCompleteCallback, int32_t layersEnabled) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, System_String*, bool, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD3130))(this, trigger, weaponSpace, onCompleteCallback, layersEnabled);
  }
  void Trigger_AnimatedInteraction(int32_t trigger, bool weaponSpace, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* onCompleteCallback, int32_t layersDisabled) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t, bool, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD31C0))(this, trigger, weaponSpace, onCompleteCallback, layersDisabled);
  }
  void DisableHipAndShoulderOffsetLayer() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD3410))(this);
  }
  void ResetHipAndShoulderOffsetLayer() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD3430))(this);
  }
  void ForceHipAndShoulderOffsetLayerWeigth(float weigth) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD3500))(this, weigth);
  }
  void UpdateHipAndShoulderOffsetLayerWeigth(float weigth) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD3510))(this, weigth);
  }
  void UpdateHipAndShoulderOffsetLayer(bool enabled) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD3650))(this, enabled);
  }
  void OnAnimationEvent_AnimatedInteractionComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD3670))(this);
  }
  void Trigger_Breakdown_Intro(int32_t weaponType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD3810))(this, weaponType);
  }
  void Trigger_Breakdown_StartLoop() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD3940))(this);
  }
  void Trigger_Breakdown_Cancel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD3A50))(this);
  }
  void Trigger_Breakdown_ExitLoop() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD3B60))(this);
  }
  void Trigger_Limp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD3C70))(this);
  }
  void Trigger_Stumble(int32_t stumbleId) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD3D80))(this, stumbleId);
  }
  void Trigger_Generic_Equip(ModdingAPI::Exposed::GearItem* gearItem, bool immediate, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* showItemEventCallback, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* equepCompleteEventCallback) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::GearItem*, bool, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD3EC0))(this, gearItem, immediate, showItemEventCallback, equepCompleteEventCallback);
  }
  void OnAnimationEvent_Generic_Equip_ShowItem() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD49B0))(this);
  }
  void OnAnimationEvent_Generic_Equip_Complete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD49F0))(this);
  }
  bool Trigger_Generic_Unequip(ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* extinguishFxCallback, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* hideCallback, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* completeCallback) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD4B70))(this, extinguishFxCallback, hideCallback, completeCallback);
  }
  void OnMatchBurntOut() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD4D60))(this);
  }
  void DropCurrentItemInHand() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD4DE0))(this);
  }
  void OnAnimationEvent_Generic_Hidden() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD5080))(this);
  }
  void OnAnimationEvent_Generic_HiddenComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD51A0))(this);
  }
  void Trigger_Generic_Stow() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD5330))(this);
  }
  void OnAnimationEvent_Generic_Stow() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD5400))(this);
  }
  void Trigger_Generic_Unstow() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD5410))(this);
  }
  void Trigger_BearSpearStruggleAnimation(int32_t outcome) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD54E0))(this, outcome);
  }
  void Trigger_WolfPassBite() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD5520))(this);
  }
  void SetStruggleRevolverAvailableToFire(bool isAvailable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD5530))(this, isAvailable);
  }
  void SetStruggleRevolverFired(bool hasFired, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* onRevolverFired, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* onRevolverFiredComplete) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, bool, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD5550))(this, hasFired, onRevolverFired, onRevolverFiredComplete);
  }
  void OnAnimationEvent_Generic_Unstow_Complete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD30E0))(this);
  }
  void Trigger_Generic_Ignite(bool isFire) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD5640))(this, isFire);
  }
  void Trigger_Generic_Ignite_Confirm(ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* ignite_FX_Callback, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* ignite_Complete_Callback) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD5790))(this, ignite_FX_Callback, ignite_Complete_Callback);
  }
  void Trigger_Generic_Ignite_Cancel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD5880))(this);
  }
  void OnAnimationEvent_Generic_Ignite() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD5980))(this);
  }
  void OnAnimationEvent_Generic_IgniteComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD59B0))(this);
  }
  bool Trigger_Generic_Extinguish(ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* animationEventCallback) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD59F0))(this, animationEventCallback);
  }
  void Trigger_Generic_Extinguish_Cancel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD5B10))(this);
  }
  void OnAnimationEvent_Generic_Extinguish_FX() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD5BE0))(this);
  }
  void OnAnimationEvent_Generic_Extinguish_Complete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD30E0))(this);
  }
  void Trigger_Generic_PlacementMode_Place(ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* placementPlaceAnimationEventCallback, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* placementCompleteAnimationEventCallback) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD5DC0))(this, placementPlaceAnimationEventCallback, placementCompleteAnimationEventCallback);
  }
  void OnAnimationEvent_Generic_PlacementMode_HideItemInHands() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD5EB0))(this);
  }
  void OnAnimationEvent_Generic_PlacementMode_SpawnItemInWorld() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD5EC0))(this);
  }
  void OnAnimationEvent_Generic_PlacementMode_PlaceItem_Complete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD5EF0))(this);
  }
  void Update_Lightsource_Lit(bool lit, bool isFresh) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD5FF0))(this, lit, isFresh);
  }
  void Trigger_Generic_Fire(int32_t roundsInClip, bool willJam, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* fxEventCallback, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* completeEventCallback) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t, bool, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD64E0))(this, roundsInClip, willJam, fxEventCallback, completeEventCallback);
  }
  void OnAnimationEvent_Generic_Fire_FX() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD6710))(this);
  }
  void OnAnimationEvent_Generic_Fire_Complete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD6740))(this);
  }
  void Trigger_Generic_Reload(int32_t bulletsToReload, int32_t roundsLoaded, bool willJam, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* roundLoadedEventCallback, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* clipLoadedEventCallback, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* reloadCompleteEventCallback, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* roundsUnloadedEventCallback) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t, int32_t, bool, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD6960))(this, bulletsToReload, roundsLoaded, willJam, roundLoadedEventCallback, clipLoadedEventCallback, reloadCompleteEventCallback, roundsUnloadedEventCallback);
  }
  void OnAnimationEvent_Generic_Round_Loaded() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD6AC0))(this);
  }
  void OnAnimationEvent_Generic_Clip_Loaded() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD6AE0))(this);
  }
  void OnAnimationEvent_Generic_Rounds_Unloaded() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD6B00))(this);
  }
  void OnAnimationEvent_Generic_ShowReloadBulletInstance() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD6B20))(this);
  }
  void OnAnimationEvent_Struggle_Revolver_Fire() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD6C10))(this);
  }
  void OnAnimationEvent_Struggle_Revolver_Fire_Complete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD6C40))(this);
  }
  void OnAnimationEvent_Discharge_Shell_Event() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD6C70))(this);
  }
  void OnAnimationEvent_Generic_Reload_Complete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD6EA0))(this);
  }
  void UpdateReloadCount(int32_t bulletsToReload, int32_t roundsLoaded, bool willJam) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD6EF0))(this, bulletsToReload, roundsLoaded, willJam);
  }
  void UpdateJamParameters(bool willJam) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD6F90))(this, willJam);
  }
  void Trigger_Generic_Aim(ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* onAnimationComplete) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD6FB0))(this, onAnimationComplete);
  }
  void OnAnimationEvent_Generic_Aim_Complete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD7170))(this);
  }
  void Trigger_Generic_Aim_Cancel(ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* onAnimationComplete, bool exhausted) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD71C0))(this, onAnimationComplete, exhausted);
  }
  void Trigger_Generic_BowAim_Cancel(ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* onAnimationComplete) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD72D0))(this, onAnimationComplete);
  }
  void OnAnimationEvent_Generic_Aim_Cancel_Complete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD73F0))(this);
  }
  void Trigger_Generic_Use(ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* useNowEventCallback, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* useCompleteEventCallback) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD7440))(this, useNowEventCallback, useCompleteEventCallback);
  }
  void OnAnimationEvent_Generic_Use_Now() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD7530))(this);
  }
  void OnAnimationEvent_Generic_Use_Complete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD7570))(this);
  }
  void OnAnimationEvent_Generic_LookAround_Complete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD30E0))(this);
  }
  void OnAnimationEvent_Struggle_GetUp_Complete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD75E0))(this);
  }
  void OnAnimationEvent_Struggle_Play_MauledMuffle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD7690))(this);
  }
  void OnAnimationEvent_Struggle_Stop_MauledMuffle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD7880))(this);
  }
  void OnAnimationEvent_PlayerStunned_Begin() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD7A70))(this);
  }
  void OnAnimationEvent_StartResumingFov() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD7BF0))(this);
  }
  bool Trigger_Generic_Throw(ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* releaseItemCallback, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* throwCompleteCallback) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD7D10))(this, releaseItemCallback, throwCompleteCallback);
  }
  void OnAnimationEvent_Generic_Throw_ReleaseItem() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD7E00))(this);
  }
  void Trigger_Generic_Kill(ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent* killCompleteCallback) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::PlayerAnimation::OnAnimationEvent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD7E50))(this, killCompleteCallback);
  }
  void Update_Aiming(bool aiming) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD7F30))(this, aiming);
  }
  void Update_HasUnloadedAmmo() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD8080))(this);
  }
  void Update_IsLoaded(bool isLoaded) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD83F0))(this, isLoaded);
  }
  void Update_WeaponFatigue(float fatigue) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD8410))(this, fatigue);
  }
  void ShowHands() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD8640))(this);
  }
  void HideHands() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD88B0))(this);
  }
  void SetEquippedWeaponLeftHandVisible(bool visible) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD8A80))(this, visible);
  }
  void SetEquippedWeaponRightHandVisible(bool visible) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD8BD0))(this, visible);
  }
  void SetEquippedWeaponShoulderVisible(bool visible) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD8D20))(this, visible);
  }
  void SetHandMeshState(System_String* name) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD8E70))(this, name);
  }
  void DisableAllClothing() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD9070))(this);
  }
  bool GetParamExists(ModdingAPI::Exposed::UnityEngine::Animator* animator, int32_t paramHash) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::UnityEngine::Animator*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD91E0))(this, animator, paramHash);
  }
  void SetTrigger(int32_t trigger) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD9520))(this, trigger);
  }
  void SetBool(int32_t boolVar, bool boolVal) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD98B0))(this, boolVar, boolVal);
  }
  void SetInt(int32_t intVar, int32_t intVal) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD9C20))(this, intVar, intVal);
  }
  void SetFloat(int32_t floatVar, float floatVal) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DD9F80))(this, floatVar, floatVal);
  }
  void ResetTrigger(int32_t trigger) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDA2E0))(this, trigger);
  }
  void EnableEquipped(bool active) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDA670))(this, active);
  }
  void EnableActiveClothing() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDAB10))(this);
  }
  void EnableWeapon(int32_t weaponType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDAD70))(this, weaponType);
  }
  ModdingAPI::Exposed::UnityEngine::GameObject* GetRevolverMuzzleFlashGO(int32_t weaponType) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GameObject*(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDAFD0))(this, weaponType);
  }
  void DisableWeapon() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDB1B0))(this);
  }
  int32_t GetCameraLayer() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDB540))(this);
  }
  void SetCameraLayer(int32_t cameraLayer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDB550))(this, cameraLayer);
  }
  void SetCameraBasedHandPositioningMode(int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xADB2E0))(this, mode);
  }
  int32_t GetCameraBasedHandPositioingMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x400B90))(this);
  }
  void ClearOutstandingCallbacks() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDBB70))(this);
  }
  void ShowPlayer(bool show) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDBC10))(this, show);
  }
  bool TriggerCallback(int32_t animationCallbackEvent) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDBCF0))(this, animationCallbackEvent);
  }
  void DraggingAnimationEnd() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDBE00))(this);
  }
  void MaybeDropAndResetCurrentWeapon() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDBEB0))(this);
  }
  bool IsLooking() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDC0F0))(this);
  }
  void LookAt(ModdingAPI::Exposed::UnityEngine::Vector3 target) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDC100))(this, target);
  }
  void CancelLookAt() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDC120))(this);
  }
  void UpdateLookAtTarget() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDC130))(this);
  }
  bool GetCinematicBlurValue(float value) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDC6C0))(this, value);
  }
  void MaybeUpdateCinematicFade() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDC8D0))(this);
  }
  bool IsAnimationDrivenViewBobEnabled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x318510))(this);
  }
  float GetAimingZoomBlend() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDCCB0))(this);
  }
  bool CanInteract() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDCE30))(this);
  }
  bool IsDequipping() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDCE50))(this);
  }
  bool IsUnstowing() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDCE70))(this);
  }
  bool IsStowed() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDCE80))(this);
  }
  bool IsAiming() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDCE90))(this);
  }
  bool IsEnteringAiming() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDCEB0))(this);
  }
  bool IsAimingDownSight() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDCEC0))(this);
  }
  bool IsReloading() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDCED0))(this);
  }
  bool IsBowAllowedToFire() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDCEE0))(this);
  }
  bool IsInteractionAllowed() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDD120))(this);
  }
  bool IsShowing() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDD150))(this);
  }
  bool IsAllowedToFire(bool allowHipFire) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDD160))(this, allowHipFire);
  }
  bool IsAllowedToAim() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDD360))(this);
  }
  bool CanTransitionToState(int32_t state) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDD370))(this, state);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 ComputeDampedVelocity(ModdingAPI::Exposed::UnityEngine::Vector3 newVelocity) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDD490))(this, newVelocity);
  }
  void Trigger_Knockdown() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDD8C0))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* GetGlobalAnimationList() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4002A0))(this);
  }
  void RegisterAnimator(ModdingAPI::Exposed::UnityEngine::Animator* animator) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::UnityEngine::Animator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDDAA0))(this, animator);
  }
  void UnregisterAnimator(ModdingAPI::Exposed::UnityEngine::Animator* animator) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, ModdingAPI::Exposed::UnityEngine::Animator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDDB70))(this, animator);
  }
  void ResetLightSources() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDDC30))(this);
  }
  void TurnOffEffects() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDDEA0))(this);
  }
  void TurnOnEffects() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDE120))(this);
  }
  void SetItemEquippedByPlayer(bool equippedByPlayer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x932F30))(this, equippedByPlayer);
  }
  void SetLimp(bool islimpingleft, bool islimpingright) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDE390))(this, islimpingleft, islimpingright);
  }
  void SetClimbing(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDE3E0))(this, value);
  }
  int32_t GetHipLayerIndex() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x79C830))(this);
  }
  ModdingAPI::Exposed::CinematicManager* GetFPCinematicManager() {
    return reinterpret_cast<ModdingAPI::Exposed::CinematicManager*(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDE400))(this);
  }
  void UpdateAnimatorSpeed() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDE570))(this);
  }
  void ResetStandardAimingMode() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDE7C0))(this);
  }
  void ResetAimingModesForStruggle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDE7F0))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerAnimation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDE830))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<int32_t> NumStates = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->NumStates; }
  );

  // Static methods:
  static inline void SetLayerOnObjectRecursively(ModdingAPI::Exposed::UnityEngine::GameObject* gameObject, int32_t layer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GameObject*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DDB2D0))(gameObject, layer);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1DE03F0))();
  }
};
}