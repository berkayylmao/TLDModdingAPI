// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Nullable_T_.hpp"


namespace ModdingAPI::Exposed::Rewired::Platforms::PS4::PS4InputSource {
struct __MzrHnReyHjkCpdzECDEjFNiWvGY_Il2CppStaticFields {
};

struct __MzrHnReyHjkCpdzECDEjFNiWvGY_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_Update;
  VirtualInvokeData _5_get_supportsVibration;
  VirtualInvokeData _6_GetAxisValue;
  VirtualInvokeData _7_GetButtonValue;
  VirtualInvokeData _8_GetUserId;
  VirtualInvokeData _9_GetUserStatus;
  VirtualInvokeData _10_GetUserIsPrimary;
  VirtualInvokeData _11_GetUserColor;
  VirtualInvokeData _12_GetUserColorId;
  VirtualInvokeData _13_GetUserName;
  VirtualInvokeData _14_SetMotionSensorState;
  VirtualInvokeData _15_SetTiltCorrectionState;
  VirtualInvokeData _16_SetAngularVelocityDeadbandState;
  VirtualInvokeData _17_ResetOrientation;
  VirtualInvokeData _18_GetLastAcceleration;
  VirtualInvokeData _19_GetLastAccelerationRaw;
  VirtualInvokeData _20_GetLastGyro;
  VirtualInvokeData _21_GetLastGyroRaw;
  VirtualInvokeData _22_GetLastOrientation;
  VirtualInvokeData _23_GetLastOrientationRaw;
  VirtualInvokeData _25_get_vibrationMotorCount;
  VirtualInvokeData _26_SetVibration;
  VirtualInvokeData _27_GetVibration;
  VirtualInvokeData _28_StopVibration;
  VirtualInvokeData _29_SetLightColor;
  VirtualInvokeData _30_ResetLight;
  VirtualInvokeData _31_UpdateElementValues;
};

struct __MzrHnReyHjkCpdzECDEjFNiWvGY_Il2CppClass {
  Il2CppClass_1 _1;
  __MzrHnReyHjkCpdzECDEjFNiWvGY_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __MzrHnReyHjkCpdzECDEjFNiWvGY_Il2CppVtbl vtbl;
};

class MzrHnReyHjkCpdzECDEjFNiWvGY {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C5D350;
  static inline    __MzrHnReyHjkCpdzECDEjFNiWvGY_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __MzrHnReyHjkCpdzECDEjFNiWvGY_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__MzrHnReyHjkCpdzECDEjFNiWvGY_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __MzrHnReyHjkCpdzECDEjFNiWvGY_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  bool _isConnected;
  System_String* _deviceName;
  System_String* _customName;
  ModdingAPI::Exposed::System::Nullable_T_ Joystick_qbbbdAdRgyAzIkwmNaaQhnCgBowD;
  int32_t Joystick_jgfPnAEctTWfPBegrbwLfYRRsNXO;
  ModdingAPI::Exposed::Rewired::Platforms::Custom::CustomInputSource::Axis_array* Joystick_ygKoSRPvlhFHNugDEHnHEFOaPysU;
  ModdingAPI::Exposed::Rewired::Platforms::Custom::CustomInputSource::Button_array* Joystick_KVNyFuTeDYMEfZfzXNZSFyiUjOz;
  ModdingAPI::Exposed::System::Collections::ObjectModel::ReadOnlyCollection_T_* Joystick_qRvwjQLeRXtQWAsIHTXHSDttcbM;
  ModdingAPI::Exposed::System::Collections::ObjectModel::ReadOnlyCollection_T_* Joystick_dFHovyHkekMsXyCKWzTPLFQzuLf;
  bool Joystick_QhKxQVMbciEjINDsdQowgZOEWOn;
  ModdingAPI::Exposed::Rewired::Controller::Extension* Joystick_mOyfABPQGnDTXmvUyuQvMOOPHRt;
  int32_t RQvCtWMSaXdtWuElfcQyltnGehm;
  int32_t zEEBNSjNgXJcMHkefSJlGmFWZILK;
  int32_t qWWYqwRCVxLNiBFzGYHscMKOjD;
  ModdingAPI::Exposed::Rewired::Platforms::PS4::PS4InputSource::XRuAEIKqEbBFMiIYHTamFSqcDnhS::rSrbEdqJUzVCZLAAuKAdlNrScamH* nYojqtRYuTMwzmMbqOigMuAnrcH;
  int32_t oilQcqKchUHXcCwAqaokflxZfjE;
  ModdingAPI::Exposed::System::Single_array* NNfcnZCGPKPsCetJDSHSkSebZXSa;
  ModdingAPI::Exposed::Rewired::Platforms::PS4::Internal::LoggedInUser* XRuAEIKqEbBFMiIYHTamFSqcDnhS_cFPCzUUOBUmwHfGZxrgKeLeNjKFi;
  int32_t BKWeeAtaRjenxRXXISPPwMjqydU;
  ModdingAPI::Exposed::System::Func_T__TResult_* XRuAEIKqEbBFMiIYHTamFSqcDnhS_hzHbCLJOiwZjxxAZGpswEUOMhuM;
  ModdingAPI::Exposed::System::Action_T1__T2__T3_* XRuAEIKqEbBFMiIYHTamFSqcDnhS_MEvqUXrXKUsMTCgNypIZYDvKBbA;
  ModdingAPI::Exposed::System::Action_T1__T2__T3__T4_* XRuAEIKqEbBFMiIYHTamFSqcDnhS_ThNWxJefMkcHYpDfxxRTjWnozRB;
  ModdingAPI::Exposed::System::Action_T_* XRuAEIKqEbBFMiIYHTamFSqcDnhS_FuJzUysuoepwShgFcofoVmdZuyO;
  ModdingAPI::Exposed::System::Action_T1__T2_* XRuAEIKqEbBFMiIYHTamFSqcDnhS_sWuCMAiWLCMsgRPchsfKcXTDHuPc;
  ModdingAPI::Exposed::System::Action_T1__T2_* XRuAEIKqEbBFMiIYHTamFSqcDnhS_mrlJCRKbcjcMUgkDnFhOGBlqUkk;
  ModdingAPI::Exposed::System::Action_T1__T2_* XRuAEIKqEbBFMiIYHTamFSqcDnhS_CaqzTyFJoXNJQpsWcoVIUpWsBUu;
  ModdingAPI::Exposed::System::Action_T_* XRuAEIKqEbBFMiIYHTamFSqcDnhS_VJofpwAOsKQuRTkSHyLEBMZziqF;
  ModdingAPI::Exposed::System::Func_T__TResult_* XRuAEIKqEbBFMiIYHTamFSqcDnhS_jBBKooEkoMybzWRTqnhwDTatwXZ;
  ModdingAPI::Exposed::System::Func_T__TResult_* XRuAEIKqEbBFMiIYHTamFSqcDnhS_zAQFzSPnnyxNqNPmHLKKSdoXmKP;
  ModdingAPI::Exposed::System::Func_T__TResult_* XRuAEIKqEbBFMiIYHTamFSqcDnhS_ZTNnyHeikNLFuHucOghpHukvlmX;

  // Member methods:
  void ::ctor(System_String* name, int32_t playerId, int32_t unityJoystickId, int32_t handle) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Platforms::PS4::PS4InputSource::MzrHnReyHjkCpdzECDEjFNiWvGY*, System_String*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x76B070))(this, name, playerId, unityJoystickId, handle);
  }
  void UpdateElementValues() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Platforms::PS4::PS4InputSource::MzrHnReyHjkCpdzECDEjFNiWvGY*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x76B2F0))(this);
  }
};
}