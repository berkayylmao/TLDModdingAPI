// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::NodeCanvas::Framework::Internal {
struct __BlackboardSource_Il2CppStaticFields {
};

struct __BlackboardSource_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_add_onVariableAdded;
  VirtualInvokeData _5_remove_onVariableAdded;
  VirtualInvokeData _6_add_onVariableRemoved;
  VirtualInvokeData _7_remove_onVariableRemoved;
  VirtualInvokeData _8_get_name;
  VirtualInvokeData _9_set_name;
  VirtualInvokeData _10_get_variables;
  VirtualInvokeData _11_set_variables;
  VirtualInvokeData _12_get_propertiesBindTarget;
  VirtualInvokeData _13_AddVariable;
  VirtualInvokeData _14_AddVariable;
  VirtualInvokeData _15_RemoveVariable;
  VirtualInvokeData _16_GetVariable;
  VirtualInvokeData _17_GetVariableByID;
  VirtualInvokeData _18_GetVariable;
  VirtualInvokeData _19_GetValue;
  VirtualInvokeData _20_SetValue;
  VirtualInvokeData _21_GetVariableNames;
  VirtualInvokeData _22_GetVariableNames;
};

struct __BlackboardSource_Il2CppClass {
  Il2CppClass_1 _1;
  __BlackboardSource_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __BlackboardSource_Il2CppVtbl vtbl;
};

class BlackboardSource {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C6E3E0;
  static inline    BlackboardSource* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C53548;
  static inline    __BlackboardSource_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline BlackboardSource* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (BlackboardSource**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __BlackboardSource_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__BlackboardSource_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __BlackboardSource_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::System::Action_T_* onVariableAdded;
  ModdingAPI::Exposed::System::Action_T_* onVariableRemoved;
  System_String* _name;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* _variables;

  // Member methods:
  void add_onVariableAdded(ModdingAPI::Exposed::System::Action_T_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Internal::BlackboardSource*, ModdingAPI::Exposed::System::Action_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22AA700))(this, value);
  }
  void remove_onVariableAdded(ModdingAPI::Exposed::System::Action_T_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Internal::BlackboardSource*, ModdingAPI::Exposed::System::Action_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22AA7F0))(this, value);
  }
  void add_onVariableRemoved(ModdingAPI::Exposed::System::Action_T_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Internal::BlackboardSource*, ModdingAPI::Exposed::System::Action_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22AA8E0))(this, value);
  }
  void remove_onVariableRemoved(ModdingAPI::Exposed::System::Action_T_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Internal::BlackboardSource*, ModdingAPI::Exposed::System::Action_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22AA9D0))(this, value);
  }
  System_String* get_name() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Internal::BlackboardSource*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110A0))(this);
  }
  void set_name(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Internal::BlackboardSource*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310F00))(this, value);
  }
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* get_variables() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Internal::BlackboardSource*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110B0))(this);
  }
  void set_variables(ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Internal::BlackboardSource*, ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110C0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::GameObject* get_propertiesBindTarget() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GameObject*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Internal::BlackboardSource*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this);
  }
  Il2CppObject* get_Item(System_String* varName) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Internal::BlackboardSource*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22AAAC0))(this, varName);
  }
  void set_Item(System_String* varName, Il2CppObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Internal::BlackboardSource*, System_String*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22AABA0))(this, varName, value);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Internal::BlackboardSource*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22AABB0))(this);
  }
  void InitializePropertiesBinding(ModdingAPI::Exposed::UnityEngine::GameObject* targetGO, bool callSetter) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Internal::BlackboardSource*, ModdingAPI::Exposed::UnityEngine::GameObject*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22AAD50))(this, targetGO, callSetter);
  }
  ModdingAPI::Exposed::NodeCanvas::Framework::Variable* AddVariable(System_String* varName, Il2CppObject* value) {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::Variable*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Internal::BlackboardSource*, System_String*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22AAEF0))(this, varName, value);
  }
  ModdingAPI::Exposed::NodeCanvas::Framework::Variable* AddVariable(System_String* varName, ModdingAPI::Exposed::System::Type* type) {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::Variable*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Internal::BlackboardSource*, System_String*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22AB000))(this, varName, type);
  }
  ModdingAPI::Exposed::NodeCanvas::Framework::Variable* RemoveVariable(System_String* varName) {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::Variable*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Internal::BlackboardSource*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22AB430))(this, varName);
  }
  ModdingAPI::Exposed::NodeCanvas::Framework::Variable* SetValue(System_String* varName, Il2CppObject* value) {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::Variable*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Internal::BlackboardSource*, System_String*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22AB570))(this, varName, value);
  }
  ModdingAPI::Exposed::NodeCanvas::Framework::Variable* GetVariable(System_String* varName, ModdingAPI::Exposed::System::Type* ofType) {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::Variable*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Internal::BlackboardSource*, System_String*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22AB880))(this, varName, ofType);
  }
  ModdingAPI::Exposed::NodeCanvas::Framework::Variable* GetVariableByID(System_String* ID) {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::Variable*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Internal::BlackboardSource*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22AB9D0))(this, ID);
  }
  ModdingAPI::Exposed::System::String_array* GetVariableNames() {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Internal::BlackboardSource*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22ABCD0))(this);
  }
  ModdingAPI::Exposed::System::String_array* GetVariableNames(ModdingAPI::Exposed::System::Type* ofType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Internal::BlackboardSource*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22ABD70))(this, ofType);
  }
};
}