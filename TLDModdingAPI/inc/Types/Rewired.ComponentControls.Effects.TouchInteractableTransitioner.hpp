// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.UI.ColorBlock.hpp"
#include "ModdingAPI.Exposed.UnityEngine.UI.SpriteState.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Color.hpp"


namespace ModdingAPI::Exposed::Rewired::ComponentControls::Effects {
struct __TouchInteractableTransitioner_Il2CppStaticFields {
};

struct __TouchInteractableTransitioner_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_OnVisibilityChanged;
  VirtualInvokeData _5_OnInteractionStateTransition;
};

struct __TouchInteractableTransitioner_Il2CppClass {
  Il2CppClass_1 _1;
  __TouchInteractableTransitioner_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __TouchInteractableTransitioner_Il2CppVtbl vtbl;
};

class TouchInteractableTransitioner {
public:
  // Il2Cpp fields:
  __TouchInteractableTransitioner_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  bool _visible;
  int32_t _transitionType;
  ModdingAPI::Exposed::UnityEngine::UI::ColorBlock _transitionColorTint;
  ModdingAPI::Exposed::UnityEngine::UI::SpriteState _transitionSpriteState;
  ModdingAPI::Exposed::UnityEngine::UI::AnimationTriggers* _transitionAnimationTriggers;
  ModdingAPI::Exposed::UnityEngine::UI::Graphic* _targetGraphic;
  bool _syncFadeDurationWithTransitionEvent;
  bool _syncColorTintWithTransitionEvent;
  int32_t ZEACkPACBKNOGpUarmDGSgIkqzkN;

  // Member methods:
  bool get_visible() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x318510))(this);
  }
  void set_visible(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA00EB0))(this, value);
  }
  int32_t get_transitionType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36E9C0))(this);
  }
  void set_transitionType(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA00EC0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::UI::ColorBlock get_transitionColorTint() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::UI::ColorBlock(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA00F00))(this);
  }
  void set_transitionColorTint(ModdingAPI::Exposed::UnityEngine::UI::ColorBlock value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*, ModdingAPI::Exposed::UnityEngine::UI::ColorBlock)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA00F30))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::UI::SpriteState get_transitionSpriteState() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::UI::SpriteState(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA00F60))(this);
  }
  void set_transitionSpriteState(ModdingAPI::Exposed::UnityEngine::UI::SpriteState value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*, ModdingAPI::Exposed::UnityEngine::UI::SpriteState)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA00F80))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::UI::AnimationTriggers* get_transitionAnimationTriggers() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::UI::AnimationTriggers*(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x321390))(this);
  }
  void set_transitionAnimationTriggers(ModdingAPI::Exposed::UnityEngine::UI::AnimationTriggers* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*, ModdingAPI::Exposed::UnityEngine::UI::AnimationTriggers*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA01010))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::UI::Graphic* get_targetGraphic() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::UI::Graphic*(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x307640))(this);
  }
  void set_targetGraphic(ModdingAPI::Exposed::UnityEngine::UI::Graphic* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*, ModdingAPI::Exposed::UnityEngine::UI::Graphic*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA01070))(this, value);
  }
  bool get_syncFadeDurationWithTransitionEvent() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3199F0))(this);
  }
  void set_syncFadeDurationWithTransitionEvent(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA01160))(this, value);
  }
  bool get_syncColorTintWithTransitionEvent() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA011C0))(this);
  }
  void set_syncColorTintWithTransitionEvent(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA011D0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::UI::Image* get_image() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::UI::Image*(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA011F0))(this);
  }
  void set_image(ModdingAPI::Exposed::UnityEngine::UI::Image* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*, ModdingAPI::Exposed::UnityEngine::UI::Image*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA012B0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Animator* get_animator() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Animator*(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA01380))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA01450))(this);
  }
  void Awake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA015F0))(this);
  }
  void OnEnable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA017A0))(this);
  }
  void OnDisable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA01850))(this);
  }
  void OnValidate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA01980))(this);
  }
  void Reset() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA01B50))(this);
  }
  void OnCanvasGroupWasChanged() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA01C30))(this);
  }
  void OnAnimationPropertiesWereApplied() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA01C30))(this);
  }
  void PvdPUQDXNMdWgjgPyaHetBdjfAt() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA01C30))(this);
  }
  void ymLIcXZriVhKICsPiFCdANvvMvx() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA01C40))(this);
  }
  void ChYfQZESuQARCbBLWCWvYSzSofF(bool ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA01CC0))(this, );
  }
  void xgeQfERYOiWgvDeLOaPXcpEKPtk(bool , bool ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA01CE0))(this, , );
  }
  bool CSdFFrMjCwymHmzYcDpmkNZvhSF() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA01D20))(this);
  }
  void WTGLyNyvzhktSZoQGRqtdnmwrb() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA01850))(this);
  }
  void nnAJEOcLceptlQaRvRyPKvpvgtt(int32_t , bool ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA01DC0))(this, , );
  }
  void zhXAuAdPbYFykusDrZQCqJDZEGWz(ModdingAPI::Exposed::UnityEngine::Color , bool ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*, ModdingAPI::Exposed::UnityEngine::Color, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA022E0))(this, , );
  }
  void mKwesPaxzCkZbLENHpdlbufeVOtp(ModdingAPI::Exposed::UnityEngine::Sprite* ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*, ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA02400))(this, );
  }
  void jpQjtsUAqLoUktBnmAZjswIfmEt(System_String* ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA024F0))(this, );
  }
  void OnInteractionStateTransition(ModdingAPI::Exposed::Rewired::ComponentControls::TouchInteractable::InteractionStateTransitionArgs* args) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*, ModdingAPI::Exposed::Rewired::ComponentControls::TouchInteractable::InteractionStateTransitionArgs*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA029A0))(this, args);
  }
  void OnVisibilityChanged(bool state) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ComponentControls::Effects::TouchInteractableTransitioner*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA00EB0))(this, state);
  }
};
}