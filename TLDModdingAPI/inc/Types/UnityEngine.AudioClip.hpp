// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::UnityEngine {
struct __AudioClip_Il2CppStaticFields {
};

struct __AudioClip_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __AudioClip_Il2CppClass {
  Il2CppClass_1 _1;
  __AudioClip_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __AudioClip_Il2CppVtbl vtbl;
};

class AudioClip {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C7A110;
  static inline    AudioClip* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C66810;
  static inline    __AudioClip_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline AudioClip* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (AudioClip**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __AudioClip_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__AudioClip_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __AudioClip_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::UnityEngine::AudioClip::PCMReaderCallback* m_PCMReaderCallback;
  ModdingAPI::Exposed::UnityEngine::AudioClip::PCMSetPositionCallback* m_PCMSetPositionCallback;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1527840))(this);
  }
  float get_length() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15278E0))(this);
  }
  int32_t get_samples() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1527930))(this);
  }
  int32_t get_channels() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1527980))(this);
  }
  int32_t get_frequency() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15279D0))(this);
  }
  bool get_isReadyToPlay() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1527A20))(this);
  }
  int32_t get_loadType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1527A70))(this);
  }
  bool LoadAudioData() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1527AC0))(this);
  }
  bool UnloadAudioData() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1527B10))(this);
  }
  bool get_preloadAudioData() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1527B60))(this);
  }
  bool get_ambisonic() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1527BB0))(this);
  }
  int32_t get_loadState() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1527C00))(this);
  }
  bool get_loadInBackground() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1527C50))(this);
  }
  bool GetData(ModdingAPI::Exposed::System::Single_array* data, int32_t offsetSamples) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*, ModdingAPI::Exposed::System::Single_array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1527CA0))(this, data, offsetSamples);
  }
  bool SetData(ModdingAPI::Exposed::System::Single_array* data, int32_t offsetSamples) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*, ModdingAPI::Exposed::System::Single_array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1527D10))(this, data, offsetSamples);
  }
  void add_m_PCMReaderCallback(ModdingAPI::Exposed::UnityEngine::AudioClip::PCMReaderCallback* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*, ModdingAPI::Exposed::UnityEngine::AudioClip::PCMReaderCallback*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1528260))(this, value);
  }
  void remove_m_PCMReaderCallback(ModdingAPI::Exposed::UnityEngine::AudioClip::PCMReaderCallback* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*, ModdingAPI::Exposed::UnityEngine::AudioClip::PCMReaderCallback*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1528350))(this, value);
  }
  void add_m_PCMSetPositionCallback(ModdingAPI::Exposed::UnityEngine::AudioClip::PCMSetPositionCallback* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*, ModdingAPI::Exposed::UnityEngine::AudioClip::PCMSetPositionCallback*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1528440))(this, value);
  }
  void remove_m_PCMSetPositionCallback(ModdingAPI::Exposed::UnityEngine::AudioClip::PCMSetPositionCallback* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*, ModdingAPI::Exposed::UnityEngine::AudioClip::PCMSetPositionCallback*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1528530))(this, value);
  }
  void InvokePCMReaderCallback_Internal(ModdingAPI::Exposed::System::Single_array* data) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*, ModdingAPI::Exposed::System::Single_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14DBD10))(this, data);
  }
  void InvokePCMSetPositionCallback_Internal(int32_t position) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1528620))(this, position);
  }
  void Init_Internal(System_String* name, int32_t lengthSamples, int32_t channels, int32_t frequency, bool stream) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AudioClip*, System_String*, int32_t, int32_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1528690))(this, name, lengthSamples, channels, frequency, stream);
  }

  // Static methods:
  static inline ModdingAPI::Exposed::UnityEngine::AudioClip* Create(System_String* name, int32_t lengthSamples, int32_t channels, int32_t frequency, bool _3D, bool stream) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AudioClip*(__fastcall*)(System_String*, int32_t, int32_t, int32_t, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1527D80))(name, lengthSamples, channels, frequency, _3D, stream);
  }
  static inline ModdingAPI::Exposed::UnityEngine::AudioClip* Create(System_String* name, int32_t lengthSamples, int32_t channels, int32_t frequency, bool _3D, bool stream, ModdingAPI::Exposed::UnityEngine::AudioClip::PCMReaderCallback* pcmreadercallback) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AudioClip*(__fastcall*)(System_String*, int32_t, int32_t, int32_t, bool, bool, ModdingAPI::Exposed::UnityEngine::AudioClip::PCMReaderCallback*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1527DB0))(name, lengthSamples, channels, frequency, _3D, stream, pcmreadercallback);
  }
  static inline ModdingAPI::Exposed::UnityEngine::AudioClip* Create(System_String* name, int32_t lengthSamples, int32_t channels, int32_t frequency, bool _3D, bool stream, ModdingAPI::Exposed::UnityEngine::AudioClip::PCMReaderCallback* pcmreadercallback, ModdingAPI::Exposed::UnityEngine::AudioClip::PCMSetPositionCallback* pcmsetpositioncallback) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AudioClip*(__fastcall*)(System_String*, int32_t, int32_t, int32_t, bool, bool, ModdingAPI::Exposed::UnityEngine::AudioClip::PCMReaderCallback*, ModdingAPI::Exposed::UnityEngine::AudioClip::PCMSetPositionCallback*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1527DE0))(name, lengthSamples, channels, frequency, _3D, stream, pcmreadercallback, pcmsetpositioncallback);
  }
  static inline ModdingAPI::Exposed::UnityEngine::AudioClip* Create(System_String* name, int32_t lengthSamples, int32_t channels, int32_t frequency, bool stream) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AudioClip*(__fastcall*)(System_String*, int32_t, int32_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1527E20))(name, lengthSamples, channels, frequency, stream);
  }
  static inline ModdingAPI::Exposed::UnityEngine::AudioClip* Create(System_String* name, int32_t lengthSamples, int32_t channels, int32_t frequency, bool stream, ModdingAPI::Exposed::UnityEngine::AudioClip::PCMReaderCallback* pcmreadercallback) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AudioClip*(__fastcall*)(System_String*, int32_t, int32_t, int32_t, bool, ModdingAPI::Exposed::UnityEngine::AudioClip::PCMReaderCallback*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1527E50))(name, lengthSamples, channels, frequency, stream, pcmreadercallback);
  }
  static inline ModdingAPI::Exposed::UnityEngine::AudioClip* Create(System_String* name, int32_t lengthSamples, int32_t channels, int32_t frequency, bool stream, ModdingAPI::Exposed::UnityEngine::AudioClip::PCMReaderCallback* pcmreadercallback, ModdingAPI::Exposed::UnityEngine::AudioClip::PCMSetPositionCallback* pcmsetpositioncallback) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AudioClip*(__fastcall*)(System_String*, int32_t, int32_t, int32_t, bool, ModdingAPI::Exposed::UnityEngine::AudioClip::PCMReaderCallback*, ModdingAPI::Exposed::UnityEngine::AudioClip::PCMSetPositionCallback*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1527E80))(name, lengthSamples, channels, frequency, stream, pcmreadercallback, pcmsetpositioncallback);
  }
  static inline ModdingAPI::Exposed::UnityEngine::AudioClip* Construct_Internal() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AudioClip*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1528640))();
  }
};
}