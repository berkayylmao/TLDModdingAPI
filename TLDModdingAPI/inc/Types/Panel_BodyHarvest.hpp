// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Color.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Bounds.hpp"


namespace ModdingAPI::Exposed {
struct __Panel_BodyHarvest_Il2CppStaticFields {
  ModdingAPI::Exposed::UnityEngine::Collider_array* s_PossibleColliders;
};

struct __Panel_BodyHarvest_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __Panel_BodyHarvest_Il2CppClass {
  Il2CppClass_1 _1;
  __Panel_BodyHarvest_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Panel_BodyHarvest_Il2CppVtbl vtbl;
};

class Panel_BodyHarvest {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C5C680;
  static inline    __Panel_BodyHarvest_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __Panel_BodyHarvest_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__Panel_BodyHarvest_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __Panel_BodyHarvest_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::ButtonLegendContainer* m_ButtonLegendContainer;
  float m_HarvestTimeSeconds;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Title;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Title_Frozen;
  ModdingAPI::Exposed::UILabel* m_Label_Title_Frozen;
  ModdingAPI::Exposed::UILabel* m_Label_Title;
  ModdingAPI::Exposed::UILabel* m_Label_FrozenInfo;
  ModdingAPI::Exposed::UILabel* m_Label_AmountToHarvest;
  ModdingAPI::Exposed::UILabel* m_Label_QuarterEstimatedTime;
  ModdingAPI::Exposed::UILabel* m_Label_QuarterEstimatedCalories;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_QuarterPanel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_QuarterTabButtonLeft;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_QuarterTabButtonRight;
  ModdingAPI::Exposed::UILabel* m_Label_HarvestEstimatedTime;
  ModdingAPI::Exposed::UILabel* m_Label_HarvestEstimatedCalories;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_HarvestPanel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_HarvestTabButtonLeft;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_HarvestTabButtonRight;
  ModdingAPI::Exposed::UISprite* m_GamepadTabLeft_Harvest;
  ModdingAPI::Exposed::UISprite* m_GamepadTabRight_Harvest;
  ModdingAPI::Exposed::UISprite* m_GamepadTabLeft_Quarter;
  ModdingAPI::Exposed::UISprite* m_GamepadTabRight_Quarter;
  ModdingAPI::Exposed::UILabel* m_Label_CurrentCalories;
  ModdingAPI::Exposed::UILabel* m_Label_CurrentCaloriesAmount;
  ModdingAPI::Exposed::UILabel* m_Label_ProgressBar;
  ModdingAPI::Exposed::UIProgressBar* m_ProgressBar_Harvest;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_HarvestAmount_Button_Increase;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_HarvestAmount_Button_Decrease;
  ModdingAPI::Exposed::UITexture* m_GearItemTexture;
  System_String* m_RequiredQuarterToolLocID;
  int32_t m_HarvestMeatMinutesPerKG;
  int32_t m_HarvestFrozenMeatMinutesPerKG;
  int32_t m_HarvestHideMinutesPerUnit;
  int32_t m_HarvestGutMinutesPerUnit;
  ModdingAPI::Exposed::Panel_BodyHarvest_MenuItem* m_MenuItem_Meat;
  ModdingAPI::Exposed::Panel_BodyHarvest_MenuItem* m_MenuItem_Hide;
  ModdingAPI::Exposed::Panel_BodyHarvest_MenuItem* m_MenuItem_Gut;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Mouse_Button_Harvest;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Mouse_Button_Quarter;
  System_String* m_NoToolSpriteName;
  ModdingAPI::Exposed::UnityEngine::Color m_NoToolSpriteColor;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_NoToolSpriteSize;
  ModdingAPI::Exposed::UITexture* m_ToolTexture;
  ModdingAPI::Exposed::UILabel* m_Label_ToolName;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ChangeToolButtons;
  ModdingAPI::Exposed::UILabel* m_ToolConditionLabel;
  ModdingAPI::Exposed::UISprite* m_ToolConditionIcon;
  ModdingAPI::Exposed::UnityEngine::Color m_HighConditionColor;
  int32_t m_TabSelected;
  int32_t m_TabRequested;
  float m_ElapsedProgressBarSeconds;
  float m_ProgressBarTimeSeconds;
  float m_FailureAtProgressPercentage;
  float m_DayLengthScaleBeforeHarvest;
  float m_MeatHarvestAmountBefore;
  int32_t m_HideHarvestAmountBefore;
  int32_t m_GutHarvestAmountBefore;
  uint32_t m_ProgressBarAudio;
  bool m_TimeAccelerated;
  int32_t m_ComingFromScreenCategory;
  int32_t m_CurrentHarvestAction;
  float m_MinutesSpentOnMostRecentHarvest;
  float m_TimeForToolToBreak;
  int32_t m_SelectedToolItemIndex;
  int32_t m_SelectedTabIndex;
  ModdingAPI::Exposed::BodyHarvest* m_BodyHarvest;
  int32_t m_SelectedButtonIndex;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_MenuItems;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_Tools;
  bool m_PlayBookEndAnimation;
  ModdingAPI::Exposed::UILabel* m_Label_Error;
  float m_ErrorDisplayDuration;
  float m_DisplayErrorTimer;
  float m_ErrorDisplayFadingDuration;
  float m_FadeInStartAlpha;
  float m_ErrorDisplayFadeOutTimer;
  float m_ErrorDisplayFadeInTimer;
  bool m_FadeOutErrorRequested;
  bool m_FadeInErrorRequested;
  bool m_DisplayErrorRequested;

  // Member methods:
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B23250))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B23540))(this);
  }
  void OnBack() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B23750))(this);
  }
  void SelectMenuItem(int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B238A0))(this, index);
  }
  void UpdateHarvestMenuNavigation() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B23AB0))(this);
  }
  void UpdateMenuNavigation() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B23CB0))(this);
  }
  bool CanEnable(ModdingAPI::Exposed::BodyHarvest* bodyHarvest) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*, ModdingAPI::Exposed::BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B24170))(this, bodyHarvest);
  }
  bool IsCurrent(ModdingAPI::Exposed::BodyHarvest* bodyHarvest) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*, ModdingAPI::Exposed::BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B24680))(this, bodyHarvest);
  }
  void EnableTabs() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B24740))(this);
  }
  void MaybeHandleGearItemPlacement(int32_t comingFrom, ModdingAPI::Exposed::BodyHarvest* bodyHarvest, bool enable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*, int32_t, ModdingAPI::Exposed::BodyHarvest*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B24750))(this, comingFrom, bodyHarvest, enable);
  }
  void MaybeDropDepletedItem(ModdingAPI::Exposed::BodyHarvest* currentBodyHarvest) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*, ModdingAPI::Exposed::BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B24A70))(this, currentBodyHarvest);
  }
  void Enable(bool enable, ModdingAPI::Exposed::BodyHarvest* bh, bool playBookEndAnim, int32_t comingFrom) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*, bool, ModdingAPI::Exposed::BodyHarvest*, bool, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B24BE0))(this, enable, bh, playBookEndAnim, comingFrom);
  }
  bool IsEnabled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x165DF10))(this);
  }
  bool IsHarvesting() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B25490))(this);
  }
  bool IsQuartering() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B254A0))(this);
  }
  bool IsHarvestingOrQuartering() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B254B0))(this);
  }
  void OnPopupClicked() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B254C0))(this);
  }
  void OnHarvest() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B25550))(this);
  }
  bool CanQuarter() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B25920))(this);
  }
  void OnTabQuarterSelected() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B25950))(this);
  }
  void OnTabHarvestSelected() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B259F0))(this);
  }
  void OnQuarter() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B25AA0))(this);
  }
  void OnCancel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B26000))(this);
  }
  void CameraPan(int32_t bodypart) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B267B0))(this, bodypart);
  }
  void OnIncreaseMeatHarvest() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B26C80))(this);
  }
  void OnDecreaseMeatHarvest() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B26CC0))(this);
  }
  void OnIncreaseHideHarvest() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B26D00))(this);
  }
  void OnDecreaseHideHarvest() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B26D40))(this);
  }
  void OnIncreaseGutHarvest() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B26D80))(this);
  }
  void OnDecreaseGutHarvest() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B26DC0))(this);
  }
  void StartHarvest(int32_t durationMinutes, System_String* harvestAudio) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*, int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B26E00))(this, durationMinutes, harvestAudio);
  }
  void StartQuarter(int32_t durationMinutes, System_String* quarterAudio) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*, int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B271E0))(this, durationMinutes, quarterAudio);
  }
  void DetermineTimeForToolBreak(int32_t duration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B27530))(this, duration);
  }
  float GetQuarterDurationMinutes() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B27780))(this);
  }
  float GetHarvestDurationMinutes() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B277B0))(this);
  }
  System_String* GetHarvestAudio() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B27A50))(this);
  }
  System_String* GetQuarterAudio() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B27A70))(this);
  }
  ModdingAPI::Exposed::UnityEngine::GameObject* GetQuarterObjectPrefab() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GameObject*(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B27AA0))(this);
  }
  void TransferMeatToQuarters(ModdingAPI::Exposed::BodyHarvest_array* quarterBodyHarvestArray) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*, ModdingAPI::Exposed::BodyHarvest_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B27AC0))(this, quarterBodyHarvestArray);
  }
  void SpawnOrRefreshCarcassSite() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B27B90))(this);
  }
  void SpawnQuarteringMessOnCarcassSite() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B27D10))(this);
  }
  void SpawnQuarters() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B27DF0))(this);
  }
  int32_t CalculateNumberOfQuartersToSpawn() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B28420))(this);
  }
  void SpawnHideAndGutsAfterQuarter() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B28500))(this);
  }
  void MaybeCollectSpentArrows() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B28A20))(this);
  }
  void RandomRotateQuarter(ModdingAPI::Exposed::UnityEngine::Transform* transform) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*, ModdingAPI::Exposed::UnityEngine::Transform*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B28C00))(this, transform);
  }
  void RandomRotateGutsOrHide(ModdingAPI::Exposed::UnityEngine::Transform* transform) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*, ModdingAPI::Exposed::UnityEngine::Transform*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B28E20))(this, transform);
  }
  void TransferMeatFromCarcassToInventory() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B28F10))(this);
  }
  void TransferHideFromCarcassToInventory() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B29460))(this);
  }
  void TransferGutFromCarcassToInventory() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B29900))(this);
  }
  void ApplyWearToTool() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B29DA0))(this);
  }
  void QuarterSuccessful() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B29EB0))(this);
  }
  void HarvestSuccessful() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2A470))(this);
  }
  bool HarvestInProgress() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2AA00))(this);
  }
  void CleanUpOnExit() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2AAC0))(this);
  }
  void RefreshTitle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2AAF0))(this);
  }
  void RefreshLabels() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2B030))(this);
  }
  void RefreshEstimatedTimeLabel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2B130))(this);
  }
  void RefreshHarvestEstimatedCalories(float numCaloriesBurned) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2B2E0))(this, numCaloriesBurned);
  }
  void RefreshQuarterEstimatedCalories(float numCaloriesBurned) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2B410))(this, numCaloriesBurned);
  }
  bool IsTabHarvestSelected() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2B540))(this);
  }
  bool IsTabQuarterSelected() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2B550))(this);
  }
  void RefreshCalorieLabels() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2B560))(this);
  }
  void DisableProgressBar() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2BA10))(this);
  }
  void Refresh() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2BB90))(this);
  }
  void UpdateTabs() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2BFB0))(this);
  }
  void StopProgressBarAudio() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2C290))(this);
  }
  void UpdateHarvest() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2C390))(this);
  }
  void UpdateQuarter() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2C6F0))(this);
  }
  void RestoreTimeOfDay() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2CA50))(this);
  }
  void AccelerateTimeOfDay(int32_t minutes) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2CB30))(this, minutes);
  }
  void MakeDefaultSelections() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2CC40))(this);
  }
  bool IsCarcassTooFrozenToQuarter() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2CDB0))(this);
  }
  void InterruptQuarter() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2CF00))(this);
  }
  void InterruptHarvest() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2D110))(this);
  }
  void OnToolPrev() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2D4A0))(this);
  }
  void OnToolNext() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2D5A0))(this);
  }
  ModdingAPI::Exposed::GearItem* GetSelectedTool() {
    return reinterpret_cast<ModdingAPI::Exposed::GearItem*(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2D6B0))(this);
  }
  void RefreshTools() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2D7C0))(this);
  }
  void RefreshToolSelection() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2DAE0))(this);
  }
  void UpdateButtonLegend() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2E460))(this);
  }
  void DisplayCarcassTooFrozenToQuarterMessage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2ECC0))(this);
  }
  void UpdateControllerInputForTabs() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2EE30))(this);
  }
  void RequestFadeInErrorMessage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2F910))(this);
  }
  void RequestFadeoutError() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2FA50))(this);
  }
  void DisplayErrorMessage(System_String* text) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2FA70))(this, text);
  }
  void HandleMessageErrorFadeout() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2FC20))(this);
  }
  void HandleMessageErrorFadein() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2FF00))(this);
  }
  void UpdateErrorMessage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B30180))(this);
  }
  void ResetErrorMessage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B30300))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B303E0))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Collider_array*> s_PossibleColliders = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Collider_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_PossibleColliders; }
  );

  // Static methods:
  static inline bool HasNoHarvestingTool() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B260C0))();
  }
  static inline bool CarcassTooFrozenToHarvestBareHands(ModdingAPI::Exposed::BodyHarvest* bodyHarvest) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B262B0))(bodyHarvest);
  }
  static inline void DisplayCarcassToFrozenMessage() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B26400))();
  }
  static inline bool CheckIfResourcesLeft(ModdingAPI::Exposed::BodyHarvest* bodyHarvest) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B265B0))(bodyHarvest);
  }
  static inline void ComputeBoundsFromColliders(ModdingAPI::Exposed::UnityEngine::Transform* t, ModdingAPI::Exposed::UnityEngine::Bounds b) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Transform*, ModdingAPI::Exposed::UnityEngine::Bounds)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2F090))(t, b);
  }
  static inline void CollectArrows(ModdingAPI::Exposed::BodyHarvest* bh) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B2F310))(bh);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B306E0))();
  }
};
}