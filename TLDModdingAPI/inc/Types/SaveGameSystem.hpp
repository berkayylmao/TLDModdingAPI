// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed {
struct __SaveGameSystem_Il2CppStaticFields {
  float m_LastAutosave;
  System_String* m_SlotToLoadOnStart;
  System_String* m_MigrateSlotOnStart;
  bool m_CanMigrateSave;
  bool m_SceneRestoreInProgress;
  bool m_DidSceneRestore;
  int32_t m_BootSaveGameFormatVersion;
  int32_t m_LowestCompatibleBootSurvivalSaveGameFormatVersion;
  int32_t m_LowestCompatibleBootStorySaveGameFormatVersion;
  int32_t m_GlobalSaveGameFormatVersion;
  int32_t m_SceneSaveGameFormatVersion;
  int32_t m_CurrentEpisode;
  int32_t m_CurrentGameMode;
  uint32_t m_CurrentGameId;
  System_String* m_CurrentSaveName;
  bool m_EnableSaveLoad;
  ModdingAPI::Exposed::SaveGameSystem::SaveCompletedDelegate* m_OnSaveCompletedEvent;
  bool s_SaveAsync;
  bool s_DebugVerbose;
  ModdingAPI::Exposed::System::Threading::Tasks::Task* s_SaveSlotTask;
  System_String* s_AsyncSlotName;
  ModdingAPI::Exposed::BootSaveGameFormat* m_BootSaveGameFormat;
  ModdingAPI::Exposed::GlobalSaveGameFormat* m_GlobalSaveGameFormat;
  ModdingAPI::Exposed::SceneSaveGameFormat* m_SceneSaveGameFormat;
  ModdingAPI::Exposed::ScreenshotSaveGameFormat* m_ScreenshotSaveGameFormat;
  System_String* PROFILE_DISPLAYNAME;
  int32_t m_ScreenshotGameMode;
  System_String* m_ScreenshotSaveName;
};

struct __SaveGameSystem_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __SaveGameSystem_Il2CppClass {
  Il2CppClass_1 _1;
  __SaveGameSystem_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __SaveGameSystem_Il2CppVtbl vtbl;
};

class SaveGameSystem {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C729D8;
  static inline    __SaveGameSystem_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __SaveGameSystem_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__SaveGameSystem_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __SaveGameSystem_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SaveGameSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<float> m_LastAutosave = __CppStaticProperty<float>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_LastAutosave; }
  );
  static inline __CppStaticProperty<System_String*> m_SlotToLoadOnStart = __CppStaticProperty<System_String*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_SlotToLoadOnStart; }
  );
  static inline __CppStaticProperty<System_String*> m_MigrateSlotOnStart = __CppStaticProperty<System_String*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_MigrateSlotOnStart; }
  );
  static inline __CppStaticProperty<bool> m_CanMigrateSave = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_CanMigrateSave; }
  );
  static inline __CppStaticProperty<bool> m_SceneRestoreInProgress = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_SceneRestoreInProgress; }
  );
  static inline __CppStaticProperty<bool> m_DidSceneRestore = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_DidSceneRestore; }
  );
  static inline __CppStaticProperty<int32_t> m_BootSaveGameFormatVersion = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_BootSaveGameFormatVersion; }
  );
  static inline __CppStaticProperty<int32_t> m_LowestCompatibleBootSurvivalSaveGameFormatVersion = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_LowestCompatibleBootSurvivalSaveGameFormatVersion; }
  );
  static inline __CppStaticProperty<int32_t> m_LowestCompatibleBootStorySaveGameFormatVersion = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_LowestCompatibleBootStorySaveGameFormatVersion; }
  );
  static inline __CppStaticProperty<int32_t> m_GlobalSaveGameFormatVersion = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_GlobalSaveGameFormatVersion; }
  );
  static inline __CppStaticProperty<int32_t> m_SceneSaveGameFormatVersion = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_SceneSaveGameFormatVersion; }
  );
  static inline __CppStaticProperty<int32_t> m_CurrentEpisode = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_CurrentEpisode; }
  );
  static inline __CppStaticProperty<int32_t> m_CurrentGameMode = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_CurrentGameMode; }
  );
  static inline __CppStaticProperty<uint32_t> m_CurrentGameId = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_CurrentGameId; }
  );
  static inline __CppStaticProperty<System_String*> m_CurrentSaveName = __CppStaticProperty<System_String*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_CurrentSaveName; }
  );
  static inline __CppStaticProperty<bool> m_EnableSaveLoad = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_EnableSaveLoad; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::SaveGameSystem::SaveCompletedDelegate*> m_OnSaveCompletedEvent = __CppStaticProperty<ModdingAPI::Exposed::SaveGameSystem::SaveCompletedDelegate*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_OnSaveCompletedEvent; }
  );
  static inline __CppStaticProperty<bool> s_SaveAsync = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_SaveAsync; }
  );
  static inline __CppStaticProperty<bool> s_DebugVerbose = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_DebugVerbose; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Threading::Tasks::Task*> s_SaveSlotTask = __CppStaticProperty<ModdingAPI::Exposed::System::Threading::Tasks::Task*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_SaveSlotTask; }
  );
  static inline __CppStaticProperty<System_String*> s_AsyncSlotName = __CppStaticProperty<System_String*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_AsyncSlotName; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::BootSaveGameFormat*> m_BootSaveGameFormat = __CppStaticProperty<ModdingAPI::Exposed::BootSaveGameFormat*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_BootSaveGameFormat; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::GlobalSaveGameFormat*> m_GlobalSaveGameFormat = __CppStaticProperty<ModdingAPI::Exposed::GlobalSaveGameFormat*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_GlobalSaveGameFormat; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::SceneSaveGameFormat*> m_SceneSaveGameFormat = __CppStaticProperty<ModdingAPI::Exposed::SceneSaveGameFormat*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_SceneSaveGameFormat; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::ScreenshotSaveGameFormat*> m_ScreenshotSaveGameFormat = __CppStaticProperty<ModdingAPI::Exposed::ScreenshotSaveGameFormat*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_ScreenshotSaveGameFormat; }
  );
  static inline __CppStaticProperty<System_String*> PROFILE_DISPLAYNAME = __CppStaticProperty<System_String*>(
   []() { return &GetStaticClassInstance()->pStaticFields->PROFILE_DISPLAYNAME; }
  );
  static inline __CppStaticProperty<int32_t> m_ScreenshotGameMode = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_ScreenshotGameMode; }
  );
  static inline __CppStaticProperty<System_String*> m_ScreenshotSaveName = __CppStaticProperty<System_String*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_ScreenshotSaveName; }
  );

  // Static methods:
  static inline void ResetAutosaveTimer() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD2BB0))();
  }
  static inline float SecondsUntilNextAutosave() {
    return reinterpret_cast<float(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD2CA0))();
  }
  static inline void UpdateAutosave() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD2E00))();
  }
  static inline ModdingAPI::Exposed::BootSaveGameFormat* GetBootData(System_String* slotName) {
    return reinterpret_cast<ModdingAPI::Exposed::BootSaveGameFormat*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD3030))(slotName);
  }
  static inline bool SaveIsCompatible(ModdingAPI::Exposed::BootSaveGameFormat* boot, int32_t gameMode) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BootSaveGameFormat*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD3250))(boot, gameMode);
  }
  static inline void SaveBootData(int32_t gameMode, System_String* name) {
    reinterpret_cast<void(__fastcall*)(int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD33C0))(gameMode, name);
  }
  static inline bool RestoreBootData(System_String* name) {
    return reinterpret_cast<bool(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD3620))(name);
  }
  static inline void Init() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD3790))();
  }
  static inline void Update() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD39C0))();
  }
  static inline System_String* GetUserProfileFilename() {
    return reinterpret_cast<System_String*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD3A80))();
  }
  static inline System_String* GetSettingsFilename() {
    return reinterpret_cast<System_String*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD3B20))();
  }
  static inline void SaveGame(System_String* name, System_String* sceneSaveName, bool saveFeatData) {
    reinterpret_cast<void(__fastcall*)(System_String*, System_String*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD3BC0))(name, sceneSaveName, saveFeatData);
  }
  static inline void PrepareSaveData(int32_t gameMode, System_String* name, System_String* sceneSaveName) {
    reinterpret_cast<void(__fastcall*)(int32_t, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD4700))(gameMode, name, sceneSaveName);
  }
  static inline void PrepareSaveData_Verbose(int32_t gameMode, System_String* name, System_String* sceneSaveName) {
    reinterpret_cast<void(__fastcall*)(int32_t, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD47E0))(gameMode, name, sceneSaveName);
  }
  static inline void SaveGameAsyncTask() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD4990))();
  }
  static inline ModdingAPI::Exposed::System::Collections::IEnumerator* SaveGameCoroutine(System_String* name) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IEnumerator*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD4CA0))(name);
  }
  static inline void RestoreGame(System_String* name) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD4DF0))(name);
  }
  static inline void RestoreGameForEpisodeMigration(System_String* name) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD5230))(name);
  }
  static inline void ResetForSceneLoad() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD54F0))();
  }
  static inline void ConfigureRestoreFromSlot(System_String* slotName) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD5590))(slotName);
  }
  static inline bool IsRestoreInProgress() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD5640))();
  }
  static inline bool IsSceneRestoreInProgress() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD56F0))();
  }
  static inline void DeleteSaveFiles(System_String* name) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD57C0))(name);
  }
  static inline void DeleteSaveFilesForGameId(uint32_t gameId) {
    reinterpret_cast<void(__fastcall*)(uint32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD58D0))(gameId);
  }
  static inline void SetCurrentSaveInfo(int32_t episode, int32_t gameMode, uint32_t saveId, System_String* savename) {
    reinterpret_cast<void(__fastcall*)(int32_t, int32_t, uint32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD5970))(episode, gameMode, saveId, savename);
  }
  static inline void GenerateNewSaveName() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD5B00))();
  }
  static inline System_String* GetCurrentSaveName() {
    return reinterpret_cast<System_String*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD5C00))();
  }
  static inline ModdingAPI::Exposed::System::Collections::Generic::List_T_* GetSortedSaveSlotsForEpisodes(int32_t slotType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD5CA0))(slotType);
  }
  static inline ModdingAPI::Exposed::System::Collections::Generic::List_T_* GetSortedSaveSlots(int32_t episode, int32_t slotType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD5D40))(episode, slotType);
  }
  static inline ModdingAPI::Exposed::SaveSlotInfo* GetNewestSaveSlotForActiveGame() {
    return reinterpret_cast<ModdingAPI::Exposed::SaveSlotInfo*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD5DF0))();
  }
  static inline void WaitForAsyncSaveTask() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD5FF0))();
  }
  static inline void GetActiveMissionLocId(ModdingAPI::Exposed::GlobalSaveGameFormat* globalData, ModdingAPI::Exposed::SaveSlotInfo* saveSlotInfo) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::GlobalSaveGameFormat*, ModdingAPI::Exposed::SaveSlotInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD6120))(globalData, saveSlotInfo);
  }
  static inline void MaybeSetUserDefinedName(ModdingAPI::Exposed::SaveSlotInfo* saveSlotInfo) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SaveSlotInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD6310))(saveSlotInfo);
  }
  static inline System_String* SetDefaultUserDefinedSlotName(System_String* slotname) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD6440))(slotname);
  }
  static inline void MaybeSwitchToUninstancedFilename(System_String* slot, System_String* filename) {
    reinterpret_cast<void(__fastcall*)(System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD66C0))(slot, filename);
  }
  static inline void SaveCompletedInternal(bool success) {
    reinterpret_cast<void(__fastcall*)(bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD6930))(success);
  }
  static inline int32_t GetGlobalSaveGameFormatVersion() {
    return reinterpret_cast<int32_t(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD69D0))();
  }
  static inline void SaveGlobalData(int32_t gameMode, System_String* name) {
    reinterpret_cast<void(__fastcall*)(int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD6A80))(gameMode, name);
  }
  static inline bool RestoreGlobalData(System_String* name) {
    return reinterpret_cast<bool(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AD9FF0))(name);
  }
  static inline bool RestoreGlobalDataForEspisodeMigration(System_String* name) {
    return reinterpret_cast<bool(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ADD0D0))(name);
  }
  static inline void RestoreGlobalDataPostSceneRestore() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ADD620))();
  }
  static inline void SaveProfile(int32_t serializationOptions) {
    reinterpret_cast<void(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ADD810))(serializationOptions);
  }
  static inline void LoadProfile(int32_t deserializeFlags) {
    reinterpret_cast<void(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ADD960))(deserializeFlags);
  }
  static inline int32_t GetSceneSaveGameFormatVersion() {
    return reinterpret_cast<int32_t(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ADDA50))();
  }
  static inline void SaveSceneData(int32_t gameMode, System_String* name, System_String* sceneSaveName) {
    reinterpret_cast<void(__fastcall*)(int32_t, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ADDB00))(gameMode, name, sceneSaveName);
  }
  static inline bool LoadSceneData(System_String* name, System_String* sceneSaveName) {
    return reinterpret_cast<bool(__fastcall*)(System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ADEEB0))(name, sceneSaveName);
  }
  static inline void LoadSceneDataAdditive(System_String* name, System_String* sceneSaveName) {
    reinterpret_cast<void(__fastcall*)(System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AE0260))(name, sceneSaveName);
  }
  static inline void SaveScreenshotData(int32_t gameMode, System_String* savename) {
    reinterpret_cast<void(__fastcall*)(int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AE04A0))(gameMode, savename);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Texture2D* GetBilinearScaledTexture(ModdingAPI::Exposed::UnityEngine::Texture2D* source, int32_t targetWidth, int32_t targetHeight) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Texture2D*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Texture2D*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AE0700))(source, targetWidth, targetHeight);
  }
  static inline ModdingAPI::Exposed::System::Collections::IEnumerator* SaveScreenshotDataCoroutine() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IEnumerator*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AE09C0))();
  }
  static inline ModdingAPI::Exposed::UnityEngine::Texture2D* CreateTextureData(System_String* savename) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Texture2D*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AE0B00))(savename);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Texture2D* CreateTextureData(ModdingAPI::Exposed::ScreenshotSaveGameFormat* screenshotData) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Texture2D*(__fastcall*)(ModdingAPI::Exposed::ScreenshotSaveGameFormat*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AE0C10))(screenshotData);
  }
  static inline bool IsWaitingForScreenshot() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AE0DE0))();
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AE0E90))();
  }
};
}