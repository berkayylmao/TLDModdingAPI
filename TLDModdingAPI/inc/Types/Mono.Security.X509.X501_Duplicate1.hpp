// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::Mono::Security::X509 {
struct __X501_Duplicate1_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Byte_array* countryName;
  ModdingAPI::Exposed::System::Byte_array* organizationName;
  ModdingAPI::Exposed::System::Byte_array* organizationalUnitName;
  ModdingAPI::Exposed::System::Byte_array* commonName;
  ModdingAPI::Exposed::System::Byte_array* localityName;
  ModdingAPI::Exposed::System::Byte_array* stateOrProvinceName;
  ModdingAPI::Exposed::System::Byte_array* streetAddress;
  ModdingAPI::Exposed::System::Byte_array* domainComponent;
  ModdingAPI::Exposed::System::Byte_array* userid;
  ModdingAPI::Exposed::System::Byte_array* email;
  ModdingAPI::Exposed::System::Byte_array* dnQualifier;
  ModdingAPI::Exposed::System::Byte_array* title;
  ModdingAPI::Exposed::System::Byte_array* surname;
  ModdingAPI::Exposed::System::Byte_array* givenName;
  ModdingAPI::Exposed::System::Byte_array* initial;
};

struct __X501_Duplicate1_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __X501_Duplicate1_Il2CppClass {
  Il2CppClass_1 _1;
  __X501_Duplicate1_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __X501_Duplicate1_Il2CppVtbl vtbl;
};

class X501_Duplicate1 {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C35850;
  static inline    __X501_Duplicate1_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __X501_Duplicate1_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__X501_Duplicate1_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __X501_Duplicate1_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*> countryName = __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->countryName; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*> organizationName = __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->organizationName; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*> organizationalUnitName = __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->organizationalUnitName; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*> commonName = __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->commonName; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*> localityName = __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->localityName; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*> stateOrProvinceName = __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->stateOrProvinceName; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*> streetAddress = __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->streetAddress; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*> domainComponent = __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->domainComponent; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*> userid = __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->userid; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*> email = __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->email; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*> dnQualifier = __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->dnQualifier; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*> title = __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->title; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*> surname = __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->surname; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*> givenName = __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->givenName; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*> initial = __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->initial; }
  );

  // Static methods:
  static inline System_String* ToString(ModdingAPI::Exposed::Mono::Security::ASN1_Duplicate1* seq) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Mono::Security::ASN1_Duplicate1*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1571E00))(seq);
  }
  static inline System_String* ToString(ModdingAPI::Exposed::Mono::Security::ASN1_Duplicate1* seq, bool reversed, System_String* separator, bool quotes) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Mono::Security::ASN1_Duplicate1*, bool, System_String*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1572030))(seq, reversed, separator, quotes);
  }
  static inline void AppendEntry(ModdingAPI::Exposed::System::Text::StringBuilder* sb, ModdingAPI::Exposed::Mono::Security::ASN1_Duplicate1* entry, bool quotes) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::StringBuilder*, ModdingAPI::Exposed::Mono::Security::ASN1_Duplicate1*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1572330))(sb, entry, quotes);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1572D20))();
  }
};
}