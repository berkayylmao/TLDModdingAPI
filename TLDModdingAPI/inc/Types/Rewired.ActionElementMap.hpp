// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.Rewired.ElementAssignment.hpp"
#include "ModdingAPI.Exposed.Rewired.ControllerElementTarget.hpp"


namespace ModdingAPI::Exposed::Rewired {
struct __ActionElementMap_Il2CppStaticFields {
  int32_t uidCounter;
  ModdingAPI::Exposed::System::Text::StringBuilder* s_toStringSB;
};

struct __ActionElementMap_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __ActionElementMap_Il2CppClass {
  Il2CppClass_1 _1;
  __ActionElementMap_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __ActionElementMap_Il2CppVtbl vtbl;
};

class ActionElementMap {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C770B0;
  static inline    __ActionElementMap_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __ActionElementMap_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__ActionElementMap_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __ActionElementMap_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  int32_t _actionCategoryId;
  int32_t _actionId;
  int32_t _elementType;
  int32_t _elementIdentifierId;
  int32_t _axisRange;
  bool _invert;
  int32_t _axisContribution;
  int32_t _keyboardKeyCode;
  int32_t _modifierKey1;
  int32_t _modifierKey2;
  int32_t _modifierKey3;
  ModdingAPI::Exposed::Rewired::ControllerMap* wazXoIPrRrXfHKBdhFfSLGMjeNh;
  bool yIozJzFkooRCrVDgMYuKERLjtKT;
  System_String* VbUaTutEwNiedluvHlveKpjOgEe;
  System_String* QqlfCjBRUKTMvUDJqFfPAwPbYmtg;
  int32_t BrfMAMWUHKehhzXjaUcfIUzeYNT;
  int32_t GWhYqtabLocDuVzCkkrAPmUjKTh;

  // Member methods:
  int32_t get_actionId() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311080))(this);
  }
  void set_actionId(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8028B0))(this, value);
  }
  int32_t get_elementType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FED20))(this);
  }
  void set_elementType(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311090))(this, value);
  }
  int32_t get_elementIdentifierId() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36E9C0))(this);
  }
  void set_elementIdentifierId(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x802960))(this, value);
  }
  int32_t get_axisRange() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x37AAE0))(this);
  }
  void set_axisRange(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x802D00))(this, value);
  }
  bool get_invert() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56ED00))(this);
  }
  void set_invert(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56ED10))(this, value);
  }
  int32_t get_axisContribution() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36F810))(this);
  }
  void set_axisContribution(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x802E40))(this, value);
  }
  int32_t get_keyboardKeyCode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36F820))(this);
  }
  void set_keyboardKeyCode(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x802EE0))(this, value);
  }
  int32_t get_modifierKey1() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D870))(this);
  }
  void set_modifierKey1(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x803050))(this, value);
  }
  int32_t get_modifierKey2() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D880))(this);
  }
  void set_modifierKey2(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8031B0))(this, value);
  }
  int32_t get_modifierKey3() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8A0))(this);
  }
  void set_modifierKey3(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x803320))(this, value);
  }
  int32_t get_axisType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x803470))(this);
  }
  int32_t get_modifierKeyFlags() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x803490))(this);
  }
  ModdingAPI::Exposed::UnityEngine::KeyCode get_keyCode() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::KeyCode(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36F820))(this);
  }
  void set_keyCode(ModdingAPI::Exposed::UnityEngine::KeyCode value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, ModdingAPI::Exposed::UnityEngine::KeyCode)>(Helpers::Memory::GetInstance().MakeAbsolute(0x802EE0))(this, value);
  }
  bool get_hasModifiers() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8035F0))(this);
  }
  ModdingAPI::Exposed::Rewired::ControllerMap* get_controllerMap() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ControllerMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319960))(this);
  }
  bool get_enabled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4EFF30))(this);
  }
  void set_enabled(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4EFF40))(this, value);
  }
  System_String* get_elementIdentifierName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A440))(this);
  }
  System_String* get_actionDescriptiveName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383960))(this);
  }
  int32_t get_elementIndex() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383980))(this);
  }
  int32_t get_id() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3839A0))(this);
  }
  bool get_isKeyboardMap() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x803610))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x803770))(this);
  }
  void ::ctor(ModdingAPI::Exposed::Rewired::ActionElementMap* map) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x803940))(this, map);
  }
  void ::ctor(int32_t actionId, int32_t elementType, int32_t elementIdentifierId) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x803A00))(this, actionId, elementType, elementIdentifierId);
  }
  void ::ctor(int32_t actionId, int32_t elementType, int32_t elementIdentifierId, int32_t axisContribution, int32_t axisRange) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, int32_t, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x803A50))(this, actionId, elementType, elementIdentifierId, axisContribution, axisRange);
  }
  void ::ctor(int32_t actionId, int32_t elementType, int32_t elementIdentifierId, int32_t axisContribution, int32_t axisRange, bool invert) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, int32_t, int32_t, int32_t, int32_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x803AB0))(this, actionId, elementType, elementIdentifierId, axisContribution, axisRange, invert);
  }
  void ::ctor(int32_t actionId, int32_t elementType, int32_t axisContribution, int32_t keyboardKeyCode, int32_t modifierKey1, int32_t modifierKey2, int32_t modifierKey3) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x803B10))(this, actionId, elementType, axisContribution, keyboardKeyCode, modifierKey1, modifierKey2, modifierKey3);
  }
  bool CheckForAssignmentConflict(ModdingAPI::Exposed::Rewired::ElementAssignment elementAssignment) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, ModdingAPI::Exposed::Rewired::ElementAssignment)>(Helpers::Memory::GetInstance().MakeAbsolute(0x803B80))(this, elementAssignment);
  }
  bool CheckForAssignmentConflict(ModdingAPI::Exposed::Rewired::ActionElementMap* elementMap) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x803E20))(this, elementMap);
  }
  bool ShowInField(int32_t fieldActionRange) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x803F10))(this, fieldActionRange);
  }
  bool IsTarget(ModdingAPI::Exposed::Rewired::ControllerElementTarget elementTarget) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, ModdingAPI::Exposed::Rewired::ControllerElementTarget)>(Helpers::Memory::GetInstance().MakeAbsolute(0x804170))(this, elementTarget);
  }
  bool IsTarget(ModdingAPI::Exposed::Rewired::IControllerElementTarget* elementTarget) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, ModdingAPI::Exposed::Rewired::IControllerElementTarget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x804240))(this, elementTarget);
  }
  void jqfpUAaDHrnjumHGJkaVXyEsSCo(ModdingAPI::Exposed::Rewired::ControllerMap* ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, ModdingAPI::Exposed::Rewired::ControllerMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8044E0))(this, );
  }
  void FdrvmxnMZPBulZwXxQcNbfeedndA(ModdingAPI::Exposed::Rewired::ControllerMap* , ModdingAPI::Exposed::Rewired::HardwareControllerMap_Game* ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, ModdingAPI::Exposed::Rewired::ControllerMap*, ModdingAPI::Exposed::Rewired::HardwareControllerMap_Game*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8045A0))(this, , );
  }
  void jqfpUAaDHrnjumHGJkaVXyEsSCo(bool ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x804620))(this, );
  }
  void jqfpUAaDHrnjumHGJkaVXyEsSCo(int32_t , ModdingAPI::Exposed::Rewired::HardwareControllerMap_Game* , bool ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, int32_t, ModdingAPI::Exposed::Rewired::HardwareControllerMap_Game*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8046C0))(this, , , );
  }
  void GquFXFmkXYAFrTtgLIVFGFLnEJA() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x804C50))(this);
  }
  void ADrsfsMXaMetqmCCRAjGXwgvlsR() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x805050))(this);
  }
  bool jannDBsahHKuRYpLXachuXVydCA(int32_t , int32_t ) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x805190))(this, , );
  }
  bool BbUXROxjvdYKoszQiXfdzvuMAOV(int32_t , int32_t ) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x805200))(this, , );
  }
  bool RcvofVqJsRCbUhvNjIgDnEadcYI(int32_t ) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x805320))(this, );
  }
  void WTvJOVmPMuyEXYOnCnXPQIMmJkP() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x805430))(this);
  }
  void hUuepHjNyaZqgZDsRzGdsTznbiA() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x805450))(this);
  }
  void AEeSVAUGTdVOgVPVLXJyhxOXTNv() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x805590))(this);
  }
  ModdingAPI::Exposed::Rewired::Utils::Classes::Data::SerializedObject* BWJHmDclXaLAPlHdWSoNLiIcUPd() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Utils::Classes::Data::SerializedObject*(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8056A0))(this);
  }
  void qjwhbudypLWHNslnAEFIBGmwqKO(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::SerializedObject* ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, ModdingAPI::Exposed::Rewired::Utils::Classes::Data::SerializedObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x805C20))(this, );
  }
  System_String* ToString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x806050))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<int32_t> uidCounter = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->uidCounter; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Text::StringBuilder*> s_toStringSB = __CppStaticProperty<ModdingAPI::Exposed::System::Text::StringBuilder*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_toStringSB; }
  );

  // Static methods:
  static inline bool SQgQGdAbfQcOJaTNEtjzUMMKJBl(ModdingAPI::Exposed::Rewired::ActionElementMap* ) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x802530))();
  }
  static inline void NFzWGXSdfPCroqXqYvfkekuoyEP(ModdingAPI::Exposed::Rewired::ActionElementMap* , ModdingAPI::Exposed::Rewired::ActionElementMap* ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ActionElementMap*, ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x802640))(, );
  }
  static inline int32_t get_nextUid() {
    return reinterpret_cast<int32_t(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x803640))();
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x806920))();
  }
};
}