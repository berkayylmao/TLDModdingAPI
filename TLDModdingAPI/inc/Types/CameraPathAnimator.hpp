// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Quaternion.hpp"


namespace ModdingAPI::Exposed {
struct __CameraPathAnimator_Il2CppStaticFields {
};

struct __CameraPathAnimator_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __CameraPathAnimator_Il2CppClass {
  Il2CppClass_1 _1;
  __CameraPathAnimator_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __CameraPathAnimator_Il2CppVtbl vtbl;
};

class CameraPathAnimator {
public:
  // Il2Cpp fields:
  __CameraPathAnimator_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  float minimumCameraSpeed;
  ModdingAPI::Exposed::UnityEngine::Transform* orientationTarget;
  ModdingAPI::Exposed::CameraPath* _cameraPath;
  bool playOnStart;
  ModdingAPI::Exposed::UnityEngine::Transform* animationObject;
  ModdingAPI::Exposed::UnityEngine::Camera* animationObjectCamera;
  bool _isCamera;
  bool _playing;
  int32_t animationMode;
  int32_t _orientationMode;
  bool smoothOrientationModeChanges;
  float orientationModeLerpTime;
  float _orientationModeLerpTimer;
  int32_t _previousOrientationMode;
  float pingPongDirection;
  ModdingAPI::Exposed::UnityEngine::Vector3 fixedOrientaion;
  ModdingAPI::Exposed::UnityEngine::Vector3 fixedPosition;
  bool normalised;
  bool _dynamicNormalisation;
  float editorPercentage;
  float _pathTime;
  float _pathSpeed;
  float _percentage;
  float _lastPercentage;
  float nearestOffset;
  float _delayTime;
  float startPercent;
  bool animateFOV;
  ModdingAPI::Exposed::UnityEngine::Vector3 targetModeUp;
  float sensitivity;
  float minX;
  float maxX;
  bool _animateSceneObjectInEditor;
  ModdingAPI::Exposed::UnityEngine::Vector3 animatedObjectStartPosition;
  ModdingAPI::Exposed::UnityEngine::Quaternion animatedObjectStartRotation;
  ModdingAPI::Exposed::CameraPathAnimator::AnimationStartedEventHandler* AnimationStartedEvent;
  ModdingAPI::Exposed::CameraPathAnimator::AnimationPausedEventHandler* AnimationPausedEvent;
  ModdingAPI::Exposed::CameraPathAnimator::AnimationStoppedEventHandler* AnimationStoppedEvent;
  ModdingAPI::Exposed::CameraPathAnimator::AnimationFinishedEventHandler* AnimationFinishedEvent;
  ModdingAPI::Exposed::CameraPathAnimator::AnimationLoopedEventHandler* AnimationLoopedEvent;
  ModdingAPI::Exposed::CameraPathAnimator::AnimationPingPongEventHandler* AnimationPingPongEvent;
  ModdingAPI::Exposed::CameraPathAnimator::AnimationPointReachedEventHandler* AnimationPointReachedEvent;
  ModdingAPI::Exposed::CameraPathAnimator::AnimationPointReachedWithNumberEventHandler* AnimationPointReachedWithNumberEvent;
  ModdingAPI::Exposed::CameraPathAnimator::AnimationCustomEventHandler* AnimationCustomEvent;

  // Member methods:
  void add_AnimationStartedEvent(ModdingAPI::Exposed::CameraPathAnimator::AnimationStartedEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, ModdingAPI::Exposed::CameraPathAnimator::AnimationStartedEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED6930))(this, value);
  }
  void remove_AnimationStartedEvent(ModdingAPI::Exposed::CameraPathAnimator::AnimationStartedEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, ModdingAPI::Exposed::CameraPathAnimator::AnimationStartedEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED6A20))(this, value);
  }
  void add_AnimationPausedEvent(ModdingAPI::Exposed::CameraPathAnimator::AnimationPausedEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, ModdingAPI::Exposed::CameraPathAnimator::AnimationPausedEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED6B10))(this, value);
  }
  void remove_AnimationPausedEvent(ModdingAPI::Exposed::CameraPathAnimator::AnimationPausedEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, ModdingAPI::Exposed::CameraPathAnimator::AnimationPausedEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED6C00))(this, value);
  }
  void add_AnimationStoppedEvent(ModdingAPI::Exposed::CameraPathAnimator::AnimationStoppedEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, ModdingAPI::Exposed::CameraPathAnimator::AnimationStoppedEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED6CF0))(this, value);
  }
  void remove_AnimationStoppedEvent(ModdingAPI::Exposed::CameraPathAnimator::AnimationStoppedEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, ModdingAPI::Exposed::CameraPathAnimator::AnimationStoppedEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED6DE0))(this, value);
  }
  void add_AnimationFinishedEvent(ModdingAPI::Exposed::CameraPathAnimator::AnimationFinishedEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, ModdingAPI::Exposed::CameraPathAnimator::AnimationFinishedEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED6ED0))(this, value);
  }
  void remove_AnimationFinishedEvent(ModdingAPI::Exposed::CameraPathAnimator::AnimationFinishedEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, ModdingAPI::Exposed::CameraPathAnimator::AnimationFinishedEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED6FC0))(this, value);
  }
  void add_AnimationLoopedEvent(ModdingAPI::Exposed::CameraPathAnimator::AnimationLoopedEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, ModdingAPI::Exposed::CameraPathAnimator::AnimationLoopedEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED70B0))(this, value);
  }
  void remove_AnimationLoopedEvent(ModdingAPI::Exposed::CameraPathAnimator::AnimationLoopedEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, ModdingAPI::Exposed::CameraPathAnimator::AnimationLoopedEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED71A0))(this, value);
  }
  void add_AnimationPingPongEvent(ModdingAPI::Exposed::CameraPathAnimator::AnimationPingPongEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, ModdingAPI::Exposed::CameraPathAnimator::AnimationPingPongEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED7290))(this, value);
  }
  void remove_AnimationPingPongEvent(ModdingAPI::Exposed::CameraPathAnimator::AnimationPingPongEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, ModdingAPI::Exposed::CameraPathAnimator::AnimationPingPongEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED7380))(this, value);
  }
  void add_AnimationPointReachedEvent(ModdingAPI::Exposed::CameraPathAnimator::AnimationPointReachedEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, ModdingAPI::Exposed::CameraPathAnimator::AnimationPointReachedEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED7470))(this, value);
  }
  void remove_AnimationPointReachedEvent(ModdingAPI::Exposed::CameraPathAnimator::AnimationPointReachedEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, ModdingAPI::Exposed::CameraPathAnimator::AnimationPointReachedEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED7560))(this, value);
  }
  void add_AnimationPointReachedWithNumberEvent(ModdingAPI::Exposed::CameraPathAnimator::AnimationPointReachedWithNumberEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, ModdingAPI::Exposed::CameraPathAnimator::AnimationPointReachedWithNumberEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED7650))(this, value);
  }
  void remove_AnimationPointReachedWithNumberEvent(ModdingAPI::Exposed::CameraPathAnimator::AnimationPointReachedWithNumberEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, ModdingAPI::Exposed::CameraPathAnimator::AnimationPointReachedWithNumberEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED7740))(this, value);
  }
  void add_AnimationCustomEvent(ModdingAPI::Exposed::CameraPathAnimator::AnimationCustomEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, ModdingAPI::Exposed::CameraPathAnimator::AnimationCustomEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED7830))(this, value);
  }
  void remove_AnimationCustomEvent(ModdingAPI::Exposed::CameraPathAnimator::AnimationCustomEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, ModdingAPI::Exposed::CameraPathAnimator::AnimationCustomEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED7920))(this, value);
  }
  float get_pathSpeed() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1933630))(this);
  }
  void set_pathSpeed(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED7A10))(this, value);
  }
  float get_animationTime() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED7B30))(this);
  }
  void set_animationTime(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED7B40))(this, value);
  }
  float get_currentTime() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED7C20))(this);
  }
  void Play() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED7C40))(this);
  }
  void Stop() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED7D30))(this);
  }
  void Pause() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED7D60))(this);
  }
  void Seek(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED7D80))(this, value);
  }
  bool get_isPlaying() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x882F50))(this);
  }
  float get_percentage() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED7E80))(this);
  }
  bool get_pingPongGoingForward() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED7E90))(this);
  }
  void Reverse() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED7EB0))(this);
  }
  ModdingAPI::Exposed::CameraPath* get_cameraPath() {
    return reinterpret_cast<ModdingAPI::Exposed::CameraPath*(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED7F10))(this);
  }
  bool get_dynamicNormalisation() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14DDC60))(this);
  }
  void set_dynamicNormalisation(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED7FE0))(this, value);
  }
  int32_t get_orientationMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319990))(this);
  }
  void set_orientationMode(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED8020))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Quaternion GetOrientation(int32_t mode, float percent, bool ignoreNormalisation) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Quaternion(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, int32_t, float, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED8040))(this, mode, percent, ignoreNormalisation);
  }
  ModdingAPI::Exposed::UnityEngine::Quaternion GetAnimatedOrientation(float percent, bool ignoreNormalisation) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Quaternion(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, float, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED8B00))(this, percent, ignoreNormalisation);
  }
  void Awake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED8F80))(this);
  }
  void OnEnable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED9130))(this);
  }
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED9420))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED9570))(this);
  }
  void LateUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED96A0))(this);
  }
  void OnDisable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED97D0))(this);
  }
  void OnDestroy() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED97D0))(this);
  }
  void PlayNextAnimation() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED97E0))(this);
  }
  void UpdateAnimation() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1ED9A50))(this);
  }
  void UpdatePointReached() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EDA0B0))(this);
  }
  void UpdateAnimationTime() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EDA290))(this);
  }
  void UpdateAnimationTime(bool advance) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EDA2A0))(this, advance);
  }
  ModdingAPI::Exposed::UnityEngine::Quaternion GetMouseLook() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Quaternion(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EDA600))(this);
  }
  void CheckEvents() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EDAA20))(this);
  }
  bool get_isReversed() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EDAAB0))(this);
  }
  bool get_isCamera() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EDAAD0))(this);
  }
  bool get_animateSceneObjectInEditor() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4020))(this);
  }
  void set_animateSceneObjectInEditor(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EDABD0))(this, value);
  }
  void CleanUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EDAE60))(this);
  }
  void OnDelayEvent(float time) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EDB140))(this, time);
  }
  void OnCustomEvent(System_String* eventName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EDB170))(this, eventName);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::CameraPathAnimator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EDB190))(this);
  }
};
}