// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Runtime.Serialization.StreamingContext.hpp"


namespace ModdingAPI::Exposed::System::Collections {
struct __Hashtable_Il2CppStaticFields {
};

struct __Hashtable_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _19_System_Collections_IEnumerable_GetEnumerator;
  VirtualInvokeData _23_Add;
  VirtualInvokeData _24_Clear;
  VirtualInvokeData _25_Clone;
  VirtualInvokeData _26_Contains;
  VirtualInvokeData _27_ContainsKey;
  VirtualInvokeData _28_CopyTo;
  VirtualInvokeData _29_get_Item;
  VirtualInvokeData _30_set_Item;
  VirtualInvokeData _31_GetEnumerator;
  VirtualInvokeData _32_GetHash;
  VirtualInvokeData _33_get_IsReadOnly;
  VirtualInvokeData _34_get_IsFixedSize;
  VirtualInvokeData _35_get_IsSynchronized;
  VirtualInvokeData _36_KeyEquals;
  VirtualInvokeData _37_get_Keys;
  VirtualInvokeData _38_get_Values;
  VirtualInvokeData _39_Remove;
  VirtualInvokeData _40_get_SyncRoot;
  VirtualInvokeData _41_get_Count;
  VirtualInvokeData _42_GetObjectData;
  VirtualInvokeData _43_OnDeserialization;
};

struct __Hashtable_Il2CppClass {
  Il2CppClass_1 _1;
  __Hashtable_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Hashtable_Il2CppVtbl vtbl;
};

class Hashtable {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C8D7B8;
  static inline    Hashtable* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C3FAB8;
  static inline    __Hashtable_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline Hashtable* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (Hashtable**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __Hashtable_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__Hashtable_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __Hashtable_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::System::Collections::Hashtable::bucket_array* buckets;
  int32_t count;
  int32_t occupancy;
  int32_t loadsize;
  float loadFactor;
  int32_t version;
  bool isWriterInProgress;
  ModdingAPI::Exposed::System::Collections::ICollection* keys;
  ModdingAPI::Exposed::System::Collections::ICollection* values;
  ModdingAPI::Exposed::System::Collections::IEqualityComparer* _keycomparer;
  Il2CppObject* _syncRoot;

  // Member methods:
  void ::ctor(bool trash) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, trash);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5F5C0))(this);
  }
  void ::ctor(int32_t capacity) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5F5E0))(this, capacity);
  }
  void ::ctor(int32_t capacity, float loadFactor) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5F5F0))(this, capacity, loadFactor);
  }
  void ::ctor(int32_t capacity, float loadFactor, ModdingAPI::Exposed::System::Collections::IHashCodeProvider* hcp, ModdingAPI::Exposed::System::Collections::IComparer* comparer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, int32_t, float, ModdingAPI::Exposed::System::Collections::IHashCodeProvider*, ModdingAPI::Exposed::System::Collections::IComparer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5F8A0))(this, capacity, loadFactor, hcp, comparer);
  }
  void ::ctor(int32_t capacity, float loadFactor, ModdingAPI::Exposed::System::Collections::IEqualityComparer* equalityComparer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, int32_t, float, ModdingAPI::Exposed::System::Collections::IEqualityComparer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5FA30))(this, capacity, loadFactor, equalityComparer);
  }
  void ::ctor(ModdingAPI::Exposed::System::Collections::IHashCodeProvider* hcp, ModdingAPI::Exposed::System::Collections::IComparer* comparer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, ModdingAPI::Exposed::System::Collections::IHashCodeProvider*, ModdingAPI::Exposed::System::Collections::IComparer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5FA60))(this, hcp, comparer);
  }
  void ::ctor(ModdingAPI::Exposed::System::Collections::IEqualityComparer* equalityComparer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, ModdingAPI::Exposed::System::Collections::IEqualityComparer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5FBE0))(this, equalityComparer);
  }
  void ::ctor(int32_t capacity, ModdingAPI::Exposed::System::Collections::IEqualityComparer* equalityComparer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, int32_t, ModdingAPI::Exposed::System::Collections::IEqualityComparer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5FC20))(this, capacity, equalityComparer);
  }
  void ::ctor(ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo* info, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5FC50))(this, info, context);
  }
  uint32_t InitHash(Il2CppObject* key, int32_t hashsize, uint32_t seed, uint32_t incr) {
    return reinterpret_cast<uint32_t(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, Il2CppObject*, int32_t, uint32_t, uint32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5FD20))(this, key, hashsize, seed, incr);
  }
  void Add(Il2CppObject* key, Il2CppObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, Il2CppObject*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5FD70))(this, key, value);
  }
  void Clear() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5FD90))(this);
  }
  Il2CppObject* Clone() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5FF70))(this);
  }
  bool Contains(Il2CppObject* key) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA60160))(this, key);
  }
  bool ContainsKey(Il2CppObject* key) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA60180))(this, key);
  }
  void CopyKeys(ModdingAPI::Exposed::System::Array* array, int32_t arrayIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, ModdingAPI::Exposed::System::Array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA60350))(this, array, arrayIndex);
  }
  void CopyEntries(ModdingAPI::Exposed::System::Array* array, int32_t arrayIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, ModdingAPI::Exposed::System::Array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA60400))(this, array, arrayIndex);
  }
  void CopyTo(ModdingAPI::Exposed::System::Array* array, int32_t arrayIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, ModdingAPI::Exposed::System::Array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA60550))(this, array, arrayIndex);
  }
  void CopyValues(ModdingAPI::Exposed::System::Array* array, int32_t arrayIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, ModdingAPI::Exposed::System::Array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA60830))(this, array, arrayIndex);
  }
  Il2CppObject* get_Item(Il2CppObject* key) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA608E0))(this, key);
  }
  void set_Item(Il2CppObject* key, Il2CppObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, Il2CppObject*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA60B20))(this, key, value);
  }
  void expand() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA60B40))(this);
  }
  void rehash() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA60C10))(this);
  }
  void UpdateVersion() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA60C40))(this);
  }
  void rehash(int32_t newsize, bool forceNewHashCode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA60C60))(this, newsize, forceNewHashCode);
  }
  ModdingAPI::Exposed::System::Collections::IEnumerator* System::Collections::IEnumerable::GetEnumerator() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IEnumerator*(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA60EE0))(this);
  }
  ModdingAPI::Exposed::System::Collections::IDictionaryEnumerator* GetEnumerator() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IDictionaryEnumerator*(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA61060))(this);
  }
  int32_t GetHash(Il2CppObject* key) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA611E0))(this, key);
  }
  bool get_IsReadOnly() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(this);
  }
  bool get_IsFixedSize() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(this);
  }
  bool get_IsSynchronized() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(this);
  }
  bool KeyEquals(Il2CppObject* item, Il2CppObject* key) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, Il2CppObject*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA612B0))(this, item, key);
  }
  ModdingAPI::Exposed::System::Collections::ICollection* get_Keys() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::ICollection*(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA613B0))(this);
  }
  ModdingAPI::Exposed::System::Collections::ICollection* get_Values() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::ICollection*(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA61500))(this);
  }
  void Insert(Il2CppObject* key, Il2CppObject* nvalue, bool add) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, Il2CppObject*, Il2CppObject*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA61650))(this, key, nvalue, add);
  }
  void putEntry(ModdingAPI::Exposed::System::Collections::Hashtable::bucket_array* newBuckets, Il2CppObject* key, Il2CppObject* nvalue, int32_t hashcode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, ModdingAPI::Exposed::System::Collections::Hashtable::bucket_array*, Il2CppObject*, Il2CppObject*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA61D10))(this, newBuckets, key, nvalue, hashcode);
  }
  void Remove(Il2CppObject* key) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA61E50))(this, key);
  }
  Il2CppObject* get_SyncRoot() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA62190))(this);
  }
  int32_t get_Count() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FED20))(this);
  }
  void GetObjectData(ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo* info, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA62470))(this, info, context);
  }
  void OnDeserialization(Il2CppObject* sender) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA62A00))(this, sender);
  }

  // Static methods:
  static inline ModdingAPI::Exposed::System::Collections::Hashtable* Synchronized(ModdingAPI::Exposed::System::Collections::Hashtable* table) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Hashtable*(__fastcall*)(ModdingAPI::Exposed::System::Collections::Hashtable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA622F0))(table);
  }
};
}