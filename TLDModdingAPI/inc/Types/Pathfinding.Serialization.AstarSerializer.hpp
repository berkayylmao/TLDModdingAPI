// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::Pathfinding::Serialization {
struct __AstarSerializer_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Text::StringBuilder* _stringBuilder;
};

struct __AstarSerializer_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __AstarSerializer_Il2CppClass {
  Il2CppClass_1 _1;
  __AstarSerializer_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __AstarSerializer_Il2CppVtbl vtbl;
};

class AstarSerializer {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C3BF50;
  static inline    __AstarSerializer_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __AstarSerializer_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__AstarSerializer_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __AstarSerializer_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::Pathfinding::AstarData* data;
  ModdingAPI::Exposed::Pathfinding::Serialization::Zip::ZipFile* zip;
  ModdingAPI::Exposed::System::IO::MemoryStream* zipStream;
  ModdingAPI::Exposed::Pathfinding::Serialization::GraphMeta* meta;
  ModdingAPI::Exposed::Pathfinding::Serialization::SerializeSettings* settings;
  ModdingAPI::Exposed::Pathfinding::NavGraph_array* graphs;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* graphIndexInZip;
  int32_t graphIndexOffset;
  uint32_t checksum;

  // Member methods:
  void ::ctor(ModdingAPI::Exposed::Pathfinding::AstarData* data) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*, ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2434550))(this, data);
  }
  void ::ctor(ModdingAPI::Exposed::Pathfinding::AstarData* data, ModdingAPI::Exposed::Pathfinding::Serialization::SerializeSettings* settings) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*, ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::Pathfinding::Serialization::SerializeSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2434580))(this, data, settings);
  }
  void SetGraphIndexOffset(int32_t offset) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383910))(this, offset);
  }
  void AddChecksum(ModdingAPI::Exposed::System::Byte_array* bytes) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*, ModdingAPI::Exposed::System::Byte_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2434590))(this, bytes);
  }
  uint32_t GetChecksum() {
    return reinterpret_cast<uint32_t(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383920))(this);
  }
  void OpenSerialize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2434650))(this);
  }
  ModdingAPI::Exposed::System::Byte_array* CloseSerialize() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Byte_array*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2434890))(this);
  }
  void SerializeGraphs(ModdingAPI::Exposed::Pathfinding::NavGraph_array* _graphs) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*, ModdingAPI::Exposed::Pathfinding::NavGraph_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2434A80))(this, _graphs);
  }
  ModdingAPI::Exposed::System::Byte_array* SerializeMeta() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Byte_array*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2434C80))(this);
  }
  ModdingAPI::Exposed::System::Byte_array* Serialize(ModdingAPI::Exposed::Pathfinding::NavGraph* graph) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Byte_array*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*, ModdingAPI::Exposed::Pathfinding::NavGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2435730))(this, graph);
  }
  void SerializeNodes() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void SerializeExtraInfo() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2436A40))(this);
  }
  void SerializeEditorSettings(ModdingAPI::Exposed::Pathfinding::GraphEditorBase_array* editors) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*, ModdingAPI::Exposed::Pathfinding::GraphEditorBase_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2436D20))(this, editors);
  }
  bool OpenDeserialize(ModdingAPI::Exposed::System::Byte_array* bytes) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*, ModdingAPI::Exposed::System::Byte_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2436D40))(this, bytes);
  }
  void CloseDeserialize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x24377B0))(this);
  }
  ModdingAPI::Exposed::Pathfinding::NavGraph* DeserializeGraph(int32_t zipIndex, int32_t graphIndex) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::NavGraph*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2437800))(this, zipIndex, graphIndex);
  }
  ModdingAPI::Exposed::Pathfinding::NavGraph_array* DeserializeGraphs() {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::NavGraph_array*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2437D90))(this);
  }
  bool DeserializeExtraInfo(ModdingAPI::Exposed::Pathfinding::NavGraph* graph) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*, ModdingAPI::Exposed::Pathfinding::NavGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x24380F0))(this, graph);
  }
  bool AnyDestroyedNodesInGraphs() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2438320))(this);
  }
  ModdingAPI::Exposed::Pathfinding::GraphNode_array* DeserializeNodeReferenceMap() {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::GraphNode_array*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x24385F0))(this);
  }
  void DeserializeNodeReferences(ModdingAPI::Exposed::Pathfinding::NavGraph* graph, ModdingAPI::Exposed::Pathfinding::GraphNode_array* int2Node) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*, ModdingAPI::Exposed::Pathfinding::NavGraph*, ModdingAPI::Exposed::Pathfinding::GraphNode_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2438C10))(this, graph, int2Node);
  }
  void DeserializeExtraInfo() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2439060))(this);
  }
  void PostDeserialization() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2439220))(this);
  }
  void DeserializeEditorSettings(ModdingAPI::Exposed::Pathfinding::GraphEditorBase_array* graphEditors) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*, ModdingAPI::Exposed::Pathfinding::GraphEditorBase_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, graphEditors);
  }
  ModdingAPI::Exposed::Pathfinding::Serialization::GraphMeta* DeserializeMeta(ModdingAPI::Exposed::Pathfinding::Serialization::Zip::ZipEntry* entry) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::Serialization::GraphMeta*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*, ModdingAPI::Exposed::Pathfinding::Serialization::Zip::ZipEntry*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x24397F0))(this, entry);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Text::StringBuilder*> _stringBuilder = __CppStaticProperty<ModdingAPI::Exposed::System::Text::StringBuilder*>(
   []() { return &GetStaticClassInstance()->pStaticFields->_stringBuilder; }
  );

  // Static methods:
  static inline ModdingAPI::Exposed::System::Text::StringBuilder* GetStringBuilder() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::StringBuilder*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x2434480))();
  }
  static inline int32_t GetMaxNodeIndexInAllGraphs(ModdingAPI::Exposed::Pathfinding::NavGraph_array* graphs) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Pathfinding::NavGraph_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2435A50))(graphs);
  }
  static inline ModdingAPI::Exposed::System::Byte_array* SerializeNodeIndices(ModdingAPI::Exposed::Pathfinding::NavGraph_array* graphs) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Byte_array*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::NavGraph_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2435D00))(graphs);
  }
  static inline ModdingAPI::Exposed::System::Byte_array* SerializeGraphExtraInfo(ModdingAPI::Exposed::Pathfinding::NavGraph* graph) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Byte_array*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::NavGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2436210))(graph);
  }
  static inline ModdingAPI::Exposed::System::Byte_array* SerializeGraphNodeReferences(ModdingAPI::Exposed::Pathfinding::NavGraph* graph) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Byte_array*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::NavGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2436550))(graph);
  }
  static inline ModdingAPI::Exposed::System::Version* FullyDefinedVersion(ModdingAPI::Exposed::System::Version* v) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Version*(__fastcall*)(ModdingAPI::Exposed::System::Version*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x24375E0))(v);
  }
  static inline ModdingAPI::Exposed::System::IO::BinaryReader* GetBinaryReader(ModdingAPI::Exposed::Pathfinding::Serialization::Zip::ZipEntry* entry) {
    return reinterpret_cast<ModdingAPI::Exposed::System::IO::BinaryReader*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::Zip::ZipEntry*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x24392B0))(entry);
  }
  static inline System_String* GetString(ModdingAPI::Exposed::Pathfinding::Serialization::Zip::ZipEntry* entry) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::Serialization::Zip::ZipEntry*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2439530))(entry);
  }
  static inline void SaveToFile(System_String* path, ModdingAPI::Exposed::System::Byte_array* data) {
    reinterpret_cast<void(__fastcall*)(System_String*, ModdingAPI::Exposed::System::Byte_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x243A170))(path, data);
  }
  static inline ModdingAPI::Exposed::System::Byte_array* LoadFromFile(System_String* path) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Byte_array*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x243A3B0))(path);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x243A620))();
  }
};
}