// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Playables.PlayableGraph.hpp"
#include "ModdingAPI.Exposed.UnityEngine.PropertyName.hpp"


namespace ModdingAPI::Exposed::UnityEngine::Playables {
struct __PlayableDirector_Il2CppStaticFields {
};

struct __PlayableDirector_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_GetReferenceValue;
  VirtualInvokeData _5_SetReferenceValue;
  VirtualInvokeData _6_SetReferenceValue_Injected;
  VirtualInvokeData _7_GetReferenceValue_Injected;
};

struct __PlayableDirector_Il2CppClass {
  Il2CppClass_1 _1;
  __PlayableDirector_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __PlayableDirector_Il2CppVtbl vtbl;
};

class PlayableDirector {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C8F5C8;
  static inline    PlayableDirector* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C2E528;
  static inline    __PlayableDirector_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline PlayableDirector* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (PlayableDirector**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __PlayableDirector_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__PlayableDirector_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __PlayableDirector_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::System::Action_T_* played;
  ModdingAPI::Exposed::System::Action_T_* paused;
  ModdingAPI::Exposed::System::Action_T_* stopped;

  // Member methods:
  int32_t get_extrapolationMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1591C60))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Playables::PlayableAsset* get_playableAsset() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Playables::PlayableAsset*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1591CB0))(this);
  }
  void set_playableAsset(ModdingAPI::Exposed::UnityEngine::Playables::PlayableAsset* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*, ModdingAPI::Exposed::UnityEngine::Playables::PlayableAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1591DB0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph get_playableGraph() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1591E10))(this);
  }
  void SetGenericBinding(ModdingAPI::Exposed::UnityEngine::Object* key, ModdingAPI::Exposed::UnityEngine::Object* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*, ModdingAPI::Exposed::UnityEngine::Object*, ModdingAPI::Exposed::UnityEngine::Object*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1591E90))(this, key, value);
  }
  void set_time(double value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1591F00))(this, value);
  }
  double get_time() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1591F60))(this);
  }
  void Evaluate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1591FB0))(this);
  }
  void Play() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1592000))(this);
  }
  void Stop() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1592050))(this);
  }
  void Pause() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15920A0))(this);
  }
  void SetReferenceValue(ModdingAPI::Exposed::UnityEngine::PropertyName id, ModdingAPI::Exposed::UnityEngine::Object* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*, ModdingAPI::Exposed::UnityEngine::PropertyName, ModdingAPI::Exposed::UnityEngine::Object*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15920F0))(this, id, value);
  }
  ModdingAPI::Exposed::UnityEngine::Object* GetReferenceValue(ModdingAPI::Exposed::UnityEngine::PropertyName id, bool idValid) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Object*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*, ModdingAPI::Exposed::UnityEngine::PropertyName, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1592160))(this, id, idValid);
  }
  ModdingAPI::Exposed::UnityEngine::Object* GetGenericBinding(ModdingAPI::Exposed::UnityEngine::Object* key) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Object*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*, ModdingAPI::Exposed::UnityEngine::Object*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15921D0))(this, key);
  }
  int32_t GetWrapMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1591C60))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph GetGraphHandle() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1591E10))(this);
  }
  void Internal_SetGenericBinding(ModdingAPI::Exposed::UnityEngine::Object* key, ModdingAPI::Exposed::UnityEngine::Object* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*, ModdingAPI::Exposed::UnityEngine::Object*, ModdingAPI::Exposed::UnityEngine::Object*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1591E90))(this, key, value);
  }
  void SetPlayableAsset(ModdingAPI::Exposed::UnityEngine::ScriptableObject* asset) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*, ModdingAPI::Exposed::UnityEngine::ScriptableObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1591DB0))(this, asset);
  }
  ModdingAPI::Exposed::UnityEngine::ScriptableObject* Internal_GetPlayableAsset() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::ScriptableObject*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1592230))(this);
  }
  void add_played(ModdingAPI::Exposed::System::Action_T_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*, ModdingAPI::Exposed::System::Action_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1592280))(this, value);
  }
  void remove_played(ModdingAPI::Exposed::System::Action_T_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*, ModdingAPI::Exposed::System::Action_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1592370))(this, value);
  }
  void add_paused(ModdingAPI::Exposed::System::Action_T_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*, ModdingAPI::Exposed::System::Action_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1592460))(this, value);
  }
  void remove_paused(ModdingAPI::Exposed::System::Action_T_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*, ModdingAPI::Exposed::System::Action_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1592550))(this, value);
  }
  void add_stopped(ModdingAPI::Exposed::System::Action_T_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*, ModdingAPI::Exposed::System::Action_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1592640))(this, value);
  }
  void remove_stopped(ModdingAPI::Exposed::System::Action_T_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*, ModdingAPI::Exposed::System::Action_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1592730))(this, value);
  }
  void SendOnPlayableDirectorPlay() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1592820))(this);
  }
  void SendOnPlayableDirectorPause() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15928B0))(this);
  }
  void SendOnPlayableDirectorStop() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1592940))(this);
  }
  void SetReferenceValue_Injected(ModdingAPI::Exposed::UnityEngine::PropertyName id, ModdingAPI::Exposed::UnityEngine::Object* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*, ModdingAPI::Exposed::UnityEngine::PropertyName, ModdingAPI::Exposed::UnityEngine::Object*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15929D0))(this, id, value);
  }
  ModdingAPI::Exposed::UnityEngine::Object* GetReferenceValue_Injected(ModdingAPI::Exposed::UnityEngine::PropertyName id, bool idValid) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Object*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*, ModdingAPI::Exposed::UnityEngine::PropertyName, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1592A40))(this, id, idValid);
  }
  void GetGraphHandle_Injected(ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*, ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1592AB0))(this, ret);
  }
};
}