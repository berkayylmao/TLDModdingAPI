// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.Rewired.PidVid.hpp"
#include "ModdingAPI.Exposed.System.Guid.hpp"


namespace ModdingAPI::Exposed {
struct __WMPmSPVGIZVrFELVDTpenAdonhG_Il2CppStaticFields {
};

struct __WMPmSPVGIZVrFELVDTpenAdonhG_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_Dispose;
  VirtualInvokeData _5_get_SystemName;
  VirtualInvokeData _6_get_FriendlyName;
  VirtualInvokeData _7_get_VendorId;
  VirtualInvokeData _8_get_ProductId;
  VirtualInvokeData _9_get_PidVid;
  VirtualInvokeData _10_get_InstanceGuid;
  VirtualInvokeData _12_get_IsBluetoothDevice;
  VirtualInvokeData _13_get_ControllerExtension;
  VirtualInvokeData _14_get_SupportsVibration;
  VirtualInvokeData _15_get_VibrationMotorCount;
  VirtualInvokeData _18_Acquire;
  VirtualInvokeData _19_Unacquire;
  VirtualInvokeData _21_Matches;
  VirtualInvokeData _22_SetVibration;
  VirtualInvokeData _23_StopVibration;
  VirtualInvokeData _24_hBrVVmrdIBdzlWHPriZmuajDAJY;
  VirtualInvokeData _25_MehdlFiOEubLjfRvtUYFkDQVlbu;
  VirtualInvokeData _26_get_NativeJoystick;
  VirtualInvokeData _27_get_DeviceType;
  VirtualInvokeData _28_Update;
  VirtualInvokeData _29_UpdateFinished;
  VirtualInvokeData _30_IsAttached;
  VirtualInvokeData _31_gzjrdStMdRYvnlBHPtmxSIAUzON;
  VirtualInvokeData _65535__ctor;
};

struct __WMPmSPVGIZVrFELVDTpenAdonhG_Il2CppClass {
  Il2CppClass_1 _1;
  __WMPmSPVGIZVrFELVDTpenAdonhG_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __WMPmSPVGIZVrFELVDTpenAdonhG_Il2CppVtbl vtbl;
};

class WMPmSPVGIZVrFELVDTpenAdonhG {
public:
  // Il2Cpp fields:
  __WMPmSPVGIZVrFELVDTpenAdonhG_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::ApboJJvFTdNROUCAmOZVhjyzPsT* qioWhAhSMGfrhGBsXWHSjINxGcoQ;
  int32_t cXfaBPLEQFTunMyHqvqtbpERqpX;
  int32_t iVVCipepmErsfHMmDuQvtZHwzyG;
  ModdingAPI::Exposed::yKteYrTircYkMtCuwggqxEIahVY* tjFkLGokxnGcvKlvMwjLCincdTJP;
  bool lUcIGCLIWkCmWeInmyFcCPqJaTE;
  bool PAOUCWzrsONyrHbXaCBJfsyvsUJ;
  ModdingAPI::Exposed::RKomKLiSyfmUBBhhfSyhBrXfYBn* hVOTzDqThmwrOnTQPeJZEuGNeSU;
  bool WzCnjMWIRWqTnQLNwjyltJrOyaK;
  int32_t WxvTMlQOpPPZGcfHYeeQDrEuQaEM;
  ModdingAPI::Exposed::System::Single_array* RVTEZMpMwBNwnEvYHHwxCvLyvYB;
  bool IPjKDfWEXfJCxnkfIfovlZZlcJe;

  // Member methods:
  bool get_IsValid() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA34130))(this);
  }
  void ::ctor(ModdingAPI::Exposed::ApboJJvFTdNROUCAmOZVhjyzPsT* nativeDevice, ModdingAPI::Exposed::yKteYrTircYkMtCuwggqxEIahVY* info, int32_t type) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*, ModdingAPI::Exposed::ApboJJvFTdNROUCAmOZVhjyzPsT*, ModdingAPI::Exposed::yKteYrTircYkMtCuwggqxEIahVY*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA34150))(this, nativeDevice, info, type);
  }
  void hBrVVmrdIBdzlWHPriZmuajDAJY() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA341A0))(this);
  }
  void MehdlFiOEubLjfRvtUYFkDQVlbu() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA341D0))(this);
  }
  void PUaVxJOyIuaBtSiorpjInfMznKn() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA34300))(this);
  }
  ModdingAPI::Exposed::EpBeWNMtqxcQCkslCbIrqTQjbEv* get_NativeJoystick() {
    return reinterpret_cast<ModdingAPI::Exposed::EpBeWNMtqxcQCkslCbIrqTQjbEv*(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA343F0))(this);
  }
  System_String* get_SystemName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8CCBA0))(this);
  }
  System_String* get_FriendlyName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA344B0))(this);
  }
  int32_t get_VendorId() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA344D0))(this);
  }
  int32_t get_ProductId() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA344F0))(this);
  }
  ModdingAPI::Exposed::Rewired::PidVid get_PidVid() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::PidVid(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA34510))(this);
  }
  ModdingAPI::Exposed::System::Guid get_InstanceGuid() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Guid(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA34530))(this);
  }
  int32_t get_DeviceType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this);
  }
  bool get_IsBluetoothDevice() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(this);
  }
  ModdingAPI::Exposed::Rewired::Controller::Extension* get_ControllerExtension() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Controller::Extension*(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this);
  }
  bool get_SupportsVibration() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F6810))(this);
  }
  int32_t get_VibrationMotorCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8C0))(this);
  }
  void Acquire() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void Unacquire() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  bool IsAttached() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA34560))(this);
  }
  bool Matches(ModdingAPI::Exposed::kJqQFjBUIxKiFKvuXFBZZldvqlq* ) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*, ModdingAPI::Exposed::kJqQFjBUIxKiFKvuXFBZZldvqlq*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA34800))(this, );
  }
  void SetVibration(int32_t , float , bool ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*, int32_t, float, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA34910))(this, , , );
  }
  void StopVibration() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA34BB0))(this);
  }
  void Dispose() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA34E60))(this);
  }
  void Finalize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA34F10))(this);
  }
  void gzjrdStMdRYvnlBHPtmxSIAUzON(bool ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::WMPmSPVGIZVrFELVDTpenAdonhG*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA34F90))(this, );
  }
};
}