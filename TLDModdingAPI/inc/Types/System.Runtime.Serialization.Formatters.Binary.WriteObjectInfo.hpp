// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Runtime.Serialization.StreamingContext.hpp"
#include "ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext.hpp"


namespace ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary {
struct __WriteObjectInfo_Il2CppStaticFields {
};

struct __WriteObjectInfo_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __WriteObjectInfo_Il2CppClass {
  Il2CppClass_1 _1;
  __WriteObjectInfo_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __WriteObjectInfo_Il2CppVtbl vtbl;
};

class WriteObjectInfo {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C56C70;
  static inline    __WriteObjectInfo_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __WriteObjectInfo_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__WriteObjectInfo_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __WriteObjectInfo_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  int32_t objectInfoId;
  Il2CppObject* obj;
  ModdingAPI::Exposed::System::Type* objectType;
  bool isSi;
  bool isNamed;
  bool isTyped;
  bool isArray;
  ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo* si;
  ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::SerObjectInfoCache* cache;
  ModdingAPI::Exposed::System::Object_array* memberData;
  ModdingAPI::Exposed::System::Runtime::Serialization::ISerializationSurrogate* serializationSurrogate;
  ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context;
  ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::SerObjectInfoInit* serObjectInfoInit;
  int64_t objectId;
  int64_t assemId;
  System_String* binderTypeName;
  System_String* binderAssemblyString;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void ObjectEnd() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x97CA70))(this);
  }
  void InternalInit() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x97CAB0))(this);
  }
  void InitSerialize(Il2CppObject* obj, ModdingAPI::Exposed::System::Runtime::Serialization::ISurrogateSelector* surrogateSelector, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::SerObjectInfoInit* serObjectInfoInit, ModdingAPI::Exposed::System::Runtime::Serialization::IFormatterConverter* converter, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectWriter* objectWriter, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationBinder* binder) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo*, Il2CppObject*, ModdingAPI::Exposed::System::Runtime::Serialization::ISurrogateSelector*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::SerObjectInfoInit*, ModdingAPI::Exposed::System::Runtime::Serialization::IFormatterConverter*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectWriter*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationBinder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x97CB90))(this, obj, surrogateSelector, context, serObjectInfoInit, converter, objectWriter, binder);
  }
  void InitSerialize(ModdingAPI::Exposed::System::Type* objectType, ModdingAPI::Exposed::System::Runtime::Serialization::ISurrogateSelector* surrogateSelector, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::SerObjectInfoInit* serObjectInfoInit, ModdingAPI::Exposed::System::Runtime::Serialization::IFormatterConverter* converter, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationBinder* binder) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo*, ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Runtime::Serialization::ISurrogateSelector*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::SerObjectInfoInit*, ModdingAPI::Exposed::System::Runtime::Serialization::IFormatterConverter*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationBinder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x97D270))(this, objectType, surrogateSelector, context, serObjectInfoInit, converter, binder);
  }
  void InitSiWrite() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x97D890))(this);
  }
  void InitNoMembers() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x97DEF0))(this);
  }
  void InitMemberInfo() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x97E0E0))(this);
  }
  System_String* GetTypeFullName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x97E5A0))(this);
  }
  System_String* GetAssemblyString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x97E5D0))(this);
  }
  void InvokeSerializationBinder(ModdingAPI::Exposed::System::Runtime::Serialization::SerializationBinder* binder) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationBinder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x97E600))(this, binder);
  }
  ModdingAPI::Exposed::System::Type* GetMemberType(ModdingAPI::Exposed::System::Reflection::MemberInfo* objMember) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo*, ModdingAPI::Exposed::System::Reflection::MemberInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x97E640))(this, objMember);
  }
  void GetMemberInfo(ModdingAPI::Exposed::System::String_array* outMemberNames, ModdingAPI::Exposed::System::Type_array* outMemberTypes, ModdingAPI::Exposed::System::Object_array* outMemberData) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo*, ModdingAPI::Exposed::System::String_array*, ModdingAPI::Exposed::System::Type_array*, ModdingAPI::Exposed::System::Object_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x97E8C0))(this, outMemberNames, outMemberTypes, outMemberData);
  }

  // Static methods:
  static inline ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo* Serialize(Il2CppObject* obj, ModdingAPI::Exposed::System::Runtime::Serialization::ISurrogateSelector* surrogateSelector, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::SerObjectInfoInit* serObjectInfoInit, ModdingAPI::Exposed::System::Runtime::Serialization::IFormatterConverter* converter, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectWriter* objectWriter, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationBinder* binder) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo*(__fastcall*)(Il2CppObject*, ModdingAPI::Exposed::System::Runtime::Serialization::ISurrogateSelector*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::SerObjectInfoInit*, ModdingAPI::Exposed::System::Runtime::Serialization::IFormatterConverter*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectWriter*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationBinder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x97CAE0))(obj, surrogateSelector, context, serObjectInfoInit, converter, objectWriter, binder);
  }
  static inline ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo* Serialize(ModdingAPI::Exposed::System::Type* objectType, ModdingAPI::Exposed::System::Runtime::Serialization::ISurrogateSelector* surrogateSelector, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::SerObjectInfoInit* serObjectInfoInit, ModdingAPI::Exposed::System::Runtime::Serialization::IFormatterConverter* converter, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationBinder* binder) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo*(__fastcall*)(ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Runtime::Serialization::ISurrogateSelector*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::SerObjectInfoInit*, ModdingAPI::Exposed::System::Runtime::Serialization::IFormatterConverter*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationBinder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x97D1D0))(objectType, surrogateSelector, context, serObjectInfoInit, converter, binder);
  }
  static inline void CheckTypeForwardedFrom(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::SerObjectInfoCache* cache, ModdingAPI::Exposed::System::Type* objectType, System_String* binderAssemblyString) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::SerObjectInfoCache*, ModdingAPI::Exposed::System::Type*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x97DDD0))(cache, objectType, binderAssemblyString);
  }
  static inline ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo* GetObjectInfo(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::SerObjectInfoInit* serObjectInfoInit) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::SerObjectInfoInit*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x97E9E0))(serObjectInfoInit);
  }
  static inline void PutObjectInfo(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::SerObjectInfoInit* serObjectInfoInit, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo* objectInfo) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::SerObjectInfoInit*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x97EBF0))(serObjectInfoInit, objectInfo);
  }
};
}