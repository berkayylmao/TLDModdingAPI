// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.Mono.Unity.UnityTls.unitytls_tlsctx_protocolrange.hpp"


namespace ModdingAPI::Exposed::Mono::Unity::UnityTls {
struct __unitytls_interface_struct_Il2CppStaticFields {
};

struct __unitytls_interface_struct_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __unitytls_interface_struct_Il2CppClass {
  Il2CppClass_1 _1;
  __unitytls_interface_struct_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __unitytls_interface_struct_Il2CppVtbl vtbl;
};

class unitytls_interface_struct {
public:
  // Il2Cpp fields:
  __unitytls_interface_struct_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  uint64_t UNITYTLS_INVALID_HANDLE;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange UNITYTLS_TLSCTX_PROTOCOLRANGE_DEFAULT;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_create_t* unitytls_errorstate_create;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_errorstate_raise_error_t* unitytls_errorstate_raise_error;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_get_ref_t* unitytls_key_get_ref;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_der_t* unitytls_key_parse_der;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_parse_pem_t* unitytls_key_parse_pem;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_key_free_t* unitytls_key_free;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509_export_der_t* unitytls_x509_export_der;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t* unitytls_x509list_get_ref;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t* unitytls_x509list_get_x509;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t* unitytls_x509list_create;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t* unitytls_x509list_append;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t* unitytls_x509list_append_der;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t* unitytls_x509list_append_pem;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t* unitytls_x509list_free;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t* unitytls_x509verify_default_ca;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t* unitytls_x509verify_explicit_ca;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t* unitytls_tlsctx_create_server;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t* unitytls_tlsctx_create_client;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t* unitytls_tlsctx_server_require_client_authentication;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t* unitytls_tlsctx_set_certificate_callback;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t* unitytls_tlsctx_set_trace_callback;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t* unitytls_tlsctx_set_x509verify_callback;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t* unitytls_tlsctx_set_supported_ciphersuites;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t* unitytls_tlsctx_get_ciphersuite;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t* unitytls_tlsctx_get_protocol;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t* unitytls_tlsctx_process_handshake;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t* unitytls_tlsctx_read;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t* unitytls_tlsctx_write;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t* unitytls_tlsctx_notify_close;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t* unitytls_tlsctx_free;
  ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t* unitytls_random_generate_bytes;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Mono::Unity::UnityTls::unitytls_interface_struct*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
};
}