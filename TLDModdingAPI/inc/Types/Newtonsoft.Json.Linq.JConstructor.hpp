// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::Newtonsoft::Json::Linq {
struct __JConstructor_Il2CppStaticFields {
};

struct __JConstructor_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_System_Collections_Generic_IEnumerable_Newtonsoft_Json_Linq_JToken__GetEnumerator;
  VirtualInvokeData _5_System_Collections_IEnumerable_GetEnumerator;
  VirtualInvokeData _6_Newtonsoft_Json_IJsonLineInfo_HasLineInfo;
  VirtualInvokeData _7_Newtonsoft_Json_IJsonLineInfo_get_LineNumber;
  VirtualInvokeData _8_Newtonsoft_Json_IJsonLineInfo_get_LinePosition;
  VirtualInvokeData _9_System_ICloneable_Clone;
  VirtualInvokeData _10_CloneToken;
  VirtualInvokeData _11_DeepEquals;
  VirtualInvokeData _12_get_Type;
  VirtualInvokeData _13_get_HasValues;
  VirtualInvokeData _14_get_Item;
  VirtualInvokeData _15_get_First;
  VirtualInvokeData _16_get_Last;
  VirtualInvokeData _17_Children;
  VirtualInvokeData _18_WriteTo;
  VirtualInvokeData _19_GetDeepHashCode;
  VirtualInvokeData _20_System_Collections_Generic_IList_Newtonsoft_Json_Linq_JToken__get_Item;
  VirtualInvokeData _21_System_Collections_Generic_IList_Newtonsoft_Json_Linq_JToken__set_Item;
  VirtualInvokeData _22_System_Collections_Generic_IList_Newtonsoft_Json_Linq_JToken__IndexOf;
  VirtualInvokeData _23_System_Collections_Generic_IList_Newtonsoft_Json_Linq_JToken__Insert;
  VirtualInvokeData _24_System_Collections_Generic_IList_Newtonsoft_Json_Linq_JToken__RemoveAt;
  VirtualInvokeData _26_System_Collections_Generic_ICollection_Newtonsoft_Json_Linq_JToken__get_IsReadOnly;
  VirtualInvokeData _27_System_Collections_Generic_ICollection_Newtonsoft_Json_Linq_JToken__Add;
  VirtualInvokeData _28_System_Collections_Generic_ICollection_Newtonsoft_Json_Linq_JToken__Clear;
  VirtualInvokeData _29_System_Collections_Generic_ICollection_Newtonsoft_Json_Linq_JToken__Contains;
  VirtualInvokeData _30_System_Collections_Generic_ICollection_Newtonsoft_Json_Linq_JToken__CopyTo;
  VirtualInvokeData _31_System_Collections_Generic_ICollection_Newtonsoft_Json_Linq_JToken__Remove;
  VirtualInvokeData _32_System_Collections_IList_get_Item;
  VirtualInvokeData _33_System_Collections_IList_set_Item;
  VirtualInvokeData _34_System_Collections_IList_Add;
  VirtualInvokeData _35_System_Collections_IList_Contains;
  VirtualInvokeData _36_System_Collections_IList_Clear;
  VirtualInvokeData _37_System_Collections_IList_get_IsReadOnly;
  VirtualInvokeData _38_System_Collections_IList_get_IsFixedSize;
  VirtualInvokeData _39_System_Collections_IList_IndexOf;
  VirtualInvokeData _40_System_Collections_IList_Insert;
  VirtualInvokeData _41_System_Collections_IList_Remove;
  VirtualInvokeData _42_System_Collections_IList_RemoveAt;
  VirtualInvokeData _43_System_Collections_ICollection_CopyTo;
  VirtualInvokeData _44_get_Count;
  VirtualInvokeData _45_System_Collections_ICollection_get_SyncRoot;
  VirtualInvokeData _46_System_Collections_ICollection_get_IsSynchronized;
  VirtualInvokeData _47_get_ChildrenTokens;
  VirtualInvokeData _48_OnListChanged;
  VirtualInvokeData _49_IndexOfItem;
  VirtualInvokeData _50_InsertItem;
  VirtualInvokeData _51_RemoveItemAt;
  VirtualInvokeData _52_RemoveItem;
  VirtualInvokeData _53_GetItem;
  VirtualInvokeData _54_SetItem;
  VirtualInvokeData _55_ClearItems;
  VirtualInvokeData _56_ReplaceItem;
  VirtualInvokeData _57_ContainsItem;
  VirtualInvokeData _58_CopyItemsTo;
  VirtualInvokeData _59_ValidateToken;
  VirtualInvokeData _60_Add;
};

struct __JConstructor_Il2CppClass {
  Il2CppClass_1 _1;
  __JConstructor_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __JConstructor_Il2CppVtbl vtbl;
};

class JConstructor {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C91DA8;
  static inline    __JConstructor_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __JConstructor_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__JConstructor_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __JConstructor_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::Newtonsoft::Json::Linq::JContainer* JToken__parent;
  ModdingAPI::Exposed::Newtonsoft::Json::Linq::JToken* JToken__previous;
  ModdingAPI::Exposed::Newtonsoft::Json::Linq::JToken* JToken__next;
  Il2CppObject* JToken__annotations;
  ModdingAPI::Exposed::System::ComponentModel::ListChangedEventHandler* _listChanged;
  Il2CppObject* JContainer__syncRoot;
  bool JContainer__busy;
  System_String* _name;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* _values;

  // Member methods:
  ModdingAPI::Exposed::System::Collections::Generic::IList_T_* get_ChildrenTokens() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IList_T_*(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Linq::JConstructor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A440))(this);
  }
  int32_t IndexOfItem(ModdingAPI::Exposed::Newtonsoft::Json::Linq::JToken* item) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Linq::JConstructor*, ModdingAPI::Exposed::Newtonsoft::Json::Linq::JToken*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD0A660))(this, item);
  }
  System_String* get_Name() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Linq::JConstructor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319980))(this);
  }
  int32_t get_Type() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Linq::JConstructor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x32CAF0))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Linq::JConstructor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD0A750))(this);
  }
  void ::ctor(ModdingAPI::Exposed::Newtonsoft::Json::Linq::JConstructor* other) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Linq::JConstructor*, ModdingAPI::Exposed::Newtonsoft::Json::Linq::JConstructor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD0A8B0))(this, other);
  }
  void ::ctor(System_String* name) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Linq::JConstructor*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD0AA20))(this, name);
  }
  bool DeepEquals(ModdingAPI::Exposed::Newtonsoft::Json::Linq::JToken* node) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Linq::JConstructor*, ModdingAPI::Exposed::Newtonsoft::Json::Linq::JToken*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD0ABF0))(this, node);
  }
  ModdingAPI::Exposed::Newtonsoft::Json::Linq::JToken* CloneToken() {
    return reinterpret_cast<ModdingAPI::Exposed::Newtonsoft::Json::Linq::JToken*(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Linq::JConstructor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD0AD10))(this);
  }
  void WriteTo(ModdingAPI::Exposed::Newtonsoft::Json::JsonWriter* writer, ModdingAPI::Exposed::Newtonsoft::Json::JsonConverter_array* converters) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Linq::JConstructor*, ModdingAPI::Exposed::Newtonsoft::Json::JsonWriter*, ModdingAPI::Exposed::Newtonsoft::Json::JsonConverter_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD0AFA0))(this, writer, converters);
  }
  ModdingAPI::Exposed::Newtonsoft::Json::Linq::JToken* get_Item(Il2CppObject* key) {
    return reinterpret_cast<ModdingAPI::Exposed::Newtonsoft::Json::Linq::JToken*(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Linq::JConstructor*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD0B1F0))(this, key);
  }
  int32_t GetDeepHashCode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Linq::JConstructor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD0B340))(this);
  }

  // Static methods:
  static inline ModdingAPI::Exposed::Newtonsoft::Json::Linq::JConstructor* Load(ModdingAPI::Exposed::Newtonsoft::Json::JsonReader* reader, ModdingAPI::Exposed::Newtonsoft::Json::Linq::JsonLoadSettings* settings) {
    return reinterpret_cast<ModdingAPI::Exposed::Newtonsoft::Json::Linq::JConstructor*(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::JsonReader*, ModdingAPI::Exposed::Newtonsoft::Json::Linq::JsonLoadSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD0B390))(reader, settings);
  }
};
}