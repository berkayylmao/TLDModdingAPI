// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.Pathfinding.NNInfo.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Quaternion.hpp"
#include "ModdingAPI.Exposed.UnityEngine.RaycastHit.hpp"
#include "ModdingAPI.Exposed.UnityEngine.SpherecastCommand.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Vector3.hpp"


namespace ModdingAPI::Exposed {
struct __BaseAi_Il2CppStaticFields {
  bool m_AllowSlowdownForHold;
  ModdingAPI::Exposed::BaseAiDataProxy* m_BaseAiDataProxy;
  int32_t WANDER_HOWL_ANIM_ID;
  bool s_ForceHuntedStruggleAnim;
  bool s_ShouldForceHuntedStruggleDraggingRotation;
  float s_ForceHuntedStruggleDraggingFacing;
  float s_ForceHuntedStruggleDraggingRoll;
};

struct __BaseAi_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __BaseAi_Il2CppClass {
  Il2CppClass_1 _1;
  __BaseAi_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __BaseAi_Il2CppVtbl vtbl;
};

class BaseAi {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C5BDC8;
  static inline    BaseAi* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C50700;
  static inline    __BaseAi_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline BaseAi* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (BaseAi**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __BaseAi_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__BaseAi_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __BaseAi_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  bool m_UseAiming;
  float m_AimingWeight;
  ModdingAPI::Exposed::UnityEngine::Transform* m_LeftHandTarget;
  ModdingAPI::Exposed::UnityEngine::Transform* m_RightHandTarget;
  bool m_UseAimingElboHints;
  ModdingAPI::Exposed::UnityEngine::Transform* m_LeftElboHint;
  ModdingAPI::Exposed::UnityEngine::Transform* m_RightElboHint;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Weapon;
  ModdingAPI::Exposed::UnityEngine::Transform* m_AimJoint;
  float m_WeaponDistanceFromHead;
  float m_MaxYawAngle;
  ModdingAPI::Exposed::RandomId_array* m_RandomIds;
  System_String* m_FrontLeftBone;
  System_String* m_FrontRightBone;
  System_String* m_BackLeftBone;
  System_String* m_BackRightBone;
  int32_t m_SnowImprintType;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SpeedFromMecanimBone;
  bool m_SpeedForPathfindingOverride;
  float m_OverrideSpeed;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_GameObject_Mouth;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_BreathEffectPrefab;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_BreathEffect;
  ModdingAPI::Exposed::FootstepTrail* m_FootstepTrail;
  int32_t m_LastFootstepTick;
  bool m_LastFootstepFront;
  bool m_LastFootstepLeft;
  bool m_LastFootstepResult;
  int32_t m_NextRecentFootPrintIndex;
  ModdingAPI::Exposed::UnityEngine::Vector3_array* m_RecentFootPrints;
  float m_NextRandomIdTime;
  ModdingAPI::Exposed::RandomId* m_ActiveRandomId;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_PreviousForward;
  float m_turnSpeed;
  float m_NextUpdateStandingOnMaterialTag;
  bool m_CanPlayTurn;
  bool m_CanPlayPitchRoll;
  bool m_CanPlayTarget;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_TurnHeading;
  float m_TotalTurnAngle;
  int32_t m_AnimParameter_ActualSpeed;
  int32_t m_AnimParameter_AiState;
  int32_t m_AnimParameter_Attack_Trigger;
  int32_t m_AnimParameter_AttackId;
  int32_t m_AnimParameter_Corpse;
  int32_t m_AnimParameter_Dead;
  int32_t m_AnimParameter_ExitAttack;
  int32_t m_AnimParameter_Flinch_Trigger;
  int32_t m_AnimParameter_Howl_Trigger;
  int32_t m_AnimParameter_Pitch;
  int32_t m_AnimParameter_RandomId;
  int32_t m_AnimParameter_RandomId_Trigger;
  int32_t m_AnimParameter_Roar_Trigger;
  int32_t m_AnimParameter_Roll;
  int32_t m_AnimParameter_Sleep;
  int32_t m_AnimParameter_SniffAir;
  int32_t m_AnimParameter_SniffGround;
  int32_t m_AnimParameter_Speed;
  int32_t m_AnimParameter_StruggleStart;
  int32_t m_AnimParameter_Hunted2StruggleStart;
  int32_t m_AnimParameter_StruggleEnd;
  int32_t m_AnimParameter_TargetHeading;
  int32_t m_AnimParameter_TargetHeadingSmooth;
  int32_t m_AnimParameter_TurnAngle;
  int32_t m_AnimParameter_TurnSpeed;
  int32_t m_AnimParameter_WanderPauseId;
  int32_t m_AnimParameter_TapMeter;
  int32_t m_AnimParameter_StruggleHeight;
  int32_t m_AnimParameter_Wounded;
  int32_t m_AnimParameter_IsOnHindLegs;
  int32_t m_AnimParameter_PropIsRifleRack;
  int32_t m_AnimParameter_PropIsChair;
  int32_t m_AnimParameter_IsAiming;
  int32_t m_AnimParameter_Stunned;
  int32_t m_AnimParameter_Stunned_Trigger;
  int32_t m_AnimParameter_MooseStomp_Trigger;
  int32_t m_AnimParameter_IsInjured;
  int32_t m_AnimParameter_DamageImpact_Trigger;
  int32_t m_AnimParameter_DamageBodyPart;
  int32_t m_AnimParameter_DamageSide;
  int32_t m_AnimParameter_Trigger_Spear_Struggle_Entry;
  int32_t m_AnimParameter_Trigger_Spear_Exit_Success;
  int32_t m_AnimParameter_Trigger_Spear_Exit_Fail;
  int32_t m_AnimParameter_Trigger_Spear_Exit_Success_Death;
  int32_t m_AnimParameter_WeaponId;
  int32_t m_AnimParameter_Trigger_PassingAttack;
  int32_t m_AnimParameter_Trigger_PassingAttackNpc;
  int32_t m_AnimParameter_PassingAttackSide;
  int32_t m_AnimParameter_MoveAgent_DeltaYawAnglePerFrame;
  int32_t m_AnimParameter_MoveAgent_DeltaHeadAnglePerFrame;
  int32_t m_AnimParameter_Trigger_Timberwolf_Attack;
  int32_t m_AnimState_Howl;
  bool m_AttachToPlayer;
  float m_AttachBlendInTime;
  float m_AttachBlendOutTime;
  float m_AnimParameter_Wounded_LastSent;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* m_AnimationEventDictionary;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* m_FootstepBoneTransforms;
  int32_t m_LastDamageSide;
  int32_t m_LastDamageBodyPart;
  int32_t m_LastWanderPause;
  float m_RangeMeleeAttack;
  float m_RangeMeleeAttackSmallAnimal;
  float m_RangeMeleeAttackLargeAnimal;
  float m_PassingAttackRange;
  float m_PassingAttackRangeNpc;
  float m_MeleeAttackDamage;
  float m_AttackChanceAfterNearMissGunshot;
  float m_AttackChanceAfterNearMissRevolverShot;
  ModdingAPI::Exposed::DamageEventTable* m_AttackDamageEvents;
  float m_MinDistanceToKeepWithSafeHaven;
  float m_MinDistanceToHoldFromInnerRadius;
  float m_ExtraMarginForStopInField;
  float m_OuterDistanceFromField;
  float m_SpeedLimitAtOuterRadius;
  bool m_UseSlowdownForHold;
  float m_BearAttackAnimationTime;
  float m_TimberwolfAttackAnimationTime;
  bool m_PlayingAttackStartAnimation;
  bool m_PlayedAttackStartAnimation;
  bool m_BearHuntDoneInitialAttack;
  float m_NextAllowedAttackDamageTime;
  bool m_SuppressAttackStartAnimation;
  bool m_IgnoreFlaresAndFireWhenAttacking;
  uint32_t m_AttackingLoopAudioID;
  float m_SpeedWhileStopping;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_AdjustedTargetPosition;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_DirectionToPlayerWhenSpearDetected;
  float m_SpeedBeforeStopping;
  float m_CurrentRadius;
  bool m_HasBeenInsideField;
  bool m_HasBeenInNearbyField;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_LastSlopeUnderPositionList;
  int32_t m_LastPositionsSize;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_EnterAttackPosition;
  bool m_SpearRaisedTooLate;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_LastKnownAttackTargetPosition;
  bool m_DoPassingAttack;
  float m_AnimationTime;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_CarcassPrefab;
  System_String* m_DisplayName;
  int32_t m_StartMode;
  int32_t m_DefaultMode;
  int32_t m_AiType;
  int32_t m_AiSubType;
  int32_t m_AiDifficulty;
  int32_t m_WildlifeMode;
  float m_CurrentHP;
  float m_MaxHP;
  bool m_Invulnerable;
  float m_WalkSpeed;
  float m_StalkSpeed;
  float m_StalkCatchUpSpeed;
  float m_StalkSlowlySpeed;
  float m_ChasePlayerSpeed;
  float m_RunSpeed;
  float m_RetreatSpeed;
  float m_TurnSpeedDegreesPerSecond;
  System_String* m_EnterStalkingAudio;
  System_String* m_EnterAttackModeAudio;
  System_String* m_EnterFleeModeAudio;
  System_String* m_HoldGroundAudio;
  System_String* m_FeedingAudio;
  System_String* m_SleepingAudio;
  System_String* m_StalkingAudio;
  System_String* m_StruggleAudio;
  System_String* m_ChasingAudio;
  System_String* m_IdleAudio;
  System_String* m_WanderAudio;
  System_String* m_HideAndSeekAudio;
  System_String* m_JoinPackAudio;
  float m_ImposterDistanceOnScreen;
  float m_ImposterDistanceOffScreen;
  bool m_IgnoreCriticalHits;
  bool m_OverrideXPModeAttackRestrictions;
  bool m_ScriptedSequenceInterruptible;
  float m_LostPathFleeDistance;
  float m_CantReachTargetStandoffDistance;
  float m_ModelRollScalePercent;
  float m_ModelRollLimitDegrees;
  float m_ModelRollFootPenetrationPercent;
  float m_ModelRollFootPenetrationLimitMeters;
  float m_NavMeshToTerrainSlopeOffset;
  float m_NavMeshToTerrainOffsetFudgeFactor;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_HeadOffset;
  ModdingAPI::Exposed::AiTarget* m_CurrentTarget;
  ModdingAPI::Exposed::UnityEngine::Transform* m_CachedTransform;
  ModdingAPI::Exposed::AiDifficultySetting* m_AiDifficultySetting;
  ModdingAPI::Exposed::AiWolf* m_AiWolf;
  ModdingAPI::Exposed::AiBear* m_AiBear;
  ModdingAPI::Exposed::AiStag* m_AiStag;
  ModdingAPI::Exposed::AiMoose* m_AiMoose;
  ModdingAPI::Exposed::AiRabbit* m_AiRabbit;
  ModdingAPI::Exposed::UnityEngine::Animator* m_Animator;
  ModdingAPI::Exposed::UnityEngine::CharacterController* m_CharacterController;
  ModdingAPI::Exposed::BodyHarvest* m_BodyHarvest;
  ModdingAPI::Exposed::PackAnimal* m_PackAnimal;
  ModdingAPI::Exposed::HuntedPart2WaypointController* m_HuntedPart2WaypointController;
  ModdingAPI::Exposed::BearHuntAiRedux* m_BearHuntAiRedux;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_SpawnPos;
  System_String* m_ScriptedSequenceAnimTrigger;
  bool m_Imposter;
  System_String* m_MissionIdSerialized;
  int32_t m_CurrentMode;
  int32_t m_PreviousMode;
  float m_TimeInModeSeconds;
  float m_TimeInModeTODHours;
  ModdingAPI::Exposed::SpawnRegion* m_SpawnRegionParent;
  ModdingAPI::Exposed::AiTarget* m_AiTarget;
  float m_AiGoalSpeed;
  bool m_FirstFrame;
  int32_t m_StickToGroundCollisionLayerMask;
  bool m_StartHasBeenCalled;
  ModdingAPI::Exposed::AuroraObjectMaterials* m_AuroraObjectMaterials;
  float m_TorsoHalfWidth;
  ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent* m_NavMeshAgentPrefab;
  ModdingAPI::Exposed::UnityEngine::AI::NavMeshAgent* m_NavMeshAgent;
  ModdingAPI::Exposed::MoveAgent* m_MoveAgent;
  ModdingAPI::Exposed::BaseAiData* m_DeferredDeserializeData;
  bool m_RequiresDeferredDeserialize;
  float m_NumSecondsToReachMaxWoundedLocomotion;
  int32_t m_ChanceToFleeFromUnseenAttack;
  float m_ElapsedBleedingOutMinutes;
  float m_ElapsedWoundedMinutes;
  bool m_Wounded;
  bool m_BleedingOut;
  float m_DeathAfterBleeingOutMinutes;
  ModdingAPI::Exposed::BloodTrail* m_BloodTrail;
  int32_t m_DamageSource;
  float m_DistanceToSpawnCarcassSite;
  bool m_ForceToCorpse;
  float m_EnableContainerTime;
  float m_TimeInDeadMode;
  ModdingAPI::Exposed::UnityEngine::GUIStyle* style;
  float m_DetectionRange;
  float m_DetectionFOV;
  float m_HearFootstepsRange;
  float m_HearRifleRange;
  float m_HearCarAlarmRange;
  float m_SmellRange;
  float m_DetectionDelayAfterSpearHitSeconds;
  float m_RangeFromScentFactor;
  float m_RangeFromScentMax;
  float m_MaxSurvivorDistanceToPlayerForTargetting;
  float m_SuppressFootStepDetectionAndSmellSecondsRemaining;
  float m_TimeLastFootstepHeard;
  float m_TimeForNextTargetScan;
  bool m_DisableScanForTargets;
  float m_RestoreTargetAfterSpearTimerSeconds;
  bool m_WasHitBySpear;
  bool m_WasHitBySpearFatal;
  ModdingAPI::Exposed::System::Action* m_SpearStruggleEndAction;
  bool m_RestoreTargetAfterSpearTimerStarted;
  ModdingAPI::Exposed::UnityEngine::AI::NavMeshObstacle* m_DodgeObstacle;
  float m_DodgeTimeoutSeconds;
  float m_DodgeObstacleRadius;
  float m_DodgeObstaclePlacementMinOffset;
  float m_DodgeObstaclePlacementOffsetSeconds;
  float m_DodgeObstacleMinDistanceFromPlayer;
  float m_DodgePlayerFacingAngleThreshold;
  float m_DodgeMaxDistance;
  float m_DodgeTimeoutTime;
  float m_DodgePlayerFacingAngleCos;
  float m_LastDodgePlayerFacingAngle;
  float m_DetectionRangeWhileFeeding;
  float m_HearFootstepsRangeWhileFeeding;
  float m_HearFootstepsRangeWhileSleeping;
  float m_FeedingHoursMin;
  float m_FeedingHoursMax;
  float m_MeatConsumedPerHourKG;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_FeedingBone;
  uint32_t m_FeedingAudioID;
  float m_FeedingDurationHours;
  ModdingAPI::Exposed::BodyHarvest* m_TargetBodyHarvest;
  ModdingAPI::Exposed::BaseAi* m_TargetBaseAi;
  float m_ElapsedFeedingHoursToApplyAfterLoad;
  bool m_FakeFeeding;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_FakeFeedingPos;
  bool m_DidStopAudio;
  ModdingAPI::Exposed::BaseAi* m_GroupFleeLeader;
  int32_t m_FleeChanceWhenTargetDetected;
  int32_t m_FleeFromFlareBounceDistance;
  int32_t m_FleeFromTorchBounceDistance;
  int32_t m_FleeFromStoneBounceDistance;
  int32_t m_FleeFromArrowImpactDistance;
  int32_t m_FleeFromFlareGunRoundImpactDistance;
  int32_t m_ChanceFleeTorchSwing;
  int32_t m_ChanceFleeBrandSwing;
  int32_t m_ChanceFleeFlareSwing;
  int32_t m_ChanceToFleeFromThrownTorch;
  int32_t m_ChanceToFleeFromThrownFlare;
  int32_t m_ChanceToFleeFromThrownStone;
  int32_t m_ChanceToFleeWhenHitByStone;
  int32_t m_DistanceForDesperationAttack;
  float m_StopFleeAfterDistance;
  float m_StopFleeAfterDistanceForStone;
  float m_StopFleeAfterDistanceForSpear;
  float m_StopFleeAfterDistanceWhenBleedingOut;
  float m_StopFleeAfterPassingAttackDistance;
  float m_StopFleeAfterPackMoraleDistance;
  float m_StopFleeAfterWeaponAimDistance;
  float m_StopFleeAfterHoldGroundDistance;
  float m_StopFleeAfterPackDisbandDistance;
  float m_MinimumFleeTime;
  float m_MinimumFleeTimeForStone;
  bool m_SuppressFleeAudio;
  bool m_UseRetreatSpeedInFlee;
  float m_GroupFleeDetectRange;
  float m_GroupFleeRepeatDetectSeconds;
  System_String* m_PlayerKnockdownSFX;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_FleeFromPos;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_FleeToPos;
  bool m_PickedFleeDestination;
  bool m_HasPickedForcedFleePos;
  float m_FleeingForSeconds;
  float m_FleeingForSecondsSinceLastFleeToSpawnPos;
  float m_WarnOthersTimer;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_GroupFleeFollowers;
  bool m_HasFoundFirstFleePoint;
  ModdingAPI::Exposed::System::Single_array* m_FleeAngleDegreesToTry;
  int32_t m_FleeAngleIndexToTry;
  int32_t m_NumAnglesToTryPerFrame;
  bool m_ExitGroupFleeTimerStarted;
  float m_ExitGroupFleeTimerSeconds;
  bool m_UseForcedFleePos;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_ForcedFleePos;
  int32_t m_FleeReason;
  ModdingAPI::Exposed::AreaMarkup* m_FleeMarkup;
  ModdingAPI::Exposed::UnityEngine::Vector3_array* m_Waypoints;
  int32_t m_TargetWaypointIndex;
  bool m_HasEnteredFollowWaypoints;
  int32_t m_WaypointCompletionBehaviour;
  int32_t m_WaypointCompleteNextState;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_GoToPoint;
  int32_t m_TargetMode;
  ModdingAPI::Exposed::AiMarker* m_AiMarker;
  bool m_BlendToPoint;
  float m_GotoPointMovementSpeed;
  int32_t m_State;
  bool m_UseHeadLookat;
  float m_LookWeightHead;
  float m_LookWeightEyes;
  float m_LookWeightBody;
  float m_LookWeightClamp;
  float m_LookAtDistance;
  float m_LookWeightMaster;
  float m_HoldGroundDistance;
  float m_MinFollowDistance;
  float m_ComfortableFollowDistance;
  float m_MaxFollowDistance;
  float m_HideAndSeekStalkingSpeed;
  float m_HideAndSeekCirclingSpeed;
  float m_HideAndSeekRetreatingSpeed;
  float m_RetreatDistance;
  float m_CirclingDistance;
  float m_RetreatPositionMinRadius;
  float m_RetreatPositionMaxRadius;
  float m_ChangeDistanceThreshold;
  float m_HighGroundSearchRadius;
  float m_PackSeperationDistance;
  float m_SneakAmbushTime;
  float m_PassingAttackChance;
  float m_PassingAttackCameraShakeForce;
  float m_PassingAttackCameraRollForce;
  float m_HideAndSeekCooldownTime;
  float m_MinNewPathCooldownTimeSeconds;
  float m_MaxNewPathCooldownTimeSeconds;
  float m_RepathApproachTimeSeconds;
  float m_HighGroundClosingDistancePercent;
  bool m_ShouldAlwaysPerformPassingAttack;
  uint32_t m_HideAndSeekAudioId;
  bool m_IsRetreating;
  float m_SneakApproach;
  float m_SneakAmbushTimer;
  float m_ClosingDistancePercent;
  float m_EnterHideAndSeekCooldownTime;
  float m_NewPathCooldownTimer;
  ModdingAPI::Exposed::AiTarget* m_PlayerTarget;
  float m_FightOrFlightRange;
  float m_ChanceAttackFightOrFlight;
  float m_InvestigateAfterHoldDelaySecondsForSafeHaven;
  float m_HoldGroundMinimumDelaySeconds;
  float m_HoldGroundCooldownSeconds;
  float m_HoldForFieldMinimumDelaySeconds;
  float m_FleeAfterHoldDelaySecondsForAuroraField;
  float m_ChanceAttackOnSpearTimeout;
  float m_HoldGroundSpearTimeoutGametimeMins;
  float m_HoldGroundDistanceFromSpear;
  float m_HoldGroundOuterDistanceFromSpear;
  float m_ChanceAttackOnBlueFlareTimeout;
  float m_HoldGroundBlueFlareTimeoutGametimeMins;
  float m_HoldGroundDistanceFromBlueFlare;
  float m_HoldGroundOuterDistanceFromBlueFlare;
  float m_HoldGroundDistanceFromBlueFlareOnGround;
  float m_HoldGroundOuterDistanceFromBlueFlareOnGround;
  float m_ChanceAttackOnFireTimeout;
  float m_HoldGroundFireTimeoutGametimeMins;
  float m_HoldGroundDistanceFromFire;
  float m_HoldGroundOuterDistanceFromFire;
  float m_ChanceAttackOnFlareTimeout;
  float m_HoldGroundFlareTimeoutGametimeMins;
  float m_HoldGroundDistanceFromFlare;
  float m_HoldGroundOuterDistanceFromFlare;
  float m_HoldGroundDistanceFromFlareOnGround;
  float m_HoldGroundOuterDistanceFromFlareOnGround;
  float m_ChanceAttackOnTorchTimeout;
  float m_HoldGroundTorchTimeoutGametimeMins;
  float m_HoldGroundDistanceFromTorch;
  float m_HoldGroundOuterDistanceFromTorch;
  float m_HoldGroundDistanceFromTorchOnGround;
  float m_HoldGroundOuterDistanceFromTorchOnGround;
  uint32_t m_HoldGroundAudioID;
  float m_TimeToStopHoldingGroundDueToSpear;
  float m_TimeToStopHoldingGroundDueToFire;
  float m_TimeToStopHoldingGroundDueToFlare;
  float m_TimeToStopHoldingGroundDueToTorch;
  float m_TimeToStopHoldingGroundDueToSafeHaven;
  float m_TimeToStopHoldingGroundDueToBlueFlare;
  bool m_WasHoldingForField;
  ModdingAPI::Exposed::AuroraField* m_PlayerSafeHaven;
  ModdingAPI::Exposed::AuroraField* m_ContainingAuroraField;
  float m_TimeToStopHoldingGroundDueToAuroraField;
  float m_LastTimeWasHoldingGround;
  int32_t m_HoldGroundReason;
  uint32_t m_IdleAudioId;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_InvestigatePos;
  bool m_InvestigatePathStarted;
  bool m_ForceInvestigatePos;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_InvestigateFoodObject;
  float m_InvestigateFoodEatDistance;
  float m_InvestigateFoodAvoidFireDistance;
  float m_InvestigateFoodAvoidTargetDistance;
  ModdingAPI::Exposed::AiTarget* m_SmellTarget;
  float m_MinSmellDistance;
  float m_TimeNextCheckForSmells;
  bool m_HasInvestigateSmellPath;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_PathingToSmellTargetPos;
  float m_PackJoinTimeSeconds;
  float m_PackJoinHowlResponseMinSeconds;
  float m_PackJoinHowlResponseMaxSeconds;
  float m_PackSkipJoinStateWhenTargetNearbyDistance;
  uint32_t m_JoinPackAudioId;
  float m_JoinTimer;
  float m_HowlResponseTimer;
  bool m_IsPlayingHowlingAnim;
  ModdingAPI::Exposed::DamageEventTable* m_PassingAttackDamageEvents;
  float m_PassingAttackAnimTimeout;
  bool m_TriggeredPassingAttackAnim;
  float m_PassingAttackAnimTimer;
  bool m_HasPassingAttackDamageFired;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_PathTargetTransform;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_CurrentGroundNormal;
  ModdingAPI::Exposed::Pathfinding::NNConstraint* m_NNConstraint;
  ModdingAPI::Exposed::Pathfinding::NNInfo m_NNInfo;
  float m_LastPositionY;
  bool m_OrientOnDead;
  int32_t m_JobGroundRaycastId;
  float m_GroundTestRadius;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_ActivePointsOfInterest;
  int32_t m_TargetPointOfInterestIndex;
  bool m_HasEnteredPatrolPointsOfInterest;
  bool m_RandomizePointsOfInterest;
  bool m_IsAnimatingAtPointOfInterest;
  float m_DurationAtPointOfInterestSeconds;
  float m_ElapsedTimeAtPointOfInterestSeconds;
  ModdingAPI::Exposed::ScratchingStump* m_SelectedStump;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_ScratchingPos;
  bool m_HasApproachedStump;
  float m_SleepTimeHours;
  uint32_t m_SleepingLoopAudioID;
  float m_ExitSleepModeTime;
  bool m_Awake;
  float m_CuriousFollowDistance;
  float m_CuriousClosestApproachDistance;
  float m_CuriousLoseInterestChance;
  float m_CuriousEnterStalkingChance;
  float m_CuriousRollChangeIntervalMinutes;
  float m_MaxPlayerApproachDistanceToInvestigateFood;
  float m_StalkingFollowDistance;
  float m_StaklingFollowDistanceDecreasePerMinute;
  float m_StalkingBeginChasingDistance;
  float m_StalkingBeginChasingWeakTargetDistance;
  float m_StalkingLoseInterestIntervalMinutes;
  float m_StalkingLoseInterestChance;
  float m_BreakSlalkingRange;
  float m_BreakStalkingTimeSeconds;
  int32_t m_StalkingChanceWhenTargetDetected;
  float m_ForceStalkPlayerDistance;
  uint32_t m_StalkingAudioID;
  uint32_t m_StalkingLoopAudioID;
  float m_LostScentTimeSeconds;
  float m_CurrentStalkingFollowDistance;
  float m_StalkingPausedUntilTime;
  float m_TimeToRandomizeStalkingDestination;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_StalkingDestination;
  float m_NextLoseInterestCheckHoursPlayed;
  bool m_ForceChasePlayerSpeed;
  bool m_Curious;
  float m_NextCuriousChangeStateCheckHoursPlayed;
  float m_IgnoreFootStepsAndSmellsAfterStruggleSeconds;
  bool m_UseWanderDestinationAfterStruggle;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_WanderDestinationAfterStruggle;
  System_String* m_PlayMauledMuffleAudioId;
  System_String* m_StopMauledMuffleAudioId;
  float m_AfterStruggleTimePassStunnedSeconds;
  uint32_t m_StuggleAudioId;
  int32_t m_SpearStruggleTapCount;
  bool m_HasEnteredStruggleOnLastAttack;
  int32_t m_ChanceStunFromThrownStone;
  float m_StunSeconds;
  float m_StunStartTime;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_StunPosition;
  float m_WanderPauseAfterSecondsMin;
  float m_WanderPauseAfterSecondsMax;
  bool m_WanderUseTurnRadius;
  float m_WanderTurnRadius;
  float m_WanderTurnSegmentAngle;
  float m_WanderTurnSpeedDegreesPerSecond;
  bool m_PickedWanderDestination;
  float m_ElapsedWanderHours;
  float m_WanderDurationHours;
  ModdingAPI::Exposed::WanderRegion* m_WanderRegion;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_WanderAroundPos;
  float m_WanderAroundPosRadius;
  bool m_WanderingAroundPos;
  float m_NextCheckMovedDistanceTime;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_PositionAtLastMoveCheck;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_CurrentWanderPos;
  int32_t m_WanderCurrentTarget;
  ModdingAPI::Exposed::UnityEngine::Vector3_array* m_WanderTurnTargets;
  bool m_UseWanderAwayFromPos;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_WanderAwayFromPos;
  bool m_UseWanderToPos;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_WanderToPos;
  bool m_IsGettingAwayFromAuroraField;
  float m_NextStumpVisitTimeHours;
  uint32_t m_WanderAudioId;
  float m_ChanceIdlePauseWhenWandering;
  int32_t m_NumWanderPauseAnims;
  float m_TimeNextWanderPause;
  int32_t m_ForceWanderPauseId;

  // Member methods:
  void UpdateAiming() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void UpdateAimingIk() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AA100))(this);
  }
  int32_t GetHintForGoal(int32_t avatarIKGoal) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AA940))(this, avatarIKGoal);
  }
  void SetIkInfo(int32_t avatarIKGoal, ModdingAPI::Exposed::UnityEngine::Transform* target, ModdingAPI::Exposed::UnityEngine::Transform* hint, float weight, bool useHint) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t, ModdingAPI::Exposed::UnityEngine::Transform*, ModdingAPI::Exposed::UnityEngine::Transform*, float, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AAA60))(this, avatarIKGoal, target, hint, weight, useHint);
  }
  void Start_Anim() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AAF30))(this);
  }
  void UpdateAnim() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AC820))(this);
  }
  void AnimSetTrigger(int32_t id) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AC830))(this, id);
  }
  void AnimSetBool(int32_t id, bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AC8A0))(this, id, value);
  }
  void AnimSetFloat(int32_t id, float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AC8D0))(this, id, value);
  }
  void AnimSetFloat(int32_t id, float value, float dampTime, float deltaTime) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t, float, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AC950))(this, id, value, dampTime, deltaTime);
  }
  void AnimSetInt(int32_t id, int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AC9E0))(this, id, value);
  }
  void AnimSetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyeWeigth, float clampWeight) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float, float, float, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ACA60))(this, weight, bodyWeight, headWeight, eyeWeigth, clampWeight);
  }
  void AnimSetLookAtPosition(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ACAD0))(this, pos);
  }
  bool AnimIsPlaying(int32_t id, int32_t layer) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ACB60))(this, id, layer);
  }
  void AnimSetBearSpearTrigger(int32_t outcome) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ACC10))(this, outcome);
  }
  void SetAnimationParameters() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ACC50))(this);
  }
  void SetDeltaYawAngleParameter(float deltaAngle) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AD2C0))(this, deltaAngle);
  }
  void SetDeltaHeadAngleParameter(float deltaAngle) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AD2E0))(this, deltaAngle);
  }
  void SetSpeedForPathfindingSystem() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AD300))(this);
  }
  void OnIgnoreGlowPitch(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, value);
  }
  void OnIsOnHindLegs(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AD4D0))(this, value);
  }
  void OnAudioEvent(System_String* audioEventName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AD530))(this, audioEventName);
  }
  void OnBreathEffect() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AD620))(this);
  }
  void OnAudioStruggleEvent(System_String* audioEventName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ADB20))(this, audioEventName);
  }
  void OnFootStepFrontLeft(System_String* audioEventName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ADC00))(this, audioEventName);
  }
  void OnFootStepFrontRight(System_String* audioEventName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ADC40))(this, audioEventName);
  }
  void OnFootStepBackLeft(System_String* audioEventName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ADC80))(this, audioEventName);
  }
  void OnFootStepBackRight(System_String* audioEventName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ADCC0))(this, audioEventName);
  }
  void OnGetRandomId() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ADD00))(this);
  }
  void OnPlayerAttach(float blendTime) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ADD10))(this, blendTime);
  }
  void OnPlayerDetach(float blendTime) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ADD20))(this, blendTime);
  }
  void AnimationEndSniff() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void AnimationEndWanderPause() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  bool TriggerCallback(int32_t animationCallbackEvent) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ADD30))(this, animationCallbackEvent);
  }
  void EnableWeapon(int32_t weaponType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ADE40))(this, weaponType);
  }
  void ResetWeapon() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ADEA0))(this);
  }
  void HandleFootprintsForDespawn() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ADF40))(this);
  }
  void PlaceFootPrintDecal(System_String* boneName, bool isFront, bool isLeft) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, System_String*, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AE080))(this, boneName, isFront, isLeft);
  }
  bool ShouldPlaceFootPrintDecal() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AE9A0))(this);
  }
  void PlayFootStepAudio(System_String* audioEventName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AE9B0))(this, audioEventName);
  }
  void SetNextRandomIdTime() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AEC90))(this);
  }
  void UpdateActiveRandomId() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AED30))(this);
  }
  void GetRandomId() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AEDE0))(this);
  }
  void SetSpeedAnimationParameter() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AEF60))(this);
  }
  void SetTurnSpeedAnimationParameter() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AF0B0))(this);
  }
  void SetTargetHeadingParameter() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AF610))(this);
  }
  float GetFlattenedAngle(ModdingAPI::Exposed::UnityEngine::Vector3 inVec) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AFA00))(this, inVec);
  }
  void SetPitchRollParameters() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AFB20))(this);
  }
  void SetAiStateParameter() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AFBF0))(this);
  }
  void SetWoundedParameter() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AFE00))(this);
  }
  void MaybeUpdateStandingOnMaterialTag() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AFF30))(this);
  }
  bool PositionOverlapsRecentFootprints(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B00F0))(this, pos);
  }
  void SetCullModeAlways() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B0310))(this);
  }
  void ResetDefaultCullmode() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B0380))(this);
  }
  void SetDamageImpactParameter(int32_t side, int32_t bodyPart, int32_t setupDamageParamsOptions) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B03F0))(this, side, bodyPart, setupDamageParamsOptions);
  }
  float GetSpeedFromMecanimBone() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B0940))(this);
  }
  void EnterAttack() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B0C80))(this);
  }
  void ExitAttack() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B10C0))(this);
  }
  void StopAttackAudio() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B1260))(this);
  }
  void MaybeAdjustTargetPosition(ModdingAPI::Exposed::UnityEngine::Vector3 targetPosition) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B1360))(this, targetPosition);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetPositionForHold(ModdingAPI::Exposed::UnityEngine::Vector3 targetPosition, float radius) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B1680))(this, targetPosition, radius);
  }
  float GetAverageSlope() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B1890))(this);
  }
  bool MaybeFleeOnSlope() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B1960))(this);
  }
  void MaybeSpearAttackTooLate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B1D20))(this);
  }
  void ProcessAttack() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B2060))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetCurrentHoldGroundCausePosition(int32_t reason) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B2D00))(this, reason);
  }
  void MaybeApplyAttack() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B3020))(this);
  }
  float GetModifiedAttackChance(float baseAttackChance) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B3FE0))(this, baseAttackChance);
  }
  void AttackStartAnimationDone() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B41B0))(this);
  }
  void SuppressAttackStartAnimation() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B41C0))(this);
  }
  bool AttackOrFleeAfterNearMissGunshot(int32_t gt) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B41D0))(this, gt);
  }
  bool EnterAttackModeIfPossible(ModdingAPI::Exposed::UnityEngine::Vector3 attackPos, bool suppressAttackStartAnimation) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B4A80))(this, attackPos, suppressAttackStartAnimation);
  }
  bool CanBeHitBySpear() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B4C40))(this);
  }
  bool ShouldPlayBearAttackStartAnimation() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B4DA0))(this);
  }
  bool ShouldPlayTimberwolfAttackStartAnimation() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B50A0))(this);
  }
  void PlayMeleeAttackAudio() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B5180))(this);
  }
  void UpdateAttackingAudio() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B52E0))(this);
  }
  int32_t GetAttackLineOfSightLayerMask() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B5410))(this);
  }
  float GetSpeedForCurrentRadius(float initialSpeed, float initialRadius, float currentRadius, float innerRadius) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float, float, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B5520))(this, initialSpeed, initialRadius, currentRadius, innerRadius);
  }
  void UpdateSpeedForHoldWithSlowdown() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B5620))(this);
  }
  float GetOuterRadiusForHoldGroundCause(int32_t reason) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B5910))(this, reason);
  }
  float GetInnerRadiusForHoldGroundCause(int32_t reason) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B5BB0))(this, reason);
  }
  bool UpdateForHoldWithSlowdown() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B5E10))(this);
  }
  bool MaybeHoldGroundForSpearForAttack() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B6220))(this);
  }
  bool MaybeHoldGroundForTorchForAttack() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B6380))(this);
  }
  bool MaybeHoldGroundForRedFlareForAttack() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B6650))(this);
  }
  bool MaybeHoldGroundForFireForAttack() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B6920))(this);
  }
  bool MaybeHoldGroundForBlueFlareForAttack() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B6AF0))(this);
  }
  bool MaybeHoldGroundForAttack(int32_t reason, ModdingAPI::Exposed::BaseAi::HoldGroundCallback* holdGroundCallback) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t, ModdingAPI::Exposed::BaseAi::HoldGroundCallback*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B6DC0))(this, reason, holdGroundCallback);
  }
  bool MaybeHoldGroundAuroraFieldForAttack() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B6F80))(this);
  }
  bool MaybeHoldGroundDueToSafeHaven() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B7520))(this);
  }
  bool ShouldHoldGround() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B7930))(this);
  }
  bool MaybeForceHoldGround() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B7BF0))(this);
  }
  float GetCurrentRadiusToHoldGroundCause(int32_t reason) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B7C30))(this, reason);
  }
  ModdingAPI::Exposed::AuroraField* GetVisibleFieldNearby(float radius) {
    return reinterpret_cast<ModdingAPI::Exposed::AuroraField*(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B7DE0))(this, radius);
  }
  bool IsFieldVisible(ModdingAPI::Exposed::AuroraField* field, float radius) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::AuroraField*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B80B0))(this, field, radius);
  }
  bool IsScaredReason(int32_t reason, ModdingAPI::Exposed::BaseAi::HoldGroundCallback* holdGroundCallback) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t, ModdingAPI::Exposed::BaseAi::HoldGroundCallback*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B83A0))(this, reason, holdGroundCallback);
  }
  bool IsTooScaredToAttack() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B83E0))(this);
  }
  void OnCarcassPickedUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B8E30))(this);
  }
  ModdingAPI::Exposed::GearItem* SpawnCarcassPickup() {
    return reinterpret_cast<ModdingAPI::Exposed::GearItem*(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B8E40))(this);
  }
  void MaybeSpawnCarcassSiteIfFarEnough() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B93A0))(this);
  }
  void Start_Common() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B95E0))(this);
  }
  void ProcessCommonPre() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B96B0))(this);
  }
  void MaybeCollideWithSpear() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B9AA0))(this);
  }
  void MaybeRestoreTargetAfterSpear() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B9C30))(this);
  }
  void ProcessCommonPost() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B9E50))(this);
  }
  void MaybeDestroyIfFellThroughWorld() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16B9E90))(this);
  }
  void MovedDistance(ModdingAPI::Exposed::UnityEngine::Vector3 delta) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BA070))(this, delta);
  }
  void ClearTarget() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BA160))(this);
  }
  void ReturnToDefaultBehavior() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BA2D0))(this);
  }
  bool IsImposter() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BA2E0))(this);
  }
  bool HasUpdated() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BA3B0))(this);
  }
  bool CreateMoveAgent(ModdingAPI::Exposed::UnityEngine::Transform* parent) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Transform*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BA3C0))(this, parent);
  }
  void Awake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BAEB0))(this);
  }
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BB4C0))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BB7C0))(this);
  }
  void SetPositionAndRotation(ModdingAPI::Exposed::UnityEngine::Vector3 position, ModdingAPI::Exposed::UnityEngine::Quaternion rotation) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Quaternion)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BBAD0))(this, position, rotation);
  }
  void SetPosition(ModdingAPI::Exposed::UnityEngine::Vector3 position) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BBB50))(this, position);
  }
  void SetRotation(ModdingAPI::Exposed::UnityEngine::Quaternion rotation) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Quaternion)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BBBB0))(this, rotation);
  }
  void SetCollisionMode(int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BBC80))(this, mode);
  }
  bool IsMoveAgent() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BBDE0))(this);
  }
  ModdingAPI::Exposed::MoveAgent* GetMoveAgent() {
    return reinterpret_cast<ModdingAPI::Exposed::MoveAgent*(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BBE90))(this);
  }
  bool IsPlayerFacingAi() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BBF60))(this);
  }
  bool IsPlayerFacingAi(ModdingAPI::Exposed::UnityEngine::Vector3 aiToTarget, float dotProductThreshold) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BC200))(this, aiToTarget, dotProductThreshold);
  }
  void OnAnimatorIK() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BC3B0))(this);
  }
  void LateUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BC3F0))(this);
  }
  void DoLateUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BC520))(this);
  }
  bool RequiresDeferredDeserialize() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BC570))(this);
  }
  ModdingAPI::Exposed::BaseAiData* GetDeferredDeserializeData() {
    return reinterpret_cast<ModdingAPI::Exposed::BaseAiData*(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BC580))(this);
  }
  void DeferredDeserialize(ModdingAPI::Exposed::BaseAiData* bad) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::BaseAiData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BC590))(this, bad);
  }
  System_String* Serialize() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BC760))(this);
  }
  void Deserialize(System_String* text) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BD390))(this, text);
  }
  void DeserializeUsingBaseAiDataProxy(ModdingAPI::Exposed::BaseAiDataProxy* proxy) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::BaseAiDataProxy*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BD450))(this, proxy);
  }
  void ProcessCurrentAiMode() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BDC50))(this);
  }
  bool IsTimberwolf() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BE240))(this);
  }
  void SetAiMode(int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BE320))(this, mode);
  }
  int32_t GetAiMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BFA10))(this);
  }
  int32_t GetPreviousAiMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BFA20))(this);
  }
  float GetTimeInModeSeconds() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BFA30))(this);
  }
  void SetSpawnRegionParent(ModdingAPI::Exposed::SpawnRegion* sr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::SpawnRegion*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BFA40))(this, sr);
  }
  ModdingAPI::Exposed::SpawnRegion* GetSpawnRegionParent() {
    return reinterpret_cast<ModdingAPI::Exposed::SpawnRegion*(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BFA50))(this);
  }
  void EnableAuroraMaterials(bool enable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BFA60))(this, enable);
  }
  void Despawn() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BFB60))(this);
  }
  float GetGoalSpeed() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BFE90))(this);
  }
  float GetTurnSpeedDegreesPerSecond() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BFEA0))(this);
  }
  void SetGoalSpeed(float speed) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BFEE0))(this, speed);
  }
  void SetSpeedOverride(float speedVal) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BFEF0))(this, speedVal);
  }
  int32_t GetWildlifeMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BFFE0))(this);
  }
  void SetLastDamageSide(int32_t side) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BFFF0))(this, side);
  }
  int32_t GetLastDamageSide() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C0000))(this);
  }
  void OnDrawGizmos() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C0010))(this);
  }
  void OnDestroy() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C03B0))(this);
  }
  void OnDisable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C0560))(this);
  }
  void StopLoopingAudio() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C0560))(this);
  }
  void DoCustomModeModifiers() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C05C0))(this);
  }
  void CantReachTarget() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C0A70))(this);
  }
  void Start_Damage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C1040))(this);
  }
  void ApplyDamage(float damage, int32_t damageSource, System_String* collider) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float, int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C10D0))(this, damage, damageSource, collider);
  }
  void SetupDamageForAnim(ModdingAPI::Exposed::UnityEngine::Vector3 hitPosition, ModdingAPI::Exposed::UnityEngine::Vector3 hitSource, ModdingAPI::Exposed::LocalizedDamage* localizedDamage) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::LocalizedDamage*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C1100))(this, hitPosition, hitSource, localizedDamage);
  }
  float GetBleedingOutMinutesRemaining() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C1540))(this);
  }
  void ApplyDamage(float damage, float bleedOutMintues, int32_t damageSource, System_String* collider) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float, float, int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C1560))(this, damage, bleedOutMintues, damageSource, collider);
  }
  bool IsDamageFatal(float damage, int32_t damageSource) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C1FF0))(this, damage, damageSource);
  }
  void UpdateWounds(float realtimeSeconds) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C21F0))(this, realtimeSeconds);
  }
  float GetNormalizedCondition() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C24A0))(this);
  }
  bool IsBleedingOut() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C24C0))(this);
  }
  int32_t GetDamageSource() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C24D0))(this);
  }
  float GetWoundedAnimParameter() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C25D0))(this);
  }
  float AdustMovementSpeedForInjury(float baseSpeed) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C2780))(this, baseSpeed);
  }
  bool ForceApplyDamage() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C28B0))(this);
  }
  void EnterDead() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C2950))(this);
  }
  void ProcessDead() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C4140))(this);
  }
  void ExitDead() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C42C0))(this);
  }
  void ChangeCollisionCapsulesLayer(int32_t layer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C43D0))(this, layer);
  }
  void Start_AiDebug() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C4660))(this);
  }
  void ProcessAudioEvent(ModdingAPI::Exposed::UnityEngine::GameObject* sender, ModdingAPI::Exposed::UnityEngine::Vector3 pos, int32_t eventType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::GameObject*, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C46D0))(this, sender, pos, eventType);
  }
  bool CanSeeTarget() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C48F0))(this);
  }
  float ComputeDistanceForTarget(ModdingAPI::Exposed::UnityEngine::Vector3 eyePos, ModdingAPI::Exposed::AiTarget* potentialTarget) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::AiTarget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C4950))(this, eyePos, potentialTarget);
  }
  void ScanForNewTarget() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C4F20))(this);
  }
  void OnSpearHit(bool isFatal, ModdingAPI::Exposed::System::Action* onSpearStruggleEnd) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, bool, ModdingAPI::Exposed::System::Action*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C56B0))(this, isFatal, onSpearStruggleEnd);
  }
  void ScanForSmells() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C5820))(this);
  }
  void IngoreFootStepsAndSmellsForSeconds(float realtimeSeconds) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C5B10))(this, realtimeSeconds);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetEyePos() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C5B20))(this);
  }
  void ChangeModeWhenTargetDetected() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C5C00))(this);
  }
  bool CanBearSeePlayerAfterSpearStruggle() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C6310))(this);
  }
  bool TargetCanBeIgnored(ModdingAPI::Exposed::AiTarget* target) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::AiTarget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C6400))(this, target);
  }
  bool IgnoreAudioEvent(ModdingAPI::Exposed::UnityEngine::GameObject* sender, ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::GameObject*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C6C40))(this, sender, pos);
  }
  void ProcessGenericAudioEvent(ModdingAPI::Exposed::UnityEngine::GameObject* sender, ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::GameObject*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C6FE0))(this, sender, pos);
  }
  void ProcessFootstepAudioEvent(ModdingAPI::Exposed::UnityEngine::GameObject* sender, ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::GameObject*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C7330))(this, sender, pos);
  }
  void ProcessGunshotAudioEvent(ModdingAPI::Exposed::UnityEngine::GameObject* sender, ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::GameObject*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C7AD0))(this, sender, pos);
  }
  void ProcessCarAlarmAudioEvent(ModdingAPI::Exposed::UnityEngine::GameObject* sender, ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::GameObject*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C7F40))(this, sender, pos);
  }
  float GetDetectionRange() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C8120))(this);
  }
  float GetHearFootstepsRange() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C8150))(this);
  }
  float GetRangeFromScentIntensity(float scentIntensity) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C8180))(this, scentIntensity);
  }
  bool CanSmellSource(ModdingAPI::Exposed::UnityEngine::Vector3 sourcePos, ModdingAPI::Exposed::AiTarget* target) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::AiTarget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C8280))(this, sourcePos, target);
  }
  void SetNextSmellCheckTime() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C8820))(this);
  }
  void DoTargetDetectedWhileFeeding() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C88E0))(this);
  }
  bool ShouldScanForSmells() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C8A90))(this);
  }
  bool AiModeAllowsForSmellDetection() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C8DB0))(this);
  }
  bool CanDodge() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C8DD0))(this);
  }
  void MaybeAttemptDodge() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C8F00))(this);
  }
  bool HasDodgePlacementTimedOut() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C96B0))(this);
  }
  bool IsPlayerAThreat() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C9710))(this);
  }
  bool IsMovingTowardsOrAwayFromPlayer(ModdingAPI::Exposed::UnityEngine::Vector3 moveDirection, ModdingAPI::Exposed::UnityEngine::Vector3 playerDirection) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C9980))(this, moveDirection, playerDirection);
  }
  bool DoesPositionIntefereWithAttacks(ModdingAPI::Exposed::UnityEngine::Vector3 pos, float radius, ModdingAPI::Exposed::UnityEngine::Vector3 playerPos) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, float, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C9AC0))(this, pos, radius, playerPos);
  }
  void SetDebugSphere(bool enable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, enable);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 ComputeDodgeObstaclePosition(ModdingAPI::Exposed::UnityEngine::Vector3 pos, ModdingAPI::Exposed::UnityEngine::Vector3 moveDirection) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C9DF0))(this, pos, moveDirection);
  }
  void DisableDodgeObstacle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16C9FE0))(this);
  }
  void EnableDodgeObstacle(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CA1D0))(this, pos);
  }
  void EnterFeeding() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CA4B0))(this);
  }
  void ExitFeeding() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CA6A0))(this);
  }
  void ReturnToFeeding() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CA6D0))(this);
  }
  void SetFakeFeedingPos(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CA700))(this, pos);
  }
  void ProcessFeeding() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CA720))(this);
  }
  void SetRandomFeedingAnimation() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CAA00))(this);
  }
  ModdingAPI::Exposed::BodyHarvest* GetTargetBodyHarvest() {
    return reinterpret_cast<ModdingAPI::Exposed::BodyHarvest*(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CAA80))(this);
  }
  float GetFeedingTimeRemainingHours() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CAA90))(this);
  }
  void StopFeedingAudio() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CAB60))(this);
  }
  void DecimateCarcass(float hours) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CAC60))(this, hours);
  }
  bool ShouldStopFeeding() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CAE30))(this);
  }
  void SetBestFeedingTarget(ModdingAPI::Exposed::UnityEngine::Vector3 feederPos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CAF60))(this, feederPos);
  }
  void ProcessFakeFeeding() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CB2A0))(this);
  }
  void ProcessRealFeeding() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CB400))(this);
  }
  void MaybeAttackOrHoldGround() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CB9D0))(this);
  }
  void TurnTowardsFeedingPos() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CBB90))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetFeedingPos() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CBD50))(this);
  }
  void SetFleeReason(int32_t reason) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CBFC0))(this, reason);
  }
  void EnterFlee() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CBFD0))(this);
  }
  void ExitFlee() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CC250))(this);
  }
  bool MaybeHandleTimeoutFleeing() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CC310))(this);
  }
  void ProcessFlee() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CC540))(this);
  }
  void MaybeFleeFromArrow(ModdingAPI::Exposed::ArrowItem* ai) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::ArrowItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CD320))(this, ai);
  }
  void SetForcedFleePos(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CD5E0))(this, pos);
  }
  bool MaybeFleeFromFlareGunRound(ModdingAPI::Exposed::FlareGunRoundItem* fgri, float rangeScalar) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::FlareGunRoundItem*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CDB80))(this, fgri, rangeScalar);
  }
  void PlayEnterFleeAudio() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CDEC0))(this);
  }
  float GetChanceFleeFromHeldItem() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CE080))(this);
  }
  float GetFleeProximityFromNearbyThrownItem(ModdingAPI::Exposed::GearItem* item) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CE410))(this, item);
  }
  float GetChanceFleeFromNearbyThrownItem(ModdingAPI::Exposed::GearItem* item, bool wasHit) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::GearItem*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CE570))(this, item, wasHit);
  }
  void MaybeFleeDueToTorchSwing() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CE720))(this);
  }
  bool OverrideXpModeAttackRestrictions() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CE850))(this);
  }
  bool ShouldAlwaysFleeFromCurrentTarget() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CE910))(this);
  }
  void BecomeGroupFleeLeader(ModdingAPI::Exposed::System::Collections::Generic::List_T_* followerList) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CEC00))(this, followerList);
  }
  bool ShouldIgnoreGroupFleeWarning() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CED60))(this);
  }
  bool KeepFleeingFromTarget() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CED90))(this);
  }
  float GetStopFleeAfterDistanceForSpear() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CF430))(this);
  }
  bool MaybePickFleeDestinationFromAreaMarkup(ModdingAPI::Exposed::UnityEngine::Vector3 fleePos) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CF610))(this, fleePos);
  }
  bool PickFleeDesination(ModdingAPI::Exposed::UnityEngine::Vector3 fleePos) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CFCE0))(this, fleePos);
  }
  bool CheckFleeAngleIsValid(ModdingAPI::Exposed::UnityEngine::Vector3 fleePos, ModdingAPI::Exposed::UnityEngine::Vector3 fleeVec, ModdingAPI::Exposed::UnityEngine::Vector3 constraintPos, float angleDegreesToTry) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D02C0))(this, fleePos, fleeVec, constraintPos, angleDegreesToTry);
  }
  bool CurrentAiModeAllowFleeFromArrow() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D0830))(this);
  }
  bool CurrentAiModeAllowFleeFromFlareGunRound() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D0890))(this);
  }
  bool CurrentAiModeAllowFleeFromThrownItem(ModdingAPI::Exposed::GearItem* item) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D0900))(this, item);
  }
  bool CurrentAiModeAllowFleeFromTorchSwing() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D0A30))(this);
  }
  void MaybeAttackPlayerWhenTryingToFlee() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D0AA0))(this);
  }
  bool ShouldPlayEnterFleeAudio() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D0D60))(this);
  }
  void WarnOthersNearby() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D0E60))(this);
  }
  void PickNewGroupFleeLeader() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D1770))(this);
  }
  bool IsGroupFleeLeader() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D19C0))(this);
  }
  bool CanKnockdownPlayer(int32_t ast) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D1A70))(this, ast);
  }
  void FleeFrom(ModdingAPI::Exposed::UnityEngine::Transform* t) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Transform*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D1A90))(this, t);
  }
  void FleeFrom(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D1B40))(this, pos);
  }
  void EnterFollowWaypoints() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D1B90))(this);
  }
  void ExitFollowWaypoints() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void SetWaypoints(ModdingAPI::Exposed::UnityEngine::Vector3_array* waypoints) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D1BA0))(this, waypoints);
  }
  void ProcessFollowWaypoints() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D1BB0))(this);
  }
  void PathfindToCurrentTargetWaypoint() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D1C70))(this);
  }
  void TeleportToRandomWaypointAndPathfind() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D1C80))(this);
  }
  int32_t GetClosestWaypointIndex() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D1F80))(this);
  }
  void PathfindToWaypoint(int32_t waypointIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D2190))(this, waypointIndex);
  }
  void PathfindToNextWaypoint() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D2240))(this);
  }
  void HandleLastWaypoint() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D2290))(this);
  }
  bool ReachedTargetWaypoint() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D2500))(this);
  }
  void MaybeWander() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D26F0))(this);
  }
  bool ProcessSafeFollowWaypoints() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D28A0))(this);
  }
  void DoEnterFollowWaypoints() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D28D0))(this);
  }
  void DoReachedTargetWaypointBehavior() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D2A50))(this);
  }
  void GoToPoint(ModdingAPI::Exposed::UnityEngine::Vector3 point, int32_t targetMode, float movementSpeed) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D2AD0))(this, point, targetMode, movementSpeed);
  }
  void GoToAiMarker(ModdingAPI::Exposed::AiMarker* aiMarker, int32_t targetMode, float movementSpeed) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::AiMarker*, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D2B10))(this, aiMarker, targetMode, movementSpeed);
  }
  void EnterGoToPoint() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D2CE0))(this);
  }
  void ExitGoToPoint() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void ProcessGoToPoint() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D2D10))(this);
  }
  void UpdateGoToPointPathfinding() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D2DB0))(this);
  }
  void UpdateGoToPointBlending() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D2DE0))(this);
  }
  void OnGotoPointReached() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D2E00))(this);
  }
  void UpdateHeadTracking() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void UpdateHeadTrackingIk() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D2E10))(this);
  }
  void ForceSetPlayerTarget() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D3190))(this);
  }
  bool CanPerformPassingAttackChance() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D3250))(this);
  }
  bool CanPerformPassingAttack() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D3480))(this);
  }
  void EnterHideAndSeek() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D3570))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 FindHighGround(ModdingAPI::Exposed::UnityEngine::Vector3 origin, float radius) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D3720))(this, origin, radius);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 FindRandomLocation(ModdingAPI::Exposed::UnityEngine::Vector3 origin, float radius) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D39B0))(this, origin, radius);
  }
  float GetClosingDistancePercent() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D3BF0))(this);
  }
  float GetMinFollowDistance() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D3CD0))(this);
  }
  float GetMaxFollowDistance() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D3DB0))(this);
  }
  float GetComfortableFollowDistance() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D3E90))(this);
  }
  bool TriggerPassingAttackAnim() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D3F70))(this);
  }
  void StopHideAndSeekAudio() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D3FF0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 FindShortestDistanceToPlayerSide() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D40F0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 FindTacticalPosition() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D45F0))(this);
  }
  void ResetApproachDistance() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D4DC0))(this);
  }
  void ProcessHideAndSeek() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D4DE0))(this);
  }
  void SetEnterCooldownTime() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D5960))(this);
  }
  void ExitHideAndSeek() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D59C0))(this);
  }
  bool CanEnterHideAndSeekInternal() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D5A40))(this);
  }
  bool CanEnterHideAndSeek() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D5CA0))(this);
  }
  bool MaybeForceHideAndSeek() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D5D80))(this);
  }
  void EnterHoldGround() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D60A0))(this);
  }
  void ExitHoldGround() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D63C0))(this);
  }
  void StopHoldGroundAudio() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D6430))(this);
  }
  bool WasHoldingGroundRecently() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D6530))(this);
  }
  bool MaybeHoldGroundForField() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D65A0))(this);
  }
  bool MaybeAttackOrFleeIfHoldGroundForFieldChanged(bool holdGroundForField) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D66F0))(this, holdGroundForField);
  }
  void ProcessHoldGround() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D6870))(this);
  }
  bool MaybeHoldGroundDueToStruggle() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D6FC0))(this);
  }
  bool MaybeHoldGroundForSpear(float radius) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D7160))(this, radius);
  }
  bool MaybeHoldGroundForRedFlare(float radius) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D7510))(this, radius);
  }
  bool MaybeHoldGroundForRedFlareOnGround(float radius) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D77E0))(this, radius);
  }
  bool MaybeHoldGroundForBlueFlare(float radius) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D7C30))(this, radius);
  }
  bool MaybeHoldGroundForBlueFlareOnGround(float radius) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D7F00))(this, radius);
  }
  bool MaybeHoldGroundForTorch(float radius) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D8310))(this, radius);
  }
  bool MaybeHoldGroundForTorchOnGround(float radius) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D85D0))(this, radius);
  }
  bool MaybeHoldGroundForFire(float radius) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D89E0))(this, radius);
  }
  void MaybeHoldGround() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D8D20))(this);
  }
  void HoldGroundForMoose() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D8F50))(this);
  }
  void HoldGroundFightOrFlight() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D9160))(this);
  }
  void HoldGroundCommon(float timeStopHoldingGround, float chanceAttackOnTimeout) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D9430))(this, timeStopHoldingGround, chanceAttackOnTimeout);
  }
  void HoldGroundSafeHaven() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D9650))(this);
  }
  void HoldGroundInsideAuroraField() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D9990))(this);
  }
  bool CurrentAiModeAllowsHoldGround() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D9C30))(this);
  }
  bool IsTargetGoneOrOutOfRange() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D9CA0))(this);
  }
  void MaybeFleeFromHoldGround() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D9E40))(this);
  }
  void MaybeEnterHoldGroundForAuroraField() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DA280))(this);
  }
  void InitializeHoldForFieldTimers() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DA4D0))(this);
  }
  void EnterIdle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DA690))(this);
  }
  void ExitIdle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DA7C0))(this);
  }
  void ProcessIdle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DA8C0))(this);
  }
  void EnterInteractWithProp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DA930))(this);
  }
  void ExitInteractWithProp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void ProcessInteractWithProp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void OnInteractWithPropComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DAAD0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Transform* FindTransform(System_String* transformName) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Transform*(__fastcall*)(ModdingAPI::Exposed::BaseAi*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DAAE0))(this, transformName);
  }
  void OnAttachPropInMarker() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DADD0))(this);
  }
  void EnterInvestigate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DB240))(this);
  }
  void ExitInvestigate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DB590))(this);
  }
  void ProcessInvestigate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DB5A0))(this);
  }
  void SetInvestigatePos(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DBB20))(this, pos);
  }
  void ForceInvestigatePos(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DBB40))(this, pos);
  }
  void MaybeMoveInvestigationPositionOutsideOfField() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DBB80))(this);
  }
  void EnterInvestigateFood() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DBD00))(this);
  }
  void ExitInvestigateFood() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DBFB0))(this);
  }
  void StopInvestigateFoodAudio() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DBFF0))(this);
  }
  void ProcessInvestigateFood() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DC0F0))(this);
  }
  bool CloseEnoughToEatObject(ModdingAPI::Exposed::UnityEngine::GameObject* go) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DC750))(this, go);
  }
  void MaybeClearTarget() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DC9B0))(this);
  }
  void EnterInvestigateSmell() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DCB20))(this);
  }
  void ExitInvestigateSmell() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DCBE0))(this);
  }
  void ProcessInvestigateSmell() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DCC00))(this);
  }
  bool SmellLost() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DD0E0))(this);
  }
  bool IsPlayingHowlingAnimation() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DD2D0))(this);
  }
  void EnterJoinPack() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DD2E0))(this);
  }
  void ProcessJoinPack() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DD670))(this);
  }
  void ExitJoinPack() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DDA80))(this);
  }
  void EnterPassingAttack() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DDB80))(this);
  }
  void ProcessPassingAttack() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DE010))(this);
  }
  void DoPassingAttackDamage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DE0A0))(this);
  }
  void OnAnimationEvent_OnPassingAttackChomp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DE310))(this);
  }
  void ExitPassingAttack() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetVelocity() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DE330))(this);
  }
  void Start_Pathfinding() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DE3D0))(this);
  }
  bool TryGetClosestNavmeshPoint(ModdingAPI::Exposed::UnityEngine::Vector3 position, ModdingAPI::Exposed::UnityEngine::Vector3 result) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DE600))(this, position, result);
  }
  bool CanPlayerBeReached(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DE8C0))(this, pos);
  }
  bool CanPathfindToPosition(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DE9F0))(this, pos);
  }
  bool StartPath(ModdingAPI::Exposed::UnityEngine::Vector3 destPos, float movementSpeed, ModdingAPI::Exposed::AiTarget* overrideTurnTarget) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, float, ModdingAPI::Exposed::AiTarget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DECA0))(this, destPos, movementSpeed, overrideTurnTarget);
  }
  void StickPivotToGround() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DF020))(this);
  }
  void OrientPivotToGroundImmediate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DF380))(this);
  }
  void StickCharacterControllerToGround() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DF430))(this);
  }
  void OrientCharacterControllerToGroundImmediate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DF7A0))(this);
  }
  void OrientCharacterControllerToGround() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DF850))(this);
  }
  bool GetHitInfoUnderCharacterControllerFromBatch(ModdingAPI::Exposed::UnityEngine::RaycastHit hitInfo) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::RaycastHit)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DFB20))(this, hitInfo);
  }
  float GetLastSafeheight(float y) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DFD20))(this, y);
  }
  bool GetHitInfoUnderCharacterController(ModdingAPI::Exposed::UnityEngine::RaycastHit hitInfo, int32_t findGroundType) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::RaycastHit, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DFD40))(this, hitInfo, findGroundType);
  }
  ModdingAPI::Exposed::UnityEngine::SpherecastCommand GetCommandUnderCharacterController() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::SpherecastCommand(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16DFFD0))(this);
  }
  bool GetHitInfoUnderPivot(ModdingAPI::Exposed::UnityEngine::RaycastHit hitInfo) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::RaycastHit)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E01B0))(this, hitInfo);
  }
  void AlignTransformWithNormal(ModdingAPI::Exposed::UnityEngine::Vector3 terrainPoint, ModdingAPI::Exposed::UnityEngine::Vector3 normal, bool isRollConstrained, bool isImmediate) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E0400))(this, terrainPoint, normal, isRollConstrained, isImmediate);
  }
  void SetJobGroundRaycastId(int32_t id) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E1370))(this, id);
  }
  void EnterPatrolPointsOfInterest() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E1380))(this);
  }
  void ExitPatrolPointsOfInterest() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E13A0))(this);
  }
  void SetPointsOfInterest(ModdingAPI::Exposed::BaseAi::PointOfInterest_array* pointsOfInterest) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::BaseAi::PointOfInterest_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E13B0))(this, pointsOfInterest);
  }
  void DoRandomOrderPointOfInterest(bool doRandom) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E14B0))(this, doRandom);
  }
  void ProcessPatrolPointsOfInterest() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E14C0))(this);
  }
  void PathfindToPointOfInterest(int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E1870))(this, index);
  }
  void PathfindToNextPointOfInterest() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E1990))(this);
  }
  bool ReachedTargetPointOfInterest() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E1D10))(this);
  }
  bool ProcessSafePatrolPointsOfInterest() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E1F00))(this);
  }
  void DoEnterPatrolPointsOfInterest() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E2040))(this);
  }
  void DoReachedTargetPointOfInterestBehavior() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E2160))(this);
  }
  void RoarAndReturnToPatrol(ModdingAPI::Exposed::UnityEngine::Vector3 lastKnownPosition) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E22C0))(this, lastKnownPosition);
  }
  void EnterRooted() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E2490))(this);
  }
  void ProcessRooted() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void EnterScratchingAntlers() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E24D0))(this);
  }
  void ExitScratchingAntlers() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E2540))(this);
  }
  void ProcessScratchingAntlers() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E2550))(this);
  }
  bool CanStickToGround(ModdingAPI::Exposed::UnityEngine::Vector3 newPosition, ModdingAPI::Exposed::UnityEngine::Vector3 desiredPosition) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E29F0))(this, newPosition, desiredPosition);
  }
  bool IsOrientationValid(ModdingAPI::Exposed::ScratchingStump* stump) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::ScratchingStump*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E2BD0))(this, stump);
  }
  void OnStumpApproached(ModdingAPI::Exposed::ScratchingStump* stump) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::ScratchingStump*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E3000))(this, stump);
  }
  void OnStumpMissed() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BA2D0))(this);
  }
  void OnStumpReached() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E3A20))(this);
  }
  bool MaybeSelectScratchingStump(ModdingAPI::Exposed::UnityEngine::Vector3 wanderPos) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E3B50))(this, wanderPos);
  }
  void EnterScriptedSequence() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16D2CE0))(this);
  }
  void ExitScriptedSequence() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E3F10))(this);
  }
  void ProcessScriptedSequence() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void EnterSleep() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E4000))(this);
  }
  void ExitSleep() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E4160))(this);
  }
  void StopSleepingAudio() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E41A0))(this);
  }
  void ProcessSleep() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E42A0))(this);
  }
  void EnterStalking() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E44C0))(this);
  }
  void ExitStalking() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E4660))(this);
  }
  void StopStalkingAudio() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E4740))(this);
  }
  void ProcessStalking() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E48B0))(this);
  }
  void MaybeForceStalkPlayer() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E4E50))(this);
  }
  void UpdateScent() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E51A0))(this);
  }
  void MaybeEnterAttackModeWhenStalking() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E5400))(this);
  }
  void MaybeInvestigateMeatWhenStalking() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E5AD0))(this);
  }
  bool CanEnterStalking() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E6290))(this);
  }
  void UpdateStalkingAudio() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E6880))(this);
  }
  void UpdateStalkingFollowDistance() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E69B0))(this);
  }
  void UpdatePathfinding() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E6BA0))(this);
  }
  float GetStalkSpeedWhenTrackingPlayer(ModdingAPI::Exposed::AiTarget* playerTarget) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::AiTarget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E7110))(this, playerTarget);
  }
  void MaybeChangeCuriousState() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E73D0))(this);
  }
  bool EnterStalkingModeIfPossible(ModdingAPI::Exposed::UnityEngine::Vector3 targetPos) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E7770))(this, targetPos);
  }
  void MaybeLoseInterestWhileStalking() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E7990))(this);
  }
  void SetNextChangeCuriousStateCheckTime() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E7B90))(this);
  }
  void SetNextLoseInterestCheckTime() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E7C70))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetRandomNavmeshPos(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E7D50))(this, pos);
  }
  void MaybeForceFasterStalkingSpeed() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E7F80))(this);
  }
  bool UseFixedStalkingSpeed() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E8260))(this);
  }
  void EnterStruggle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E83F0))(this);
  }
  void ProcessStruggle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void PlayStruggleAudio(System_String* audioEventName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ADB20))(this, audioEventName);
  }
  void ExitStruggle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E86F0))(this);
  }
  void StopStruggleAudio() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E88F0))(this);
  }
  bool CanEnterPlayerStruggle() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E89F0))(this);
  }
  void DoPostSpearStruggleBehavior() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E8D50))(this);
  }
  float GetIgnoreFootStepsAndSmellsAfterStruggleSeconds() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E8EF0))(this);
  }
  void OnSpearStruggleEnd() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E9080))(this);
  }
  void OnBearBreakStruggle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E9200))(this);
  }
  bool WasHitBySpear() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E92F0))(this);
  }
  bool WasHitBySpearFatal() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E9300))(this);
  }
  bool HasEnteredStruggleOnLastAttack() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E9310))(this);
  }
  void OnMooseStartStompAttack() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E9320))(this);
  }
  void OnAnimationEvent_MooseButtHeadAttackComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E9330))(this);
  }
  void OnAnimationEvent_PlayMauledMuffle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E9440))(this);
  }
  void OnAnimationEvent_StopMauledMuffle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E9520))(this);
  }
  void OnAnimationEvent_SpearStruggleComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E9600))(this);
  }
  void OnAnimationEvent_SpearDisengageReady() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E9610))(this);
  }
  float GetSpearStruggleTapCount() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E96C0))(this);
  }
  void SetSpearStruggleTapCount(int32_t tapCount) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E96D0))(this, tapCount);
  }
  void EnterStunned() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E96E0))(this);
  }
  void ProcessStunned() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E9750))(this);
  }
  void ExitStunned() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E9800))(this);
  }
  void ResetStunTimer() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E9B80))(this);
  }
  void Stun(ModdingAPI::Exposed::UnityEngine::Vector3 position) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E9B90))(this, position);
  }
  bool CurrentAIModeAllowStunFromThrownStone() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E9C20))(this);
  }
  float GetChanceStunFromThrownStone() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E9C90))(this);
  }
  bool IsStunTimerActive() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E9CA0))(this);
  }
  void EnterWander() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E9D10))(this);
  }
  void ExitWander() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16EA0D0))(this);
  }
  bool MaybeHoldGroundAuroraField() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16EA250))(this);
  }
  void ProcessWander() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16EA440))(this);
  }
  bool MaybeMoveWanderPosOutsideOfField(ModdingAPI::Exposed::UnityEngine::Vector3 wanderToPos, ModdingAPI::Exposed::UnityEngine::Vector3 originalPosition) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16EAE50))(this, wanderToPos, originalPosition);
  }
  float GetRandomWanderDuration() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16EB3A0))(this);
  }
  void WanderAroundPoint(ModdingAPI::Exposed::UnityEngine::Vector3 pos, float radius, float wanderDuration, bool wanderForever) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, float, float, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16EB400))(this, pos, radius, wanderDuration, wanderForever);
  }
  void ForceWanderToPoint(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16EB480))(this, pos);
  }
  bool IsWanderingAroundPos() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16EB4B0))(this);
  }
  bool PickWanderDestinationAwayFromPoint(ModdingAPI::Exposed::UnityEngine::Vector3 wanderPos, ModdingAPI::Exposed::UnityEngine::Vector3 awayPos) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16EB4C0))(this, wanderPos, awayPos);
  }
  void SetWanderPosAfterStruggle(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16EB9A0))(this, pos);
  }
  bool PickClosestWanderDestinationAtPoint(ModdingAPI::Exposed::UnityEngine::Vector3 wanderPos, ModdingAPI::Exposed::UnityEngine::Vector3 toPos) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16EB9C0))(this, wanderPos, toPos);
  }
  bool PickWanderDestination(ModdingAPI::Exposed::UnityEngine::Vector3 wanderPos) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16EBC00))(this, wanderPos);
  }
  bool PickEmergencyWanderDestination(ModdingAPI::Exposed::UnityEngine::Vector3 wanderPos, ModdingAPI::Exposed::UnityEngine::Vector3 toPos) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16EC470))(this, wanderPos, toPos);
  }
  bool WanderTimedOut() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16EC6B0))(this);
  }
  bool WanderDoingGradualTurn() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16EC7A0))(this);
  }
  void MaybeImposter() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16EC7D0))(this);
  }
  void EnterWanderPaused() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ECA20))(this);
  }
  void ProcessWanderPaused() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ECAB0))(this);
  }
  void ExitWanderPaused() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ECAD0))(this);
  }
  void SetNextWanderPauseTime() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ECBC0))(this);
  }
  void MaybeEnterWanderPause() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ECD30))(this);
  }
  void ForceWanderPause(int32_t wanderPauseId) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ECF70))(this, wanderPauseId);
  }
  void OnWanderPauseAnimStateExit() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ECF90))(this);
  }
  void OnWanderPauseComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ED010))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16ED030))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<bool> m_AllowSlowdownForHold = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_AllowSlowdownForHold; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::BaseAiDataProxy*> m_BaseAiDataProxy = __CppStaticProperty<ModdingAPI::Exposed::BaseAiDataProxy*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_BaseAiDataProxy; }
  );
  static inline __CppStaticProperty<int32_t> WANDER_HOWL_ANIM_ID = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->WANDER_HOWL_ANIM_ID; }
  );
  static inline __CppStaticProperty<bool> s_ForceHuntedStruggleAnim = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_ForceHuntedStruggleAnim; }
  );
  static inline __CppStaticProperty<bool> s_ShouldForceHuntedStruggleDraggingRotation = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_ShouldForceHuntedStruggleDraggingRotation; }
  );
  static inline __CppStaticProperty<float> s_ForceHuntedStruggleDraggingFacing = __CppStaticProperty<float>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_ForceHuntedStruggleDraggingFacing; }
  );
  static inline __CppStaticProperty<float> s_ForceHuntedStruggleDraggingRoll = __CppStaticProperty<float>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_ForceHuntedStruggleDraggingRoll; }
  );

  // Static methods:
  static inline void SetTurnAngleParameters(ModdingAPI::Exposed::UnityEngine::Animator* animator, float totalTurnAngle, float turnSpeed, ModdingAPI::Exposed::UnityEngine::Vector3 turnHeading, ModdingAPI::Exposed::UnityEngine::Vector3 forward, int32_t turnAngleParam) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animator*, float, float, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16AF2F0))(animator, totalTurnAngle, turnSpeed, turnHeading, forward, turnAngleParam);
  }
  static inline ModdingAPI::Exposed::BaseAiDataProxy* GetBaseAiDataProxyFromText(System_String* text) {
    return reinterpret_cast<ModdingAPI::Exposed::BaseAiDataProxy*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16BD2E0))(text);
  }
  static inline void MaybeFleeFromThrownItem(ModdingAPI::Exposed::GearItem* item, ModdingAPI::Exposed::UnityEngine::ContactPoint_array* contacts) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::GearItem*, ModdingAPI::Exposed::UnityEngine::ContactPoint_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16CD610))(item, contacts);
  }
  static inline void MaybeStunnedByStone(ModdingAPI::Exposed::UnityEngine::ContactPoint_array* contacts) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::ContactPoint_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x16E9840))(contacts);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x16EDB80))();
  }
};
}