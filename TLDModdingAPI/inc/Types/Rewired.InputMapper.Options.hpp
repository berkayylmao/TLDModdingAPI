// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::Rewired::InputMapper {
struct __Options_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Action_T_* xaxUOVoOaWufsvEpLGXCGWRKnrK;
};

struct __Options_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __Options_Il2CppClass {
  Il2CppClass_1 _1;
  __Options_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Options_Il2CppVtbl vtbl;
};

class Options {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C72118;
  static inline    __Options_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __Options_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__Options_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __Options_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  bool AqmsViEISDdtBGGAVTvNxQmJEOI;
  bool OuhWDrBmqHtHGlQddzJOJvTXnzz;
  bool GPqUhYYqtMfmkVvgqMgzTAHWPrE;
  float jsSBGujzySuUSMuqAOWbsldfBB;
  bool YFXcRavhRoQbmpsmivRzkCCxYYG;
  bool kwjBEbVzAhBNYwvANMnMUWCPilh;
  bool whleTSVEXyeUJBDlVCkHBNajTrcT;
  bool wYtnmkJPiOlGoNzcSuchzBihkYF;
  ModdingAPI::Exposed::System::Int32_array* uiplUeKcToenZVPrzUDJrIxgfrT;
  int32_t EWtDOuKZKQwnpIMeWhcrNSJzgqLp;
  bool VsBnwdmxPiVGJHBNSfwfYycKyXR;
  bool jJDZVnHsjdNQJWDDIdpEAQbtNsT;
  bool fgbJoosRNFwQYlfDAfvCufpYGjZH;
  bool uiRsijHFInNkBywdrLPnifDVDcl;
  float ZukViOuByEsuHpyPArruigUOGQP;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* EvkCQhzXQAXJRxatdoGupjOZugA;

  // Member methods:
  bool get_allowAxes() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33C2C0))(this);
  }
  void set_allowAxes(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x30CFB0))(this, value);
  }
  bool get_allowButtons() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33CD00))(this);
  }
  void set_allowButtons(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33CD10))(this, value);
  }
  bool get_allowButtonsOnFullAxisAssignment() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310E30))(this);
  }
  void set_allowButtonsOnFullAxisAssignment(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310E40))(this, value);
  }
  float get_timeout() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x580F50))(this);
  }
  void set_timeout(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x580F60))(this, value);
  }
  bool get_checkForConflicts() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x318510))(this);
  }
  void set_checkForConflicts(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5161B0))(this, value);
  }
  bool get_checkForConflictsWithAllPlayers() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x580F70))(this);
  }
  void set_checkForConflictsWithAllPlayers(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x580F80))(this, value);
  }
  bool get_checkForConflictsWithSelf() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x580F90))(this);
  }
  void set_checkForConflictsWithSelf(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x580FA0))(this, value);
  }
  bool get_checkForConflictsWithSystemPlayer() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x580FB0))(this);
  }
  void set_checkForConflictsWithSystemPlayer(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x580FC0))(this, value);
  }
  ModdingAPI::Exposed::System::Int32_array* get_checkForConflictsWithPlayerIds() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Int32_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110A0))(this);
  }
  void set_checkForConflictsWithPlayerIds(ModdingAPI::Exposed::System::Int32_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310F00))(this, value);
  }
  int32_t get_defaultActionWhenConflictFound() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36F810))(this);
  }
  void set_defaultActionWhenConflictFound(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x31DD50))(this, value);
  }
  bool get_ignoreMouseXAxis() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5718B0))(this);
  }
  void set_ignoreMouseXAxis(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5718C0))(this, value);
  }
  bool get_ignoreMouseYAxis() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x580FD0))(this);
  }
  void set_ignoreMouseYAxis(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x580FE0))(this, value);
  }
  bool get_allowKeyboardKeysWithModifiers() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x580FF0))(this);
  }
  void set_allowKeyboardKeysWithModifiers(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x581000))(this, value);
  }
  bool get_allowKeyboardModifierKeyAsPrimary() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x581010))(this);
  }
  void set_allowKeyboardModifierKeyAsPrimary(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x581020))(this, value);
  }
  float get_holdDurationToMapKeyboardModifierKeyAsPrimary() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x581030))(this);
  }
  void set_holdDurationToMapKeyboardModifierKeyAsPrimary(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x581040))(this, value);
  }
  ModdingAPI::Exposed::System::Predicate_T_* get_isElementAllowedCallback() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Predicate_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x581050))(this);
  }
  void set_isElementAllowedCallback(ModdingAPI::Exposed::System::Predicate_T_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*, ModdingAPI::Exposed::System::Predicate_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5811B0))(this, value);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x581430))(this);
  }
  void ::ctor(ModdingAPI::Exposed::Rewired::InputMapper::Options* source) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*, ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x581600))(this, source);
  }
  ModdingAPI::Exposed::Rewired::InputMapper::Options* Clone() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::InputMapper::Options*(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x581810))(this);
  }
  System_String* ToString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x581960))(this);
  }
  void ADrsfsMXaMetqmCCRAjGXwgvlsR() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x581FD0))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Action_T_*> xaxUOVoOaWufsvEpLGXCGWRKnrK = __CppStaticProperty<ModdingAPI::Exposed::System::Action_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->xaxUOVoOaWufsvEpLGXCGWRKnrK; }
  );

  // Static methods:
  static inline void Copy(ModdingAPI::Exposed::Rewired::InputMapper::Options* source, ModdingAPI::Exposed::Rewired::InputMapper::Options* destination) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputMapper::Options*, ModdingAPI::Exposed::Rewired::InputMapper::Options*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5823F0))(source, destination);
  }
  static inline void mzKXlGHwoeWazVKmfdNIAZbiZrKx(ModdingAPI::Exposed::System::Exception* ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Exception*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x582910))();
  }
};
}