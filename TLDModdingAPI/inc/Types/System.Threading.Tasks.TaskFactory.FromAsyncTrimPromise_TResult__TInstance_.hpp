// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System::Threading::Tasks::TaskFactory {
struct __FromAsyncTrimPromise_TResult__TInstance__Il2CppStaticFields {
  ModdingAPI::Exposed::System::AsyncCallback* s_completeFromAsyncResult;
};

struct __FromAsyncTrimPromise_TResult__TInstance__Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_System_Threading_IThreadPoolWorkItem_ExecuteWorkItem;
  VirtualInvokeData _5_System_Threading_IThreadPoolWorkItem_MarkAborted;
  VirtualInvokeData _6_get_IsCompleted;
  VirtualInvokeData _7_System_IAsyncResult_get_AsyncWaitHandle;
  VirtualInvokeData _8_get_AsyncState;
  VirtualInvokeData _9_System_IAsyncResult_get_CompletedSynchronously;
  VirtualInvokeData _10_Dispose;
  VirtualInvokeData _11_get_ShouldNotifyDebuggerOfWaitCompletion;
  VirtualInvokeData _12_Dispose;
  VirtualInvokeData _13_ShouldReplicate;
  VirtualInvokeData _14_CreateReplicaTask;
  VirtualInvokeData _15_get_SavedStateForNextReplica;
  VirtualInvokeData _16_set_SavedStateFromPreviousReplica;
  VirtualInvokeData _17_get_HandedOverChildReplica;
  VirtualInvokeData _18_set_HandedOverChildReplica;
  VirtualInvokeData _19_InnerInvoke;
};

struct __FromAsyncTrimPromise_TResult__TInstance__Il2CppClass {
  Il2CppClass_1 _1;
  __FromAsyncTrimPromise_TResult__TInstance__Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __FromAsyncTrimPromise_TResult__TInstance__Il2CppVtbl vtbl;
};

class FromAsyncTrimPromise_TResult__TInstance_ {
public:
  // Il2Cpp fields:
  __FromAsyncTrimPromise_TResult__TInstance__Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  int32_t Task_m_taskId;
  Il2CppObject* m_action;
  Il2CppObject* m_stateObject;
  ModdingAPI::Exposed::System::Threading::Tasks::TaskScheduler* m_taskScheduler;
  ModdingAPI::Exposed::System::Threading::Tasks::Task* m_parent;
  int32_t m_stateFlags;
  Il2CppObject* Task_m_continuationObject;
  ModdingAPI::Exposed::System::Threading::Tasks::Task::ContingentProperties* m_contingentProperties;
  Il2CppObject* m_result;
  Il2CppObject* m_thisRef;
  ModdingAPI::Exposed::System::Func_T1__T2__TResult_* m_endMethod;

  // Static fields:
};
}