// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.Rewired.ControllerIdentifier.hpp"


namespace ModdingAPI::Exposed::Rewired::ReInput {
struct __ControllerHelper_Il2CppStaticFields {
  ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper* ZPSxeiFHMaLmCvPePgbLgrzWLIr;
};

struct __ControllerHelper_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __ControllerHelper_Il2CppClass {
  Il2CppClass_1 _1;
  __ControllerHelper_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __ControllerHelper_Il2CppVtbl vtbl;
};

class ControllerHelper {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C91AF8;
  static inline    __ControllerHelper_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __ControllerHelper_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__ControllerHelper_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __ControllerHelper_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper::PollingHelper* polling;
  ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper::ConflictCheckingHelper* conflictChecking;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62EEB0))(this);
  }
  int32_t GetControllerCount(int32_t controllerType) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62F160))(this, controllerType);
  }
  int32_t get_controllerCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62F290))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IList_T_* get_Controllers() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IList_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62F3F0))(this);
  }
  ModdingAPI::Exposed::Rewired::Controller* GetController(int32_t controllerType, int32_t controllerId) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Controller*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62F4E0))(this, controllerType, controllerId);
  }
  ModdingAPI::Exposed::Rewired::Controller* GetController(ModdingAPI::Exposed::Rewired::ControllerIdentifier controllerIdentifier) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Controller*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, ModdingAPI::Exposed::Rewired::ControllerIdentifier)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62F5F0))(this, controllerIdentifier);
  }
  ModdingAPI::Exposed::Rewired::Controller_array* GetControllers(int32_t controllerType) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Controller_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62F700))(this, controllerType);
  }
  ModdingAPI::Exposed::System::String_array* GetControllerNames(int32_t controllerType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62F7F0))(this, controllerType);
  }
  bool IsControllerAssigned(int32_t controllerType, ModdingAPI::Exposed::Rewired::Controller* controller) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t, ModdingAPI::Exposed::Rewired::Controller*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62F8E0))(this, controllerType, controller);
  }
  bool IsControllerAssigned(int32_t controllerType, int32_t controllerId) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62FA00))(this, controllerType, controllerId);
  }
  bool IsControllerAssignedToPlayer(int32_t controllerType, int32_t controllerId, int32_t playerId) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62FB00))(this, controllerType, controllerId, playerId);
  }
  void RemoveControllerFromAllPlayers(ModdingAPI::Exposed::Rewired::Controller* controller, bool includeSystemPlayer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, ModdingAPI::Exposed::Rewired::Controller*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62FC30))(this, controller, includeSystemPlayer);
  }
  void RemoveControllerFromAllPlayers(int32_t controllerType, int32_t controllerId, bool includeSystemPlayer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62FD30))(this, controllerType, controllerId, includeSystemPlayer);
  }
  ModdingAPI::Exposed::Rewired::Mouse* get_Mouse() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Mouse*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62FF40))(this);
  }
  ModdingAPI::Exposed::Rewired::Keyboard* get_Keyboard() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Keyboard*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x630020))(this);
  }
  bool get_keyboardEnabled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x630100))(this);
  }
  void set_keyboardEnabled(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6301C0))(this, value);
  }
  int32_t get_joystickCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6302A0))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IList_T_* get_Joysticks() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IList_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x630380))(this);
  }
  ModdingAPI::Exposed::Rewired::Joystick* GetJoystick(int32_t joystickId) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Joystick*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x630470))(this, joystickId);
  }
  ModdingAPI::Exposed::Rewired::Joystick_array* GetJoysticks() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Joystick_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x630560))(this);
  }
  ModdingAPI::Exposed::System::String_array* GetJoystickNames() {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x630610))(this);
  }
  bool IsJoystickAssigned(ModdingAPI::Exposed::Rewired::Joystick* joystick) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, ModdingAPI::Exposed::Rewired::Joystick*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x630700))(this, joystick);
  }
  bool IsJoystickAssigned(int32_t joystickId) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6308E0))(this, joystickId);
  }
  bool IsJoystickAssignedToPlayer(int32_t joystickId, int32_t playerId) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x630A90))(this, joystickId, playerId);
  }
  void RemoveJoystickFromAllPlayers(ModdingAPI::Exposed::Rewired::Joystick* joystick, bool includeSystemPlayer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, ModdingAPI::Exposed::Rewired::Joystick*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x630BB0))(this, joystick, includeSystemPlayer);
  }
  void RemoveJoystickFromAllPlayers(int32_t joystickId, bool includeSystemPlayer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x630CD0))(this, joystickId, includeSystemPlayer);
  }
  int32_t GetUnityJoystickIdFromAnyButtonPress() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x630E80))(this);
  }
  int32_t GetUnityJoystickIdFromAnyButtonOrAxisPress(float axisThreshold, bool positiveAxesOnly) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, float, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x631080))(this, axisThreshold, positiveAxesOnly);
  }
  void SetUnityJoystickId(int32_t joystickId, int32_t unityJoystickId) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x631440))(this, joystickId, unityJoystickId);
  }
  bool SetUnityJoystickIdFromAnyButtonPress(int32_t joystickId) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x631580))(this, joystickId);
  }
  bool SetUnityJoystickIdFromAnyButtonOrAxisPress(int32_t joystickId, float axisThreshold, bool positiveAxesOnly) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t, float, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x631690))(this, joystickId, axisThreshold, positiveAxesOnly);
  }
  int32_t get_customControllerCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x631780))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IList_T_* get_CustomControllers() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IList_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x631860))(this);
  }
  ModdingAPI::Exposed::Rewired::CustomController* GetCustomController(int32_t customControllerId) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::CustomController*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x631950))(this, customControllerId);
  }
  ModdingAPI::Exposed::Rewired::CustomController_array* GetCustomControllers() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::CustomController_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x631A40))(this);
  }
  ModdingAPI::Exposed::System::String_array* GetCustomControllerNames() {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x631B30))(this);
  }
  bool IsCustomControllerAssigned(ModdingAPI::Exposed::Rewired::CustomController* customController) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, ModdingAPI::Exposed::Rewired::CustomController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x631C20))(this, customController);
  }
  bool IsCustomControllerAssigned(int32_t customControllerId) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x631DD0))(this, customControllerId);
  }
  bool IsCustomControllerAssignedToPlayer(int32_t customControllerId, int32_t playerId) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x631F80))(this, customControllerId, playerId);
  }
  void RemoveCustomControllerFromAllPlayers(ModdingAPI::Exposed::Rewired::CustomController* customController, bool includeSystemPlayer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, ModdingAPI::Exposed::Rewired::CustomController*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6320A0))(this, customController, includeSystemPlayer);
  }
  void RemoveCustomControllerFromAllPlayers(int32_t customControllerId, bool includeSystemPlayer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6321A0))(this, customControllerId, includeSystemPlayer);
  }
  ModdingAPI::Exposed::Rewired::CustomController* CreateCustomController(int32_t sourceControllerId) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::CustomController*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x632370))(this, sourceControllerId);
  }
  ModdingAPI::Exposed::Rewired::CustomController* CreateCustomController(int32_t sourceControllerId, System_String* tag) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::CustomController*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x632460))(this, sourceControllerId, tag);
  }
  bool DestroyCustomController(ModdingAPI::Exposed::Rewired::CustomController* customController) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, ModdingAPI::Exposed::Rewired::CustomController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x632590))(this, customController);
  }
  ModdingAPI::Exposed::Rewired::CustomController* GetFirstCustomControllerWithSourceId(int32_t sourceId) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::CustomController*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6326B0))(this, sourceId);
  }
  ModdingAPI::Exposed::Rewired::CustomController* GetFirstCustomControllerWithTag(System_String* tag) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::CustomController*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6328C0))(this, tag);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* CustomControllersWithSourceId(int32_t sourceId) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6329B0))(this, sourceId);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* CustomControllersWithTag(System_String* tag) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x632AA0))(this, tag);
  }
  ModdingAPI::Exposed::Rewired::Controller* GetLastActiveController() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Controller*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x632BA0))(this);
  }
  ModdingAPI::Exposed::Rewired::Controller* GetLastActiveController(int32_t controllerType) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Controller*(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x632C80))(this, controllerType);
  }
  int32_t GetLastActiveControllerType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x632D70))(this);
  }
  void AddLastActiveControllerChangedDelegate(ModdingAPI::Exposed::Rewired::ActiveControllerChangedDelegate* callback) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, ModdingAPI::Exposed::Rewired::ActiveControllerChangedDelegate*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x632E90))(this, callback);
  }
  void AddLastActiveControllerChangedDelegate(ModdingAPI::Exposed::Rewired::ActiveControllerChangedDelegate* callback, int32_t controllerType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, ModdingAPI::Exposed::Rewired::ActiveControllerChangedDelegate*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x633080))(this, callback, controllerType);
  }
  void RemoveLastActiveControllerChangedDelegate(ModdingAPI::Exposed::Rewired::ActiveControllerChangedDelegate* callback) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, ModdingAPI::Exposed::Rewired::ActiveControllerChangedDelegate*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x633270))(this, callback);
  }
  void RemoveLastActiveControllerChangedDelegate(ModdingAPI::Exposed::Rewired::ActiveControllerChangedDelegate* callback, int32_t controllerType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, ModdingAPI::Exposed::Rewired::ActiveControllerChangedDelegate*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x633440))(this, callback, controllerType);
  }
  void ClearLastActiveControllerChangedDelegates() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6335F0))(this);
  }
  bool GetAnyButton() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x633790))(this);
  }
  bool GetAnyButton(int32_t controllerType) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x633950))(this, controllerType);
  }
  bool GetAnyButtonDown() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x633B70))(this);
  }
  bool GetAnyButtonDown(int32_t controllerType) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x633D50))(this, controllerType);
  }
  bool GetAnyButtonUp() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x633F70))(this);
  }
  bool GetAnyButtonUp(int32_t controllerType) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x634130))(this, controllerType);
  }
  bool GetAnyButtonChanged() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x634330))(this);
  }
  bool GetAnyButtonChanged(int32_t controllerType) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6344F0))(this, controllerType);
  }
  bool GetAnyButtonPrev() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6346F0))(this);
  }
  bool GetAnyButtonPrev(int32_t controllerType) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6348D0))(this, controllerType);
  }
  bool AutoAssignJoystick(ModdingAPI::Exposed::Rewired::Joystick* joystick) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*, ModdingAPI::Exposed::Rewired::Joystick*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x634AD0))(this, joystick);
  }
  void AutoAssignJoysticks() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x634C20))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*> ZPSxeiFHMaLmCvPePgbLgrzWLIr = __CppStaticProperty<ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*>(
   []() { return &GetStaticClassInstance()->pStaticFields->ZPSxeiFHMaLmCvPePgbLgrzWLIr; }
  );

  // Static methods:
  static inline ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper* get_Instance() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ReInput::ControllerHelper*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x62ED50))();
  }
};
}