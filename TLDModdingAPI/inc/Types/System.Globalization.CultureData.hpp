// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System::Globalization {
struct __CultureData_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Globalization::CultureData* s_Invariant;
};

struct __CultureData_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __CultureData_Il2CppClass {
  Il2CppClass_1 _1;
  __CultureData_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __CultureData_Il2CppVtbl vtbl;
};

class CultureData {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C6A7E8;
  static inline    __CultureData_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __CultureData_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__CultureData_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __CultureData_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  System_String* sAM1159;
  System_String* sPM2359;
  System_String* sTimeSeparator;
  ModdingAPI::Exposed::System::String_array* saLongTimes;
  ModdingAPI::Exposed::System::String_array* saShortTimes;
  int32_t iFirstDayOfWeek;
  int32_t iFirstWeekOfYear;
  ModdingAPI::Exposed::System::Int32_array* waCalendars;
  ModdingAPI::Exposed::System::Globalization::CalendarData_array* calendars;
  System_String* sISO639Language;
  System_String* sRealName;
  bool bUseOverrides;
  int32_t calendarId;
  int32_t numberIndex;
  int32_t iDefaultAnsiCodePage;
  int32_t iDefaultOemCodePage;
  int32_t iDefaultMacCodePage;
  int32_t iDefaultEbcdicCodePage;
  bool isRightToLeft;
  System_String* sListSeparator;

  // Member methods:
  void ::ctor(System_String* name) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383970))(this, name);
  }
  void fill_culture_data(int32_t datetimeIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7D930))(this, datetimeIndex);
  }
  ModdingAPI::Exposed::System::Globalization::CalendarData* GetCalendar(int32_t calendarId) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Globalization::CalendarData*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7DA30))(this, calendarId);
  }
  ModdingAPI::Exposed::System::String_array* get_LongTimes() {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7DC50))(this);
  }
  ModdingAPI::Exposed::System::String_array* get_ShortTimes() {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7DC60))(this);
  }
  System_String* get_SISO639LANGNAME() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A440))(this);
  }
  int32_t get_IFIRSTDAYOFWEEK() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8A0))(this);
  }
  int32_t get_IFIRSTWEEKOFYEAR() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8C0))(this);
  }
  System_String* get_SAM1159() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311320))(this);
  }
  System_String* get_SPM2359() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335360))(this);
  }
  System_String* get_TimeSeparator() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110A0))(this);
  }
  ModdingAPI::Exposed::System::Int32_array* get_CalendarIds() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Int32_array*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7DC70))(this);
  }
  bool get_IsInvariantCulture() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7DE70))(this);
  }
  System_String* get_CultureName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383960))(this);
  }
  System_String* get_SCOMPAREINFO() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7DE90))(this);
  }
  System_String* get_STEXTINFO() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383960))(this);
  }
  int32_t get_ILANGUAGE() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this);
  }
  bool get_UseUserOverride() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x58F760))(this);
  }
  ModdingAPI::Exposed::System::String_array* EraNames(int32_t calendarId) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7DF10))(this, calendarId);
  }
  ModdingAPI::Exposed::System::String_array* AbbrevEraNames(int32_t calendarId) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7DF30))(this, calendarId);
  }
  ModdingAPI::Exposed::System::String_array* AbbreviatedEnglishEraNames(int32_t calendarId) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7DF50))(this, calendarId);
  }
  ModdingAPI::Exposed::System::String_array* ShortDates(int32_t calendarId) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7DF70))(this, calendarId);
  }
  ModdingAPI::Exposed::System::String_array* LongDates(int32_t calendarId) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7DF90))(this, calendarId);
  }
  ModdingAPI::Exposed::System::String_array* YearMonths(int32_t calendarId) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7DFB0))(this, calendarId);
  }
  ModdingAPI::Exposed::System::String_array* DayNames(int32_t calendarId) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7DFD0))(this, calendarId);
  }
  ModdingAPI::Exposed::System::String_array* AbbreviatedDayNames(int32_t calendarId) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7DFF0))(this, calendarId);
  }
  ModdingAPI::Exposed::System::String_array* MonthNames(int32_t calendarId) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7E010))(this, calendarId);
  }
  ModdingAPI::Exposed::System::String_array* GenitiveMonthNames(int32_t calendarId) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7E030))(this, calendarId);
  }
  ModdingAPI::Exposed::System::String_array* AbbreviatedMonthNames(int32_t calendarId) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7E050))(this, calendarId);
  }
  ModdingAPI::Exposed::System::String_array* AbbreviatedGenitiveMonthNames(int32_t calendarId) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7E070))(this, calendarId);
  }
  ModdingAPI::Exposed::System::String_array* LeapYearMonthNames(int32_t calendarId) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7E0A0))(this, calendarId);
  }
  System_String* MonthDay(int32_t calendarId) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7E0D0))(this, calendarId);
  }
  System_String* DateSeparator(int32_t calendarId) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7E0F0))(this, calendarId);
  }
  void GetNFIValues(ModdingAPI::Exposed::System::Globalization::NumberFormatInfo* nfi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Globalization::CultureData*, ModdingAPI::Exposed::System::Globalization::NumberFormatInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7E850))(this, nfi);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Globalization::CultureData*> s_Invariant = __CppStaticProperty<ModdingAPI::Exposed::System::Globalization::CultureData*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_Invariant; }
  );

  // Static methods:
  static inline ModdingAPI::Exposed::System::Globalization::CultureData* get_Invariant() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Globalization::CultureData*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7D020))();
  }
  static inline ModdingAPI::Exposed::System::Globalization::CultureData* GetCultureData(System_String* cultureName, bool useUserOverride) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Globalization::CultureData*(__fastcall*)(System_String*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7D500))(cultureName, useUserOverride);
  }
  static inline ModdingAPI::Exposed::System::Globalization::CultureData* GetCultureData(System_String* cultureName, bool useUserOverride, int32_t datetimeIndex, int32_t calendarId, int32_t numberIndex, System_String* iso2lang, int32_t ansiCodePage, int32_t oemCodePage, int32_t macCodePage, int32_t ebcdicCodePage, bool rightToLeft, System_String* listSeparator) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Globalization::CultureData*(__fastcall*)(System_String*, bool, int32_t, int32_t, int32_t, System_String*, int32_t, int32_t, int32_t, int32_t, bool, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7D690))(cultureName, useUserOverride, datetimeIndex, calendarId, numberIndex, iso2lang, ansiCodePage, oemCodePage, macCodePage, ebcdicCodePage, rightToLeft, listSeparator);
  }
  static inline ModdingAPI::Exposed::System::Globalization::CultureData* GetCultureData(int32_t culture, bool bUseUserOverride) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Globalization::CultureData*(__fastcall*)(int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(culture, bUseUserOverride);
  }
  static inline System_String* GetDateSeparator(System_String* format) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7E140))(format);
  }
  static inline System_String* GetSeparator(System_String* format, System_String* timeParts) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7E2C0))(format, timeParts);
  }
  static inline int32_t IndexOfTimePart(System_String* format, int32_t startIndex, System_String* timeParts) {
    return reinterpret_cast<int32_t(__fastcall*)(System_String*, int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7E3F0))(format, startIndex, timeParts);
  }
  static inline System_String* UnescapeNlsString(System_String* str, int32_t start, int32_t end) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7E4F0))(str, start, end);
  }
  static inline ModdingAPI::Exposed::System::String_array* ReescapeWin32Strings(ModdingAPI::Exposed::System::String_array* array) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::System::String_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3201B0))(array);
  }
  static inline System_String* ReescapeWin32String(System_String* str) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3201B0))(str);
  }
  static inline void fill_number_data(ModdingAPI::Exposed::System::Globalization::NumberFormatInfo* nfi, int32_t numberIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Globalization::NumberFormatInfo*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF7E8B0))(nfi, numberIndex);
  }
};
}