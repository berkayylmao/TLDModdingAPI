// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::Rewired {
struct __InputManager_Base_Il2CppStaticFields {
};

struct __InputManager_Base_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _65535__ctor;
};

struct __InputManager_Base_Il2CppClass {
  Il2CppClass_1 _1;
  __InputManager_Base_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __InputManager_Base_Il2CppVtbl vtbl;
};

class InputManager_Base {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C75360;
  static inline    InputManager_Base* _pStaticObjectInstance = nullptr;

public:
// Singleton object getter:
  static inline InputManager_Base* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (InputManager_Base**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

  // Il2Cpp fields:
  __InputManager_Base_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  bool _dontDestroyOnLoad;
  ModdingAPI::Exposed::Rewired::Data::UserData* _userData;
  ModdingAPI::Exposed::Rewired::Data::ControllerDataFiles* _controllerDataFiles;
  bool isCompiling;
  bool initialized;
  bool criticalError;
  int32_t editorPlatform;
  int32_t platform;
  int32_t webplayerPlatform;
  bool isEditor;
  bool _detectedPlatformInEditor;
  int32_t scriptingBackend;
  int32_t scriptingAPILevel;
  bool _duplicateRIMError;
  bool _isAwake;

  // Member methods:
  ModdingAPI::Exposed::Rewired::Data::UserData* get_userData() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Data::UserData*(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110A0))(this);
  }
  void set_userData(ModdingAPI::Exposed::Rewired::Data::UserData* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*, ModdingAPI::Exposed::Rewired::Data::UserData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310F00))(this, value);
  }
  ModdingAPI::Exposed::Rewired::Data::ControllerDataFiles* get_dataFiles() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Data::ControllerDataFiles*(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110B0))(this);
  }
  bool get_runInEditMode() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x571B80))(this);
  }
  void set_runInEditMode(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x571BB0))(this, value);
  }
  bool get_isRunningInEditMode() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x571EB0))(this);
  }
  void Awake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x572030))(this);
  }
  void OnEnable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x572140))(this);
  }
  void OnDisable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5722A0))(this);
  }
  void OnDestroy() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x572330))(this);
  }
  void OnApplicationFocus(bool isFocused) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5724A0))(this, isFocused);
  }
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x572550))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5726E0))(this);
  }
  void FixedUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x572820))(this);
  }
  void LateUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x572990))(this);
  }
  void OnGUIUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x572B20))(this);
  }
  void DoUpdate(int32_t updateLoopType, int32_t updateLoopSettingBit) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x572BF0))(this, updateLoopType, updateLoopSettingBit);
  }
  void TryStartRunInEditMode() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x572DD0))(this);
  }
  void TryStopRunInEditMode() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x573100))(this);
  }
  bool ManualInitialize() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x573170))(this);
  }
  void Initialize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x573250))(this);
  }
  Il2CppObject* InitializePlatform(ModdingAPI::Exposed::Rewired::Data::ConfigVars* configVars) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*, ModdingAPI::Exposed::Rewired::Data::ConfigVars*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x573830))(this, configVars);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* GetNativeAssembliesFromResources() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x573950))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* GetNativeAssembliesByReflection() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x573D30))(this);
  }
  ModdingAPI::Exposed::System::Byte_array* GetNativeDLLBytesByReflection() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Byte_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x574260))(this);
  }
  void AddTextAssetInResourcesToList(ModdingAPI::Exposed::System::Collections::Generic::List_T_* list, ModdingAPI::Exposed::System::Collections::Generic::List_T_* dllPaths) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x574530))(this, list, dllPaths);
  }
  System_String* SetPlatformToEditorPlatform() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x574780))(this);
  }
  bool CheckEditorPlatformMatches() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x574940))(this);
  }
  System_String* GetPlatformSpecificAssemblyName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x574990))(this);
  }
  bool IsOnlyManagerInScene() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x574B00))(this);
  }
  void RecompileStart() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x574D20))(this);
  }
  void RecompileEnd() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x574E90))(this);
  }
  void OnSceneLoaded() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x574F20))(this);
  }
  void HandleException(int32_t location, System_String* message, ModdingAPI::Exposed::System::Exception* exception) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*, int32_t, System_String*, ModdingAPI::Exposed::System::Exception*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x574FE0))(this, location, message, exception);
  }
  void ResetAll() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x575190))(this);
  }
  int32_t GetEditorPlatform() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5751B0))(this);
  }
  void GetSupportedEditModeControllerTypes(bool keyboardSupported, bool mouseSupported, bool joystickSupported) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*, bool, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x575210))(this, keyboardSupported, mouseSupported, joystickSupported);
  }
  bool IsEditModeSupported() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x575510))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x575840))(this);
  }
  bool _GetNativeAssembliesByReflection_b__1(ModdingAPI::Exposed::System::Reflection::Assembly* x) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputManager_Base*, ModdingAPI::Exposed::System::Reflection::Assembly*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5759A0))(this, x);
  }
};
}