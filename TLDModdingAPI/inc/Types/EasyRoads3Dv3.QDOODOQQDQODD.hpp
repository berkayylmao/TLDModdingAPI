// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"


namespace ModdingAPI::Exposed::EasyRoads3Dv3 {
struct __QDOODOQQDQODD_Il2CppStaticFields {
};

struct __QDOODOQQDQODD_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __QDOODOQQDQODD_Il2CppClass {
  Il2CppClass_1 _1;
  __QDOODOQQDQODD_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __QDOODOQQDQODD_Il2CppVtbl vtbl;
};

class QDOODOQQDQODD {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C2DDB8;
  static inline    __QDOODOQQDQODD_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __QDOODOQQDQODD_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__QDOODOQQDQODD_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __QDOODOQQDQODD_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::UnityEngine::Vector3 centerPoint;
  ModdingAPI::Exposed::UnityEngine::Vector3 tmpCenterPoint;
  ModdingAPI::Exposed::UnityEngine::Vector3 stageCenterPoint;
  ModdingAPI::Exposed::UnityEngine::Vector3 tmpStageCenterPoint;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* blendData;
  ModdingAPI::Exposed::UnityEngine::Vector3 controlPointV3;
  ModdingAPI::Exposed::UnityEngine::Vector2 controlPoint;
  float blendDistance;
  float extendBounds;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* blendCornerPoints;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* blendCornerPointInts;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* blendCornerPointWeights;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* blendCornerPointsTransformed;
  float blendRatio;
  float curveStrength;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadShapeVecs;
  System_String* roadShapeVecsString;
  int32_t roadShapeMatchCount;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadShapeUVY;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadShapeUVY2;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* hardEdge;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadShapeMaterialInts;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* sidewalkLeftVecs;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* sidewalkLeftUVY;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* sidewalkLeftMaterialInts;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* sidewalkRightVecs;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* sidewalkRightUVY;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* sidewalkRightMaterialInts;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* connectionVecs;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* connectionVecInts;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* fullConnectionVecInts;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* sidewalkLeftConnectionVecInts;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* sidewalkRightConnectionVecInts;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* doConnectionTri;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* outerVecInts;
  bool rotationPriority;
  float centerPointAngle;
  ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* connectedRoad;
  int32_t connectedMarker;
  ModdingAPI::Exposed::UnityEngine::GameObject* connectedRoadGO;
  bool includeLeftSidewalk;
  bool includeRightSidewalk;
  ModdingAPI::Exposed::UnityEngine::Material* roadMaterial;
  ModdingAPI::Exposed::UnityEngine::Material_array* roadMaterials;
  float centerPointPercentage;
  float _;
  int32_t leftIndent;
  int32_t rightIndent;
  int32_t leftSurrounding;
  int32_t rightSurrounding;
  ModdingAPI::Exposed::UnityEngine::Vector3 leftIndentV3;
  ModdingAPI::Exposed::UnityEngine::Vector3 leftSurroundingV3;
  ModdingAPI::Exposed::UnityEngine::Vector3 rightIndentV3;
  ModdingAPI::Exposed::UnityEngine::Vector3 rightSurroundingV3;
  int32_t leftCornerInt;
  int32_t rightCornerInt;
  int32_t leftIndentInt;
  int32_t rightIndentInt;
  int32_t leftInt;
  int32_t rightInt;
  int32_t leftIntFull;
  int32_t rightIntFull;
  ModdingAPI::Exposed::UnityEngine::Vector3 alignmentHandleVec;
  float additionalIndentDistance;
  float connectionAngle;
  ModdingAPI::Exposed::UnityEngine::Vector3 alignmentHandleVecRotationGizmo;
  double roadType;
  double roadTypeTimestamp;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::QDOODOQQDQODD*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x550BF0))(this);
  }
};
}