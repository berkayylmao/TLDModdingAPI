// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.LayerMask.hpp"
#include "ModdingAPI.Exposed.UnityEngine.AI.NavMeshDataInstance.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Quaternion.hpp"
#include "ModdingAPI.Exposed.UnityEngine.AI.NavMeshBuildSettings.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Bounds.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Vector3.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Matrix4x4.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Bounds.hpp"


namespace ModdingAPI::Exposed::UnityEngine::AI {
struct __NavMeshSurface_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* s_NavMeshSurfaces;
};

struct __NavMeshSurface_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __NavMeshSurface_Il2CppClass {
  Il2CppClass_1 _1;
  __NavMeshSurface_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __NavMeshSurface_Il2CppVtbl vtbl;
};

class NavMeshSurface {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C80EF0;
  static inline    __NavMeshSurface_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __NavMeshSurface_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__NavMeshSurface_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __NavMeshSurface_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  int32_t m_AgentTypeID;
  int32_t m_CollectObjects;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_Size;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_Center;
  ModdingAPI::Exposed::UnityEngine::LayerMask m_LayerMask;
  int32_t m_UseGeometry;
  int32_t m_DefaultArea;
  bool m_IgnoreNavMeshAgent;
  bool m_IgnoreNavMeshObstacle;
  bool m_OverrideTileSize;
  int32_t m_TileSize;
  bool m_OverrideVoxelSize;
  float m_VoxelSize;
  bool m_BuildHeightMesh;
  ModdingAPI::Exposed::UnityEngine::AI::NavMeshData* m_NavMeshData;
  ModdingAPI::Exposed::UnityEngine::AI::NavMeshDataInstance m_NavMeshDataInstance;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_LastPosition;
  ModdingAPI::Exposed::UnityEngine::Quaternion m_LastRotation;

  // Member methods:
  int32_t get_agentTypeID() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FED20))(this);
  }
  void set_agentTypeID(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311090))(this, value);
  }
  int32_t get_collectObjects() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36E9C0))(this);
  }
  void set_collectObjects(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36E9D0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 get_size() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x155ED50))(this);
  }
  void set_size(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFA4D60))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 get_center() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x155ED70))(this);
  }
  void set_center(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFA4EA0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::LayerMask get_layerMask() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::LayerMask(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8A0))(this);
  }
  void set_layerMask(ModdingAPI::Exposed::UnityEngine::LayerMask value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*, ModdingAPI::Exposed::UnityEngine::LayerMask)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8B0))(this, value);
  }
  int32_t get_useGeometry() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8C0))(this);
  }
  void set_useGeometry(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8D0))(this, value);
  }
  int32_t get_defaultArea() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8E0))(this);
  }
  void set_defaultArea(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8F0))(this, value);
  }
  bool get_ignoreNavMeshAgent() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7EA5F0))(this);
  }
  void set_ignoreNavMeshAgent(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7EA600))(this, value);
  }
  bool get_ignoreNavMeshObstacle() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x155ED90))(this);
  }
  void set_ignoreNavMeshObstacle(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x155EDA0))(this, value);
  }
  bool get_overrideTileSize() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1513810))(this);
  }
  void set_overrideTileSize(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1513820))(this, value);
  }
  int32_t get_tileSize() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383900))(this);
  }
  void set_tileSize(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383910))(this, value);
  }
  bool get_overrideVoxelSize() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5DE510))(this);
  }
  void set_overrideVoxelSize(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x155EDB0))(this, value);
  }
  float get_voxelSize() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56EF50))(this);
  }
  void set_voxelSize(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x155EDC0))(this, value);
  }
  bool get_buildHeightMesh() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6F50E0))(this);
  }
  void set_buildHeightMesh(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x155EDD0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::AI::NavMeshData* get_navMeshData() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AI::NavMeshData*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383960))(this);
  }
  void set_navMeshData(ModdingAPI::Exposed::UnityEngine::AI::NavMeshData* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*, ModdingAPI::Exposed::UnityEngine::AI::NavMeshData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383970))(this, value);
  }
  void OnEnable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x155EE80))(this);
  }
  void OnDisable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x155EF30))(this);
  }
  void AddData() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x155F020))(this);
  }
  void RemoveData() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x155F4F0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::AI::NavMeshBuildSettings GetBuildSettings() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AI::NavMeshBuildSettings(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x155F550))(this);
  }
  void BuildNavMesh() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x155F720))(this);
  }
  ModdingAPI::Exposed::UnityEngine::AsyncOperation* UpdateNavMesh(ModdingAPI::Exposed::UnityEngine::AI::NavMeshData* data) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AsyncOperation*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*, ModdingAPI::Exposed::UnityEngine::AI::NavMeshData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x155FC50))(this, data);
  }
  void AppendModifierVolumes(ModdingAPI::Exposed::System::Collections::Generic::List_T_* sources) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1560630))(this, sources);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* CollectSources() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1560E90))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Bounds CalculateWorldBounds(ModdingAPI::Exposed::System::Collections::Generic::List_T_* sources) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Bounds(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1563050))(this, sources);
  }
  bool HasTransformChanged() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1563CF0))(this);
  }
  void UpdateDataIfTransformChanged() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1564080))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15640C0))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*> s_NavMeshSurfaces = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_NavMeshSurfaces; }
  );

  // Static methods:
  static inline ModdingAPI::Exposed::System::Collections::Generic::List_T_* get_activeSurfaces() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x155EDE0))();
  }
  static inline void Register(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface* surface) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1560030))(surface);
  }
  static inline void Unregister(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface* surface) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::AI::NavMeshSurface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15602C0))(surface);
  }
  static inline void UpdateActive() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x15604E0))();
  }
  static inline ModdingAPI::Exposed::UnityEngine::Vector3 Abs(ModdingAPI::Exposed::UnityEngine::Vector3 v) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15629A0))(v);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Bounds GetWorldBounds(ModdingAPI::Exposed::UnityEngine::Matrix4x4 mat, ModdingAPI::Exposed::UnityEngine::Bounds bounds) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Bounds(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4, ModdingAPI::Exposed::UnityEngine::Bounds)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1562AA0))(mat, bounds);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1564200))();
  }
};
}