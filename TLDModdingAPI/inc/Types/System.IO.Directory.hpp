// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System::IO {
struct __Directory_Il2CppStaticFields {
};

struct __Directory_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __Directory_Il2CppClass {
  Il2CppClass_1 _1;
  __Directory_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Directory_Il2CppVtbl vtbl;
};

class Directory {
public:
  // Il2Cpp fields:
  __Directory_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Static methods:
  static inline ModdingAPI::Exposed::System::String_array* GetFiles(System_String* path) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9B970))(path);
  }
  static inline ModdingAPI::Exposed::System::String_array* GetFiles(System_String* path, System_String* searchPattern) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9BA50))(path, searchPattern);
  }
  static inline ModdingAPI::Exposed::System::String_array* GetFiles(System_String* path, System_String* searchPattern, int32_t searchOption) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(System_String*, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9BB70))(path, searchPattern, searchOption);
  }
  static inline ModdingAPI::Exposed::System::String_array* InternalGetFiles(System_String* path, System_String* searchPattern, int32_t searchOption) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(System_String*, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9BCF0))(path, searchPattern, searchOption);
  }
  static inline ModdingAPI::Exposed::System::String_array* GetDirectories(System_String* path) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9BD20))(path);
  }
  static inline ModdingAPI::Exposed::System::String_array* GetDirectories(System_String* path, System_String* searchPattern) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9BE00))(path, searchPattern);
  }
  static inline ModdingAPI::Exposed::System::String_array* InternalGetDirectories(System_String* path, System_String* searchPattern, int32_t searchOption) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(System_String*, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9BF20))(path, searchPattern, searchOption);
  }
  static inline ModdingAPI::Exposed::System::String_array* InternalGetFileDirectoryNames(System_String* path, System_String* userPathOriginal, System_String* searchPattern, bool includeFiles, bool includeDirs, int32_t searchOption, bool checkHost) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(System_String*, System_String*, System_String*, bool, bool, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9BF50))(path, userPathOriginal, searchPattern, includeFiles, includeDirs, searchOption, checkHost);
  }
  static inline ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* EnumerateFiles(System_String* path) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9C110))(path);
  }
  static inline ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* InternalEnumerateFiles(System_String* path, System_String* searchPattern, int32_t searchOption) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(System_String*, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9C1F0))(path, searchPattern, searchOption);
  }
  static inline ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* EnumerateFileSystemNames(System_String* path, System_String* searchPattern, int32_t searchOption, bool includeFiles, bool includeDirs) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(System_String*, System_String*, int32_t, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9C220))(path, searchPattern, searchOption, includeFiles, includeDirs);
  }
  static inline ModdingAPI::Exposed::System::IO::DirectoryInfo* CreateDirectory(System_String* path) {
    return reinterpret_cast<ModdingAPI::Exposed::System::IO::DirectoryInfo*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9C250))(path);
  }
  static inline ModdingAPI::Exposed::System::IO::DirectoryInfo* CreateDirectoriesInternal(System_String* path) {
    return reinterpret_cast<ModdingAPI::Exposed::System::IO::DirectoryInfo*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9C4E0))(path);
  }
  static inline void Delete(System_String* path) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9C820))(path);
  }
  static inline void RecursiveDelete(System_String* path) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9CB60))(path);
  }
  static inline void Delete(System_String* path, bool recursive) {
    reinterpret_cast<void(__fastcall*)(System_String*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9CDD0))(path, recursive);
  }
  static inline bool Exists(System_String* path) {
    return reinterpret_cast<bool(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9CEA0))(path);
  }
  static inline System_String* GetCurrentDirectory() {
    return reinterpret_cast<System_String*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9D020))();
  }
  static inline System_String* InsecureGetCurrentDirectory() {
    return reinterpret_cast<System_String*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9D030))();
  }
  static inline bool IsRootDirectory(System_String* path) {
    return reinterpret_cast<bool(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9D190))(path);
  }
  static inline ModdingAPI::Exposed::System::IO::DirectoryInfo* GetParent(System_String* path) {
    return reinterpret_cast<ModdingAPI::Exposed::System::IO::DirectoryInfo*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9D2D0))(path);
  }
  static inline System_String* GetDemandDir(System_String* fullPath, bool thisDirOnly) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA9D5C0))(fullPath, thisDirOnly);
  }
};
}