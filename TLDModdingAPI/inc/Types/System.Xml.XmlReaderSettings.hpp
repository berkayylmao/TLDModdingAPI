// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Nullable_T_.hpp"


namespace ModdingAPI::Exposed::System::Xml {
struct __XmlReaderSettings_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Nullable_T_ s_enableLegacyXmlSettings;
};

struct __XmlReaderSettings_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __XmlReaderSettings_Il2CppClass {
  Il2CppClass_1 _1;
  __XmlReaderSettings_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __XmlReaderSettings_Il2CppVtbl vtbl;
};

class XmlReaderSettings {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C80210;
  static inline    __XmlReaderSettings_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __XmlReaderSettings_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__XmlReaderSettings_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __XmlReaderSettings_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  bool useAsync;
  ModdingAPI::Exposed::System::Xml::XmlNameTable* nameTable;
  ModdingAPI::Exposed::System::Xml::XmlResolver* xmlResolver;
  int32_t lineNumberOffset;
  int32_t linePositionOffset;
  int32_t conformanceLevel;
  bool checkCharacters;
  int64_t maxCharactersInDocument;
  int64_t maxCharactersFromEntities;
  bool ignoreWhitespace;
  bool ignorePIs;
  bool ignoreComments;
  int32_t dtdProcessing;
  int32_t validationType;
  int32_t validationFlags;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet* schemas;
  ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler* valEventHandler;
  bool closeInput;
  bool isReadOnly;
  bool _IsXmlResolverSet_k__BackingField;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF3D40))(this);
  }
  bool get_Async() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33C2C0))(this);
  }
  void set_Async(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF3D50))(this, value);
  }
  ModdingAPI::Exposed::System::Xml::XmlNameTable* get_NameTable() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlNameTable*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335360))(this);
  }
  void set_NameTable(ModdingAPI::Exposed::System::Xml::XmlNameTable* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, ModdingAPI::Exposed::System::Xml::XmlNameTable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF3DF0))(this, value);
  }
  bool get_IsXmlResolverSet() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF3E90))(this);
  }
  void set_IsXmlResolverSet(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF3EA0))(this, value);
  }
  void set_XmlResolver(ModdingAPI::Exposed::System::Xml::XmlResolver* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, ModdingAPI::Exposed::System::Xml::XmlResolver*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF3EB0))(this, value);
  }
  ModdingAPI::Exposed::System::Xml::XmlResolver* GetXmlResolver() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlResolver*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110A0))(this);
  }
  ModdingAPI::Exposed::System::Xml::XmlResolver* GetXmlResolver_CheckConfig() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlResolver*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD4220))(this);
  }
  int32_t get_LineNumberOffset() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36F810))(this);
  }
  void set_LineNumberOffset(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF3F50))(this, value);
  }
  int32_t get_LinePositionOffset() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36F820))(this);
  }
  void set_LinePositionOffset(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF3FF0))(this, value);
  }
  int32_t get_ConformanceLevel() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D870))(this);
  }
  void set_ConformanceLevel(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF4090))(this, value);
  }
  bool get_CheckCharacters() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x306B90))(this);
  }
  void set_CheckCharacters(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF4160))(this, value);
  }
  int64_t get_MaxCharactersInDocument() {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319970))(this);
  }
  void set_MaxCharactersInDocument(int64_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF4200))(this, value);
  }
  int64_t get_MaxCharactersFromEntities() {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319960))(this);
  }
  void set_MaxCharactersFromEntities(int64_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF42D0))(this, value);
  }
  bool get_IgnoreWhitespace() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4EFF30))(this);
  }
  void set_IgnoreWhitespace(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF43A0))(this, value);
  }
  bool get_IgnoreProcessingInstructions() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x882F50))(this);
  }
  void set_IgnoreProcessingInstructions(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF4440))(this, value);
  }
  bool get_IgnoreComments() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x931B20))(this);
  }
  void set_IgnoreComments(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF44E0))(this, value);
  }
  int32_t get_DtdProcessing() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383920))(this);
  }
  void set_DtdProcessing(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF4580))(this, value);
  }
  bool get_CloseInput() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7DA960))(this);
  }
  void set_CloseInput(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF4650))(this, value);
  }
  int32_t get_ValidationType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319990))(this);
  }
  void set_ValidationType(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF46F0))(this, value);
  }
  int32_t get_ValidationFlags() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3199A0))(this);
  }
  void set_ValidationFlags(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF47C0))(this, value);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet* get_Schemas() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF4890))(this);
  }
  void set_Schemas(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF49F0))(this, value);
  }
  ModdingAPI::Exposed::System::Xml::XmlReaderSettings* Clone() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlReaderSettings*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF4A90))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler* GetEventHandler() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3199C0))(this);
  }
  ModdingAPI::Exposed::System::Xml::XmlReader* CreateReader(ModdingAPI::Exposed::System::IO::Stream* input, ModdingAPI::Exposed::System::Uri* baseUri, System_String* baseUriString, ModdingAPI::Exposed::System::Xml::XmlParserContext* inputContext) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlReader*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, ModdingAPI::Exposed::System::IO::Stream*, ModdingAPI::Exposed::System::Uri*, System_String*, ModdingAPI::Exposed::System::Xml::XmlParserContext*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF4BC0))(this, input, baseUri, baseUriString, inputContext);
  }
  ModdingAPI::Exposed::System::Xml::XmlReader* CreateReader(ModdingAPI::Exposed::System::IO::TextReader* input, System_String* baseUriString, ModdingAPI::Exposed::System::Xml::XmlParserContext* inputContext) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlReader*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, ModdingAPI::Exposed::System::IO::TextReader*, System_String*, ModdingAPI::Exposed::System::Xml::XmlParserContext*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF4E20))(this, input, baseUriString, inputContext);
  }
  void set_ReadOnly(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF5010))(this, value);
  }
  void CheckReadOnly(System_String* propertyName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF5020))(this, propertyName);
  }
  void Initialize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF3D40))(this);
  }
  void Initialize(ModdingAPI::Exposed::System::Xml::XmlResolver* resolver) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, ModdingAPI::Exposed::System::Xml::XmlResolver*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF5120))(this, resolver);
  }
  ModdingAPI::Exposed::System::Xml::XmlReader* AddValidation(ModdingAPI::Exposed::System::Xml::XmlReader* reader) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlReader*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, ModdingAPI::Exposed::System::Xml::XmlReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF5460))(this, reader);
  }
  ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl* CreateDtdValidatingReader(ModdingAPI::Exposed::System::Xml::XmlReader* baseReader) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlReaderSettings*, ModdingAPI::Exposed::System::Xml::XmlReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF5830))(this, baseReader);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Nullable_T_> s_enableLegacyXmlSettings = __CppStaticProperty<ModdingAPI::Exposed::System::Nullable_T_>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_enableLegacyXmlSettings; }
  );

  // Static methods:
  static inline ModdingAPI::Exposed::System::Xml::XmlResolver* CreateDefaultResolver() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlResolver*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF5320))();
  }
  static inline bool EnableLegacyXmlSettings() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF59A0))();
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))();
  }
};
}