// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Rect.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"


namespace ModdingAPI::Exposed::UnityEngine {
struct __RectTransform_Il2CppStaticFields {
  ModdingAPI::Exposed::UnityEngine::RectTransform::ReapplyDrivenProperties* reapplyDrivenProperties;
};

struct __RectTransform_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_GetEnumerator;
};

struct __RectTransform_Il2CppClass {
  Il2CppClass_1 _1;
  __RectTransform_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __RectTransform_Il2CppVtbl vtbl;
};

class RectTransform {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C270A8;
  static inline    RectTransform* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C24F90;
  static inline    __RectTransform_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline RectTransform* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (RectTransform**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __RectTransform_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__RectTransform_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __RectTransform_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;

  // Member methods:
  ModdingAPI::Exposed::UnityEngine::Rect get_rect() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Rect(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109E600))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 get_anchorMin() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109E680))(this);
  }
  void set_anchorMin(ModdingAPI::Exposed::UnityEngine::Vector2 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109E6F0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 get_anchorMax() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109E750))(this);
  }
  void set_anchorMax(ModdingAPI::Exposed::UnityEngine::Vector2 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109E7C0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 get_anchoredPosition() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109E820))(this);
  }
  void set_anchoredPosition(ModdingAPI::Exposed::UnityEngine::Vector2 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109E890))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 get_sizeDelta() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109E8F0))(this);
  }
  void set_sizeDelta(ModdingAPI::Exposed::UnityEngine::Vector2 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109E960))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 get_pivot() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109E9C0))(this);
  }
  void set_pivot(ModdingAPI::Exposed::UnityEngine::Vector2 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109EA30))(this, value);
  }
  void set_offsetMin(ModdingAPI::Exposed::UnityEngine::Vector2 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109EA90))(this, value);
  }
  void set_offsetMax(ModdingAPI::Exposed::UnityEngine::Vector2 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109EE40))(this, value);
  }
  void GetLocalCorners(ModdingAPI::Exposed::UnityEngine::Vector3_array* fourCornersArray) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, ModdingAPI::Exposed::UnityEngine::Vector3_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109F200))(this, fourCornersArray);
  }
  void GetWorldCorners(ModdingAPI::Exposed::UnityEngine::Vector3_array* fourCornersArray) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, ModdingAPI::Exposed::UnityEngine::Vector3_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109F440))(this, fourCornersArray);
  }
  void SetInsetAndSizeFromParentEdge(int32_t edge, float inset, float size) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, int32_t, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109F770))(this, edge, inset, size);
  }
  void SetSizeWithCurrentAnchors(int32_t axis, float size) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109FB30))(this, axis, size);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 GetParentSize() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109FDE0))(this);
  }
  void get_rect_Injected(ModdingAPI::Exposed::UnityEngine::Rect ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, ModdingAPI::Exposed::UnityEngine::Rect)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109FFA0))(this, ret);
  }
  void get_anchorMin_Injected(ModdingAPI::Exposed::UnityEngine::Vector2 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10A0000))(this, ret);
  }
  void set_anchorMin_Injected(ModdingAPI::Exposed::UnityEngine::Vector2 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10A0060))(this, value);
  }
  void get_anchorMax_Injected(ModdingAPI::Exposed::UnityEngine::Vector2 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10A00C0))(this, ret);
  }
  void set_anchorMax_Injected(ModdingAPI::Exposed::UnityEngine::Vector2 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10A0120))(this, value);
  }
  void get_anchoredPosition_Injected(ModdingAPI::Exposed::UnityEngine::Vector2 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10A0180))(this, ret);
  }
  void set_anchoredPosition_Injected(ModdingAPI::Exposed::UnityEngine::Vector2 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10A01E0))(this, value);
  }
  void get_sizeDelta_Injected(ModdingAPI::Exposed::UnityEngine::Vector2 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10A0240))(this, ret);
  }
  void set_sizeDelta_Injected(ModdingAPI::Exposed::UnityEngine::Vector2 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10A02A0))(this, value);
  }
  void get_pivot_Injected(ModdingAPI::Exposed::UnityEngine::Vector2 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10A0300))(this, ret);
  }
  void set_pivot_Injected(ModdingAPI::Exposed::UnityEngine::Vector2 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10A0360))(this, value);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::RectTransform::ReapplyDrivenProperties*> reapplyDrivenProperties = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::RectTransform::ReapplyDrivenProperties*>(
   []() { return &GetStaticClassInstance()->pStaticFields->reapplyDrivenProperties; }
  );

  // Static methods:
  static inline void add_reapplyDrivenProperties(ModdingAPI::Exposed::UnityEngine::RectTransform::ReapplyDrivenProperties* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform::ReapplyDrivenProperties*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109E400))(value);
  }
  static inline void remove_reapplyDrivenProperties(ModdingAPI::Exposed::UnityEngine::RectTransform::ReapplyDrivenProperties* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform::ReapplyDrivenProperties*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109E500))(value);
  }
  static inline void SendReapplyDrivenProperties(ModdingAPI::Exposed::UnityEngine::RectTransform* driven) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::RectTransform*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x109FD40))(driven);
  }
};
}