// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Rect.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Rect.hpp"


namespace ModdingAPI::Exposed::UnityEngine {
struct __GUILayoutUtility_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* s_StoredLayouts;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* s_StoredWindows;
  ModdingAPI::Exposed::UnityEngine::GUILayoutUtility::LayoutCache* current;
  ModdingAPI::Exposed::UnityEngine::Rect kDummyRect;
  ModdingAPI::Exposed::UnityEngine::GUIStyle* s_SpaceStyle;
};

struct __GUILayoutUtility_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __GUILayoutUtility_Il2CppClass {
  Il2CppClass_1 _1;
  __GUILayoutUtility_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __GUILayoutUtility_Il2CppVtbl vtbl;
};

class GUILayoutUtility {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C36FE0;
  static inline    __GUILayoutUtility_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __GUILayoutUtility_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__GUILayoutUtility_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __GUILayoutUtility_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_*> s_StoredLayouts = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_StoredLayouts; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_*> s_StoredWindows = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_StoredWindows; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::GUILayoutUtility::LayoutCache*> current = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::GUILayoutUtility::LayoutCache*>(
   []() { return &GetStaticClassInstance()->pStaticFields->current; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Rect> kDummyRect = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Rect>(
   []() { return &GetStaticClassInstance()->pStaticFields->kDummyRect; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::GUIStyle*> s_SpaceStyle = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::GUIStyle*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_SpaceStyle; }
  );

  // Static methods:
  static inline ModdingAPI::Exposed::UnityEngine::Rect Internal_GetWindowRect(int32_t windowID) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Rect(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F8440))(windowID);
  }
  static inline void Internal_MoveWindow(int32_t windowID, ModdingAPI::Exposed::UnityEngine::Rect r) {
    reinterpret_cast<void(__fastcall*)(int32_t, ModdingAPI::Exposed::UnityEngine::Rect)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F8540))(windowID, r);
  }
  static inline ModdingAPI::Exposed::UnityEngine::GUILayoutUtility::LayoutCache* SelectIDList(int32_t instanceID, bool isWindow) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GUILayoutUtility::LayoutCache*(__fastcall*)(int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F8620))(instanceID, isWindow);
  }
  static inline void Begin(int32_t instanceID) {
    reinterpret_cast<void(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F8940))(instanceID);
  }
  static inline void BeginWindow(int32_t windowID, ModdingAPI::Exposed::UnityEngine::GUIStyle* style, ModdingAPI::Exposed::UnityEngine::GUILayoutOption_array* options) {
    reinterpret_cast<void(__fastcall*)(int32_t, ModdingAPI::Exposed::UnityEngine::GUIStyle*, ModdingAPI::Exposed::UnityEngine::GUILayoutOption_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F8DA0))(windowID, style, options);
  }
  static inline void Layout() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F9320))();
  }
  static inline void LayoutFromEditorWindow() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F9790))();
  }
  static inline void LayoutFreeGroup(ModdingAPI::Exposed::UnityEngine::GUILayoutGroup* toplevel) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUILayoutGroup*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F9B10))(toplevel);
  }
  static inline void LayoutSingleGroup(ModdingAPI::Exposed::UnityEngine::GUILayoutGroup* i) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUILayoutGroup*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F9D10))(i);
  }
  static inline ModdingAPI::Exposed::UnityEngine::GUILayoutGroup* CreateGUILayoutGroupInstanceOfType(ModdingAPI::Exposed::System::Type* LayoutType) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GUILayoutGroup*(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13FA110))(LayoutType);
  }
  static inline ModdingAPI::Exposed::UnityEngine::GUILayoutGroup* BeginLayoutGroup(ModdingAPI::Exposed::UnityEngine::GUIStyle* style, ModdingAPI::Exposed::UnityEngine::GUILayoutOption_array* options, ModdingAPI::Exposed::System::Type* layoutType) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GUILayoutGroup*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUIStyle*, ModdingAPI::Exposed::UnityEngine::GUILayoutOption_array*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13FA280))(style, options, layoutType);
  }
  static inline void EndLayoutGroup() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x13FA610))();
  }
  static inline ModdingAPI::Exposed::UnityEngine::GUILayoutGroup* BeginLayoutArea(ModdingAPI::Exposed::UnityEngine::GUIStyle* style, ModdingAPI::Exposed::System::Type* layoutType) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GUILayoutGroup*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUIStyle*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13FA980))(style, layoutType);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Rect GetRect(ModdingAPI::Exposed::UnityEngine::GUIContent* content, ModdingAPI::Exposed::UnityEngine::GUIStyle* style, ModdingAPI::Exposed::UnityEngine::GUILayoutOption_array* options) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Rect(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUIContent*, ModdingAPI::Exposed::UnityEngine::GUIStyle*, ModdingAPI::Exposed::UnityEngine::GUILayoutOption_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13FACC0))(content, style, options);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Rect DoGetRect(ModdingAPI::Exposed::UnityEngine::GUIContent* content, ModdingAPI::Exposed::UnityEngine::GUIStyle* style, ModdingAPI::Exposed::UnityEngine::GUILayoutOption_array* options) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Rect(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUIContent*, ModdingAPI::Exposed::UnityEngine::GUIStyle*, ModdingAPI::Exposed::UnityEngine::GUILayoutOption_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13FADA0))(content, style, options);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Rect GetRect(float width, float height, ModdingAPI::Exposed::UnityEngine::GUIStyle* style, ModdingAPI::Exposed::UnityEngine::GUILayoutOption_array* options) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Rect(__fastcall*)(float, float, ModdingAPI::Exposed::UnityEngine::GUIStyle*, ModdingAPI::Exposed::UnityEngine::GUILayoutOption_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13FB440))(width, height, style, options);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Rect DoGetRect(float minWidth, float maxWidth, float minHeight, float maxHeight, ModdingAPI::Exposed::UnityEngine::GUIStyle* style, ModdingAPI::Exposed::UnityEngine::GUILayoutOption_array* options) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Rect(__fastcall*)(float, float, float, float, ModdingAPI::Exposed::UnityEngine::GUIStyle*, ModdingAPI::Exposed::UnityEngine::GUILayoutOption_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13FB540))(minWidth, maxWidth, minHeight, maxHeight, style, options);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Rect GetLastRect() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Rect(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x13FB870))();
  }
  static inline ModdingAPI::Exposed::UnityEngine::GUIStyle* get_spaceStyle() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GUIStyle*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x13FBA00))();
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x13FBC40))();
  }
  static inline void Internal_GetWindowRect_Injected(int32_t windowID, ModdingAPI::Exposed::UnityEngine::Rect ret) {
    reinterpret_cast<void(__fastcall*)(int32_t, ModdingAPI::Exposed::UnityEngine::Rect)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13FBFA0))(windowID, ret);
  }
  static inline void Internal_MoveWindow_Injected(int32_t windowID, ModdingAPI::Exposed::UnityEngine::Rect r) {
    reinterpret_cast<void(__fastcall*)(int32_t, ModdingAPI::Exposed::UnityEngine::Rect)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13FC000))(windowID, r);
  }
};
}