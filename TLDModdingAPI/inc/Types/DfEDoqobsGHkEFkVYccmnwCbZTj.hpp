// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.DfEDoqobsGHkEFkVYccmnwCbZTj.aauQpxWdskBKwhLEnhjOjXmTDrf.hpp"
#include "ModdingAPI.Exposed.DfEDoqobsGHkEFkVYccmnwCbZTj.dJePwHOWhFmOPldscjHiLUuIwhO.hpp"
#include "ModdingAPI.Exposed.UFkWILAFKVOBxPiMFNYawDjynyh.aypgQchZxttmSnwJLesKVkeCQrCi.hpp"


namespace ModdingAPI::Exposed {
struct __DfEDoqobsGHkEFkVYccmnwCbZTj_Il2CppStaticFields {
};

struct __DfEDoqobsGHkEFkVYccmnwCbZTj_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __DfEDoqobsGHkEFkVYccmnwCbZTj_Il2CppClass {
  Il2CppClass_1 _1;
  __DfEDoqobsGHkEFkVYccmnwCbZTj_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __DfEDoqobsGHkEFkVYccmnwCbZTj_Il2CppVtbl vtbl;
};

class DfEDoqobsGHkEFkVYccmnwCbZTj {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C6D4A0;
  static inline    __DfEDoqobsGHkEFkVYccmnwCbZTj_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __DfEDoqobsGHkEFkVYccmnwCbZTj_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__DfEDoqobsGHkEFkVYccmnwCbZTj_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __DfEDoqobsGHkEFkVYccmnwCbZTj_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  uint16_t XHrobJLgtGJejjjNczOSBBROIVY;
  uint8_t EBHrGElCwWeIrOrSSHgXSaSOQys;
  bool GBtwjHkVjJszIxgJNJjrBlqrunz;
  uint16_t EyRyfWvfAwLtKnWelgMvzeNDmld;
  uint16_t jxAgzXANjezmkIubrlqFjMumNhEu;
  uint16_t WOianNjtcCbGIbFqCOyCEEoaNUbP;
  uint16_t LIqIEafablFYHafJoUUZPJoeBxO;
  bool ojaewYRTGxaSIJjeBzrsSkbWAkRa;
  bool sSnkRrHpKNVJGLLLaBlLmcQmFCO;
  bool xadAarqEbshqIbgYjZWinPzqFUn;
  bool RLBEcopCVyJZRWDgvqrFFsPRNBu;
  bool ScPTOFaHUPeAUEhlXUTbbZkPXjk;
  uint8_t hegcwBgCRLnDjfomGhJApGUHnEPE;
  uint16_t PFrzTjPlaXDlZDVWLEFchvzhBmke;
  uint16_t qsHaSITSgTbTXAloYwYWHSMTivhF;
  ModdingAPI::Exposed::System::UInt16_array* IZRUARnWYxVtdoWTkudDVexQEsd;
  uint32_t jbtkwvXjvRYBIWKvEKuuHQlrqlE;
  uint32_t lewISNDRtcRFWTChwUiDgOByJRSr;
  int32_t zSSBijdAULTRjHwVenNDtXkBCmw;
  int32_t xnkuIJZccbilZkPqUWPwrPduaRM;
  int32_t HspnjbxPtPayRFSpJHQBGuzxTLw;
  int32_t CfymAROfZeCOdwxxKkxZcXzXnkL;
  ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj::aauQpxWdskBKwhLEnhjOjXmTDrf AbakTxVlueIzemEOobLmAAMREpGC;
  ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj::dJePwHOWhFmOPldscjHiLUuIwhO yZitReYPDHgkpUogYEhOsfNGQCf;

  // Member methods:
  void ::ctor(ModdingAPI::Exposed::UFkWILAFKVOBxPiMFNYawDjynyh::aypgQchZxttmSnwJLesKVkeCQrCi caps) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, ModdingAPI::Exposed::UFkWILAFKVOBxPiMFNYawDjynyh::aypgQchZxttmSnwJLesKVkeCQrCi)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D400))(this, caps);
  }
  uint16_t get_UsagePage() {
    return reinterpret_cast<uint16_t(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310E10))(this);
  }
  void set_UsagePage(uint16_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, uint16_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310E20))(this, value);
  }
  uint8_t get_ReportID() {
    return reinterpret_cast<uint8_t(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310E30))(this);
  }
  void set_ReportID(uint8_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, uint8_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310E40))(this, value);
  }
  void set_IsAlias(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310E50))(this, value);
  }
  void set_BitField(uint16_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, uint16_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310E60))(this, value);
  }
  uint16_t get_LinkCollection() {
    return reinterpret_cast<uint16_t(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310E70))(this);
  }
  void set_LinkCollection(uint16_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, uint16_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310E80))(this, value);
  }
  void set_LinkUsage(uint16_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, uint16_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310E90))(this, value);
  }
  void set_LinkUsagePage(uint16_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, uint16_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310EA0))(this, value);
  }
  bool get_IsRange() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310EB0))(this);
  }
  void set_IsRange(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310EC0))(this, value);
  }
  void set_IsStringRange(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310ED0))(this, value);
  }
  void set_IsDesignatorRange(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310EE0))(this, value);
  }
  void set_IsAbsolute(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310EF0))(this, value);
  }
  void set_HasNull(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D810))(this, value);
  }
  void set_Reserved(uint8_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, uint8_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D820))(this, value);
  }
  uint16_t get_BitSize() {
    return reinterpret_cast<uint16_t(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D830))(this);
  }
  void set_BitSize(uint16_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, uint16_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D840))(this, value);
  }
  uint16_t get_ReportCount() {
    return reinterpret_cast<uint16_t(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D850))(this);
  }
  void set_ReportCount(uint16_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, uint16_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D860))(this, value);
  }
  void set_Reserved2(ModdingAPI::Exposed::System::UInt16_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, ModdingAPI::Exposed::System::UInt16_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110C0))(this, value);
  }
  uint32_t get_UnitsExp() {
    return reinterpret_cast<uint32_t(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D870))(this);
  }
  void set_UnitsExp(uint32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, uint32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x31DD70))(this, value);
  }
  uint32_t get_Units() {
    return reinterpret_cast<uint32_t(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D880))(this);
  }
  void set_Units(uint32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, uint32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D890))(this, value);
  }
  int32_t get_LogicalMin() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8A0))(this);
  }
  void set_LogicalMin(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8B0))(this, value);
  }
  int32_t get_LogicalMax() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8C0))(this);
  }
  void set_LogicalMax(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8D0))(this, value);
  }
  int32_t get_PhysicalMin() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8E0))(this);
  }
  void set_PhysicalMin(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8F0))(this, value);
  }
  int32_t get_PhysicalMax() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D900))(this);
  }
  void set_PhysicalMax(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D910))(this, value);
  }
  ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj::aauQpxWdskBKwhLEnhjOjXmTDrf get_Range() {
    return reinterpret_cast<ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj::aauQpxWdskBKwhLEnhjOjXmTDrf(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D920))(this);
  }
  void set_Range(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj::aauQpxWdskBKwhLEnhjOjXmTDrf value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj::aauQpxWdskBKwhLEnhjOjXmTDrf)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D930))(this, value);
  }
  ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj::dJePwHOWhFmOPldscjHiLUuIwhO get_NotRange() {
    return reinterpret_cast<ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj::dJePwHOWhFmOPldscjHiLUuIwhO(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D940))(this);
  }
  void set_NotRange(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj::dJePwHOWhFmOPldscjHiLUuIwhO value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj*, ModdingAPI::Exposed::DfEDoqobsGHkEFkVYccmnwCbZTj::dJePwHOWhFmOPldscjHiLUuIwhO)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D950))(this, value);
  }
};
}