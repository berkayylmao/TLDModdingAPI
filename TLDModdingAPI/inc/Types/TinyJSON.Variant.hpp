// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.DateTime.hpp"
#include "ModdingAPI.Exposed.System.Decimal.hpp"


namespace ModdingAPI::Exposed::TinyJSON {
struct __Variant_Il2CppStaticFields {
  ModdingAPI::Exposed::System::IFormatProvider* formatProvider;
};

struct __Variant_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _21_GetTypeCode;
  VirtualInvokeData _22_ToType;
  VirtualInvokeData _23_ToDateTime;
  VirtualInvokeData _24_ToBoolean;
  VirtualInvokeData _25_ToByte;
  VirtualInvokeData _26_ToChar;
  VirtualInvokeData _27_ToDecimal;
  VirtualInvokeData _28_ToDouble;
  VirtualInvokeData _29_ToInt16;
  VirtualInvokeData _30_ToInt32;
  VirtualInvokeData _31_ToInt64;
  VirtualInvokeData _32_ToSByte;
  VirtualInvokeData _33_ToSingle;
  VirtualInvokeData _34_ToString;
  VirtualInvokeData _35_ToUInt16;
  VirtualInvokeData _36_ToUInt32;
  VirtualInvokeData _37_ToUInt64;
  VirtualInvokeData _38_get_Item;
  VirtualInvokeData _39_set_Item;
  VirtualInvokeData _40_get_Item;
  VirtualInvokeData _41_set_Item;
};

struct __Variant_Il2CppClass {
  Il2CppClass_1 _1;
  __Variant_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Variant_Il2CppVtbl vtbl;
};

class Variant {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C4AE08;
  static inline    __Variant_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __Variant_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__Variant_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __Variant_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member methods:
  int32_t GetTypeCode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4114C0))(this);
  }
  Il2CppObject* ToType(ModdingAPI::Exposed::System::Type* conversionType, ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*, ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBDDA0))(this, conversionType, provider);
  }
  ModdingAPI::Exposed::System::DateTime ToDateTime(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBDEE0))(this, provider);
  }
  bool ToBoolean(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBDF60))(this, provider);
  }
  uint8_t ToByte(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<uint8_t(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBDFE0))(this, provider);
  }
  wchar_t ToChar(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<wchar_t(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBE060))(this, provider);
  }
  ModdingAPI::Exposed::System::Decimal ToDecimal(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Decimal(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBE0E0))(this, provider);
  }
  double ToDouble(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBE160))(this, provider);
  }
  int16_t ToInt16(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<int16_t(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBE1E0))(this, provider);
  }
  int32_t ToInt32(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBE260))(this, provider);
  }
  int64_t ToInt64(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBE2E0))(this, provider);
  }
  char ToSByte(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<char(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBE360))(this, provider);
  }
  float ToSingle(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBE3E0))(this, provider);
  }
  System_String* ToString(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBE460))(this, provider);
  }
  uint16_t ToUInt16(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<uint16_t(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBE4E0))(this, provider);
  }
  uint32_t ToUInt32(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<uint32_t(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBE560))(this, provider);
  }
  uint64_t ToUInt64(ModdingAPI::Exposed::System::IFormatProvider* provider) {
    return reinterpret_cast<uint64_t(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*, ModdingAPI::Exposed::System::IFormatProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBE5E0))(this, provider);
  }
  System_String* ToString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBE660))(this);
  }
  ModdingAPI::Exposed::TinyJSON::Variant* get_Item(System_String* key) {
    return reinterpret_cast<ModdingAPI::Exposed::TinyJSON::Variant*(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBE720))(this, key);
  }
  void set_Item(System_String* key, ModdingAPI::Exposed::TinyJSON::Variant* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*, System_String*, ModdingAPI::Exposed::TinyJSON::Variant*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBE770))(this, key, value);
  }
  ModdingAPI::Exposed::TinyJSON::Variant* get_Item(int32_t index) {
    return reinterpret_cast<ModdingAPI::Exposed::TinyJSON::Variant*(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBE7C0))(this, index);
  }
  void set_Item(int32_t index, ModdingAPI::Exposed::TinyJSON::Variant* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*, int32_t, ModdingAPI::Exposed::TinyJSON::Variant*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBE810))(this, index, value);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TinyJSON::Variant*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::IFormatProvider*> formatProvider = __CppStaticProperty<ModdingAPI::Exposed::System::IFormatProvider*>(
   []() { return &GetStaticClassInstance()->pStaticFields->formatProvider; }
  );

  // Static methods:
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBF160))();
  }
};
}