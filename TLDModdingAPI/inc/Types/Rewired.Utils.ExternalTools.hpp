// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector4.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Touch.hpp"
#include "ModdingAPI.Exposed.System.Guid.hpp"


namespace ModdingAPI::Exposed::Rewired::Utils {
struct __ExternalTools_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Func_TResult_* _getPlatformInitializerDelegate;
};

struct __ExternalTools_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_get_isEditorPaused;
  VirtualInvokeData _5_add_EditorPausedStateChangedEvent;
  VirtualInvokeData _6_remove_EditorPausedStateChangedEvent;
  VirtualInvokeData _7_Destroy;
  VirtualInvokeData _8_GetPlatformInitializer;
  VirtualInvokeData _9_GetFocusedEditorWindowTitle;
  VirtualInvokeData _10_IsEditorSceneViewFocused;
  VirtualInvokeData _11_LinuxInput_IsJoystickPreconfigured;
  VirtualInvokeData _12_XboxOneInput_GetUserIdForGamepad;
  VirtualInvokeData _13_XboxOneInput_GetControllerId;
  VirtualInvokeData _14_add_XboxOneInput_OnGamepadStateChange;
  VirtualInvokeData _15_remove_XboxOneInput_OnGamepadStateChange;
  VirtualInvokeData _16_XboxOneInput_IsGamepadActive;
  VirtualInvokeData _17_XboxOneInput_GetControllerType;
  VirtualInvokeData _18_XboxOneInput_GetJoystickId;
  VirtualInvokeData _19_XboxOne_Gamepad_UpdatePlugin;
  VirtualInvokeData _20_XboxOne_Gamepad_SetGamepadVibration;
  VirtualInvokeData _21_XboxOne_Gamepad_PulseVibrateMotor;
  VirtualInvokeData _22_PS4Input_GetLastAcceleration;
  VirtualInvokeData _23_PS4Input_GetLastGyro;
  VirtualInvokeData _24_PS4Input_GetLastOrientation;
  VirtualInvokeData _25_PS4Input_GetLastTouchData;
  VirtualInvokeData _26_PS4Input_GetPadControllerInformation;
  VirtualInvokeData _27_PS4Input_PadSetMotionSensorState;
  VirtualInvokeData _28_PS4Input_PadSetTiltCorrectionState;
  VirtualInvokeData _29_PS4Input_PadSetAngularVelocityDeadbandState;
  VirtualInvokeData _30_PS4Input_PadSetLightBar;
  VirtualInvokeData _31_PS4Input_PadResetLightBar;
  VirtualInvokeData _32_PS4Input_PadSetVibration;
  VirtualInvokeData _33_PS4Input_PadResetOrientation;
  VirtualInvokeData _34_PS4Input_PadIsConnected;
  VirtualInvokeData _35_PS4Input_GetUsersDetails;
  VirtualInvokeData _36_PS4Input_GetDeviceClassForHandle;
  VirtualInvokeData _37_PS4Input_GetDeviceClassString;
  VirtualInvokeData _38_PS4Input_PadGetUsersHandles2;
  VirtualInvokeData _39_PS4Input_GetSpecialControllerInformation;
  VirtualInvokeData _40_PS4Input_SpecialGetLastAcceleration;
  VirtualInvokeData _41_PS4Input_SpecialGetLastGyro;
  VirtualInvokeData _42_PS4Input_SpecialGetLastOrientation;
  VirtualInvokeData _43_PS4Input_SpecialGetUsersHandles;
  VirtualInvokeData _44_PS4Input_SpecialGetUsersHandles2;
  VirtualInvokeData _45_PS4Input_SpecialIsConnected;
  VirtualInvokeData _46_PS4Input_SpecialResetLightSphere;
  VirtualInvokeData _47_PS4Input_SpecialResetOrientation;
  VirtualInvokeData _48_PS4Input_SpecialSetAngularVelocityDeadbandState;
  VirtualInvokeData _49_PS4Input_SpecialSetLightSphere;
  VirtualInvokeData _50_PS4Input_SpecialSetMotionSensorState;
  VirtualInvokeData _51_PS4Input_SpecialSetTiltCorrectionState;
  VirtualInvokeData _52_PS4Input_SpecialSetVibration;
  VirtualInvokeData _53_PS4Input_AimGetLastAcceleration;
  VirtualInvokeData _54_PS4Input_AimGetLastGyro;
  VirtualInvokeData _55_PS4Input_AimGetLastOrientation;
  VirtualInvokeData _56_PS4Input_AimGetUsersHandles;
  VirtualInvokeData _57_PS4Input_AimGetUsersHandles2;
  VirtualInvokeData _58_PS4Input_AimIsConnected;
  VirtualInvokeData _59_PS4Input_AimResetLightSphere;
  VirtualInvokeData _60_PS4Input_AimResetOrientation;
  VirtualInvokeData _61_PS4Input_AimSetAngularVelocityDeadbandState;
  VirtualInvokeData _62_PS4Input_AimSetLightSphere;
  VirtualInvokeData _63_PS4Input_AimSetMotionSensorState;
  VirtualInvokeData _64_PS4Input_AimSetTiltCorrectionState;
  VirtualInvokeData _65_PS4Input_AimSetVibration;
  VirtualInvokeData _66_PS4Input_GetLastMoveAcceleration;
  VirtualInvokeData _67_PS4Input_GetLastMoveGyro;
  VirtualInvokeData _68_PS4Input_MoveGetButtons;
  VirtualInvokeData _69_PS4Input_MoveGetAnalogButton;
  VirtualInvokeData _70_PS4Input_MoveIsConnected;
  VirtualInvokeData _71_PS4Input_MoveGetUsersMoveHandles;
  VirtualInvokeData _72_PS4Input_MoveGetUsersMoveHandles;
  VirtualInvokeData _73_PS4Input_MoveGetUsersMoveHandles;
  VirtualInvokeData _74_PS4Input_MoveGetControllerInputForTracking;
  VirtualInvokeData _75_PS4Input_MoveSetLightSphere;
  VirtualInvokeData _76_PS4Input_MoveSetVibration;
  VirtualInvokeData _77_GetDeviceVIDPIDs;
  VirtualInvokeData _78_GetAndroidAPILevel;
  VirtualInvokeData _79_UnityUI_Graphic_GetRaycastTarget;
  VirtualInvokeData _80_UnityUI_Graphic_SetRaycastTarget;
  VirtualInvokeData _81_get_UnityInput_IsTouchPressureSupported;
  VirtualInvokeData _82_UnityInput_GetTouchPressure;
  VirtualInvokeData _83_UnityInput_GetTouchMaximumPossiblePressure;
  VirtualInvokeData _84_CreateControllerTemplate;
  VirtualInvokeData _85_GetControllerTemplateTypes;
  VirtualInvokeData _86_GetControllerTemplateInterfaceTypes;
};

struct __ExternalTools_Il2CppClass {
  Il2CppClass_1 _1;
  __ExternalTools_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __ExternalTools_Il2CppVtbl vtbl;
};

class ExternalTools {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C4BC88;
  static inline    __ExternalTools_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __ExternalTools_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__ExternalTools_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __ExternalTools_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  bool _isEditorPaused;
  ModdingAPI::Exposed::System::Action_T_* _EditorPausedStateChangedEvent;
  ModdingAPI::Exposed::System::Action_T1__T2_* XboxOneInput_OnGamepadStateChange;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void Destroy() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  bool get_isEditorPaused() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33C2C0))(this);
  }
  void add_EditorPausedStateChangedEvent(ModdingAPI::Exposed::System::Action_T_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, ModdingAPI::Exposed::System::Action_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2182DB0))(this, value);
  }
  void remove_EditorPausedStateChangedEvent(ModdingAPI::Exposed::System::Action_T_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, ModdingAPI::Exposed::System::Action_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2182E70))(this, value);
  }
  Il2CppObject* GetPlatformInitializer() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2182F30))(this);
  }
  System_String* GetFocusedEditorWindowTitle() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21830A0))(this);
  }
  bool IsEditorSceneViewFocused() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(this);
  }
  bool LinuxInput_IsJoystickPreconfigured(System_String* name) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(this, name);
  }
  void add_XboxOneInput_OnGamepadStateChange(ModdingAPI::Exposed::System::Action_T1__T2_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, ModdingAPI::Exposed::System::Action_T1__T2_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2183120))(this, value);
  }
  void remove_XboxOneInput_OnGamepadStateChange(ModdingAPI::Exposed::System::Action_T1__T2_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, ModdingAPI::Exposed::System::Action_T1__T2_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2183210))(this, value);
  }
  int32_t XboxOneInput_GetUserIdForGamepad(uint32_t id) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, uint32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, id);
  }
  uint64_t XboxOneInput_GetControllerId(uint32_t unityJoystickId) {
    return reinterpret_cast<uint64_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, uint32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, unityJoystickId);
  }
  bool XboxOneInput_IsGamepadActive(uint32_t unityJoystickId) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, uint32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(this, unityJoystickId);
  }
  System_String* XboxOneInput_GetControllerType(uint64_t xboxControllerId) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, uint64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2183300))(this, xboxControllerId);
  }
  uint32_t XboxOneInput_GetJoystickId(uint64_t xboxControllerId) {
    return reinterpret_cast<uint32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, uint64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, xboxControllerId);
  }
  void XboxOne_Gamepad_UpdatePlugin() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  bool XboxOne_Gamepad_SetGamepadVibration(uint64_t xboxOneJoystickId, float leftMotor, float rightMotor, float leftTriggerLevel, float rightTriggerLevel) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, uint64_t, float, float, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(this, xboxOneJoystickId, leftMotor, rightMotor, leftTriggerLevel, rightTriggerLevel);
  }
  void XboxOne_Gamepad_PulseVibrateMotor(uint64_t xboxOneJoystickId, int32_t motorInt, float startLevel, float endLevel, uint64_t durationMS) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, uint64_t, int32_t, float, float, uint64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, xboxOneJoystickId, motorInt, startLevel, endLevel, durationMS);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 PS4Input_GetLastAcceleration(int32_t id) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2183380))(this, id);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 PS4Input_GetLastGyro(int32_t id) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2183430))(this, id);
  }
  ModdingAPI::Exposed::UnityEngine::Vector4 PS4Input_GetLastOrientation(int32_t id) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector4(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21834E0))(this, id);
  }
  void PS4Input_GetLastTouchData(int32_t id, int32_t touchNum, int32_t touch0x, int32_t touch0y, int32_t touch0id, int32_t touch1x, int32_t touch1y, int32_t touch1id) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2183590))(this, id, touchNum, touch0x, touch0y, touch0id, touch1x, touch1y, touch1id);
  }
  void PS4Input_GetPadControllerInformation(int32_t id, float touchpixelDensity, int32_t touchResolutionX, int32_t touchResolutionY, int32_t analogDeadZoneLeft, int32_t analogDeadZoneright, int32_t connectionType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, float, int32_t, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21835C0))(this, id, touchpixelDensity, touchResolutionX, touchResolutionY, analogDeadZoneLeft, analogDeadZoneright, connectionType);
  }
  void PS4Input_PadSetMotionSensorState(int32_t id, bool bEnable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id, bEnable);
  }
  void PS4Input_PadSetTiltCorrectionState(int32_t id, bool bEnable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id, bEnable);
  }
  void PS4Input_PadSetAngularVelocityDeadbandState(int32_t id, bool bEnable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id, bEnable);
  }
  void PS4Input_PadSetLightBar(int32_t id, int32_t red, int32_t green, int32_t blue) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id, red, green, blue);
  }
  void PS4Input_PadResetLightBar(int32_t id) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id);
  }
  void PS4Input_PadSetVibration(int32_t id, int32_t largeMotor, int32_t smallMotor) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id, largeMotor, smallMotor);
  }
  void PS4Input_PadResetOrientation(int32_t id) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id);
  }
  bool PS4Input_PadIsConnected(int32_t id) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(this, id);
  }
  void PS4Input_GetUsersDetails(int32_t slot, Il2CppObject* loggedInUser) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, slot, loggedInUser);
  }
  int32_t PS4Input_GetDeviceClassForHandle(int32_t handle) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x65F4B0))(this, handle);
  }
  System_String* PS4Input_GetDeviceClassString(int32_t intValue) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, intValue);
  }
  int32_t PS4Input_PadGetUsersHandles2(int32_t maxControllers, ModdingAPI::Exposed::System::Int32_array* handles) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, maxControllers, handles);
  }
  void PS4Input_GetSpecialControllerInformation(int32_t id, int32_t padIndex, Il2CppObject* controllerInformation) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, int32_t, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id, padIndex, controllerInformation);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 PS4Input_SpecialGetLastAcceleration(int32_t id) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21835F0))(this, id);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 PS4Input_SpecialGetLastGyro(int32_t id) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21836A0))(this, id);
  }
  ModdingAPI::Exposed::UnityEngine::Vector4 PS4Input_SpecialGetLastOrientation(int32_t id) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector4(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2183750))(this, id);
  }
  int32_t PS4Input_SpecialGetUsersHandles(int32_t maxNumberControllers, ModdingAPI::Exposed::System::Int32_array* handles) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, maxNumberControllers, handles);
  }
  int32_t PS4Input_SpecialGetUsersHandles2(int32_t maxNumberControllers, ModdingAPI::Exposed::System::Int32_array* handles) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, maxNumberControllers, handles);
  }
  bool PS4Input_SpecialIsConnected(int32_t id) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(this, id);
  }
  void PS4Input_SpecialResetLightSphere(int32_t id) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id);
  }
  void PS4Input_SpecialResetOrientation(int32_t id) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id);
  }
  void PS4Input_SpecialSetAngularVelocityDeadbandState(int32_t id, bool bEnable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id, bEnable);
  }
  void PS4Input_SpecialSetLightSphere(int32_t id, int32_t red, int32_t green, int32_t blue) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id, red, green, blue);
  }
  void PS4Input_SpecialSetMotionSensorState(int32_t id, bool bEnable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id, bEnable);
  }
  void PS4Input_SpecialSetTiltCorrectionState(int32_t id, bool bEnable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id, bEnable);
  }
  void PS4Input_SpecialSetVibration(int32_t id, int32_t largeMotor, int32_t smallMotor) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id, largeMotor, smallMotor);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 PS4Input_AimGetLastAcceleration(int32_t id) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2183800))(this, id);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 PS4Input_AimGetLastGyro(int32_t id) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21838B0))(this, id);
  }
  ModdingAPI::Exposed::UnityEngine::Vector4 PS4Input_AimGetLastOrientation(int32_t id) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector4(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2183960))(this, id);
  }
  int32_t PS4Input_AimGetUsersHandles(int32_t maxNumberControllers, ModdingAPI::Exposed::System::Int32_array* handles) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, maxNumberControllers, handles);
  }
  int32_t PS4Input_AimGetUsersHandles2(int32_t maxNumberControllers, ModdingAPI::Exposed::System::Int32_array* handles) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, maxNumberControllers, handles);
  }
  bool PS4Input_AimIsConnected(int32_t id) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(this, id);
  }
  void PS4Input_AimResetLightSphere(int32_t id) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id);
  }
  void PS4Input_AimResetOrientation(int32_t id) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id);
  }
  void PS4Input_AimSetAngularVelocityDeadbandState(int32_t id, bool bEnable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id, bEnable);
  }
  void PS4Input_AimSetLightSphere(int32_t id, int32_t red, int32_t green, int32_t blue) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id, red, green, blue);
  }
  void PS4Input_AimSetMotionSensorState(int32_t id, bool bEnable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id, bEnable);
  }
  void PS4Input_AimSetTiltCorrectionState(int32_t id, bool bEnable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id, bEnable);
  }
  void PS4Input_AimSetVibration(int32_t id, int32_t largeMotor, int32_t smallMotor) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, id, largeMotor, smallMotor);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 PS4Input_GetLastMoveAcceleration(int32_t id, int32_t index) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2183A10))(this, id, index);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 PS4Input_GetLastMoveGyro(int32_t id, int32_t index) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2183AC0))(this, id, index);
  }
  int32_t PS4Input_MoveGetButtons(int32_t id, int32_t index) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, id, index);
  }
  int32_t PS4Input_MoveGetAnalogButton(int32_t id, int32_t index) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, id, index);
  }
  bool PS4Input_MoveIsConnected(int32_t id, int32_t index) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(this, id, index);
  }
  int32_t PS4Input_MoveGetUsersMoveHandles(int32_t maxNumberControllers, ModdingAPI::Exposed::System::Int32_array* primaryHandles, ModdingAPI::Exposed::System::Int32_array* secondaryHandles) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, ModdingAPI::Exposed::System::Int32_array*, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, maxNumberControllers, primaryHandles, secondaryHandles);
  }
  int32_t PS4Input_MoveGetUsersMoveHandles(int32_t maxNumberControllers, ModdingAPI::Exposed::System::Int32_array* primaryHandles) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, maxNumberControllers, primaryHandles);
  }
  int32_t PS4Input_MoveGetUsersMoveHandles(int32_t maxNumberControllers) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, maxNumberControllers);
  }
  intptr_t PS4Input_MoveGetControllerInputForTracking() {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2183B70))(this);
  }
  int32_t PS4Input_MoveSetLightSphere(int32_t id, int32_t index, int32_t red, int32_t green, int32_t blue) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, id, index, red, green, blue);
  }
  int32_t PS4Input_MoveSetVibration(int32_t id, int32_t index, int32_t motor) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, id, index, motor);
  }
  void GetDeviceVIDPIDs(ModdingAPI::Exposed::System::Collections::Generic::List_T_* vids, ModdingAPI::Exposed::System::Collections::Generic::List_T_* pids) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2183BE0))(this, vids, pids);
  }
  int32_t GetAndroidAPILevel() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x65F4B0))(this);
  }
  bool UnityUI_Graphic_GetRaycastTarget(Il2CppObject* graphic) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2183F60))(this, graphic);
  }
  void UnityUI_Graphic_SetRaycastTarget(Il2CppObject* graphic, bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, Il2CppObject*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21840F0))(this, graphic, value);
  }
  bool get_UnityInput_IsTouchPressureSupported() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x105E680))(this);
  }
  float UnityInput_GetTouchPressure(ModdingAPI::Exposed::UnityEngine::Touch touch) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, ModdingAPI::Exposed::UnityEngine::Touch)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2184280))(this, touch);
  }
  float UnityInput_GetTouchMaximumPossiblePressure(ModdingAPI::Exposed::UnityEngine::Touch touch) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, ModdingAPI::Exposed::UnityEngine::Touch)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2184290))(this, touch);
  }
  ModdingAPI::Exposed::Rewired::IControllerTemplate* CreateControllerTemplate(ModdingAPI::Exposed::System::Guid typeGuid, Il2CppObject* payload) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::IControllerTemplate*(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*, ModdingAPI::Exposed::System::Guid, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21842A0))(this, typeGuid, payload);
  }
  ModdingAPI::Exposed::System::Type_array* GetControllerTemplateTypes() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2184360))(this);
  }
  ModdingAPI::Exposed::System::Type_array* GetControllerTemplateInterfaceTypes() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::ExternalTools*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2184480))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Func_TResult_*> _getPlatformInitializerDelegate = __CppStaticProperty<ModdingAPI::Exposed::System::Func_TResult_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->_getPlatformInitializerDelegate; }
  );

  // Static methods:
  static inline ModdingAPI::Exposed::System::Func_TResult_* get_getPlatformInitializerDelegate() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Func_TResult_*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x2182CA0))();
  }
  static inline void set_getPlatformInitializerDelegate(ModdingAPI::Exposed::System::Func_TResult_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Func_TResult_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2182D20))(value);
  }
};
}