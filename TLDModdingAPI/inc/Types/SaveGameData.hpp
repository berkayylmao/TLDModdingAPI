// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.SaveGameOperationData.hpp"
#include "ModdingAPI::Exposed::SaveGameOperationData.hpp"


namespace ModdingAPI::Exposed {
struct __SaveGameData_Il2CppStaticFields {
  int32_t MAX_COMPRESS_DECOMPRESS_BUFFER_LEN;
  int32_t SAVE_OPERATION_TIMEOUT_SECONDS;
  ModdingAPI::Exposed::System::Byte_array* m_CompressDecompressBuffer;
  ModdingAPI::Exposed::SaveGameOperationData m_CurrentAsyncSaveGameOperation;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_PendingSaveGameOperations;
  System_String* m_LoadingPriorityPattern;
  System_String* s_ProfileFilename;
  System_String* s_SettingsFilename;
};

struct __SaveGameData_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __SaveGameData_Il2CppClass {
  Il2CppClass_1 _1;
  __SaveGameData_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __SaveGameData_Il2CppVtbl vtbl;
};

class SaveGameData {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C38CA0;
  static inline    __SaveGameData_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __SaveGameData_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__SaveGameData_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __SaveGameData_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SaveGameData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<int32_t> MAX_COMPRESS_DECOMPRESS_BUFFER_LEN = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->MAX_COMPRESS_DECOMPRESS_BUFFER_LEN; }
  );
  static inline __CppStaticProperty<int32_t> SAVE_OPERATION_TIMEOUT_SECONDS = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->SAVE_OPERATION_TIMEOUT_SECONDS; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*> m_CompressDecompressBuffer = __CppStaticProperty<ModdingAPI::Exposed::System::Byte_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_CompressDecompressBuffer; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::SaveGameOperationData> m_CurrentAsyncSaveGameOperation = __CppStaticProperty<ModdingAPI::Exposed::SaveGameOperationData>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_CurrentAsyncSaveGameOperation; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*> m_PendingSaveGameOperations = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_PendingSaveGameOperations; }
  );
  static inline __CppStaticProperty<System_String*> m_LoadingPriorityPattern = __CppStaticProperty<System_String*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_LoadingPriorityPattern; }
  );
  static inline __CppStaticProperty<System_String*> s_ProfileFilename = __CppStaticProperty<System_String*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_ProfileFilename; }
  );
  static inline __CppStaticProperty<System_String*> s_SettingsFilename = __CppStaticProperty<System_String*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_SettingsFilename; }
  );

  // Static methods:
  static inline void DeleteData(System_String* name) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AC7BB0))(name);
  }
  static inline void InitializeUserProfile() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AC7CD0))();
  }
  static inline void LoadAllSaves() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AC7CE0))();
  }
  static inline void LoadData(System_String* name) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AC7E00))(name);
  }
  static inline void SaveData(System_String* name, System_String* displayName, System_String* data) {
    reinterpret_cast<void(__fastcall*)(System_String*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AC7F20))(name, displayName, data);
  }
  static inline void SaveGameDataProcess() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AC8060))();
  }
  static inline bool IsSaving() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AC8530))();
  }
  static inline int32_t GetNumPendingOperations(int32_t opType, System_String* pattern) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AC8600))(opType, pattern);
  }
  static inline bool AsyncOperationInProgress(int32_t opType, System_String* pattern) {
    return reinterpret_cast<bool(__fastcall*)(int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AC87A0))(opType, pattern);
  }
  static inline void SetLoadingPriorityPattern(System_String* pattern) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AC8940))(pattern);
  }
  static inline int32_t DoSaveOperation(ModdingAPI::Exposed::SaveGameOperationData opData) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::SaveGameOperationData)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AC89F0))(opData);
  }
  static inline int32_t DoLoadOperation(ModdingAPI::Exposed::SaveGameOperationData opData) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::SaveGameOperationData)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AC8A10))(opData);
  }
  static inline int32_t DoLoadAllOperation(ModdingAPI::Exposed::SaveGameOperationData opData) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::SaveGameOperationData)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AC8A30))(opData);
  }
  static inline int32_t DoDeleteOperation(ModdingAPI::Exposed::SaveGameOperationData opData) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::SaveGameOperationData)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AC8A40))(opData);
  }
  static inline bool SaveGameOperationAlreadyPending(int32_t operationType, System_String* name) {
    return reinterpret_cast<bool(__fastcall*)(int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AC8A60))(operationType, name);
  }
  static inline ModdingAPI::Exposed::SaveGameOperationData GetNextPendingSaveGameOperation() {
    return reinterpret_cast<ModdingAPI::Exposed::SaveGameOperationData(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AC8BE0))();
  }
  static inline void CullPendingSaveGameOperations(ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_Whitelist) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AC8ED0))(m_Whitelist);
  }
  static inline void MaybeDisplayErrorNotification(ModdingAPI::Exposed::SaveGameOperationData opData, int32_t returnValue) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::SaveGameOperationData, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AC9160))(opData, returnValue);
  }
  static inline void UpdateCurrentAsyncOperationTime() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AC9500))();
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1AC9630))();
  }
};
}