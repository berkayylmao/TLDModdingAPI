// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Bounds.hpp"


namespace ModdingAPI::Exposed::UnityEngine {
struct __Animation_Il2CppStaticFields {
};

struct __Animation_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_GetEnumerator;
};

struct __Animation_Il2CppClass {
  Il2CppClass_1 _1;
  __Animation_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Animation_Il2CppVtbl vtbl;
};

class Animation {
public:
  // Il2Cpp fields:
  __Animation_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x389390))(this);
  }
  ModdingAPI::Exposed::UnityEngine::AnimationClip* get_clip() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AnimationClip*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB1E0))(this);
  }
  void set_clip(ModdingAPI::Exposed::UnityEngine::AnimationClip* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, ModdingAPI::Exposed::UnityEngine::AnimationClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB230))(this, value);
  }
  bool get_playAutomatically() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB290))(this);
  }
  void set_playAutomatically(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB2E0))(this, value);
  }
  int32_t get_wrapMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB340))(this);
  }
  void set_wrapMode(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB390))(this, value);
  }
  void Stop() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB3F0))(this);
  }
  void Stop(System_String* name) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB440))(this, name);
  }
  void Internal_StopByName(System_String* name) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB440))(this, name);
  }
  void Rewind(System_String* name) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB4A0))(this, name);
  }
  void Internal_RewindByName(System_String* name) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB4A0))(this, name);
  }
  void Rewind() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB500))(this);
  }
  void Sample() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB550))(this);
  }
  bool get_isPlaying() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB5A0))(this);
  }
  bool IsPlaying(System_String* name) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB5F0))(this, name);
  }
  ModdingAPI::Exposed::UnityEngine::AnimationState* get_Item(System_String* name) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AnimationState*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB650))(this, name);
  }
  bool Play() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB6B0))(this);
  }
  bool Play(int32_t mode) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB710))(this, mode);
  }
  bool Play(System_String* animation, int32_t mode) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB770))(this, animation, mode);
  }
  bool Play(System_String* animation) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB7E0))(this, animation);
  }
  void CrossFade(System_String* animation, float fadeLength, int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB7F0))(this, animation, fadeLength, mode);
  }
  void CrossFade(System_String* animation, float fadeLength) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB870))(this, animation, fadeLength);
  }
  void CrossFade(System_String* animation) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB890))(this, animation);
  }
  void Blend(System_String* animation, float targetWeight, float fadeLength) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB8C0))(this, animation, targetWeight, fadeLength);
  }
  void Blend(System_String* animation, float targetWeight) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB940))(this, animation, targetWeight);
  }
  void Blend(System_String* animation) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB960))(this, animation);
  }
  ModdingAPI::Exposed::UnityEngine::AnimationState* CrossFadeQueued(System_String* animation, float fadeLength, int32_t queue, int32_t mode) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AnimationState*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*, float, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB990))(this, animation, fadeLength, queue, mode);
  }
  ModdingAPI::Exposed::UnityEngine::AnimationState* CrossFadeQueued(System_String* animation, float fadeLength, int32_t queue) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AnimationState*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EBA20))(this, animation, fadeLength, queue);
  }
  ModdingAPI::Exposed::UnityEngine::AnimationState* CrossFadeQueued(System_String* animation, float fadeLength) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AnimationState*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EBA40))(this, animation, fadeLength);
  }
  ModdingAPI::Exposed::UnityEngine::AnimationState* CrossFadeQueued(System_String* animation) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AnimationState*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EBA60))(this, animation);
  }
  ModdingAPI::Exposed::UnityEngine::AnimationState* PlayQueued(System_String* animation, int32_t queue, int32_t mode) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AnimationState*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EBA90))(this, animation, queue, mode);
  }
  ModdingAPI::Exposed::UnityEngine::AnimationState* PlayQueued(System_String* animation, int32_t queue) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AnimationState*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EBB10))(this, animation, queue);
  }
  ModdingAPI::Exposed::UnityEngine::AnimationState* PlayQueued(System_String* animation) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AnimationState*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EBB30))(this, animation);
  }
  void AddClip(ModdingAPI::Exposed::UnityEngine::AnimationClip* clip, System_String* newName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, ModdingAPI::Exposed::UnityEngine::AnimationClip*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EBB50))(this, clip, newName);
  }
  void AddClip(ModdingAPI::Exposed::UnityEngine::AnimationClip* clip, System_String* newName, int32_t firstFrame, int32_t lastFrame, bool addLoopFrame) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, ModdingAPI::Exposed::UnityEngine::AnimationClip*, System_String*, int32_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EBBE0))(this, clip, newName, firstFrame, lastFrame, addLoopFrame);
  }
  void AddClip(ModdingAPI::Exposed::UnityEngine::AnimationClip* clip, System_String* newName, int32_t firstFrame, int32_t lastFrame) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, ModdingAPI::Exposed::UnityEngine::AnimationClip*, System_String*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EBC70))(this, clip, newName, firstFrame, lastFrame);
  }
  void RemoveClip(ModdingAPI::Exposed::UnityEngine::AnimationClip* clip) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, ModdingAPI::Exposed::UnityEngine::AnimationClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EBD00))(this, clip);
  }
  void RemoveClip(System_String* clipName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EBD60))(this, clipName);
  }
  int32_t GetClipCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EBDC0))(this);
  }
  void RemoveClip2(System_String* clipName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EBD60))(this, clipName);
  }
  bool PlayDefaultAnimation(int32_t mode) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB710))(this, mode);
  }
  bool Play(int32_t mode) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB710))(this, mode);
  }
  bool Play(System_String* animation, int32_t mode) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EBE10))(this, animation, mode);
  }
  void SyncLayer(int32_t layer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EBE20))(this, layer);
  }
  ModdingAPI::Exposed::System::Collections::IEnumerator* GetEnumerator() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IEnumerator*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EBE80))(this);
  }
  ModdingAPI::Exposed::UnityEngine::AnimationState* GetState(System_String* name) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AnimationState*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB650))(this, name);
  }
  ModdingAPI::Exposed::UnityEngine::AnimationState* GetStateAtIndex(int32_t index) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AnimationState*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EBFD0))(this, index);
  }
  int32_t GetStateCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EC030))(this);
  }
  ModdingAPI::Exposed::UnityEngine::AnimationClip* GetClip(System_String* name) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AnimationClip*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EC080))(this, name);
  }
  bool get_animatePhysics() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EC150))(this);
  }
  void set_animatePhysics(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EC1A0))(this, value);
  }
  bool get_animateOnlyIfVisible() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EC200))(this);
  }
  void set_animateOnlyIfVisible(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EC250))(this, value);
  }
  int32_t get_cullingType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EC2B0))(this);
  }
  void set_cullingType(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EC300))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Bounds get_localBounds() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Bounds(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EC360))(this);
  }
  void set_localBounds(ModdingAPI::Exposed::UnityEngine::Bounds value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, ModdingAPI::Exposed::UnityEngine::Bounds)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EC3F0))(this, value);
  }
  void INTERNAL_get_localBounds(ModdingAPI::Exposed::UnityEngine::Bounds value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, ModdingAPI::Exposed::UnityEngine::Bounds)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EC450))(this, value);
  }
  void INTERNAL_set_localBounds(ModdingAPI::Exposed::UnityEngine::Bounds value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, ModdingAPI::Exposed::UnityEngine::Bounds)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EC4B0))(this, value);
  }

  // Static methods:
  static inline void INTERNAL_CALL_Stop(ModdingAPI::Exposed::UnityEngine::Animation* self) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB3F0))(self);
  }
  static inline void INTERNAL_CALL_Rewind(ModdingAPI::Exposed::UnityEngine::Animation* self) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB500))(self);
  }
  static inline void INTERNAL_CALL_Sample(ModdingAPI::Exposed::UnityEngine::Animation* self) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EB550))(self);
  }
  static inline void INTERNAL_CALL_SyncLayer(ModdingAPI::Exposed::UnityEngine::Animation* self, int32_t layer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Animation*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x14EBE20))(self, layer);
  }
};
}