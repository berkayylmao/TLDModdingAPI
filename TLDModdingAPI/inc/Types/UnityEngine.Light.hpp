// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Color.hpp"
#include "ModdingAPI.Exposed.UnityEngine.LightBakingOutput.hpp"


namespace ModdingAPI::Exposed::UnityEngine {
struct __Light_Il2CppStaticFields {
};

struct __Light_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __Light_Il2CppClass {
  Il2CppClass_1 _1;
  __Light_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Light_Il2CppVtbl vtbl;
};

class Light {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C62A28;
  static inline    Light* _pStaticObjectInstance = nullptr;

public:
// Singleton object getter:
  static inline Light* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (Light**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

  // Il2Cpp fields:
  __Light_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  int32_t m_BakedIndex;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x389390))(this);
  }
  int32_t get_type() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062160))(this);
  }
  void set_type(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10621B0))(this, value);
  }
  float get_spotAngle() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062210))(this);
  }
  void set_spotAngle(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062260))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Color get_color() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Color(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10622C0))(this);
  }
  void set_color(ModdingAPI::Exposed::UnityEngine::Color value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, ModdingAPI::Exposed::UnityEngine::Color)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062340))(this, value);
  }
  float get_colorTemperature() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10623A0))(this);
  }
  void set_colorTemperature(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10623F0))(this, value);
  }
  float get_intensity() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062450))(this);
  }
  void set_intensity(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10624A0))(this, value);
  }
  float get_bounceIntensity() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062500))(this);
  }
  void set_bounceIntensity(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062550))(this, value);
  }
  int32_t get_shadowCustomResolution() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10625B0))(this);
  }
  void set_shadowCustomResolution(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062600))(this, value);
  }
  float get_shadowBias() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062660))(this);
  }
  void set_shadowBias(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10626B0))(this, value);
  }
  float get_shadowNormalBias() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062710))(this);
  }
  void set_shadowNormalBias(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062760))(this, value);
  }
  float get_shadowNearPlane() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10627C0))(this);
  }
  void set_shadowNearPlane(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062810))(this, value);
  }
  float get_range() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062870))(this);
  }
  void set_range(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10628C0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Flare* get_flare() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Flare*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062920))(this);
  }
  void set_flare(ModdingAPI::Exposed::UnityEngine::Flare* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, ModdingAPI::Exposed::UnityEngine::Flare*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062970))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::LightBakingOutput get_bakingOutput() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::LightBakingOutput(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10629D0))(this);
  }
  void set_bakingOutput(ModdingAPI::Exposed::UnityEngine::LightBakingOutput value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, ModdingAPI::Exposed::UnityEngine::LightBakingOutput)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062A60))(this, value);
  }
  int32_t get_cullingMask() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062AC0))(this);
  }
  void set_cullingMask(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062B10))(this, value);
  }
  int32_t get_lightShadowCasterMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062B70))(this);
  }
  void set_lightShadowCasterMode(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062BC0))(this, value);
  }
  void Reset() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062C20))(this);
  }
  int32_t get_shadows() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062C70))(this);
  }
  void set_shadows(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062CC0))(this, value);
  }
  float get_shadowStrength() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062D20))(this);
  }
  void set_shadowStrength(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062D70))(this, value);
  }
  int32_t get_shadowResolution() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062DD0))(this);
  }
  void set_shadowResolution(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062E20))(this, value);
  }
  float get_shadowSoftness() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062E80))(this);
  }
  void set_shadowSoftness(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, value);
  }
  float get_shadowSoftnessFade() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x67D910))(this);
  }
  void set_shadowSoftnessFade(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, value);
  }
  ModdingAPI::Exposed::System::Single_array* get_layerShadowCullDistances() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Single_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062E90))(this);
  }
  void set_layerShadowCullDistances(ModdingAPI::Exposed::System::Single_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, ModdingAPI::Exposed::System::Single_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062EE0))(this, value);
  }
  float get_cookieSize() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062F40))(this);
  }
  void set_cookieSize(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062F90))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Texture* get_cookie() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Texture*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1062FF0))(this);
  }
  void set_cookie(ModdingAPI::Exposed::UnityEngine::Texture* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, ModdingAPI::Exposed::UnityEngine::Texture*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1063040))(this, value);
  }
  int32_t get_renderMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10630A0))(this);
  }
  void set_renderMode(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10630F0))(this, value);
  }
  int32_t get_bakedIndex() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAE2A00))(this);
  }
  void set_bakedIndex(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311090))(this, value);
  }
  void SetFalloffTable(ModdingAPI::Exposed::System::Single_array* input) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, ModdingAPI::Exposed::System::Single_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1063150))(this, input);
  }
  void AddCommandBuffer(int32_t evt, ModdingAPI::Exposed::UnityEngine::Rendering::CommandBuffer* buffer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, int32_t, ModdingAPI::Exposed::UnityEngine::Rendering::CommandBuffer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1063250))(this, evt, buffer);
  }
  void AddCommandBuffer(int32_t evt, ModdingAPI::Exposed::UnityEngine::Rendering::CommandBuffer* buffer, int32_t shadowPassMask) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, int32_t, ModdingAPI::Exposed::UnityEngine::Rendering::CommandBuffer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10632D0))(this, evt, buffer, shadowPassMask);
  }
  void AddCommandBufferAsync(int32_t evt, ModdingAPI::Exposed::UnityEngine::Rendering::CommandBuffer* buffer, int32_t queueType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, int32_t, ModdingAPI::Exposed::UnityEngine::Rendering::CommandBuffer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1063350))(this, evt, buffer, queueType);
  }
  void AddCommandBufferAsync(int32_t evt, ModdingAPI::Exposed::UnityEngine::Rendering::CommandBuffer* buffer, int32_t shadowPassMask, int32_t queueType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, int32_t, ModdingAPI::Exposed::UnityEngine::Rendering::CommandBuffer*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10633E0))(this, evt, buffer, shadowPassMask, queueType);
  }
  void RemoveCommandBuffer(int32_t evt, ModdingAPI::Exposed::UnityEngine::Rendering::CommandBuffer* buffer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, int32_t, ModdingAPI::Exposed::UnityEngine::Rendering::CommandBuffer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1063460))(this, evt, buffer);
  }
  void RemoveCommandBuffers(int32_t evt) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10634D0))(this, evt);
  }
  void RemoveAllCommandBuffers() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1063530))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Rendering::CommandBuffer_array* GetCommandBuffers(int32_t evt) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Rendering::CommandBuffer_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1063580))(this, evt);
  }
  int32_t get_commandBufferCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10635E0))(this);
  }
  float get_shadowConstantBias() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE3D1D0))(this);
  }
  void set_shadowConstantBias(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, value);
  }
  float get_shadowObjectSizeBias() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE3D1D0))(this);
  }
  void set_shadowObjectSizeBias(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, value);
  }
  bool get_attenuate() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x39B730))(this);
  }
  void set_attenuate(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, value);
  }
  void get_color_Injected(ModdingAPI::Exposed::UnityEngine::Color ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, ModdingAPI::Exposed::UnityEngine::Color)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1063730))(this, ret);
  }
  void set_color_Injected(ModdingAPI::Exposed::UnityEngine::Color value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, ModdingAPI::Exposed::UnityEngine::Color)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1063790))(this, value);
  }
  void get_bakingOutput_Injected(ModdingAPI::Exposed::UnityEngine::LightBakingOutput ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, ModdingAPI::Exposed::UnityEngine::LightBakingOutput)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10637F0))(this, ret);
  }
  void set_bakingOutput_Injected(ModdingAPI::Exposed::UnityEngine::LightBakingOutput value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Light*, ModdingAPI::Exposed::UnityEngine::LightBakingOutput)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1063850))(this, value);
  }

  // Static methods:
  static inline void SetAllLightsFalloffToInverseSquared() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x10631B0))();
  }
  static inline void SetAllLightsFalloffToUnityLegacy() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1063200))();
  }
  static inline int32_t get_pixelLightCount() {
    return reinterpret_cast<int32_t(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1063630))();
  }
  static inline void set_pixelLightCount(int32_t value) {
    reinterpret_cast<void(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1063680))(value);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Light_array* GetLights(int32_t type, int32_t layer) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Light_array*(__fastcall*)(int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10636D0))(type, layer);
  }
};
}