// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Nullable_T_.hpp"


namespace ModdingAPI::Exposed::System::Xml::Serialization {
struct __XmlAttributes_Il2CppStaticFields {
};

struct __XmlAttributes_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __XmlAttributes_Il2CppClass {
  Il2CppClass_1 _1;
  __XmlAttributes_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __XmlAttributes_Il2CppVtbl vtbl;
};

class XmlAttributes {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C2A110;
  static inline    __XmlAttributes_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __XmlAttributes_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__XmlAttributes_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __XmlAttributes_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::System::Xml::Serialization::XmlAnyAttributeAttribute* xmlAnyAttribute;
  ModdingAPI::Exposed::System::Xml::Serialization::XmlAnyElementAttributes* xmlAnyElements;
  ModdingAPI::Exposed::System::Xml::Serialization::XmlArrayAttribute* xmlArray;
  ModdingAPI::Exposed::System::Xml::Serialization::XmlArrayItemAttributes* xmlArrayItems;
  ModdingAPI::Exposed::System::Xml::Serialization::XmlAttributeAttribute* xmlAttribute;
  ModdingAPI::Exposed::System::Xml::Serialization::XmlChoiceIdentifierAttribute* xmlChoiceIdentifier;
  Il2CppObject* xmlDefaultValue;
  ModdingAPI::Exposed::System::Xml::Serialization::XmlElementAttributes* xmlElements;
  ModdingAPI::Exposed::System::Xml::Serialization::XmlEnumAttribute* xmlEnum;
  bool xmlIgnore;
  bool xmlns;
  ModdingAPI::Exposed::System::Xml::Serialization::XmlRootAttribute* xmlRoot;
  ModdingAPI::Exposed::System::Xml::Serialization::XmlTextAttribute* xmlText;
  ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeAttribute* xmlType;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlAttributes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8B19D0))(this);
  }
  void ::ctor(ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider* provider) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlAttributes*, ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8B1CE0))(this, provider);
  }
  ModdingAPI::Exposed::System::Xml::Serialization::XmlAnyAttributeAttribute* get_XmlAnyAttribute() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Serialization::XmlAnyAttributeAttribute*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlAttributes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311320))(this);
  }
  ModdingAPI::Exposed::System::Xml::Serialization::XmlAnyElementAttributes* get_XmlAnyElements() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Serialization::XmlAnyElementAttributes*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlAttributes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335360))(this);
  }
  ModdingAPI::Exposed::System::Xml::Serialization::XmlArrayAttribute* get_XmlArray() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Serialization::XmlArrayAttribute*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlAttributes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110A0))(this);
  }
  ModdingAPI::Exposed::System::Xml::Serialization::XmlArrayItemAttributes* get_XmlArrayItems() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Serialization::XmlArrayItemAttributes*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlAttributes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110B0))(this);
  }
  ModdingAPI::Exposed::System::Xml::Serialization::XmlAttributeAttribute* get_XmlAttribute() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Serialization::XmlAttributeAttribute*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlAttributes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335370))(this);
  }
  ModdingAPI::Exposed::System::Xml::Serialization::XmlChoiceIdentifierAttribute* get_XmlChoiceIdentifier() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Serialization::XmlChoiceIdentifierAttribute*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlAttributes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319970))(this);
  }
  Il2CppObject* get_XmlDefaultValue() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlAttributes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319960))(this);
  }
  ModdingAPI::Exposed::System::Xml::Serialization::XmlElementAttributes* get_XmlElements() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Serialization::XmlElementAttributes*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlAttributes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319980))(this);
  }
  bool get_XmlIgnore() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlAttributes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3199B0))(this);
  }
  bool get_Xmlns() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlAttributes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A470))(this);
  }
  ModdingAPI::Exposed::System::Xml::Serialization::XmlRootAttribute* get_XmlRoot() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Serialization::XmlRootAttribute*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlAttributes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3199C0))(this);
  }
  ModdingAPI::Exposed::System::Xml::Serialization::XmlTextAttribute* get_XmlText() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Serialization::XmlTextAttribute*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlAttributes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319930))(this);
  }
  ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeAttribute* get_XmlType() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeAttribute*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlAttributes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319940))(this);
  }
  ModdingAPI::Exposed::System::Nullable_T_ get_Order() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Nullable_T_(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlAttributes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8B2560))(this);
  }
  int32_t get_SortableOrder() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlAttributes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8B26C0))(this);
  }
};
}