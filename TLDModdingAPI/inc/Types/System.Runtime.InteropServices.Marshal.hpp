// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System::Runtime::InteropServices {
struct __Marshal_Il2CppStaticFields {
  int32_t SystemMaxDBCSCharSize;
  int32_t SystemDefaultCharSize;
};

struct __Marshal_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __Marshal_Il2CppClass {
  Il2CppClass_1 _1;
  __Marshal_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Marshal_Il2CppVtbl vtbl;
};

class Marshal {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C6B2B8;
  static inline    __Marshal_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __Marshal_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__Marshal_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __Marshal_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Static fields:
  static inline __CppStaticProperty<int32_t> SystemMaxDBCSCharSize = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->SystemMaxDBCSCharSize; }
  );
  static inline __CppStaticProperty<int32_t> SystemDefaultCharSize = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->SystemDefaultCharSize; }
  );

  // Static methods:
  static inline intptr_t AllocCoTaskMem(int32_t cb) {
    return reinterpret_cast<intptr_t(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x737DB0))(cb);
  }
  static inline intptr_t AllocHGlobal(intptr_t cb) {
    return reinterpret_cast<intptr_t(__fastcall*)(intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x737DC0))(cb);
  }
  static inline intptr_t AllocHGlobal(int32_t cb) {
    return reinterpret_cast<intptr_t(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x737DD0))(cb);
  }
  static inline void copy_to_unmanaged(ModdingAPI::Exposed::System::Array* source, int32_t startIndex, intptr_t destination, int32_t length) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t, intptr_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x737E70))(source, startIndex, destination, length);
  }
  static inline void copy_from_unmanaged(intptr_t source, int32_t startIndex, ModdingAPI::Exposed::System::Array* destination, int32_t length) {
    reinterpret_cast<void(__fastcall*)(intptr_t, int32_t, ModdingAPI::Exposed::System::Array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x737EA0))(source, startIndex, destination, length);
  }
  static inline void Copy(ModdingAPI::Exposed::System::Byte_array* source, int32_t startIndex, intptr_t destination, int32_t length) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Byte_array*, int32_t, intptr_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x737EE0))(source, startIndex, destination, length);
  }
  static inline void Copy(ModdingAPI::Exposed::System::Char_array* source, int32_t startIndex, intptr_t destination, int32_t length) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Char_array*, int32_t, intptr_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x737FC0))(source, startIndex, destination, length);
  }
  static inline void Copy(ModdingAPI::Exposed::System::IntPtr_array* source, int32_t startIndex, intptr_t destination, int32_t length) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::IntPtr_array*, int32_t, intptr_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7380A0))(source, startIndex, destination, length);
  }
  static inline void Copy(intptr_t source, ModdingAPI::Exposed::System::Byte_array* destination, int32_t startIndex, int32_t length) {
    reinterpret_cast<void(__fastcall*)(intptr_t, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738180))(source, destination, startIndex, length);
  }
  static inline void Copy(intptr_t source, ModdingAPI::Exposed::System::Char_array* destination, int32_t startIndex, int32_t length) {
    reinterpret_cast<void(__fastcall*)(intptr_t, ModdingAPI::Exposed::System::Char_array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738260))(source, destination, startIndex, length);
  }
  static inline void Copy(intptr_t source, ModdingAPI::Exposed::System::Int32_array* destination, int32_t startIndex, int32_t length) {
    reinterpret_cast<void(__fastcall*)(intptr_t, ModdingAPI::Exposed::System::Int32_array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738340))(source, destination, startIndex, length);
  }
  static inline void FreeBSTR(intptr_t ptr) {
    reinterpret_cast<void(__fastcall*)(intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738420))(ptr);
  }
  static inline void FreeHGlobal(intptr_t hglobal) {
    reinterpret_cast<void(__fastcall*)(intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738430))(hglobal);
  }
  static inline void ClearBSTR(intptr_t ptr) {
    reinterpret_cast<void(__fastcall*)(intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738440))(ptr);
  }
  static inline void ZeroFreeBSTR(intptr_t s) {
    reinterpret_cast<void(__fastcall*)(intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738550))(s);
  }
  static inline void ClearUnicode(intptr_t ptr) {
    reinterpret_cast<void(__fastcall*)(intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7386E0))(ptr);
  }
  static inline void ZeroFreeGlobalAllocUnicode(intptr_t s) {
    reinterpret_cast<void(__fastcall*)(intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738820))(s);
  }
  static inline int32_t GetHRForException(ModdingAPI::Exposed::System::Exception* e) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Exception*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7389F0))(e);
  }
  static inline int32_t GetLastWin32Error() {
    return reinterpret_cast<int32_t(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x738A00))();
  }
  static inline intptr_t OffsetOf(ModdingAPI::Exposed::System::Type* t, System_String* fieldName) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::System::Type*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738A60))(t, fieldName);
  }
  static inline System_String* PtrToStringAnsi(intptr_t ptr) {
    return reinterpret_cast<System_String*(__fastcall*)(intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738A70))(ptr);
  }
  static inline System_String* PtrToStringUni(intptr_t ptr) {
    return reinterpret_cast<System_String*(__fastcall*)(intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738A90))(ptr);
  }
  static inline System_String* PtrToStringUni(intptr_t ptr, int32_t len) {
    return reinterpret_cast<System_String*(__fastcall*)(intptr_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738B00))(ptr, len);
  }
  static inline Il2CppObject* PtrToStructure(intptr_t ptr, ModdingAPI::Exposed::System::Type* structureType) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(intptr_t, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738B60))(ptr, structureType);
  }
  static inline uint8_t ReadByte(intptr_t ptr, int32_t ofs) {
    return reinterpret_cast<uint8_t(__fastcall*)(intptr_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738B70))(ptr, ofs);
  }
  static inline int16_t ReadInt16(intptr_t ptr) {
    return reinterpret_cast<int16_t(__fastcall*)(intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738B80))(ptr);
  }
  static inline int16_t ReadInt16(intptr_t ptr, int32_t ofs) {
    return reinterpret_cast<int16_t(__fastcall*)(intptr_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738BC0))(ptr, ofs);
  }
  static inline int32_t ReadInt32(intptr_t ptr) {
    return reinterpret_cast<int32_t(__fastcall*)(intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738C00))(ptr);
  }
  static inline int32_t ReadInt32(intptr_t ptr, int32_t ofs) {
    return reinterpret_cast<int32_t(__fastcall*)(intptr_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738C40))(ptr, ofs);
  }
  static inline int64_t ReadInt64(intptr_t ptr) {
    return reinterpret_cast<int64_t(__fastcall*)(intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738C80))(ptr);
  }
  static inline int64_t ReadInt64(intptr_t ptr, int32_t ofs) {
    return reinterpret_cast<int64_t(__fastcall*)(intptr_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738CC0))(ptr, ofs);
  }
  static inline intptr_t ReadIntPtr(intptr_t ptr) {
    return reinterpret_cast<intptr_t(__fastcall*)(intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738D00))(ptr);
  }
  static inline intptr_t ReadIntPtr(intptr_t ptr, int32_t ofs) {
    return reinterpret_cast<intptr_t(__fastcall*)(intptr_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738DD0))(ptr, ofs);
  }
  static inline int32_t ReleaseInternal(intptr_t pUnk) {
    return reinterpret_cast<int32_t(__fastcall*)(intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738EB0))(pUnk);
  }
  static inline int32_t Release(intptr_t pUnk) {
    return reinterpret_cast<int32_t(__fastcall*)(intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738EC0))(pUnk);
  }
  static inline int32_t SizeOf(Il2CppObject* structure) {
    return reinterpret_cast<int32_t(__fastcall*)(Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x738FA0))(structure);
  }
  static inline int32_t SizeOf(ModdingAPI::Exposed::System::Type* t) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x739130))(t);
  }
  static inline intptr_t SecureStringToBSTR(ModdingAPI::Exposed::System::Security::SecureString* s) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::System::Security::SecureString*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x739220))(s);
  }
  static inline intptr_t SecureStringToCoTaskMemUnicode(ModdingAPI::Exposed::System::Security::SecureString* s) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::System::Security::SecureString*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7393C0))(s);
  }
  static inline intptr_t SecureStringToGlobalAllocUnicode(ModdingAPI::Exposed::System::Security::SecureString* s) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::System::Security::SecureString*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7396D0))(s);
  }
  static inline void StructureToPtr(Il2CppObject* structure, intptr_t ptr, bool fDeleteOld) {
    reinterpret_cast<void(__fastcall*)(Il2CppObject*, intptr_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7397A0))(structure, ptr, fDeleteOld);
  }
  static inline intptr_t BufferToBSTR(ModdingAPI::Exposed::System::Array* ptr, int32_t slen) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6DF1D0))(ptr, slen);
  }
  static inline intptr_t UnsafeAddrOfPinnedArrayElement(ModdingAPI::Exposed::System::Array* arr, int32_t index) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7398C0))(arr, index);
  }
  static inline void WriteByte(intptr_t ptr, uint8_t val) {
    reinterpret_cast<void(__fastcall*)(intptr_t, uint8_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7398E0))(ptr, val);
  }
  static inline void WriteByte(intptr_t ptr, int32_t ofs, uint8_t val) {
    reinterpret_cast<void(__fastcall*)(intptr_t, int32_t, uint8_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7398F0))(ptr, ofs, val);
  }
  static inline void WriteInt16(intptr_t ptr, int16_t val) {
    reinterpret_cast<void(__fastcall*)(intptr_t, int16_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x739900))(ptr, val);
  }
  static inline void WriteInt16(intptr_t ptr, int32_t ofs, int16_t val) {
    reinterpret_cast<void(__fastcall*)(intptr_t, int32_t, int16_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x739930))(ptr, ofs, val);
  }
  static inline void WriteInt32(intptr_t ptr, int32_t val) {
    reinterpret_cast<void(__fastcall*)(intptr_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x739970))(ptr, val);
  }
  static inline void WriteInt32(intptr_t ptr, int32_t ofs, int32_t val) {
    reinterpret_cast<void(__fastcall*)(intptr_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7399A0))(ptr, ofs, val);
  }
  static inline void WriteInt64(intptr_t ptr, int64_t val) {
    reinterpret_cast<void(__fastcall*)(intptr_t, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7399E0))(ptr, val);
  }
  static inline void WriteInt64(intptr_t ptr, int32_t ofs, int64_t val) {
    reinterpret_cast<void(__fastcall*)(intptr_t, int32_t, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x739A10))(ptr, ofs, val);
  }
  static inline void WriteIntPtr(intptr_t ptr, intptr_t val) {
    reinterpret_cast<void(__fastcall*)(intptr_t, intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x739A50))(ptr, val);
  }
  static inline intptr_t GetFunctionPointerForDelegateInternal(ModdingAPI::Exposed::System::Delegate* d) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::System::Delegate*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x739B20))(d);
  }
  static inline intptr_t GetFunctionPointerForDelegate(ModdingAPI::Exposed::System::Delegate* d) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::System::Delegate*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x739B30))(d);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x739C00))();
  }
};
}