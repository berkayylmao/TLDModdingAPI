// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Runtime.Serialization.StreamingContext.hpp"


namespace ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary {
struct __ObjectReader_Il2CppStaticFields {
};

struct __ObjectReader_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __ObjectReader_Il2CppClass {
  Il2CppClass_1 _1;
  __ObjectReader_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __ObjectReader_Il2CppVtbl vtbl;
};

class ObjectReader {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C56D28;
  static inline    __ObjectReader_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __ObjectReader_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__ObjectReader_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __ObjectReader_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::System::IO::Stream* m_stream;
  ModdingAPI::Exposed::System::Runtime::Serialization::ISurrogateSelector* m_surrogates;
  ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext m_context;
  ModdingAPI::Exposed::System::Runtime::Serialization::ObjectManager* m_objectManager;
  ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::InternalFE* formatterEnums;
  ModdingAPI::Exposed::System::Runtime::Serialization::SerializationBinder* m_binder;
  int64_t topId;
  bool bSimpleAssembly;
  Il2CppObject* handlerObject;
  Il2CppObject* m_topObject;
  ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::Header_array* headers;
  ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::HeaderHandler* handler;
  ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::SerObjectInfoInit* serObjectInfoInit;
  ModdingAPI::Exposed::System::Runtime::Serialization::IFormatterConverter* m_formatterConverter;
  ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::SerStack* stack;
  ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::SerStack* valueFixupStack;
  ModdingAPI::Exposed::System::Object_array* crossAppDomainArray;
  bool bFullDeserialization;
  bool bOldFormatDetected;
  ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::IntSizedArray* valTypeObjectIdTable;
  ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::NameCache* typeCache;
  System_String* previousAssemblyString;
  System_String* previousName;
  ModdingAPI::Exposed::System::Type* previousType;

  // Member methods:
  ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::SerStack* get_ValueFixupStack() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::SerStack*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x96EF10))(this);
  }
  Il2CppObject* get_TopObject() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3199C0))(this);
  }
  void set_TopObject(Il2CppObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x96F080))(this, value);
  }
  void ::ctor(ModdingAPI::Exposed::System::IO::Stream* stream, ModdingAPI::Exposed::System::Runtime::Serialization::ISurrogateSelector* selector, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::InternalFE* formatterEnums, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationBinder* binder) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, ModdingAPI::Exposed::System::IO::Stream*, ModdingAPI::Exposed::System::Runtime::Serialization::ISurrogateSelector*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::InternalFE*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationBinder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x96F0A0))(this, stream, selector, context, formatterEnums, binder);
  }
  Il2CppObject* Deserialize(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::HeaderHandler* handler, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::__BinaryParser* serParser, bool fCheck) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::HeaderHandler*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::__BinaryParser*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x96F270))(this, handler, serParser, fCheck);
  }
  bool HasSurrogate(ModdingAPI::Exposed::System::Type* t) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x96F7B0))(this, t);
  }
  void CheckSerializable(ModdingAPI::Exposed::System::Type* t) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x96F900))(this, t);
  }
  void InitFullDeserialization() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x96FAA0))(this);
  }
  Il2CppObject* CrossAppDomainArray(int32_t index) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x96FE20))(this, index);
  }
  ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ReadObjectInfo* CreateReadObjectInfo(ModdingAPI::Exposed::System::Type* objectType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ReadObjectInfo*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x96FE60))(this, objectType);
  }
  ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ReadObjectInfo* CreateReadObjectInfo(ModdingAPI::Exposed::System::Type* objectType, ModdingAPI::Exposed::System::String_array* memberNames, ModdingAPI::Exposed::System::Type_array* memberTypes) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ReadObjectInfo*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::String_array*, ModdingAPI::Exposed::System::Type_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x96FF20))(this, objectType, memberNames, memberTypes);
  }
  void Parse(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x970010))(this, pr);
  }
  void ParseError(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord* processing, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord* onStack) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9702E0))(this, processing, onStack);
  }
  void ParseSerializedStreamHeader(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9705E0))(this, pr);
  }
  void ParseSerializedStreamHeaderEnd(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x970610))(this, pr);
  }
  void ParseObject(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x970640))(this, pr);
  }
  void ParseObjectEnd(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x970B30))(this, pr);
  }
  void ParseArray(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x970F40))(this, pr);
  }
  void NextRectangleMap(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9719E0))(this, pr);
  }
  void ParseArrayMember(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x971B20))(this, pr);
  }
  void ParseArrayMemberEnd(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x972970))(this, pr);
  }
  void ParseMember(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9729A0))(this, pr);
  }
  void ParseMemberEnd(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9732F0))(this, pr);
  }
  void ParseString(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord* parentPr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9733E0))(this, pr, parentPr);
  }
  void RegisterObject(Il2CppObject* obj, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord* objectPr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, Il2CppObject*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x973430))(this, obj, pr, objectPr);
  }
  void RegisterObject(Il2CppObject* obj, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord* pr, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord* objectPr, bool bIsString) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, Il2CppObject*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ParseRecord*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x973450))(this, obj, pr, objectPr, bIsString);
  }
  int64_t GetId(int64_t objectId) {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9735E0))(this, objectId);
  }
  ModdingAPI::Exposed::System::Type* Bind(System_String* assemblyString, System_String* typeString) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x973990))(this, assemblyString, typeString);
  }
  ModdingAPI::Exposed::System::Type* FastBindToType(System_String* assemblyName, System_String* typeName) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9739F0))(this, assemblyName, typeName);
  }
  ModdingAPI::Exposed::System::Type* GetType(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo* assemblyInfo, System_String* name) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::ObjectReader*, ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x974220))(this, assemblyInfo, name);
  }

  // Static methods:
  static inline ModdingAPI::Exposed::System::Reflection::Assembly* ResolveSimpleAssemblyName(ModdingAPI::Exposed::System::Reflection::AssemblyName* assemblyName) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Reflection::Assembly*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::AssemblyName*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x973E00))(assemblyName);
  }
  static inline void GetSimplyNamedTypeFromAssembly(ModdingAPI::Exposed::System::Reflection::Assembly* assm, System_String* typeName, ModdingAPI::Exposed::System::Type* type) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Reflection::Assembly*, System_String*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x973E90))(assm, typeName, type);
  }
  static inline void CheckTypeForwardedTo(ModdingAPI::Exposed::System::Reflection::Assembly* sourceAssembly, ModdingAPI::Exposed::System::Reflection::Assembly* destAssembly, ModdingAPI::Exposed::System::Type* resolvedType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Reflection::Assembly*, ModdingAPI::Exposed::System::Reflection::Assembly*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x974450))(sourceAssembly, destAssembly, resolvedType);
  }
};
}