// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed {
struct __Panel_ActionPicker_Il2CppStaticFields {
};

struct __Panel_ActionPicker_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __Panel_ActionPicker_Il2CppClass {
  Il2CppClass_1 _1;
  __Panel_ActionPicker_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Panel_ActionPicker_Il2CppVtbl vtbl;
};

class Panel_ActionPicker {
public:
  // Il2Cpp fields:
  __Panel_ActionPicker_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::ActionPickerItem_array* m_ActionPickerItemList;
  ModdingAPI::Exposed::UISprite* m_SpriteBG;
  float m_ActionPickerItemOffset;
  float m_BGWidthPerItem;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_ActionPickerItemDataList;
  int32_t m_SelectedIndex;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ObjectInteractedWith;
  ModdingAPI::Exposed::ButtonLegendContainer* m_ButtonLegendContainer;

  // Member methods:
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1AE20))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1AF70))(this);
  }
  bool IsEnabled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x165DF10))(this);
  }
  void Enable(bool enabled) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1B1B0))(this, enabled);
  }
  ModdingAPI::Exposed::UnityEngine::GameObject* GetObjectInteractedWith() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GameObject*(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319960))(this);
  }
  void ShowLightFireActionPicker(ModdingAPI::Exposed::UnityEngine::GameObject* objectInteractedWith) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1B410))(this, objectInteractedWith);
  }
  void ShowFeedFireActionPicker(ModdingAPI::Exposed::UnityEngine::GameObject* objectInteractedWith) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1BD40))(this, objectInteractedWith);
  }
  void ShowCookingPotActionPicker(ModdingAPI::Exposed::UnityEngine::GameObject* objectInteractedWith) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1C6F0))(this, objectInteractedWith);
  }
  void ShowCookingSlotActionPicker(ModdingAPI::Exposed::UnityEngine::GameObject* objectInteractedWith) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1CD30))(this, objectInteractedWith);
  }
  void ShowCustomActionPicker(ModdingAPI::Exposed::UnityEngine::GameObject* objectInteractedWidth, ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* itemData) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*, ModdingAPI::Exposed::UnityEngine::GameObject*, ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1D1A0))(this, objectInteractedWidth, itemData);
  }
  void OnCancel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1D2B0))(this);
  }
  void PreviousItem() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1D360))(this);
  }
  void NextItem() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1D460))(this);
  }
  void OnSelect(int32_t indexSelected) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1D560))(this, indexSelected);
  }
  void RefreshVisuals() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1D660))(this);
  }
  void UpdateGamepadSelection() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1D780))(this);
  }
  void UpdateButtonLegend() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1D660))(this);
  }
  void UpdateGamepadSelectedItem() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1DA50))(this);
  }
  void EnableWithCurrentList() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1DC30))(this);
  }
  void FireInteractCallback() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1E040))(this);
  }
  void FireCookCallback() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1E290))(this);
  }
  void FireWaterCallback() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1E380))(this);
  }
  void TakeCharcoalCallback() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1E470))(this);
  }
  void TakeTorchCallback() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1E570))(this);
  }
  void DismantleFireCallback() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1E660))(this);
  }
  void DismantleFireCompleteCallback(bool success, bool playerCancel, float progress) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*, bool, bool, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1E8D0))(this, success, playerCancel, progress);
  }
  void CookingPotPickUpCallback() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1EA50))(this);
  }
  void CookingPotCookCallback() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1EC10))(this);
  }
  void CookingPotWaterCallback() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1EE60))(this);
  }
  void CookingSlotCookCallback() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1F0B0))(this);
  }
  void CookingSlotWaterCallback() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1F2E0))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionPicker*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A1F510))(this);
  }
};
}