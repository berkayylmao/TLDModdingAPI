// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.DateTime.hpp"


namespace ModdingAPI::Exposed::System::Net {
struct __Cookie_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Char_array* PortSplitDelimiters;
  ModdingAPI::Exposed::System::Char_array* Reserved2Name;
  ModdingAPI::Exposed::System::Char_array* Reserved2Value;
  ModdingAPI::Exposed::System::Net::Comparer* staticComparer;
};

struct __Cookie_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __Cookie_Il2CppClass {
  Il2CppClass_1 _1;
  __Cookie_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Cookie_Il2CppVtbl vtbl;
};

class Cookie {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C3F8C8;
  static inline    __Cookie_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __Cookie_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__Cookie_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __Cookie_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  System_String* m_comment;
  ModdingAPI::Exposed::System::Uri* m_commentUri;
  int32_t m_cookieVariant;
  bool m_discard;
  System_String* m_domain;
  bool m_domain_implicit;
  ModdingAPI::Exposed::System::DateTime m_expires;
  System_String* m_name;
  System_String* m_path;
  bool m_path_implicit;
  System_String* m_port;
  bool m_port_implicit;
  ModdingAPI::Exposed::System::Int32_array* m_port_list;
  bool m_secure;
  bool m_httpOnly;
  ModdingAPI::Exposed::System::DateTime m_timeStamp;
  System_String* m_value;
  int32_t m_version;
  System_String* m_domainKey;
  bool IsQuotedVersion;
  bool IsQuotedDomain;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x90D780))(this);
  }
  System_String* get_Comment() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311320))(this);
  }
  void set_Comment(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x90D8E0))(this, value);
  }
  void set_CommentUri(ModdingAPI::Exposed::System::Uri* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*, ModdingAPI::Exposed::System::Uri*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A3E0))(this, value);
  }
  void set_HttpOnly(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6C1CF0))(this, value);
  }
  void set_Discard(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56ED10))(this, value);
  }
  System_String* get_Domain() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110B0))(this);
  }
  void set_Domain(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x90D990))(this, value);
  }
  System_String* get__Domain() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x90DA50))(this);
  }
  bool get_Expired() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x90DB40))(this);
  }
  void set_Expires(ModdingAPI::Exposed::System::DateTime value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*, ModdingAPI::Exposed::System::DateTime)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A420))(this, value);
  }
  System_String* get_Name() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319960))(this);
  }
  bool InternalSetName(System_String* value) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x90DC60))(this, value);
  }
  System_String* get_Path() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319980))(this);
  }
  void set_Path(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x90DDA0))(this, value);
  }
  System_String* get__Path() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x90DE50))(this);
  }
  bool get_Plain() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x90DF10))(this);
  }
  bool VerifySetDefaults(int32_t variant, ModdingAPI::Exposed::System::Uri* uri, bool isLocalDomain, System_String* localDomain, bool set_default, bool isThrow) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*, int32_t, ModdingAPI::Exposed::System::Uri*, bool, System_String*, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x90DF90))(this, variant, uri, isLocalDomain, localDomain, set_default, isThrow);
  }
  void set_Port(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x90F160))(this, value);
  }
  ModdingAPI::Exposed::System::Int32_array* get_PortList() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Int32_array*(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319930))(this);
  }
  System_String* get__Port() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x90F7D0))(this);
  }
  bool get_Secure() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6C1CD0))(this);
  }
  void set_Secure(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6C1CE0))(this, value);
  }
  System_String* get_Value() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x321390))(this);
  }
  void set_Value(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x90F8C0))(this, value);
  }
  int32_t get_Variant() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x37AAE0))(this);
  }
  System_String* get_DomainKey() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x90F970))(this);
  }
  int32_t get_Version() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383A60))(this);
  }
  void set_Version(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x90F990))(this, value);
  }
  System_String* get__Version() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x90FA60))(this);
  }
  bool Equals(Il2CppObject* comparand) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x90FC40))(this, comparand);
  }
  int32_t GetHashCode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x910050))(this);
  }
  System_String* ToString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Net::Cookie*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x910440))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Char_array*> PortSplitDelimiters = __CppStaticProperty<ModdingAPI::Exposed::System::Char_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->PortSplitDelimiters; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Char_array*> Reserved2Name = __CppStaticProperty<ModdingAPI::Exposed::System::Char_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->Reserved2Name; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Char_array*> Reserved2Value = __CppStaticProperty<ModdingAPI::Exposed::System::Char_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->Reserved2Value; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Net::Comparer*> staticComparer = __CppStaticProperty<ModdingAPI::Exposed::System::Net::Comparer*>(
   []() { return &GetStaticClassInstance()->pStaticFields->staticComparer; }
  );

  // Static methods:
  static inline bool IsDomainEqualToHost(System_String* domain, System_String* host) {
    return reinterpret_cast<bool(__fastcall*)(System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x90DF20))(domain, host);
  }
  static inline bool DomainCharsTest(System_String* name) {
    return reinterpret_cast<bool(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x90F0D0))(name);
  }
  static inline ModdingAPI::Exposed::System::Collections::IComparer* GetComparer() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IComparer*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x90FBA0))();
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x910BB0))();
  }
};
}