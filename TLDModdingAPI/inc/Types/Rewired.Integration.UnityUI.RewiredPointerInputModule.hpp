// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Touch.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Vector2.hpp"


namespace ModdingAPI::Exposed::Rewired::Integration::UnityUI {
struct __RewiredPointerInputModule_Il2CppStaticFields {
};

struct __RewiredPointerInputModule_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_Awake;
  VirtualInvokeData _5_OnEnable;
  VirtualInvokeData _6_Start;
  VirtualInvokeData _7_OnDisable;
  VirtualInvokeData _8_OnDestroy;
  VirtualInvokeData _9_IsActive;
  VirtualInvokeData _10_OnRectTransformDimensionsChange;
  VirtualInvokeData _11_OnBeforeTransformParentChanged;
  VirtualInvokeData _12_OnTransformParentChanged;
  VirtualInvokeData _13_OnDidApplyAnimationProperties;
  VirtualInvokeData _14_OnCanvasGroupChanged;
  VirtualInvokeData _15_OnCanvasHierarchyChanged;
  VirtualInvokeData _16_IsDestroyed;
  VirtualInvokeData _18_GetAxisEventData;
  VirtualInvokeData _19_GetBaseEventData;
  VirtualInvokeData _20_IsPointerOverGameObject;
  VirtualInvokeData _21_ShouldActivateModule;
  VirtualInvokeData _22_DeactivateModule;
  VirtualInvokeData _23_ActivateModule;
  VirtualInvokeData _24_UpdateModule;
  VirtualInvokeData _25_IsModuleSupported;
  VirtualInvokeData _26_get_isMouseSupported;
  VirtualInvokeData _28_GetMousePointerEventData;
  VirtualInvokeData _29_ProcessMove;
  VirtualInvokeData _30_ProcessDrag;
  VirtualInvokeData _65535__ctor;
};

struct __RewiredPointerInputModule_Il2CppClass {
  Il2CppClass_1 _1;
  __RewiredPointerInputModule_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __RewiredPointerInputModule_Il2CppVtbl vtbl;
};

class RewiredPointerInputModule {
public:
  // Il2Cpp fields:
  __RewiredPointerInputModule_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_RaycastResultCache;
  ModdingAPI::Exposed::UnityEngine::EventSystems::AxisEventData* BaseInputModule_m_AxisEventData;
  ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem* BaseInputModule_m_EventSystem;
  ModdingAPI::Exposed::UnityEngine::EventSystems::BaseEventData* BaseInputModule_m_BaseEventData;
  ModdingAPI::Exposed::UnityEngine::EventSystems::BaseInput* m_InputOverride;
  ModdingAPI::Exposed::UnityEngine::EventSystems::BaseInput* BaseInputModule_m_DefaultInput;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_MouseInputSourcesList;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* m_PlayerPointerData;
  ModdingAPI::Exposed::Rewired::UI::ITouchInputSource* m_UserDefaultTouchInputSource;
  ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule::UnityInputSource* __m_DefaultInputSource;
  ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule::MouseState* m_MouseState;

  // Member methods:
  ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule::UnityInputSource* get_defaultInputSource() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule::UnityInputSource*(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2173970))(this);
  }
  ModdingAPI::Exposed::Rewired::UI::IMouseInputSource* get_defaultMouseInputSource() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::UI::IMouseInputSource*(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2173AD0))(this);
  }
  ModdingAPI::Exposed::Rewired::UI::ITouchInputSource* get_defaultTouchInputSource() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::UI::ITouchInputSource*(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2173AD0))(this);
  }
  bool IsDefaultMouse(ModdingAPI::Exposed::Rewired::UI::IMouseInputSource* mouse) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*, ModdingAPI::Exposed::Rewired::UI::IMouseInputSource*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2173AE0))(this, mouse);
  }
  ModdingAPI::Exposed::Rewired::UI::IMouseInputSource* GetMouseInputSource(int32_t playerId, int32_t mouseIndex) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::UI::IMouseInputSource*(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2173B00))(this, playerId, mouseIndex);
  }
  void RemoveMouseInputSource(ModdingAPI::Exposed::Rewired::UI::IMouseInputSource* source) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*, ModdingAPI::Exposed::Rewired::UI::IMouseInputSource*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2173CF0))(this, source);
  }
  void AddMouseInputSource(ModdingAPI::Exposed::Rewired::UI::IMouseInputSource* source) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*, ModdingAPI::Exposed::Rewired::UI::IMouseInputSource*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2173DD0))(this, source);
  }
  int32_t GetMouseInputSourceCount(int32_t playerId) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2173ED0))(this, playerId);
  }
  ModdingAPI::Exposed::Rewired::UI::ITouchInputSource* GetTouchInputSource(int32_t playerId, int32_t sourceIndex) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::UI::ITouchInputSource*(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2174080))(this, playerId, sourceIndex);
  }
  void RemoveTouchInputSource(ModdingAPI::Exposed::Rewired::UI::ITouchInputSource* source) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*, ModdingAPI::Exposed::Rewired::UI::ITouchInputSource*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2174150))(this, source);
  }
  void AddTouchInputSource(ModdingAPI::Exposed::Rewired::UI::ITouchInputSource* source) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*, ModdingAPI::Exposed::Rewired::UI::ITouchInputSource*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2174220))(this, source);
  }
  int32_t GetTouchInputSourceCount(int32_t playerId) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2174310))(this, playerId);
  }
  void ClearMouseInputSources() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2174340))(this);
  }
  bool get_isMouseSupported() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21743F0))(this);
  }
  bool GetPointerData(int32_t playerId, int32_t pointerIndex, int32_t pointerTypeId, ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData* data, bool create, int32_t pointerEventType) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*, int32_t, int32_t, int32_t, ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData*, bool, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2174540))(this, playerId, pointerIndex, pointerTypeId, data, create, pointerEventType);
  }
  ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData* CreatePointerEventData(int32_t playerId, int32_t pointerIndex, int32_t pointerTypeId, int32_t pointerEventType) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData*(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2174D20))(this, playerId, pointerIndex, pointerTypeId, pointerEventType);
  }
  void RemovePointerData(ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData* data) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*, ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2174F50))(this, data);
  }
  ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData* GetTouchPointerEventData(int32_t playerId, int32_t touchDeviceIndex, ModdingAPI::Exposed::UnityEngine::Touch input, bool pressed, bool released) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData*(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*, int32_t, int32_t, ModdingAPI::Exposed::UnityEngine::Touch, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2175090))(this, playerId, touchDeviceIndex, input, pressed, released);
  }
  ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule::MouseState* GetMousePointerEventData(int32_t playerId, int32_t mouseIndex) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule::MouseState*(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2175370))(this, playerId, mouseIndex);
  }
  ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData* GetLastPointerEventData(int32_t playerId, int32_t pointerIndex, int32_t pointerTypeId, bool ignorePointerTypeId, int32_t pointerEventType) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData*(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*, int32_t, int32_t, int32_t, bool, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2175B00))(this, playerId, pointerIndex, pointerTypeId, ignorePointerTypeId, pointerEventType);
  }
  void ProcessMove(ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData* pointerEvent) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*, ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2175E70))(this, pointerEvent);
  }
  void ProcessDrag(ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData* pointerEvent) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*, ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2175F90))(this, pointerEvent);
  }
  bool IsPointerOverGameObject(int32_t pointerTypeId) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2176320))(this, pointerTypeId);
  }
  void ClearSelection() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21765C0))(this);
  }
  System_String* ToString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2176930))(this);
  }
  void DeselectIfSelectionChanged(ModdingAPI::Exposed::UnityEngine::GameObject* currentOverGo, ModdingAPI::Exposed::UnityEngine::EventSystems::BaseEventData* pointerEvent) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*, ModdingAPI::Exposed::UnityEngine::GameObject*, ModdingAPI::Exposed::UnityEngine::EventSystems::BaseEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2176E90))(this, currentOverGo, pointerEvent);
  }
  void CopyFromTo(ModdingAPI::Exposed::UnityEngine::EventSystems::PointerEventData* from, ModdingAPI::Exposed::UnityEngine::EventSystems::PointerEventData* to) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*, ModdingAPI::Exposed::UnityEngine::EventSystems::PointerEventData*, ModdingAPI::Exposed::UnityEngine::EventSystems::PointerEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xADC480))(this, from, to);
  }
  int32_t StateForMouseButton(int32_t playerId, int32_t mouseIndex, int32_t buttonId) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2176FB0))(this, playerId, mouseIndex, buttonId);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::RewiredPointerInputModule*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21770C0))(this);
  }

  // Static methods:
  static inline bool ShouldStartDrag(ModdingAPI::Exposed::UnityEngine::Vector2 pressPos, ModdingAPI::Exposed::UnityEngine::Vector2 currentPos, float threshold, bool useDragThreshold) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector2, ModdingAPI::Exposed::UnityEngine::Vector2, float, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2175D80))(pressPos, currentPos, threshold, useDragThreshold);
  }
};
}