// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Rect.hpp"
#include "ModdingAPI.Exposed.Rewired.Utils.Classes.Data.ScreenRect.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"


namespace ModdingAPI::Exposed::Rewired::Components {
struct __PlayerMouse_Il2CppStaticFields {
};

struct __PlayerMouse_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_OnAwake;
  VirtualInvokeData _5_OnAwakeFinished;
  VirtualInvokeData _6_OnStart;
  VirtualInvokeData _7_OnEnabled;
  VirtualInvokeData _8_OnDisabled;
  VirtualInvokeData _9_OnDestroyed;
  VirtualInvokeData _10_OnReset;
  VirtualInvokeData _11_OnValidated;
  VirtualInvokeData _12_Initialize;
  VirtualInvokeData _13_TryInitialize;
  VirtualInvokeData _14_CreateSource;
  VirtualInvokeData _15_GetCreateSourceArgs;
  VirtualInvokeData _16_PostInitialize;
  VirtualInvokeData _17_Deinitialize;
  VirtualInvokeData _18_Subscribe;
  VirtualInvokeData _19_Unsubscribe;
  VirtualInvokeData _20_Rewired_IPlayerController_get_enabled;
  VirtualInvokeData _21_Rewired_IPlayerController_set_enabled;
  VirtualInvokeData _22_get_playerId;
  VirtualInvokeData _23_set_playerId;
  VirtualInvokeData _24_get_buttons;
  VirtualInvokeData _25_get_axes;
  VirtualInvokeData _26_get_elements;
  VirtualInvokeData _27_get_buttonCount;
  VirtualInvokeData _28_get_axisCount;
  VirtualInvokeData _29_get_elementCount;
  VirtualInvokeData _30_add_ButtonStateChangedEvent;
  VirtualInvokeData _31_remove_ButtonStateChangedEvent;
  VirtualInvokeData _32_add_AxisValueChangedEvent;
  VirtualInvokeData _33_remove_AxisValueChangedEvent;
  VirtualInvokeData _34_add_EnabledStateChangedEvent;
  VirtualInvokeData _35_remove_EnabledStateChangedEvent;
  VirtualInvokeData _36_GetButton;
  VirtualInvokeData _37_GetButtonDown;
  VirtualInvokeData _38_GetButtonUp;
  VirtualInvokeData _39_GetAxis;
  VirtualInvokeData _40_GetAxisRaw;
  VirtualInvokeData _41_GetElement;
  VirtualInvokeData _42_GetElement;
  VirtualInvokeData _43_CreateDefaultElementInfos;
  VirtualInvokeData _44_get_defaultToCenter;
  VirtualInvokeData _45_get_movementArea;
  VirtualInvokeData _46_set_movementArea;
  VirtualInvokeData _47_get_movementAreaUnit;
  VirtualInvokeData _48_set_movementAreaUnit;
  VirtualInvokeData _49_get_screenPosition;
  VirtualInvokeData _50_get_screenPositionPrev;
  VirtualInvokeData _51_get_screenPositionDelta;
  VirtualInvokeData _52_get_xAxis;
  VirtualInvokeData _53_get_yAxis;
  VirtualInvokeData _54_get_wheel;
  VirtualInvokeData _55_get_leftButton;
  VirtualInvokeData _56_get_rightButton;
  VirtualInvokeData _57_get_middleButton;
  VirtualInvokeData _58_get_pointerSpeed;
  VirtualInvokeData _59_get_useHardwarePointerPosition;
  VirtualInvokeData _60_add_ScreenPositionChangedEvent;
  VirtualInvokeData _61_remove_ScreenPositionChangedEvent;
  VirtualInvokeData _63_Rewired_UI_IMouseInputSource_get_enabled;
  VirtualInvokeData _64_Rewired_UI_IMouseInputSource_get_locked;
  VirtualInvokeData _66_Rewired_UI_IMouseInputSource_GetButtonDown;
  VirtualInvokeData _67_Rewired_UI_IMouseInputSource_GetButtonUp;
  VirtualInvokeData _68_Rewired_UI_IMouseInputSource_GetButton;
  VirtualInvokeData _69_Rewired_UI_IMouseInputSource_get_screenPosition;
  VirtualInvokeData _70_Rewired_UI_IMouseInputSource_get_screenPositionDelta;
  VirtualInvokeData _71_Rewired_UI_IMouseInputSource_get_wheelDelta;
};

struct __PlayerMouse_Il2CppClass {
  Il2CppClass_1 _1;
  __PlayerMouse_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __PlayerMouse_Il2CppVtbl vtbl;
};

class PlayerMouse {
public:
  // Il2Cpp fields:
  __PlayerMouse_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::Rewired::PlayerController* ComponentWrapper_1_ovJjdavCVCSQaRYvkKYaPvETjMV;
  bool ComponentWrapper_1_esYehwKhrldtApGnRVqbmuVUkFZ;
  ModdingAPI::Exposed::Rewired::InputManager_Base* PlayerController__rewiredInputManager;
  int32_t PlayerController__playerId;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* PlayerController__elements;
  ModdingAPI::Exposed::Rewired::Components::PlayerController::ButtonStateChangedHandler* PlayerController__onButtonStateChanged;
  ModdingAPI::Exposed::Rewired::Components::PlayerController::AxisValueChangedHandler* PlayerController__onAxisValueChanged;
  ModdingAPI::Exposed::Rewired::Components::PlayerController::EnabledStateChangedHandler* PlayerController__onEnabledStateChanged;
  bool _defaultToCenter;
  float _pointerSpeed;
  bool _useHardwarePointerPosition;
  ModdingAPI::Exposed::UnityEngine::Rect _movementArea;
  int32_t _movementAreaUnit;
  ModdingAPI::Exposed::Rewired::Components::PlayerMouse::ScreenPositionChangedHandler* _onScreenPositionChanged;

  // Member methods:
  ModdingAPI::Exposed::Rewired::PlayerMouse* get_source() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::PlayerMouse*(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B90D0))(this);
  }
  bool get_defaultToCenter() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B9170))(this);
  }
  void set_defaultToCenter(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B92F0))(this, value);
  }
  ModdingAPI::Exposed::Rewired::Utils::Classes::Data::ScreenRect get_movementArea() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Utils::Classes::Data::ScreenRect(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B9340))(this);
  }
  void set_movementArea(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::ScreenRect value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*, ModdingAPI::Exposed::Rewired::Utils::Classes::Data::ScreenRect)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B9500))(this, value);
  }
  int32_t get_movementAreaUnit() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B9550))(this);
  }
  void set_movementAreaUnit(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B96D0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 get_screenPosition() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B97B0))(this);
  }
  void set_screenPosition(ModdingAPI::Exposed::UnityEngine::Vector2 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B99B0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 get_screenPositionPrev() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B9A00))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 get_screenPositionDelta() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B9C20))(this);
  }
  ModdingAPI::Exposed::Rewired::PlayerController::MouseAxis* get_xAxis() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::PlayerController::MouseAxis*(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B9E20))(this);
  }
  ModdingAPI::Exposed::Rewired::PlayerController::MouseAxis* get_yAxis() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::PlayerController::MouseAxis*(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B9FE0))(this);
  }
  ModdingAPI::Exposed::Rewired::PlayerController::MouseWheel* get_wheel() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::PlayerController::MouseWheel*(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BA1A0))(this);
  }
  ModdingAPI::Exposed::Rewired::PlayerController::Button* get_leftButton() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::PlayerController::Button*(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BA240))(this);
  }
  ModdingAPI::Exposed::Rewired::PlayerController::Button* get_rightButton() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::PlayerController::Button*(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BA3F0))(this);
  }
  ModdingAPI::Exposed::Rewired::PlayerController::Button* get_middleButton() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::PlayerController::Button*(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BA5A0))(this);
  }
  float get_pointerSpeed() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BA750))(this);
  }
  void set_pointerSpeed(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BA8D0))(this, value);
  }
  bool get_useHardwarePointerPosition() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BAAF0))(this);
  }
  void set_useHardwarePointerPosition(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BAC70))(this, value);
  }
  void add_ScreenPositionChangedEvent(ModdingAPI::Exposed::System::Action_T_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*, ModdingAPI::Exposed::System::Action_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BAE10))(this, value);
  }
  void remove_ScreenPositionChangedEvent(ModdingAPI::Exposed::System::Action_T_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*, ModdingAPI::Exposed::System::Action_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BAEE0))(this, value);
  }
  void OnValidated() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BAF90))(this);
  }
  void OnReset() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BB680))(this);
  }
  ModdingAPI::Exposed::Rewired::PlayerController* CreateSource(Il2CppObject* args) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::PlayerController*(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BB7F0))(this, args);
  }
  void Deinitialize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BBDA0))(this);
  }
  void Subscribe() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BBE30))(this);
  }
  void Unsubscribe() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BC060))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* CreateDefaultElementInfos() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BC280))(this);
  }
  void EfLnUjXVPycKAzbjgsYdtfezbsn(ModdingAPI::Exposed::UnityEngine::Vector2 ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BD810))(this, );
  }
  bool Rewired::UI::IMouseInputSource::get_enabled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BD910))(this);
  }
  bool Rewired::UI::IMouseInputSource::GetButtonDown(int32_t ) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BD9C0))(this, );
  }
  bool Rewired::UI::IMouseInputSource::GetButtonUp(int32_t ) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BDA80))(this, );
  }
  bool Rewired::UI::IMouseInputSource::GetButton(int32_t ) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BDB40))(this, );
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 Rewired::UI::IMouseInputSource::get_screenPosition() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BDC00))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 Rewired::UI::IMouseInputSource::get_screenPositionDelta() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BDCD0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 Rewired::UI::IMouseInputSource::get_wheelDelta() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BDDA0))(this);
  }
  bool Rewired::UI::IMouseInputSource::get_locked() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BDE70))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7BDF20))(this);
  }
  bool Rewired::IPlayerController::get_enabled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B82E0))(this);
  }
  void Rewired::IPlayerController::set_enabled(bool ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerMouse*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B8330))(this, );
  }
};
}