// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.LayerMask.hpp"


namespace ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing {
struct __PostProcessManager_Il2CppStaticFields {
  ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessManager* s_Instance;
};

struct __PostProcessManager_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __PostProcessManager_Il2CppClass {
  Il2CppClass_1 _1;
  __PostProcessManager_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __PostProcessManager_Il2CppVtbl vtbl;
};

class PostProcessManager {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C398B0;
  static inline    __PostProcessManager_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __PostProcessManager_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__PostProcessManager_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __PostProcessManager_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* m_SortedVolumes;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_Volumes;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* m_SortNeeded;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_BaseSettings;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_TempColliders;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* settingsTypes;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22DA190))(this);
  }
  void CleanBaseTypes() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22DA780))(this);
  }
  void ReloadBaseTypes() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22DA930))(this);
  }
  void GetActiveVolumes(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessLayer* layer, ModdingAPI::Exposed::System::Collections::Generic::List_T_* results, bool skipDisabled, bool skipZeroWeight) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessManager*, ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessLayer*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22DAE30))(this, layer, results, skipDisabled, skipZeroWeight);
  }
  ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessVolume* GetHighestPriorityVolume(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessLayer* layer) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessVolume*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessManager*, ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessLayer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22DB4A0))(this, layer);
  }
  ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessVolume* GetHighestPriorityVolume(ModdingAPI::Exposed::UnityEngine::LayerMask mask) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessVolume*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessManager*, ModdingAPI::Exposed::UnityEngine::LayerMask)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22DB5A0))(this, mask);
  }
  ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessVolume* QuickVolume(int32_t layer, float priority, ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessEffectSettings_array* settings) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessVolume*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessManager*, int32_t, float, ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessEffectSettings_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22DB7B0))(this, layer, priority, settings);
  }
  void SetLayerDirty(int32_t layer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessManager*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22DBB40))(this, layer);
  }
  void UpdateVolumeLayer(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessVolume* volume, int32_t prevLayer, int32_t newLayer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessManager*, ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessVolume*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22DBCD0))(this, volume, prevLayer, newLayer);
  }
  void Register(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessVolume* volume, int32_t layer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessManager*, ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessVolume*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22DBD10))(this, volume, layer);
  }
  void Register(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessVolume* volume) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessManager*, ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessVolume*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22DBEF0))(this, volume);
  }
  void Unregister(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessVolume* volume, int32_t layer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessManager*, ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessVolume*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22DBFC0))(this, volume, layer);
  }
  void Unregister(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessVolume* volume) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessManager*, ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessVolume*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22DC170))(this, volume);
  }
  void ReplaceData(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessLayer* postProcessLayer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessManager*, ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessLayer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22DC240))(this, postProcessLayer);
  }
  void UpdateSettings(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessLayer* postProcessLayer, ModdingAPI::Exposed::UnityEngine::Camera* camera) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessManager*, ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessLayer*, ModdingAPI::Exposed::UnityEngine::Camera*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22DC4D0))(this, postProcessLayer, camera);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* GrabVolumes(ModdingAPI::Exposed::UnityEngine::LayerMask mask) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessManager*, ModdingAPI::Exposed::UnityEngine::LayerMask)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22DCC90))(this, mask);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessManager*> s_Instance = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessManager*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_Instance; }
  );

  // Static methods:
  static inline ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessManager* get_instance() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessManager*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x22DA020))();
  }
  static inline void SortByPriority(ModdingAPI::Exposed::System::Collections::Generic::List_T_* volumes) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22DD250))(volumes);
  }
  static inline bool IsVolumeRenderedByCamera(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessVolume* volume, ModdingAPI::Exposed::UnityEngine::Camera* camera) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rendering::PostProcessing::PostProcessVolume*, ModdingAPI::Exposed::UnityEngine::Camera*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x403F70))(volume, camera);
  }
};
}