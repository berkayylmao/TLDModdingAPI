// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"

namespace ModdingAPI::Exposed::Rewired {
struct __InputActionEventData_Il2CppObject {
  ModdingAPI::Exposed::AALIeWbcPgPITZcDwCgOfqwaZZpu* vZRpKGiBYcDJTavkqNbPAJkrllHe;
  int32_t zgqIUoXupaktGgGzIMqlKFInLJA;
  int32_t playerId;
  int32_t actionId;
  int32_t updateLoop;
};
struct __InputActionEventData_Il2CppStaticFields {
};

struct __InputActionEventData_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __InputActionEventData_Il2CppClass {
  Il2CppClass_1 _1;
  __InputActionEventData_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __InputActionEventData_Il2CppVtbl vtbl;
};

class InputActionEventData {
  static constexpr uint64_t _rvaClassInstance     = 0x3C87920;
  static inline    __InputActionEventData_Il2CppClass* _pStaticClassInstance = nullptr;

public:
  // Static class getter:
  static inline __InputActionEventData_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__InputActionEventData_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Member fields:
  ModdingAPI::Exposed::AALIeWbcPgPITZcDwCgOfqwaZZpu* vZRpKGiBYcDJTavkqNbPAJkrllHe;
  int32_t zgqIUoXupaktGgGzIMqlKFInLJA;
  int32_t playerId;
  int32_t actionId;
  int32_t updateLoop;

  // Member methods:
  int32_t get_eventType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5020))(this);
  }
  void set_eventType(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF170))(this, value);
  }
  ModdingAPI::Exposed::Rewired::Player* get_player() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Player*(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B550))(this);
  }
  System_String* get_actionName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B640))(this);
  }
  System_String* get_actionDescriptiveName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B790))(this);
  }
  float GetAxis() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B8E0))(this);
  }
  float GetAxisPrev() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B900))(this);
  }
  float GetAxisDelta() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B920))(this);
  }
  float GetAxisTimeActive() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B980))(this);
  }
  float GetAxisTimeInactive() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B9A0))(this);
  }
  float GetAxisRaw() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B9C0))(this);
  }
  float GetAxisRawDelta() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B9E0))(this);
  }
  float GetAxisRawPrev() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BA40))(this);
  }
  float GetAxisRawTimeActive() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BA60))(this);
  }
  float GetAxisRawTimeInactive() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BA80))(this);
  }
  int32_t GetAxisCoordinateMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BAA0))(this);
  }
  int32_t GetAxisCoordinateModePrev() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BAC0))(this);
  }
  int32_t GetAxisRawCoordinateMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BAE0))(this);
  }
  int32_t GetAxisRawCoordinateModePrev() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BB00))(this);
  }
  bool GetButton() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BB20))(this);
  }
  bool GetButtonPrev() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BB40))(this);
  }
  bool GetButtonDown() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BB60))(this);
  }
  bool GetButtonUp() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BB80))(this);
  }
  bool GetButtonSinglePressHold() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBA0))(this);
  }
  bool GetButtonSinglePressDown() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBC0))(this);
  }
  bool GetButtonSinglePressUp() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BBE0))(this);
  }
  bool GetButtonDoublePressDown() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BC00))(this);
  }
  bool GetButtonDoublePressDown(float speed) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BC30))(this, speed);
  }
  bool GetButtonDoublePressHold() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BC50))(this);
  }
  bool GetButtonDoublePressHold(float speed) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BC80))(this, speed);
  }
  bool GetButtonDoublePressUp() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BCA0))(this);
  }
  bool GetButtonDoublePressUp(float speed) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BCD0))(this, speed);
  }
  bool GetButtonTimedPress(float time) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BCF0))(this, time);
  }
  bool GetButtonTimedPress(float time, float expireIn) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD20))(this, time, expireIn);
  }
  bool GetButtonTimedPressDown(float time) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD40))(this, time);
  }
  bool GetButtonTimedPressUp(float time) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD60))(this, time);
  }
  bool GetButtonTimedPressUp(float time, float expireIn) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD90))(this, time, expireIn);
  }
  bool GetButtonShortPress() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BDB0))(this);
  }
  bool GetButtonShortPressDown() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BDF0))(this);
  }
  bool GetButtonShortPressUp() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BE30))(this);
  }
  bool GetButtonLongPress() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BE70))(this);
  }
  bool GetButtonLongPressDown() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BEB0))(this);
  }
  bool GetButtonLongPressUp() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BEF0))(this);
  }
  bool GetButtonRepeating() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BF30))(this);
  }
  float GetButtonTimePressed() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BF50))(this);
  }
  float GetButtonTimeUnpressed() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BF70))(this);
  }
  bool GetNegativeButton() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BF90))(this);
  }
  bool GetNegativeButtonPrev() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BFE0))(this);
  }
  bool GetNegativeButtonDown() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C030))(this);
  }
  bool GetNegativeButtonUp() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C050))(this);
  }
  bool GetNegativeButtonSinglePressHold() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C0A0))(this);
  }
  bool GetNegativeButtonSinglePressDown() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C100))(this);
  }
  bool GetNegativeButtonSinglePressUp() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C170))(this);
  }
  bool GetNegativeButtonDoublePressDown() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C1D0))(this);
  }
  bool GetNegativeButtonDoublePressDown(float speed) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C200))(this, speed);
  }
  bool GetNegativeButtonDoublePressHold() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C220))(this);
  }
  bool GetNegativeButtonDoublePressHold(float speed) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C250))(this, speed);
  }
  bool GetNegativeButtonDoublePressUp() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C270))(this);
  }
  bool GetNegativeButtonDoublePressUp(float speed) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C2A0))(this, speed);
  }
  bool GetNegativeButtonTimedPress(float time) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C2C0))(this, time);
  }
  bool GetNegativeButtonTimedPress(float time, float expireIn) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C2F0))(this, time, expireIn);
  }
  bool GetNegativeButtonTimedPressDown(float time) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C310))(this, time);
  }
  bool GetNegativeButtonTimedPressUp(float time) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C330))(this, time);
  }
  bool GetNegativeButtonTimedPressUp(float time, float expireIn) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C360))(this, time, expireIn);
  }
  bool GetNegativeButtonShortPress() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C380))(this);
  }
  bool GetNegativeButtonShortPressDown() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C3C0))(this);
  }
  bool GetNegativeButtonShortPressUp() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C400))(this);
  }
  bool GetNegativeButtonLongPress() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C440))(this);
  }
  bool GetNegativeButtonLongPressDown() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C480))(this);
  }
  bool GetNegativeButtonLongPressUp() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C4C0))(this);
  }
  bool GetNegativeButtonRepeating() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C500))(this);
  }
  float GetNegativeButtonTimePressed() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C560))(this);
  }
  float GetNegativeButtonTimeUnpressed() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C5C0))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IList_T_* GetCurrentInputSources() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IList_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C5E0))(this);
  }
  bool IsCurrentInputSource(int32_t controllerType) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C6D0))(this, controllerType);
  }
  bool IsCurrentInputSource(int32_t controllerType, int32_t controllerId) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C7D0))(this, controllerType, controllerId);
  }
  bool IsCurrentInputSource(ModdingAPI::Exposed::Rewired::Controller* controller) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*, ModdingAPI::Exposed::Rewired::Controller*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C8D0))(this, controller);
  }
  void ::ctor(ModdingAPI::Exposed::AALIeWbcPgPITZcDwCgOfqwaZZpu* vc, int32_t playerId, int32_t actionId, int32_t updateLoop) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputActionEventData*, ModdingAPI::Exposed::AALIeWbcPgPITZcDwCgOfqwaZZpu*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C9D0))(this, vc, playerId, actionId, updateLoop);
  }

};
}