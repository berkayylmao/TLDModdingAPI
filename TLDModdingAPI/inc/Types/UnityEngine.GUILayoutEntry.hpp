// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Rect.hpp"


namespace ModdingAPI::Exposed::UnityEngine {
struct __GUILayoutEntry_Il2CppStaticFields {
  ModdingAPI::Exposed::UnityEngine::Rect kDummyRect;
  int32_t indent;
};

struct __GUILayoutEntry_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_get_marginLeft;
  VirtualInvokeData _5_get_marginRight;
  VirtualInvokeData _6_get_marginTop;
  VirtualInvokeData _7_get_marginBottom;
  VirtualInvokeData _8_CalcWidth;
  VirtualInvokeData _9_CalcHeight;
  VirtualInvokeData _10_SetHorizontal;
  VirtualInvokeData _11_SetVertical;
  VirtualInvokeData _12_ApplyStyleSettings;
  VirtualInvokeData _13_ApplyOptions;
};

struct __GUILayoutEntry_Il2CppClass {
  Il2CppClass_1 _1;
  __GUILayoutEntry_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __GUILayoutEntry_Il2CppVtbl vtbl;
};

class GUILayoutEntry {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C42550;
  static inline    __GUILayoutEntry_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __GUILayoutEntry_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__GUILayoutEntry_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __GUILayoutEntry_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  float minWidth;
  float maxWidth;
  float minHeight;
  float maxHeight;
  ModdingAPI::Exposed::UnityEngine::Rect rect;
  int32_t stretchWidth;
  int32_t stretchHeight;
  bool consideredForMargin;
  ModdingAPI::Exposed::UnityEngine::GUIStyle* m_Style;

  // Member methods:
  void ::ctor(float _minWidth, float _maxWidth, float _minHeight, float _maxHeight, ModdingAPI::Exposed::UnityEngine::GUIStyle* _style) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUILayoutEntry*, float, float, float, float, ModdingAPI::Exposed::UnityEngine::GUIStyle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F38D0))(this, _minWidth, _maxWidth, _minHeight, _maxHeight, _style);
  }
  void ::ctor(float _minWidth, float _maxWidth, float _minHeight, float _maxHeight, ModdingAPI::Exposed::UnityEngine::GUIStyle* _style, ModdingAPI::Exposed::UnityEngine::GUILayoutOption_array* options) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUILayoutEntry*, float, float, float, float, ModdingAPI::Exposed::UnityEngine::GUIStyle*, ModdingAPI::Exposed::UnityEngine::GUILayoutOption_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F3A10))(this, _minWidth, _maxWidth, _minHeight, _maxHeight, _style, options);
  }
  ModdingAPI::Exposed::UnityEngine::GUIStyle* get_style() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GUIStyle*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUILayoutEntry*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xADB000))(this);
  }
  void set_style(ModdingAPI::Exposed::UnityEngine::GUIStyle* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUILayoutEntry*, ModdingAPI::Exposed::UnityEngine::GUIStyle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F3B40))(this, value);
  }
  int32_t get_marginLeft() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUILayoutEntry*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F3B60))(this);
  }
  int32_t get_marginRight() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUILayoutEntry*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F3BE0))(this);
  }
  int32_t get_marginTop() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUILayoutEntry*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F3C60))(this);
  }
  int32_t get_marginBottom() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUILayoutEntry*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F3CE0))(this);
  }
  int32_t get_marginHorizontal() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUILayoutEntry*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F3D60))(this);
  }
  int32_t get_marginVertical() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUILayoutEntry*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F3DA0))(this);
  }
  void CalcWidth() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUILayoutEntry*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void CalcHeight() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUILayoutEntry*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void SetHorizontal(float x, float width) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUILayoutEntry*, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F3DE0))(this, x, width);
  }
  void SetVertical(float y, float height) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUILayoutEntry*, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F3DF0))(this, y, height);
  }
  void ApplyStyleSettings(ModdingAPI::Exposed::UnityEngine::GUIStyle* style) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUILayoutEntry*, ModdingAPI::Exposed::UnityEngine::GUIStyle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F3E00))(this, style);
  }
  void ApplyOptions(ModdingAPI::Exposed::UnityEngine::GUILayoutOption_array* options) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUILayoutEntry*, ModdingAPI::Exposed::UnityEngine::GUILayoutOption_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F3F90))(this, options);
  }
  System_String* ToString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GUILayoutEntry*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F4380))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Rect> kDummyRect = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Rect>(
   []() { return &GetStaticClassInstance()->pStaticFields->kDummyRect; }
  );
  static inline __CppStaticProperty<int32_t> indent = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->indent; }
  );

  // Static methods:
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F4C00))();
  }
};
}