// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Runtime.Serialization.StreamingContext.hpp"


namespace ModdingAPI::Exposed::System::Text {
struct __Encoding_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Text::Encoding* defaultEncoding;
  ModdingAPI::Exposed::System::Text::Encoding* unicodeEncoding;
  ModdingAPI::Exposed::System::Text::Encoding* bigEndianUnicode;
  ModdingAPI::Exposed::System::Text::Encoding* utf7Encoding;
  ModdingAPI::Exposed::System::Text::Encoding* utf8Encoding;
  ModdingAPI::Exposed::System::Text::Encoding* utf32Encoding;
  ModdingAPI::Exposed::System::Text::Encoding* asciiEncoding;
  ModdingAPI::Exposed::System::Text::Encoding* latin1Encoding;
  ModdingAPI::Exposed::System::Collections::Hashtable* encodings;
  Il2CppObject* s_InternalSyncObject;
};

struct __Encoding_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _5_SetDefaultFallbacks;
  VirtualInvokeData _6_GetPreamble;
  VirtualInvokeData _7_get_EncodingName;
  VirtualInvokeData _8_get_HeaderName;
  VirtualInvokeData _9_get_WebName;
  VirtualInvokeData _10_Clone;
  VirtualInvokeData _11_GetByteCount;
  VirtualInvokeData _13_GetByteCount;
  VirtualInvokeData _14_GetByteCount;
  VirtualInvokeData _15_GetBytes;
  VirtualInvokeData _17_GetBytes;
  VirtualInvokeData _18_GetBytes;
  VirtualInvokeData _19_GetBytes;
  VirtualInvokeData _20_GetBytes;
  VirtualInvokeData _22_GetCharCount;
  VirtualInvokeData _23_GetCharCount;
  VirtualInvokeData _24_GetChars;
  VirtualInvokeData _26_GetChars;
  VirtualInvokeData _27_GetChars;
  VirtualInvokeData _28_get_CodePage;
  VirtualInvokeData _29_GetDecoder;
  VirtualInvokeData _30_GetEncoder;
  VirtualInvokeData _33_GetString;
  VirtualInvokeData _34_GetString;
  VirtualInvokeData _35_GetBestFitUnicodeToBytesData;
  VirtualInvokeData _36_GetBestFitBytesToUnicodeData;
  VirtualInvokeData _65535__ctor;
};

struct __Encoding_Il2CppClass {
  Il2CppClass_1 _1;
  __Encoding_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Encoding_Il2CppVtbl vtbl;
};

class Encoding {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C33B10;
  static inline    Encoding* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C31928;
  static inline    __Encoding_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline Encoding* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (Encoding**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __Encoding_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__Encoding_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __Encoding_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  int32_t m_codePage;
  ModdingAPI::Exposed::System::Globalization::CodePageDataItem* dataItem;
  bool m_deserializedFromEverett;
  bool m_isReadOnly;
  ModdingAPI::Exposed::System::Text::EncoderFallback* encoderFallback;
  ModdingAPI::Exposed::System::Text::DecoderFallback* decoderFallback;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9B6020))(this);
  }
  void ::ctor(int32_t codePage) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA79B0))(this, codePage);
  }
  void SetDefaultFallbacks() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA7A80))(this);
  }
  void OnDeserializing() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA7CA0))(this);
  }
  void OnDeserialized() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA7CB0))(this);
  }
  void OnDeserializing(ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext ctx) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA7CA0))(this, ctx);
  }
  void OnDeserialized(ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext ctx) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA7CB0))(this, ctx);
  }
  void OnSerializing(ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext ctx) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9459D0))(this, ctx);
  }
  void DeserializeEncoding(ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo* info, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA7D00))(this, info, context);
  }
  void SerializeEncoding(ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo* info, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA7FE0))(this, info, context);
  }
  ModdingAPI::Exposed::System::Byte_array* GetPreamble() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Byte_array*(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA9160))(this);
  }
  void GetDataItem() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA9200))(this);
  }
  System_String* get_EncodingName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA9350))(this);
  }
  System_String* get_HeaderName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA94A0))(this);
  }
  System_String* get_WebName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA95E0))(this);
  }
  ModdingAPI::Exposed::System::Text::EncoderFallback* get_EncoderFallback() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::EncoderFallback*(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110B0))(this);
  }
  void set_EncoderFallback(ModdingAPI::Exposed::System::Text::EncoderFallback* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, ModdingAPI::Exposed::System::Text::EncoderFallback*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA9720))(this, value);
  }
  ModdingAPI::Exposed::System::Text::DecoderFallback* get_DecoderFallback() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::DecoderFallback*(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335370))(this);
  }
  void set_DecoderFallback(ModdingAPI::Exposed::System::Text::DecoderFallback* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, ModdingAPI::Exposed::System::Text::DecoderFallback*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA9820))(this, value);
  }
  Il2CppObject* Clone() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA9920))(this);
  }
  bool get_IsReadOnly() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x46FCD0))(this);
  }
  int32_t GetByteCount(System_String* s) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA9E10))(this, s);
  }
  int32_t GetByteCount(wchar_t* chars, int32_t count) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, wchar_t*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA9F00))(this, chars, count);
  }
  int32_t GetByteCount(wchar_t* chars, int32_t count, ModdingAPI::Exposed::System::Text::EncoderNLS* encoder) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, wchar_t*, int32_t, ModdingAPI::Exposed::System::Text::EncoderNLS*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAA0A0))(this, chars, count, encoder);
  }
  ModdingAPI::Exposed::System::Byte_array* GetBytes(ModdingAPI::Exposed::System::Char_array* chars, int32_t index, int32_t count) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Byte_array*(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, ModdingAPI::Exposed::System::Char_array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAA0C0))(this, chars, index, count);
  }
  ModdingAPI::Exposed::System::Byte_array* GetBytes(System_String* s) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Byte_array*(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAA1C0))(this, s);
  }
  int32_t GetBytes(System_String* s, int32_t charIndex, int32_t charCount, ModdingAPI::Exposed::System::Byte_array* bytes, int32_t byteIndex) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, System_String*, int32_t, int32_t, ModdingAPI::Exposed::System::Byte_array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAA2F0))(this, s, charIndex, charCount, bytes, byteIndex);
  }
  int32_t GetBytes(wchar_t* chars, int32_t charCount, uint8_t* bytes, int32_t byteCount, ModdingAPI::Exposed::System::Text::EncoderNLS* encoder) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, wchar_t*, int32_t, uint8_t*, int32_t, ModdingAPI::Exposed::System::Text::EncoderNLS*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAA3F0))(this, chars, charCount, bytes, byteCount, encoder);
  }
  int32_t GetBytes(wchar_t* chars, int32_t charCount, uint8_t* bytes, int32_t byteCount) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, wchar_t*, int32_t, uint8_t*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAA410))(this, chars, charCount, bytes, byteCount);
  }
  int32_t GetCharCount(uint8_t* bytes, int32_t count) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, uint8_t*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAA680))(this, bytes, count);
  }
  int32_t GetCharCount(uint8_t* bytes, int32_t count, ModdingAPI::Exposed::System::Text::DecoderNLS* decoder) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, uint8_t*, int32_t, ModdingAPI::Exposed::System::Text::DecoderNLS*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAA820))(this, bytes, count, decoder);
  }
  ModdingAPI::Exposed::System::Char_array* GetChars(ModdingAPI::Exposed::System::Byte_array* bytes, int32_t index, int32_t count) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Char_array*(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAA840))(this, bytes, index, count);
  }
  int32_t GetChars(uint8_t* bytes, int32_t byteCount, wchar_t* chars, int32_t charCount) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, uint8_t*, int32_t, wchar_t*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAA940))(this, bytes, byteCount, chars, charCount);
  }
  int32_t GetChars(uint8_t* bytes, int32_t byteCount, wchar_t* chars, int32_t charCount, ModdingAPI::Exposed::System::Text::DecoderNLS* decoder) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, uint8_t*, int32_t, wchar_t*, int32_t, ModdingAPI::Exposed::System::Text::DecoderNLS*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAABA0))(this, bytes, byteCount, chars, charCount, decoder);
  }
  int32_t get_CodePage() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311060))(this);
  }
  ModdingAPI::Exposed::System::Text::Decoder* GetDecoder() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::Decoder*(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAABC0))(this);
  }
  void setReadOnly(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D820))(this, value);
  }
  ModdingAPI::Exposed::System::Text::Encoder* GetEncoder() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::Encoder*(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAAEF0))(this);
  }
  System_String* GetString(ModdingAPI::Exposed::System::Byte_array* bytes) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, ModdingAPI::Exposed::System::Byte_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAB040))(this, bytes);
  }
  System_String* GetString(ModdingAPI::Exposed::System::Byte_array* bytes, int32_t index, int32_t count) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAB130))(this, bytes, index, count);
  }
  bool Equals(Il2CppObject* value) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAB9F0))(this, value);
  }
  int32_t GetHashCode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEABB20))(this);
  }
  ModdingAPI::Exposed::System::Char_array* GetBestFitUnicodeToBytesData() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Char_array*(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEABB90))(this);
  }
  ModdingAPI::Exposed::System::Char_array* GetBestFitBytesToUnicodeData() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Char_array*(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEABC30))(this);
  }
  void ThrowBytesOverflow() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEABCD0))(this);
  }
  void ThrowBytesOverflow(ModdingAPI::Exposed::System::Text::EncoderNLS* encoder, bool nothingEncoded) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, ModdingAPI::Exposed::System::Text::EncoderNLS*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEABDD0))(this, encoder, nothingEncoded);
  }
  void ThrowCharsOverflow() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEABE50))(this);
  }
  void ThrowCharsOverflow(ModdingAPI::Exposed::System::Text::DecoderNLS* decoder, bool nothingDecoded) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::Encoding*, ModdingAPI::Exposed::System::Text::DecoderNLS*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEABF50))(this, decoder, nothingDecoded);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Text::Encoding*> defaultEncoding = __CppStaticProperty<ModdingAPI::Exposed::System::Text::Encoding*>(
   []() { return &GetStaticClassInstance()->pStaticFields->defaultEncoding; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Text::Encoding*> unicodeEncoding = __CppStaticProperty<ModdingAPI::Exposed::System::Text::Encoding*>(
   []() { return &GetStaticClassInstance()->pStaticFields->unicodeEncoding; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Text::Encoding*> bigEndianUnicode = __CppStaticProperty<ModdingAPI::Exposed::System::Text::Encoding*>(
   []() { return &GetStaticClassInstance()->pStaticFields->bigEndianUnicode; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Text::Encoding*> utf7Encoding = __CppStaticProperty<ModdingAPI::Exposed::System::Text::Encoding*>(
   []() { return &GetStaticClassInstance()->pStaticFields->utf7Encoding; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Text::Encoding*> utf8Encoding = __CppStaticProperty<ModdingAPI::Exposed::System::Text::Encoding*>(
   []() { return &GetStaticClassInstance()->pStaticFields->utf8Encoding; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Text::Encoding*> utf32Encoding = __CppStaticProperty<ModdingAPI::Exposed::System::Text::Encoding*>(
   []() { return &GetStaticClassInstance()->pStaticFields->utf32Encoding; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Text::Encoding*> asciiEncoding = __CppStaticProperty<ModdingAPI::Exposed::System::Text::Encoding*>(
   []() { return &GetStaticClassInstance()->pStaticFields->asciiEncoding; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Text::Encoding*> latin1Encoding = __CppStaticProperty<ModdingAPI::Exposed::System::Text::Encoding*>(
   []() { return &GetStaticClassInstance()->pStaticFields->latin1Encoding; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Hashtable*> encodings = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Hashtable*>(
   []() { return &GetStaticClassInstance()->pStaticFields->encodings; }
  );
  static inline __CppStaticProperty<Il2CppObject*> s_InternalSyncObject = __CppStaticProperty<Il2CppObject*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_InternalSyncObject; }
  );

  // Static methods:
  static inline Il2CppObject* get_InternalSyncObject() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA8140))();
  }
  static inline ModdingAPI::Exposed::System::Text::Encoding* GetEncoding(int32_t codepage) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::Encoding*(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA82B0))(codepage);
  }
  static inline ModdingAPI::Exposed::System::Text::Encoding* GetEncoding(System_String* name) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::Encoding*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA8F60))(name);
  }
  static inline ModdingAPI::Exposed::System::Text::Encoding* get_ASCII() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::Encoding*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA9A80))();
  }
  static inline ModdingAPI::Exposed::System::Text::Encoding* get_Latin1() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::Encoding*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xEA9C80))();
  }
  static inline ModdingAPI::Exposed::System::Text::Encoding* CreateDefaultEncoding() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::Encoding*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAAD10))();
  }
  static inline ModdingAPI::Exposed::System::Text::Encoding* get_Default() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::Encoding*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAADB0))();
  }
  static inline ModdingAPI::Exposed::System::Text::Encoding* get_Unicode() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::Encoding*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAB160))();
  }
  static inline ModdingAPI::Exposed::System::Text::Encoding* get_BigEndianUnicode() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::Encoding*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAB300))();
  }
  static inline ModdingAPI::Exposed::System::Text::Encoding* get_UTF7() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::Encoding*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAB4A0))();
  }
  static inline ModdingAPI::Exposed::System::Text::Encoding* get_UTF8() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::Encoding*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAB6B0))();
  }
  static inline ModdingAPI::Exposed::System::Text::Encoding* get_UTF32() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::Encoding*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xEAB840))();
  }
};
}