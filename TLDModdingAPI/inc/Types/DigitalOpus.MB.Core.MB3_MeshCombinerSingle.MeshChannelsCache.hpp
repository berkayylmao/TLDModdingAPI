// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"


namespace ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle {
struct __MeshChannelsCache_Il2CppStaticFields {
};

struct __MeshChannelsCache_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __MeshChannelsCache_Il2CppClass {
  Il2CppClass_1 _1;
  __MeshChannelsCache_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __MeshChannelsCache_Il2CppVtbl vtbl;
};

class MeshChannelsCache {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C7EE78;
  static inline    __MeshChannelsCache_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __MeshChannelsCache_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__MeshChannelsCache_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __MeshChannelsCache_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle* mc;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* meshID2MeshChannels;
  ModdingAPI::Exposed::UnityEngine::Vector2 _HALF_UV;

  // Member methods:
  void ::ctor(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle* mcs) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MeshChannelsCache*, ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x269D440))(this, mcs);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3_array* GetVertices(ModdingAPI::Exposed::UnityEngine::Mesh* m) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3_array*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MeshChannelsCache*, ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x269D5D0))(this, m);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3_array* GetNormals(ModdingAPI::Exposed::UnityEngine::Mesh* m) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3_array*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MeshChannelsCache*, ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x269D810))(this, m);
  }
  ModdingAPI::Exposed::UnityEngine::Vector4_array* GetTangents(ModdingAPI::Exposed::UnityEngine::Mesh* m) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector4_array*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MeshChannelsCache*, ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x269DA50))(this, m);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2_array* GetUv0Raw(ModdingAPI::Exposed::UnityEngine::Mesh* m) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2_array*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MeshChannelsCache*, ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x269DC90))(this, m);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2_array* GetUv0Modified(ModdingAPI::Exposed::UnityEngine::Mesh* m) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2_array*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MeshChannelsCache*, ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x269DED0))(this, m);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2_array* GetUv2(ModdingAPI::Exposed::UnityEngine::Mesh* m) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2_array*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MeshChannelsCache*, ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x269E120))(this, m);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2_array* GetUv3(ModdingAPI::Exposed::UnityEngine::Mesh* m) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2_array*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MeshChannelsCache*, ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x269E360))(this, m);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2_array* GetUv4(ModdingAPI::Exposed::UnityEngine::Mesh* m) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2_array*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MeshChannelsCache*, ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x269E5D0))(this, m);
  }
  ModdingAPI::Exposed::UnityEngine::Color_array* GetColors(ModdingAPI::Exposed::UnityEngine::Mesh* m) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Color_array*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MeshChannelsCache*, ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x269E840))(this, m);
  }
  ModdingAPI::Exposed::UnityEngine::Matrix4x4_array* GetBindposes(ModdingAPI::Exposed::UnityEngine::Renderer* r) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Matrix4x4_array*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MeshChannelsCache*, ModdingAPI::Exposed::UnityEngine::Renderer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x269EA80))(this, r);
  }
  ModdingAPI::Exposed::UnityEngine::BoneWeight_array* GetBoneWeights(ModdingAPI::Exposed::UnityEngine::Renderer* r, int32_t numVertsInMeshBeingAdded) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::BoneWeight_array*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MeshChannelsCache*, ModdingAPI::Exposed::UnityEngine::Renderer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x269ED50))(this, r, numVertsInMeshBeingAdded);
  }
  ModdingAPI::Exposed::System::Int32_array* GetTriangles(ModdingAPI::Exposed::UnityEngine::Mesh* m) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Int32_array*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MeshChannelsCache*, ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x269F030))(this, m);
  }
  ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MBBlendShape_array* GetBlendShapes(ModdingAPI::Exposed::UnityEngine::Mesh* m, int32_t gameObjectID) {
    return reinterpret_cast<ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MBBlendShape_array*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MeshChannelsCache*, ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x269F270))(this, m, gameObjectID);
  }
  ModdingAPI::Exposed::UnityEngine::Color_array* _getMeshColors(ModdingAPI::Exposed::UnityEngine::Mesh* m) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Color_array*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MeshChannelsCache*, ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x269FDF0))(this, m);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3_array* _getMeshNormals(ModdingAPI::Exposed::UnityEngine::Mesh* m) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3_array*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MeshChannelsCache*, ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26A0020))(this, m);
  }
  ModdingAPI::Exposed::UnityEngine::Vector4_array* _getMeshTangents(ModdingAPI::Exposed::UnityEngine::Mesh* m) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector4_array*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MeshChannelsCache*, ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26A0230))(this, m);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2_array* _getMeshUVs(ModdingAPI::Exposed::UnityEngine::Mesh* m) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2_array*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MeshChannelsCache*, ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26A04F0))(this, m);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2_array* _getMeshUV2s(ModdingAPI::Exposed::UnityEngine::Mesh* m) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2_array*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MeshChannelsCache*, ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26A0720))(this, m);
  }
  void _generateTangents(ModdingAPI::Exposed::System::Int32_array* triangles, ModdingAPI::Exposed::UnityEngine::Vector3_array* verts, ModdingAPI::Exposed::UnityEngine::Vector2_array* uvs, ModdingAPI::Exposed::UnityEngine::Vector3_array* normals, ModdingAPI::Exposed::UnityEngine::Vector4_array* outTangents) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle::MeshChannelsCache*, ModdingAPI::Exposed::System::Int32_array*, ModdingAPI::Exposed::UnityEngine::Vector3_array*, ModdingAPI::Exposed::UnityEngine::Vector2_array*, ModdingAPI::Exposed::UnityEngine::Vector3_array*, ModdingAPI::Exposed::UnityEngine::Vector4_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26A0FD0))(this, triangles, verts, uvs, normals, outTangents);
  }

  // Static methods:
  static inline ModdingAPI::Exposed::UnityEngine::Matrix4x4_array* _getBindPoses(ModdingAPI::Exposed::UnityEngine::Renderer* r) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Matrix4x4_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Renderer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26A09B0))(r);
  }
  static inline ModdingAPI::Exposed::UnityEngine::BoneWeight_array* _getBoneWeights(ModdingAPI::Exposed::UnityEngine::Renderer* r, int32_t numVertsInMeshBeingAdded) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::BoneWeight_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Renderer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26A0CD0))(r, numVertsInMeshBeingAdded);
  }
};
}