// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Vector3.hpp"


namespace ModdingAPI::Exposed::EasyRoads3Dv3 {
struct __ODQCQOODDO_Il2CppStaticFields {
};

struct __ODQCQOODDO_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __ODQCQOODDO_Il2CppClass {
  Il2CppClass_1 _1;
  __ODQCQOODDO_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __ODQCQOODDO_Il2CppVtbl vtbl;
};

class ODQCQOODDO {
public:
  // Il2Cpp fields:
  __ODQCQOODDO_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ODQCQOODDO*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x389390))(this);
  }

  // Static methods:
  static inline float ODDCDDDCOQ(ModdingAPI::Exposed::System::Collections::Generic::List_T_* splinePoints, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr, int32_t marker, ModdingAPI::Exposed::System::Collections::Generic::List_T_* segPoints, ModdingAPI::Exposed::System::Collections::Generic::List_T_* tValues, float totalDist, int32_t startMarker, float xzDistance, bool getDistance) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, int32_t, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, float, int32_t, float, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7810B0))(splinePoints, scr, marker, segPoints, tValues, totalDist, startMarker, xzDistance, getDistance);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Vector3 OCCQQQCCCD(ModdingAPI::Exposed::UnityEngine::Vector3 m2, ModdingAPI::Exposed::UnityEngine::Vector3 m1, ModdingAPI::Exposed::UnityEngine::Vector3 dir1, ModdingAPI::Exposed::UnityEngine::Vector3 dir2, ModdingAPI::Exposed::UnityEngine::Vector3 p1, ModdingAPI::Exposed::UnityEngine::Vector3 p4, bool isAhead, int32_t firstLastAdjust, bool isNoAdjust, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, bool, int32_t, bool, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x783000))(m2, m1, dir1, dir2, p1, p4, isAhead, firstLastAdjust, isNoAdjust, scr);
  }
  static inline float OODCQODQDD(ModdingAPI::Exposed::System::Collections::Generic::List_T_* splinePoints, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr, int32_t marker, ModdingAPI::Exposed::System::Collections::Generic::List_T_* segPoints, ModdingAPI::Exposed::System::Collections::Generic::List_T_* tValues, float totalDist, int32_t startMarker, float xzDistance, bool getDistance) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, int32_t, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, float, int32_t, float, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x784500))(splinePoints, scr, marker, segPoints, tValues, totalDist, startMarker, xzDistance, getDistance);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Vector3 ODDCDDDCOQ(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr, int32_t marker, bool flag) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x785AF0))(scr, marker, flag);
  }
  static inline void OQCDOOOCDO(ModdingAPI::Exposed::System::Collections::Generic::List_T_* splinePoints, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr, int32_t marker, ModdingAPI::Exposed::UnityEngine::Vector3 pivotp, ModdingAPI::Exposed::UnityEngine::Vector3 p1, ModdingAPI::Exposed::UnityEngine::Vector3 p2, ModdingAPI::Exposed::System::Collections::Generic::List_T_* segPoints, ModdingAPI::Exposed::System::Collections::Generic::List_T_* tValues) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, int32_t, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x786E90))(splinePoints, scr, marker, pivotp, p1, p2, segPoints, tValues);
  }
  static inline void ODOOOQOOQO(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* roadScr, ModdingAPI::Exposed::System::Collections::Generic::List_T_* tmpNodes, ModdingAPI::Exposed::System::Collections::Generic::List_T_* splineStrength, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* prefabInstance, int32_t connectionSegment, ModdingAPI::Exposed::UnityEngine::Vector3 connectionDir, ModdingAPI::Exposed::UnityEngine::Vector3 lastForward, int32_t startEnd) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*, int32_t, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x787770))(roadScr, tmpNodes, splineStrength, prefabInstance, connectionSegment, connectionDir, lastForward, startEnd);
  }
  static inline int32_t OOQOCQDDDC(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr, ModdingAPI::Exposed::System::Collections::Generic::List_T_* splinePoints, float minIndent, float outerRoadDistance, ModdingAPI::Exposed::UnityEngine::Vector3 ODDOCQCCDQIndent, ModdingAPI::Exposed::UnityEngine::Vector3 startPrefabIndent, int32_t leftright) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, float, float, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x78A2F0))(scr, splinePoints, minIndent, outerRoadDistance, ODDOCQCCDQIndent, startPrefabIndent, leftright);
  }
  static inline int32_t ODODDODDCO(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr, ModdingAPI::Exposed::System::Collections::Generic::List_T_* splinePoints, float minIndent, float outerRoadDistance, ModdingAPI::Exposed::UnityEngine::Vector3 ODDOCQCCDQIndent, ModdingAPI::Exposed::UnityEngine::Vector3 startPrefabIndent, int32_t leftright, int32_t endAdjustInt, float endAdjustDistance) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, float, float, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x78A7E0))(scr, splinePoints, minIndent, outerRoadDistance, ODDOCQCCDQIndent, startPrefabIndent, leftright, endAdjustInt, endAdjustDistance);
  }
  static inline ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* ODCQCQODDD(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr, int32_t marker) {
    return reinterpret_cast<ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x78ADC0))(scr, marker);
  }
  static inline ModdingAPI::Exposed::EasyRoads3Dv3::ERMarkerExt* DuplicateMarker(ModdingAPI::Exposed::EasyRoads3Dv3::ERMarkerExt* sourceMarker) {
    return reinterpret_cast<ModdingAPI::Exposed::EasyRoads3Dv3::ERMarkerExt*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERMarkerExt*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x78C610))(sourceMarker);
  }
  static inline ModdingAPI::Exposed::UnityEngine::GameObject* JoinRoads(ModdingAPI::Exposed::System::Collections::Generic::List_T_* objects, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* road, int32_t marker) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GameObject*(__fastcall*)(ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x78C830))(objects, road, marker);
  }
  static inline void SwapIndentsSurroundings(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x78D900))(scr);
  }
  static inline void SwapSideObjects(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x78DB00))(scr);
  }
  static inline int32_t SoIndexMatch(ModdingAPI::Exposed::EasyRoads3Dv3::ERSOMarkerExt* markerSO, ModdingAPI::Exposed::System::Collections::Generic::List_T_* Sos, int32_t index) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERSOMarkerExt*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x78E170))(markerSO, Sos, index);
  }
  static inline bool ODDDQDCQOQ(ModdingAPI::Exposed::System::Collections::Generic::List_T_* splinePoints, int32_t markers) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x78E210))(splinePoints, markers);
  }
  static inline void OCOQODCDCQ(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr, ModdingAPI::Exposed::UnityEngine::Vector3 OCCDODODDQ, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* ODDOCQCCDQ, int32_t targetElement, bool reverse, bool uvReverse, bool forceAutoRotate) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*, int32_t, bool, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x78E2B0))(scr, OCCDODODDQ, ODDOCQCCDQ, targetElement, reverse, uvReverse, forceAutoRotate);
  }
  static inline void OCOCQQCCCC(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr, ModdingAPI::Exposed::System::Collections::Generic::List_T_* surfaceVecs, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* prefabScript, bool startSurfacesSafe, float distance, float minIndent) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*, bool, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x78F4F0))(scr, surfaceVecs, prefabScript, startSurfacesSafe, distance, minIndent);
  }
  static inline void OCQDQDDCQO(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr, ModdingAPI::Exposed::System::Collections::Generic::List_T_* surfaceVecs, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* prefabScript, int32_t el, bool surfacesSafe, float distance, float minIndent) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*, int32_t, bool, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x790F20))(scr, surfaceVecs, prefabScript, el, surfacesSafe, distance, minIndent);
  }
  static inline void OOCCDCOODQ(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* ODDOCQCCDQ, int32_t targetElement, bool reverse, bool uvReverse) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*, int32_t, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7927F0))(scr, ODDOCQCCDQ, targetElement, reverse, uvReverse);
  }
  static inline void ODOODQDQQC(ModdingAPI::Exposed::System::Collections::Generic::List_T_* uv1, ModdingAPI::Exposed::System::Collections::Generic::List_T_* uv2) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x794410))(uv1, uv2);
  }
  static inline ModdingAPI::Exposed::System::Collections::Generic::List_T_* OOQQOQDODQ(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr, ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadShapeVecs, ModdingAPI::Exposed::System::Collections::Generic::List_T_* connectionVecs, int32_t startend) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7953F0))(scr, roadShapeVecs, connectionVecs, startend);
  }
  static inline ModdingAPI::Exposed::System::Collections::Generic::List_T_* OQDODODDQC(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr, ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadShapeVecs, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* prefab, int32_t connection, int32_t startend) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x795E90))(scr, roadShapeVecs, prefab, connection, startend);
  }
  static inline void ODCOOQCQQD(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularBase* baseScr, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr, int32_t m1, int32_t m2, int32_t m3) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularBase*, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x796C20))(baseScr, scr, m1, m2, m3);
  }
  static inline void OQDOCOCDDO(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularBase* baseScr, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr, int32_t m1, int32_t m2, int32_t m3) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularBase*, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7970D0))(baseScr, scr, m1, m2, m3);
  }
  static inline void OQOQQDOQDD(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularBase* baseScript, ModdingAPI::Exposed::System::Collections::Generic::List_T_* vecs, ModdingAPI::Exposed::System::Collections::Generic::List_T_* tValues, float heigthOffset, ModdingAPI::Exposed::UnityEngine::Vector3 lastHeightAdjustCP, float resolution, float distance, bool nextMarkerContourAdjust, ModdingAPI::Exposed::System::Collections::Generic::List_T_* currentVecs, ModdingAPI::Exposed::System::Collections::Generic::List_T_* testPoints, ModdingAPI::Exposed::System::Collections::Generic::List_T_* randomRotations) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularBase*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, float, ModdingAPI::Exposed::UnityEngine::Vector3, float, float, bool, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7975B0))(baseScript, vecs, tValues, heigthOffset, lastHeightAdjustCP, resolution, distance, nextMarkerContourAdjust, currentVecs, testPoints, randomRotations);
  }
  static inline void ODOQCDQDQQ(int32_t lastInt, int32_t currentInt, ModdingAPI::Exposed::System::Collections::Generic::List_T_* tValues, ModdingAPI::Exposed::System::Collections::Generic::List_T_* tmpTValues) {
    reinterpret_cast<void(__fastcall*)(int32_t, int32_t, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x798C70))(lastInt, currentInt, tValues, tmpTValues);
  }
  static inline bool OQQCDQOCDO(ModdingAPI::Exposed::UnityEngine::Vector3 ODDOCQCCDQIndent, ModdingAPI::Exposed::UnityEngine::Vector3 otherPrefabIndent, ModdingAPI::Exposed::UnityEngine::Vector3 v) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x798E70))(ODDOCQCCDQIndent, otherPrefabIndent, v);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Vector3 ODCCODOOQQ(ModdingAPI::Exposed::UnityEngine::Vector3 position, ModdingAPI::Exposed::UnityEngine::Vector3 sourceV3, float angle, ModdingAPI::Exposed::UnityEngine::Vector3 euler) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, float, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x798FB0))(position, sourceV3, angle, euler);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Vector3 OQDDQDOQQQ(ModdingAPI::Exposed::UnityEngine::Vector3 position, ModdingAPI::Exposed::UnityEngine::Vector3 sourceV3, float angle, ModdingAPI::Exposed::UnityEngine::Vector3 euler) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, float, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x799190))(position, sourceV3, angle, euler);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Vector3 GetEulerAngles(ModdingAPI::Exposed::UnityEngine::Vector3 v3direction) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x799370))(v3direction);
  }
  static inline void OCCCOQOCDO(ModdingAPI::Exposed::UnityEngine::GameObject* road, ModdingAPI::Exposed::UnityEngine::Mesh* sourceMesh, int32_t LODCount, int32_t LODLevel, int32_t colCount, ModdingAPI::Exposed::System::Collections::Generic::List_T_* hardEdge, ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadShapeMaterialIntCounts) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GameObject*, ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t, int32_t, int32_t, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7995A0))(road, sourceMesh, LODCount, LODLevel, colCount, hardEdge, roadShapeMaterialIntCounts);
  }
  static inline void ODOQDCODCQ(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* prefab, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* road, int32_t connectionIndex, int32_t startEnd) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x79C000))(prefab, road, connectionIndex, startEnd);
  }
};
}