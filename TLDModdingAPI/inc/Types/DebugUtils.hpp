// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.DateTime.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Vector3.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Color.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Matrix4x4.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Quaternion.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Bounds.hpp"


namespace ModdingAPI::Exposed {
struct __DebugUtils_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* s_ErrorTrack;
  bool s_PreviousPauseState;
  int32_t s_ErrorMessageCount;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* s_LoggingFilterDisplayNames;
  ModdingAPI::Exposed::System::DateTime simpleTimerStartTime;
};

struct __DebugUtils_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __DebugUtils_Il2CppClass {
  Il2CppClass_1 _1;
  __DebugUtils_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __DebugUtils_Il2CppVtbl vtbl;
};

class DebugUtils {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C6E8F0;
  static inline    __DebugUtils_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __DebugUtils_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__DebugUtils_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __DebugUtils_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DebugUtils*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_*> s_ErrorTrack = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_ErrorTrack; }
  );
  static inline __CppStaticProperty<bool> s_PreviousPauseState = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_PreviousPauseState; }
  );
  static inline __CppStaticProperty<int32_t> s_ErrorMessageCount = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_ErrorMessageCount; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_*> s_LoggingFilterDisplayNames = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_LoggingFilterDisplayNames; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::DateTime> simpleTimerStartTime = __CppStaticProperty<ModdingAPI::Exposed::System::DateTime>(
   []() { return &GetStaticClassInstance()->pStaticFields->simpleTimerStartTime; }
  );

  // Static methods:
  static inline System_String* GetLoggingFilterName(int32_t filter) {
    return reinterpret_cast<System_String*(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F947C0))(filter);
  }
  static inline System_String* MaybeTruncateErrorMessage(System_String* value, int32_t maxLength) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F949A0))(value, maxLength);
  }
  static inline void MaybeShowMessagePanel(System_String* messageType, System_String* message) {
    reinterpret_cast<void(__fastcall*)(System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F94A60))(messageType, message);
  }
  static inline void ResumeGameAfterError() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F95340))();
  }
  static inline void Assert(bool condition) {
    reinterpret_cast<void(__fastcall*)(bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F954B0))(condition);
  }
  static inline void Assert(bool condition, System_String* output) {
    reinterpret_cast<void(__fastcall*)(bool, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F95560))(condition, output);
  }
  static inline void AssertFormat(bool condition, System_String* output, ModdingAPI::Exposed::System::Object_array* args) {
    reinterpret_cast<void(__fastcall*)(bool, System_String*, ModdingAPI::Exposed::System::Object_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F95620))(condition, output, args);
  }
  static inline void Unimplemented() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))();
  }
  static inline void Log(System_String* message) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F956E0))(message);
  }
  static inline void Log(int32_t filter, System_String* message) {
    reinterpret_cast<void(__fastcall*)(int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F95780))(filter, message);
  }
  static inline void LogFormat(System_String* message, ModdingAPI::Exposed::System::Object_array* args) {
    reinterpret_cast<void(__fastcall*)(System_String*, ModdingAPI::Exposed::System::Object_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F95920))(message, args);
  }
  static inline void LogFormat(int32_t filter, System_String* message, ModdingAPI::Exposed::System::Object_array* args) {
    reinterpret_cast<void(__fastcall*)(int32_t, System_String*, ModdingAPI::Exposed::System::Object_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F959D0))(filter, message, args);
  }
  static inline void LogWarning(System_String* message) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F95B00))(message);
  }
  static inline void LogWarning(int32_t filter, System_String* message) {
    reinterpret_cast<void(__fastcall*)(int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F95BA0))(filter, message);
  }
  static inline void LogWarningFormat(System_String* message, ModdingAPI::Exposed::System::Object_array* args) {
    reinterpret_cast<void(__fastcall*)(System_String*, ModdingAPI::Exposed::System::Object_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F95D40))(message, args);
  }
  static inline void LogWarningFormat(int32_t filter, System_String* message, ModdingAPI::Exposed::System::Object_array* args) {
    reinterpret_cast<void(__fastcall*)(int32_t, System_String*, ModdingAPI::Exposed::System::Object_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F95DF0))(filter, message, args);
  }
  static inline void LogError(System_String* message) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F95F20))(message);
  }
  static inline void LogError(int32_t filter, System_String* message) {
    reinterpret_cast<void(__fastcall*)(int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F95FF0))(filter, message);
  }
  static inline void LogErrorFormat(System_String* message, ModdingAPI::Exposed::System::Object_array* args) {
    reinterpret_cast<void(__fastcall*)(System_String*, ModdingAPI::Exposed::System::Object_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F961A0))(message, args);
  }
  static inline void LogErrorFormat(int32_t filter, System_String* message, ModdingAPI::Exposed::System::Object_array* args) {
    reinterpret_cast<void(__fastcall*)(int32_t, System_String*, ModdingAPI::Exposed::System::Object_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F96290))(filter, message, args);
  }
  static inline void Watch(int32_t filter, System_String* name, System_String* value) {
    reinterpret_cast<void(__fastcall*)(int32_t, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(filter, name, value);
  }
  static inline void Watch(int32_t filter, System_String* name, float value, System_String* format) {
    reinterpret_cast<void(__fastcall*)(int32_t, System_String*, float, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(filter, name, value, format);
  }
  static inline void Watch(int32_t filter, System_String* name, ModdingAPI::Exposed::UnityEngine::Vector3 value, System_String* format) {
    reinterpret_cast<void(__fastcall*)(int32_t, System_String*, ModdingAPI::Exposed::UnityEngine::Vector3, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F963F0))(filter, name, value, format);
  }
  static inline void ShowPoint(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(pos);
  }
  static inline void ShowPoint(ModdingAPI::Exposed::UnityEngine::Vector3 pos, ModdingAPI::Exposed::UnityEngine::Color colour, float duration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Color, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F964C0))(pos, colour, duration);
  }
  static inline void ShowTransform(ModdingAPI::Exposed::UnityEngine::Transform* trans) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Transform*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(trans);
  }
  static inline void ShowTransform(ModdingAPI::Exposed::UnityEngine::Transform* trans, int32_t colourSet, float duration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Transform*, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(trans, colourSet, duration);
  }
  static inline void ShowTransform(ModdingAPI::Exposed::UnityEngine::Matrix4x4 mat, float duration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(mat, duration);
  }
  static inline void ShowTransform(ModdingAPI::Exposed::UnityEngine::Matrix4x4 mat, int32_t colourSet, float duration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(mat, colourSet, duration);
  }
  static inline void ShowTransform(ModdingAPI::Exposed::UnityEngine::Vector3 pos, ModdingAPI::Exposed::UnityEngine::Quaternion rot, float duration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Quaternion, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(pos, rot, duration);
  }
  static inline void ShowTransform(ModdingAPI::Exposed::UnityEngine::Vector3 pos, ModdingAPI::Exposed::UnityEngine::Quaternion rot, int32_t colourSet, float duration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Quaternion, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F96910))(pos, rot, colourSet, duration);
  }
  static inline void ShowTransform(ModdingAPI::Exposed::UnityEngine::Vector3 pos, ModdingAPI::Exposed::UnityEngine::Matrix4x4 mat, float duration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Matrix4x4, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(pos, mat, duration);
  }
  static inline void ShowTransform(ModdingAPI::Exposed::UnityEngine::Vector3 pos, ModdingAPI::Exposed::UnityEngine::Matrix4x4 mat, int32_t colourSet, float duration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Matrix4x4, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F96BE0))(pos, mat, colourSet, duration);
  }
  static inline void ShowBounds(ModdingAPI::Exposed::UnityEngine::Bounds bounds, ModdingAPI::Exposed::UnityEngine::Color colour, float duration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Bounds, ModdingAPI::Exposed::UnityEngine::Color, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F97570))(bounds, colour, duration);
  }
  static inline void ShowBounds(ModdingAPI::Exposed::UnityEngine::Transform* transform, ModdingAPI::Exposed::UnityEngine::Vector3 size, ModdingAPI::Exposed::UnityEngine::Color colour, float duration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Transform*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Color, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F977A0))(transform, size, colour, duration);
  }
  static inline void ShowBox(ModdingAPI::Exposed::UnityEngine::Transform* transform, ModdingAPI::Exposed::UnityEngine::Vector3 size, ModdingAPI::Exposed::UnityEngine::Color colour, float duration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Transform*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Color, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(transform, size, colour, duration);
  }
  static inline void ShowBox(ModdingAPI::Exposed::UnityEngine::Matrix4x4 mat, ModdingAPI::Exposed::UnityEngine::Vector3 size, ModdingAPI::Exposed::UnityEngine::Color colour, float duration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Color, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F97A30))(mat, size, colour, duration);
  }
  static inline void ShowSphere(ModdingAPI::Exposed::UnityEngine::Vector3 pos, ModdingAPI::Exposed::UnityEngine::Quaternion rot, float radius, ModdingAPI::Exposed::UnityEngine::Color colour, float duration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Quaternion, float, ModdingAPI::Exposed::UnityEngine::Color, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F987F0))(pos, rot, radius, colour, duration);
  }
  static inline void ShowSphere(ModdingAPI::Exposed::UnityEngine::Transform* t, float radius, ModdingAPI::Exposed::UnityEngine::Color colour, float duration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Transform*, float, ModdingAPI::Exposed::UnityEngine::Color, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(t, radius, colour, duration);
  }
  static inline void ShowSphere(ModdingAPI::Exposed::UnityEngine::Matrix4x4 mat, float radius, ModdingAPI::Exposed::UnityEngine::Color colour, float duration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4, float, ModdingAPI::Exposed::UnityEngine::Color, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F98A20))(mat, radius, colour, duration);
  }
  static inline void ShowFrustum(ModdingAPI::Exposed::UnityEngine::Plane_array* planes, ModdingAPI::Exposed::UnityEngine::Color col) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Plane_array*, ModdingAPI::Exposed::UnityEngine::Color)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F98F60))(planes, col);
  }
  static inline void ShowHermitePatch(ModdingAPI::Exposed::UnityEngine::Transform* transform, ModdingAPI::Exposed::UnityEngine::Vector3_array* hermiteCoefficients, ModdingAPI::Exposed::UnityEngine::Vector3 minPos, ModdingAPI::Exposed::UnityEngine::Vector3 maxPos, int32_t subDivs, float yOffset, float duration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Transform*, ModdingAPI::Exposed::UnityEngine::Vector3_array*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F99720))(transform, hermiteCoefficients, minPos, maxPos, subDivs, yOffset, duration);
  }
  static inline void SimpleTimerStart() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F9A460))();
  }
  static inline float SimpleTimerGetElapsed() {
    return reinterpret_cast<float(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F9A540))();
  }
  static inline System_String* GetGameObjectPath(ModdingAPI::Exposed::UnityEngine::GameObject* go) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F9A630))(go);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F9A8F0))();
  }
};
}