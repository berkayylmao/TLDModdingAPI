// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Vector3.hpp"


namespace ModdingAPI::Exposed::EasyRoads3Dv3 {
struct __OCDCCCQDCC_Il2CppStaticFields {
};

struct __OCDCCCQDCC_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __OCDCCCQDCC_Il2CppClass {
  Il2CppClass_1 _1;
  __OCDCCCQDCC_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __OCDCCCQDCC_Il2CppVtbl vtbl;
};

class OCDCCCQDCC {
public:
  // Il2Cpp fields:
  __OCDCCCQDCC_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::OCDCCCQDCC*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x389390))(this);
  }

  // Static methods:
  static inline void ODOODDQDOD(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* scr, ModdingAPI::Exposed::UnityEngine::Vector3_array* meshVecs, ModdingAPI::Exposed::UnityEngine::Vector3_array* surfaceMeshVecs) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*, ModdingAPI::Exposed::UnityEngine::Vector3_array*, ModdingAPI::Exposed::UnityEngine::Vector3_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x71F410))(scr, meshVecs, surfaceMeshVecs);
  }
  static inline void ODDDCCOOCD(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* scr, float angle, int32_t dirInt, bool leftrightFlag) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*, float, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x723280))(scr, angle, dirInt, leftrightFlag);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Vector3 ODCODQOOOD(ModdingAPI::Exposed::UnityEngine::Vector3 cornerPos, float indent, ModdingAPI::Exposed::UnityEngine::Vector3 outerPos, ModdingAPI::Exposed::UnityEngine::Vector3 dir) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, float, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x723920))(cornerPos, indent, outerPos, dir);
  }
  static inline void OOCDOCQODC(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* scr, ModdingAPI::Exposed::UnityEngine::Vector3 vecOuter1, ModdingAPI::Exposed::UnityEngine::Vector3 vecOuter2, ModdingAPI::Exposed::UnityEngine::Vector3 mainSurrounding, ModdingAPI::Exposed::UnityEngine::Vector3 connectedSurrounding) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x723BA0))(scr, vecOuter1, vecOuter2, mainSurrounding, connectedSurrounding);
  }
  static inline void CheckIndentOOOOCDQQOC(ModdingAPI::Exposed::UnityEngine::Vector3 dir1, ModdingAPI::Exposed::UnityEngine::Vector3 dir2, ModdingAPI::Exposed::UnityEngine::Vector3 cornerPos, ModdingAPI::Exposed::UnityEngine::Vector3 outer2, ModdingAPI::Exposed::UnityEngine::Vector3 indent2, ModdingAPI::Exposed::UnityEngine::Vector3 indent1, float angle, float minIndent, bool leftrightFlag) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, float, float, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x723E90))(dir1, dir2, cornerPos, outer2, indent2, indent1, angle, minIndent, leftrightFlag);
  }
  static inline void OQODDDQOOC(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* scr, ModdingAPI::Exposed::UnityEngine::Vector3 corner, ModdingAPI::Exposed::UnityEngine::Vector3 indentMain, ModdingAPI::Exposed::UnityEngine::Vector3 indentConnection, ModdingAPI::Exposed::UnityEngine::Vector3 mainSurrounding, ModdingAPI::Exposed::UnityEngine::Vector3 connectedSurrounding, int32_t dirInt) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x724170))(scr, corner, indentMain, indentConnection, mainSurrounding, connectedSurrounding, dirInt);
  }
  static inline void OQDCDQOCQQ(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* scr, int32_t connection, ModdingAPI::Exposed::UnityEngine::Vector3 leftIndent, ModdingAPI::Exposed::UnityEngine::Vector3 leftSurrounding, ModdingAPI::Exposed::UnityEngine::Vector3 rightIndent, ModdingAPI::Exposed::UnityEngine::Vector3 rightSurrounding) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*, int32_t, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x724840))(scr, connection, leftIndent, leftSurrounding, rightIndent, rightSurrounding);
  }
  static inline void OOCCDCQQCC(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* scr, int32_t connection, int32_t leftIndent, int32_t leftSurrounding, int32_t rightIndent, int32_t rightSurrounding) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*, int32_t, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x724A30))(scr, connection, leftIndent, leftSurrounding, rightIndent, rightSurrounding);
  }
  static inline void OOODCDCOQC(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* scr, int32_t connection, ModdingAPI::Exposed::UnityEngine::Vector3 outerPoint, ModdingAPI::Exposed::UnityEngine::Vector3 crosspoint) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*, int32_t, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x724BE0))(scr, connection, outerPoint, crosspoint);
  }
  static inline float OQOCQQCDDQ(ModdingAPI::Exposed::UnityEngine::Vector3 v11, ModdingAPI::Exposed::UnityEngine::Vector3 v12, ModdingAPI::Exposed::UnityEngine::Vector3 v21, ModdingAPI::Exposed::UnityEngine::Vector3 v22) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x724F10))(v11, v12, v21, v22);
  }
  static inline void OQOODQQCDD(ModdingAPI::Exposed::UnityEngine::Vector3 inner, ModdingAPI::Exposed::UnityEngine::Vector3 outer, float minDist) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7251D0))(inner, outer, minDist);
  }
  static inline void ODDCOCQQCD(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* scr, ModdingAPI::Exposed::UnityEngine::Vector3_array* meshVecs) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*, ModdingAPI::Exposed::UnityEngine::Vector3_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7253B0))(scr, meshVecs);
  }
  static inline void OCQQOQCCDC(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* scr, int32_t connection) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7259F0))(scr, connection);
  }
  static inline void OCQDDQOQQO(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* scr, ModdingAPI::Exposed::EasyRoads3Dv3::QDOODOQQDQODD* el1, ModdingAPI::Exposed::EasyRoads3Dv3::QDOODOQQDQODD* el2, int32_t leftright) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*, ModdingAPI::Exposed::EasyRoads3Dv3::QDOODOQQDQODD*, ModdingAPI::Exposed::EasyRoads3Dv3::QDOODOQQDQODD*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x726180))(scr, el1, el2, leftright);
  }
  static inline void ODQQOODCDQ(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* scr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x727110))(scr);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Vector3 GetTerrainPos(ModdingAPI::Exposed::UnityEngine::Transform* transform, ModdingAPI::Exposed::UnityEngine::Vector3 pos, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularBase* scr) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Transform*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularBase*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x727CB0))(transform, pos, scr);
  }
};
}