// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Guid.hpp"


namespace ModdingAPI::Exposed::Rewired::Data::Mapping {
struct __HardwareJoystickTemplateMap_Il2CppStaticFields {
};

struct __HardwareJoystickTemplateMap_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_get_Guid;
  VirtualInvokeData _5_GetElementIdentifierNames;
  VirtualInvokeData _6_GetElementIdentifierIds;
  VirtualInvokeData _7_ContainsElementIdentifier;
  VirtualInvokeData _8_GetMappableElementIdentifierInfo;
  VirtualInvokeData _9_Rewired_Data_Mapping_IHardwareControllerMap_Internal_get_ElementIdentifiers;
  VirtualInvokeData _10_Rewired_Data_Mapping_IHardwareControllerMap_Internal_GetElementIdentifier;
  VirtualInvokeData _11_Rewired_Data_Mapping_IHardwareControllerTemplateMap_Internal_get_name;
  VirtualInvokeData _12_Rewired_Data_Mapping_IHardwareControllerTemplateMap_Internal_get_typeGuid;
  VirtualInvokeData _13_Rewired_Data_Mapping_IHardwareControllerTemplateMap_Internal_GetElementIdentifierCount;
  VirtualInvokeData _14_Rewired_Data_Mapping_IHardwareControllerTemplateMap_Internal_GetTemplateElementIdentifier;
  VirtualInvokeData _15_Rewired_Data_Mapping_IHardwareControllerTemplateMap_Internal_GetTemplateElementIdentifierById;
  VirtualInvokeData _16_Rewired_Data_Mapping_IHardwareControllerTemplateMap_Internal_GetSpecialTemplateElementByElementIdentifierId;
  VirtualInvokeData _17_Rewired_Data_Mapping_IHardwareControllerTemplateMap_Internal_GetAxisTarget;
  VirtualInvokeData _18_Rewired_Data_Mapping_IHardwareControllerTemplateMap_Internal_GetButtonTarget;
};

struct __HardwareJoystickTemplateMap_Il2CppClass {
  Il2CppClass_1 _1;
  __HardwareJoystickTemplateMap_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __HardwareJoystickTemplateMap_Il2CppVtbl vtbl;
};

class HardwareJoystickTemplateMap {
public:
  // Il2Cpp fields:
  __HardwareJoystickTemplateMap_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  System_String* controllerName;
  System_String* description;
  System_String* templateGuid;
  System_String* className;
  ModdingAPI::Exposed::Rewired::Data::ControllerTemplateElementIdentifier_Editor_array* elementIdentifiers;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* joysticks;
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap::SpecialElementEntry_array* specialElements;
  int32_t elementIdentifierIdCounter;
  int32_t joystickIdCounter;

  // Member methods:
  ModdingAPI::Exposed::System::Guid get_Guid() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Guid(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3352A0))(this);
  }
  System_String* get_ControllerName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335360))(this);
  }
  System_String* get_ClassName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335370))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* get_ElementIdentifiers() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335380))(this);
  }
  ModdingAPI::Exposed::Rewired::ControllerTemplateElementIdentifier* GetElementIdentifier(int32_t id) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ControllerTemplateElementIdentifier*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335510))(this, id);
  }
  bool ContainsElementIdentifier(int32_t id) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3355B0))(this, id);
  }
  ModdingAPI::Exposed::System::String_array* GetElementIdentifierNames() {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3355D0))(this);
  }
  ModdingAPI::Exposed::System::Int32_array* GetElementIdentifierIds() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Int32_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3357D0))(this);
  }
  ModdingAPI::Exposed::System::String_array* GetElementIdentifierScriptingNames(bool useAlternate) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335900))(this, useAlternate);
  }
  int32_t GetMappableElementIdentifierInfo(ModdingAPI::Exposed::System::String_array* names, ModdingAPI::Exposed::System::Int32_array* ids) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*, ModdingAPI::Exposed::System::String_array*, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335B30))(this, names, ids);
  }
  int32_t GetNonMappableElementIdentifierInfo(ModdingAPI::Exposed::System::String_array* names, ModdingAPI::Exposed::System::Int32_array* ids) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*, ModdingAPI::Exposed::System::String_array*, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x336150))(this, names, ids);
  }
  ModdingAPI::Exposed::System::String_array* GetJoystickNames() {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x336730))(this);
  }
  ModdingAPI::Exposed::System::Int32_array* GetJoystickIds() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Int32_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x336900))(this);
  }
  ModdingAPI::Exposed::System::Guid GetJoystickGuid(int32_t joystickId) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Guid(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x336A50))(this, joystickId);
  }
  int32_t GetJoystickId(ModdingAPI::Exposed::System::Guid guid) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*, ModdingAPI::Exposed::System::Guid)>(Helpers::Memory::GetInstance().MakeAbsolute(0x336BF0))(this, guid);
  }
  System_String* GetJoystickFileGuidString(int32_t joystickId) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x336E10))(this, joystickId);
  }
  bool BFBjMQSPrNMOZquLQIUAsOOYNzF(ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor* , ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap* , ModdingAPI::Exposed::System::Guid , System_String* ) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*, ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*, ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*, ModdingAPI::Exposed::System::Guid, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x336F40))(this, , , , );
  }
  ModdingAPI::Exposed::Rewired::ControllerTemplateElementIdentifier* BCltaRBmGritFkrGmOxTihRLruW(ModdingAPI::Exposed::System::Guid , int32_t ) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ControllerTemplateElementIdentifier*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*, ModdingAPI::Exposed::System::Guid, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x337CD0))(this, , );
  }
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap::SpecialElementEntry_array* GetSpecialElementsOrig() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap::SpecialElementEntry_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319980))(this);
  }
  ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap::Entry* BSYfuPrqXRdUGfatTCzwsALKORD(ModdingAPI::Exposed::System::Guid ) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap::Entry*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*, ModdingAPI::Exposed::System::Guid)>(Helpers::Memory::GetInstance().MakeAbsolute(0x338110))(this, );
  }
  int32_t yxcrJAtgsuPpWsdecWSoorLqoBK(int32_t ) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x338310))(this, );
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* Rewired::Data::Mapping::IHardwareControllerMap_Internal::get_ElementIdentifiers() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3383B0))(this);
  }
  ModdingAPI::Exposed::Rewired::Interfaces::IControllerElementIdentifierCommon_Internal* Rewired::Data::Mapping::IHardwareControllerMap_Internal::GetElementIdentifier(int32_t ) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Interfaces::IControllerElementIdentifierCommon_Internal*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x338540))(this, );
  }
  System_String* Rewired::Data::Mapping::IHardwareControllerTemplateMap_Internal::get_name() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335360))(this);
  }
  ModdingAPI::Exposed::System::Guid Rewired::Data::Mapping::IHardwareControllerTemplateMap_Internal::get_typeGuid() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Guid(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x338550))(this);
  }
  int32_t Rewired::Data::Mapping::IHardwareControllerTemplateMap_Internal::GetElementIdentifierCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x338580))(this);
  }
  ModdingAPI::Exposed::Rewired::Interfaces::IControllerTemplateElementIdentifier* Rewired::Data::Mapping::IHardwareControllerTemplateMap_Internal::GetTemplateElementIdentifier(int32_t ) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Interfaces::IControllerTemplateElementIdentifier*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x338590))(this, );
  }
  ModdingAPI::Exposed::Rewired::Interfaces::IControllerTemplateElementIdentifier* Rewired::Data::Mapping::IHardwareControllerTemplateMap_Internal::GetTemplateElementIdentifierById(int32_t ) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Interfaces::IControllerTemplateElementIdentifier*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x338540))(this, );
  }
  ModdingAPI::Exposed::Rewired::Data::Mapping::IControllerTemplateMapSpecialElement_Internal* Rewired::Data::Mapping::IHardwareControllerTemplateMap_Internal::GetSpecialTemplateElementByElementIdentifierId(int32_t ) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Data::Mapping::IControllerTemplateMapSpecialElement_Internal*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3385D0))(this, );
  }
  ModdingAPI::Exposed::NwtKrWLPdxReWrJpprZAAzzvGYK* Rewired::Data::Mapping::IHardwareControllerTemplateMap_Internal::GetAxisTarget(ModdingAPI::Exposed::Rewired::Controller* , int32_t ) {
    return reinterpret_cast<ModdingAPI::Exposed::NwtKrWLPdxReWrJpprZAAzzvGYK*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*, ModdingAPI::Exposed::Rewired::Controller*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x338680))(this, , );
  }
  ModdingAPI::Exposed::NwtKrWLPdxReWrJpprZAAzzvGYK* Rewired::Data::Mapping::IHardwareControllerTemplateMap_Internal::GetButtonTarget(ModdingAPI::Exposed::Rewired::Controller* , int32_t ) {
    return reinterpret_cast<ModdingAPI::Exposed::NwtKrWLPdxReWrJpprZAAzzvGYK*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*, ModdingAPI::Exposed::Rewired::Controller*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x338F10))(this, , );
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickTemplateMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x339460))(this);
  }
};
}