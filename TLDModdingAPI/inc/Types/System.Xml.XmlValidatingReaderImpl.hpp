// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System::Xml {
struct __XmlValidatingReaderImpl_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Xml::XmlResolver* s_tempResolver;
};

struct __XmlValidatingReaderImpl_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_Dispose;
  VirtualInvokeData _5_get_Settings;
  VirtualInvokeData _6_get_NodeType;
  VirtualInvokeData _7_get_Name;
  VirtualInvokeData _8_get_LocalName;
  VirtualInvokeData _9_get_NamespaceURI;
  VirtualInvokeData _10_get_Prefix;
  VirtualInvokeData _11_get_HasValue;
  VirtualInvokeData _12_get_Value;
  VirtualInvokeData _13_get_Depth;
  VirtualInvokeData _14_get_BaseURI;
  VirtualInvokeData _15_get_IsEmptyElement;
  VirtualInvokeData _16_get_IsDefault;
  VirtualInvokeData _17_get_SchemaInfo;
  VirtualInvokeData _18_ReadContentAsString;
  VirtualInvokeData _19_get_AttributeCount;
  VirtualInvokeData _20_MoveToAttribute;
  VirtualInvokeData _21_MoveToAttribute;
  VirtualInvokeData _22_MoveToFirstAttribute;
  VirtualInvokeData _23_MoveToNextAttribute;
  VirtualInvokeData _24_MoveToElement;
  VirtualInvokeData _25_ReadAttributeValue;
  VirtualInvokeData _26_Read;
  VirtualInvokeData _27_get_EOF;
  VirtualInvokeData _28_Close;
  VirtualInvokeData _29_get_ReadState;
  VirtualInvokeData _30_get_NameTable;
  VirtualInvokeData _31_LookupNamespace;
  VirtualInvokeData _32_get_CanResolveEntity;
  VirtualInvokeData _33_ResolveEntity;
  VirtualInvokeData _34_MoveToContent;
  VirtualInvokeData _35_ReadStartElement;
  VirtualInvokeData _36_ReadEndElement;
  VirtualInvokeData _37_IsStartElement;
  VirtualInvokeData _38_Dispose;
  VirtualInvokeData _39_get_NamespaceManager;
  VirtualInvokeData _40_get_DtdInfo;
  VirtualInvokeData _41_get_LineNumber;
  VirtualInvokeData _42_get_LinePosition;
  VirtualInvokeData _43_System_Xml_IXmlNamespaceResolver_GetNamespacesInScope;
  VirtualInvokeData _44_System_Xml_IXmlNamespaceResolver_LookupNamespace;
  VirtualInvokeData _45_System_Xml_IXmlNamespaceResolver_LookupPrefix;
};

struct __XmlValidatingReaderImpl_Il2CppClass {
  Il2CppClass_1 _1;
  __XmlValidatingReaderImpl_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __XmlValidatingReaderImpl_Il2CppVtbl vtbl;
};

class XmlValidatingReaderImpl {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C80DC0;
  static inline    __XmlValidatingReaderImpl_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __XmlValidatingReaderImpl_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__XmlValidatingReaderImpl_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __XmlValidatingReaderImpl_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::System::Xml::XmlReader* coreReader;
  ModdingAPI::Exposed::System::Xml::XmlTextReaderImpl* coreReaderImpl;
  ModdingAPI::Exposed::System::Xml::IXmlNamespaceResolver* coreReaderNSResolver;
  int32_t validationType;
  ModdingAPI::Exposed::System::Xml::Schema::BaseValidator* validator;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaCollection* schemaCollection;
  bool processIdentityConstraints;
  int32_t parsingFunction;
  ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl::ValidationEventHandling* eventHandling;
  ModdingAPI::Exposed::System::Xml::XmlParserContext* parserContext;
  ModdingAPI::Exposed::System::Xml::ReadContentAsBinaryHelper* readBinaryHelper;
  ModdingAPI::Exposed::System::Xml::XmlReader* outerReader;

  // Member methods:
  void ::ctor(ModdingAPI::Exposed::System::Xml::XmlReader* reader, ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler* settingsEventHandler, bool processIdentityConstraints) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*, ModdingAPI::Exposed::System::Xml::XmlReader*, ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D08E0))(this, reader, settingsEventHandler, processIdentityConstraints);
  }
  ModdingAPI::Exposed::System::Xml::XmlReaderSettings* get_Settings() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlReaderSettings*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D0EA0))(this);
  }
  int32_t get_NodeType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x47D060))(this);
  }
  System_String* get_Name() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D10E0))(this);
  }
  System_String* get_LocalName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1110))(this);
  }
  System_String* get_NamespaceURI() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1140))(this);
  }
  System_String* get_Prefix() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5C7550))(this);
  }
  bool get_HasValue() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1170))(this);
  }
  System_String* get_Value() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D11A0))(this);
  }
  int32_t get_Depth() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D11D0))(this);
  }
  System_String* get_BaseURI() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1200))(this);
  }
  bool get_IsEmptyElement() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1230))(this);
  }
  bool get_IsDefault() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1260))(this);
  }
  int32_t get_ReadState() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1290))(this);
  }
  bool get_EOF() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D12D0))(this);
  }
  ModdingAPI::Exposed::System::Xml::XmlNameTable* get_NameTable() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlNameTable*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1300))(this);
  }
  int32_t get_AttributeCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1330))(this);
  }
  bool MoveToAttribute(System_String* name) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1360))(this, name);
  }
  void MoveToAttribute(int32_t i) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D13B0))(this, i);
  }
  bool MoveToFirstAttribute() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D13F0))(this);
  }
  bool MoveToNextAttribute() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1440))(this);
  }
  bool MoveToElement() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1490))(this);
  }
  bool Read() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D14E0))(this);
  }
  void Close() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D16A0))(this);
  }
  System_String* LookupNamespace(System_String* prefix) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D16E0))(this, prefix);
  }
  bool ReadAttributeValue() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1710))(this);
  }
  bool get_CanResolveEntity() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x403F70))(this);
  }
  void ResolveEntity() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1780))(this);
  }
  int32_t get_LineNumber() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D17C0))(this);
  }
  int32_t get_LinePosition() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D18A0))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IDictionary_TKey__TValue_* System::Xml::IXmlNamespaceResolver::GetNamespacesInScope(int32_t scope) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IDictionary_TKey__TValue_*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1980))(this, scope);
  }
  System_String* System::Xml::IXmlNamespaceResolver::LookupNamespace(System_String* prefix) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4583A0))(this, prefix);
  }
  System_String* System::Xml::IXmlNamespaceResolver::LookupPrefix(System_String* namespaceName) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1A20))(this, namespaceName);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IDictionary_TKey__TValue_* GetNamespacesInScope(int32_t scope) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IDictionary_TKey__TValue_*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1980))(this, scope);
  }
  System_String* LookupPrefix(System_String* namespaceName) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1A20))(this, namespaceName);
  }
  int32_t get_ValidationType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36F810))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaCollection* get_Schemas() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaCollection*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319970))(this);
  }
  void ParseDtdFromParserContext() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1AD0))(this);
  }
  void ValidateDtd() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1D00))(this);
  }
  void ResolveEntityInternally() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1E80))(this);
  }
  void SetupValidation(int32_t valType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D1F20))(this, valType);
  }
  ModdingAPI::Exposed::System::Xml::XmlResolver* GetResolver() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlResolver*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D21A0))(this);
  }
  void ProcessCoreReaderEvent() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D2390))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::BaseValidator* get_Validator() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::BaseValidator*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335370))(this);
  }
  void set_Validator(ModdingAPI::Exposed::System::Xml::Schema::BaseValidator* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*, ModdingAPI::Exposed::System::Xml::Schema::BaseValidator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A410))(this, value);
  }
  ModdingAPI::Exposed::System::Xml::XmlNamespaceManager* get_NamespaceManager() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlNamespaceManager*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D2510))(this);
  }
  bool get_StandAlone() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D2540))(this);
  }
  void set_SchemaTypeObject(Il2CppObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D2560))(this, value);
  }
  Il2CppObject* get_TypedValueObject() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D25A0))(this);
  }
  void set_TypedValueObject(Il2CppObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D25E0))(this, value);
  }
  bool AddDefaultAttribute(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef* attdef) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*, ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D2620))(this, attdef);
  }
  ModdingAPI::Exposed::System::Xml::IDtdInfo* get_DtdInfo() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::IDtdInfo*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D2640))(this);
  }
  void ValidateDefaultAttributeOnUse(ModdingAPI::Exposed::System::Xml::IDtdDefaultAttributeInfo* defaultAttribute, ModdingAPI::Exposed::System::Xml::XmlTextReaderImpl* coreReader) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlValidatingReaderImpl*, ModdingAPI::Exposed::System::Xml::IDtdDefaultAttributeInfo*, ModdingAPI::Exposed::System::Xml::XmlTextReaderImpl*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5D2670))(this, defaultAttribute, coreReader);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::XmlResolver*> s_tempResolver = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::XmlResolver*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_tempResolver; }
  );
};
}