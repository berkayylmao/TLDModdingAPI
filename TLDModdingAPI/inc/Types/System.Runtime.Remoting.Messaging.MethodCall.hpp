// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Runtime.Serialization.StreamingContext.hpp"


namespace ModdingAPI::Exposed::System::Runtime::Remoting::Messaging {
struct __MethodCall_Il2CppStaticFields {
};

struct __MethodCall_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_get_ArgCount;
  VirtualInvokeData _5_get_Args;
  VirtualInvokeData _6_get_LogicalCallContext;
  VirtualInvokeData _7_get_MethodBase;
  VirtualInvokeData _8_get_MethodName;
  VirtualInvokeData _9_get_MethodSignature;
  VirtualInvokeData _10_get_TypeName;
  VirtualInvokeData _11_get_Uri;
  VirtualInvokeData _12_GetArg;
  VirtualInvokeData _15_System_Runtime_Remoting_Messaging_IInternalMessage_get_TargetIdentity;
  VirtualInvokeData _16_System_Runtime_Remoting_Messaging_IInternalMessage_set_TargetIdentity;
  VirtualInvokeData _17_System_Runtime_Remoting_Messaging_IInternalMessage_get_Uri;
  VirtualInvokeData _18_System_Runtime_Remoting_Messaging_IInternalMessage_set_Uri;
  VirtualInvokeData _19_InitMethodProperty;
  VirtualInvokeData _20_GetObjectData;
  VirtualInvokeData _21_get_Properties;
  VirtualInvokeData _22_InitDictionary;
  VirtualInvokeData _23_Init;
};

struct __MethodCall_Il2CppClass {
  Il2CppClass_1 _1;
  __MethodCall_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __MethodCall_Il2CppVtbl vtbl;
};

class MethodCall {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C727B8;
  static inline    __MethodCall_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __MethodCall_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__MethodCall_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __MethodCall_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  System_String* _uri;
  System_String* _typeName;
  System_String* _methodName;
  ModdingAPI::Exposed::System::Object_array* _args;
  ModdingAPI::Exposed::System::Type_array* _methodSignature;
  ModdingAPI::Exposed::System::Reflection::MethodBase* _methodBase;
  ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::LogicalCallContext* _callContext;
  ModdingAPI::Exposed::System::Runtime::Remoting::Identity* _targetIdentity;
  ModdingAPI::Exposed::System::Type_array* _genericArguments;
  ModdingAPI::Exposed::System::Collections::IDictionary* ExternalProperties;
  ModdingAPI::Exposed::System::Collections::IDictionary* InternalProperties;

  // Member methods:
  void ::ctor(ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo* info, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF62890))(this, info, context);
  }
  void ::ctor(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::CADMethodCallMessage* msg) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*, ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::CADMethodCallMessage*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF68570))(this, msg);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void CopyFrom(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::IMethodMessage* call) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*, ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::IMethodMessage*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF68770))(this, call);
  }
  void InitMethodProperty(System_String* key, Il2CppObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*, System_String*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF688F0))(this, key, value);
  }
  void GetObjectData(ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo* info, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF68CB0))(this, info, context);
  }
  int32_t get_ArgCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF68FB0))(this);
  }
  ModdingAPI::Exposed::System::Object_array* get_Args() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Object_array*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110B0))(this);
  }
  ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::LogicalCallContext* get_LogicalCallContext() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::LogicalCallContext*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF68FD0))(this);
  }
  ModdingAPI::Exposed::System::Reflection::MethodBase* get_MethodBase() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Reflection::MethodBase*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF69120))(this);
  }
  System_String* get_MethodName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF691C0))(this);
  }
  Il2CppObject* get_MethodSignature() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF69200))(this);
  }
  ModdingAPI::Exposed::System::Collections::IDictionary* get_Properties() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IDictionary*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF63170))(this);
  }
  void InitDictionary() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF693B0))(this);
  }
  System_String* get_TypeName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF69530))(this);
  }
  System_String* get_Uri() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311320))(this);
  }
  void set_Uri(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x30D060))(this, value);
  }
  System_String* System::Runtime::Remoting::Messaging::IInternalMessage::get_Uri() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311320))(this);
  }
  void System::Runtime::Remoting::Messaging::IInternalMessage::set_Uri(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x30D060))(this, value);
  }
  Il2CppObject* GetArg(int32_t argNum) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF69590))(this, argNum);
  }
  void Init() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void ResolveMethod() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF695D0))(this);
  }
  ModdingAPI::Exposed::System::Type* CastTo(System_String* clientType, ModdingAPI::Exposed::System::Type* serverType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*, System_String*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF69D70))(this, clientType, serverType);
  }
  ModdingAPI::Exposed::System::Runtime::Remoting::Identity* System::Runtime::Remoting::Messaging::IInternalMessage::get_TargetIdentity() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Runtime::Remoting::Identity*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319980))(this);
  }
  void System::Runtime::Remoting::Messaging::IInternalMessage::set_TargetIdentity(ModdingAPI::Exposed::System::Runtime::Remoting::Identity* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*, ModdingAPI::Exposed::System::Runtime::Remoting::Identity*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A430))(this, value);
  }
  ModdingAPI::Exposed::System::Type_array* get_GenericArguments() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type_array*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF6A190))(this);
  }

  // Static methods:
  static inline System_String* GetTypeNameFromAssemblyQualifiedName(System_String* aqname) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF6A080))(aqname);
  }
};
}