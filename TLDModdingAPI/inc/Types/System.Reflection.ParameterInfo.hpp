// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Runtime.Serialization.StreamingContext.hpp"


namespace ModdingAPI::Exposed::System::Reflection {
struct __ParameterInfo_Il2CppStaticFields {
};

struct __ParameterInfo_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _7_GetRealObject;
  VirtualInvokeData _8_get_ParameterType;
  VirtualInvokeData _9_get_Attributes;
  VirtualInvokeData _10_get_Member;
  VirtualInvokeData _11_get_Name;
  VirtualInvokeData _12_get_Position;
  VirtualInvokeData _13_get_DefaultValue;
  VirtualInvokeData _14_GetCustomAttributes;
  VirtualInvokeData _15_GetCustomAttributes;
  VirtualInvokeData _16_IsDefined;
};

struct __ParameterInfo_Il2CppClass {
  Il2CppClass_1 _1;
  __ParameterInfo_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __ParameterInfo_Il2CppVtbl vtbl;
};

class ParameterInfo {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C2E510;
  static inline    __ParameterInfo_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __ParameterInfo_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__ParameterInfo_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __ParameterInfo_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::System::Type* ClassImpl;
  Il2CppObject* DefaultValueImpl;
  ModdingAPI::Exposed::System::Reflection::MemberInfo* MemberImpl;
  System_String* NameImpl;
  int32_t PositionImpl;
  int32_t AttrsImpl;
  ModdingAPI::Exposed::System::Runtime::InteropServices::MarshalAsAttribute* marshalAs;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ParameterInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  System_String* ToString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ParameterInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF26E50))(this);
  }
  ModdingAPI::Exposed::System::Type* get_ParameterType() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ParameterInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311320))(this);
  }
  int32_t get_Attributes() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ParameterInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D880))(this);
  }
  bool get_IsIn() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ParameterInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF27380))(this);
  }
  bool get_IsOptional() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ParameterInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF273A0))(this);
  }
  bool get_IsOut() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ParameterInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF273C0))(this);
  }
  bool get_IsRetval() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ParameterInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF273E0))(this);
  }
  ModdingAPI::Exposed::System::Reflection::MemberInfo* get_Member() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Reflection::MemberInfo*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ParameterInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110A0))(this);
  }
  System_String* get_Name() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ParameterInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110B0))(this);
  }
  int32_t get_Position() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ParameterInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D870))(this);
  }
  ModdingAPI::Exposed::System::Object_array* GetPseudoCustomAttributes() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Object_array*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ParameterInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF27400))(this);
  }
  Il2CppObject* GetDefaultValueImpl() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ParameterInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335360))(this);
  }
  Il2CppObject* get_DefaultValue() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ParameterInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF27A30))(this);
  }
  ModdingAPI::Exposed::System::Object_array* GetCustomAttributes(bool inherit) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Object_array*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ParameterInfo*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF27A80))(this, inherit);
  }
  ModdingAPI::Exposed::System::Object_array* GetCustomAttributes(ModdingAPI::Exposed::System::Type* attributeType, bool inherit) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Object_array*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ParameterInfo*, ModdingAPI::Exposed::System::Type*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF27B00))(this, attributeType, inherit);
  }
  Il2CppObject* GetRealObject(ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ParameterInfo*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF27B80))(this, context);
  }
  bool IsDefined(ModdingAPI::Exposed::System::Type* attributeType, bool inherit) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ParameterInfo*, ModdingAPI::Exposed::System::Type*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(this, attributeType, inherit);
  }

  // Static methods:
  static inline void FormatParameters(ModdingAPI::Exposed::System::Text::StringBuilder* sb, ModdingAPI::Exposed::System::Reflection::ParameterInfo_array* p, int32_t callingConvention, bool serialization) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::StringBuilder*, ModdingAPI::Exposed::System::Reflection::ParameterInfo_array*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF270F0))(sb, p, callingConvention, serialization);
  }
  static inline ModdingAPI::Exposed::System::Reflection::ParameterInfo* New(ModdingAPI::Exposed::System::Reflection::ParameterInfo* pinfo, ModdingAPI::Exposed::System::Reflection::MemberInfo* member) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Reflection::ParameterInfo*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ParameterInfo*, ModdingAPI::Exposed::System::Reflection::MemberInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF27BD0))(pinfo, member);
  }
};
}