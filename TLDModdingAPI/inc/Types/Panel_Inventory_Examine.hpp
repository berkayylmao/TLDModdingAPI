// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Color.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"


namespace ModdingAPI::Exposed {
struct __Panel_Inventory_Examine_Il2CppStaticFields {
};

struct __Panel_Inventory_Examine_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __Panel_Inventory_Examine_Il2CppClass {
  Il2CppClass_1 _1;
  __Panel_Inventory_Examine_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Panel_Inventory_Examine_Il2CppVtbl vtbl;
};

class Panel_Inventory_Examine {
public:
  // Il2Cpp fields:
  __Panel_Inventory_Examine_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::ButtonLegendContainer* m_ButtonLegendContainer;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_FireContainer;
  ModdingAPI::Exposed::UIWidget* m_ExamineWidget;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_MainWindow;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_HarvestWindow;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ActionToolSelect;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_RepairPanel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_CleanPanel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SharpenPanel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_RifleUnloadPanel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ReadPanel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ActionInProgressWindow;
  ModdingAPI::Exposed::ScrollList* m_ToolScrollList;
  ModdingAPI::Exposed::UIButton* m_Button_Harvest;
  ModdingAPI::Exposed::UIButton* m_Button_Repair;
  ModdingAPI::Exposed::UIButton* m_Button_Refuel;
  ModdingAPI::Exposed::UIButton* m_Button_Unload;
  ModdingAPI::Exposed::UIButton* m_Button_Clean;
  ModdingAPI::Exposed::UIButton* m_Button_Sharpen;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Button_HarvestBackground;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Button_RepairBackground;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Button_RefuelBackground;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Button_UnloadBackground;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Button_CleanBackground;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Button_SharpenBackground;
  ModdingAPI::Exposed::UISprite_array* m_ItemIcons;
  ModdingAPI::Exposed::UILabel* m_Item_Label;
  ModdingAPI::Exposed::UITexture* m_GearItemTexture;
  ModdingAPI::Exposed::UnityEngine::Transform* m_ButtonTopLeftLocation;
  float m_ButtonSpacing;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_MainWindow_Buttons;
  ModdingAPI::Exposed::UILabel* m_Stack_Label;
  ModdingAPI::Exposed::UILabel* m_Repair_SkillLabel;
  ModdingAPI::Exposed::UILabel* m_Repair_AmountLabel;
  ModdingAPI::Exposed::UILabel* m_Repair_ChanceSuccessLabel;
  ModdingAPI::Exposed::UILabel* m_Repair_ConditionCapLabel;
  ModdingAPI::Exposed::UILabel* m_Repair_TimeLabel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_RequiredMaterialsArea;
  ModdingAPI::Exposed::UnityEngine::Color m_RequiredMaterialsLabelDefaultColor;
  ModdingAPI::Exposed::UILabel* m_Repair_RequiredMaterialsLabel;
  ModdingAPI::Exposed::HarvestRepairMaterial_array* m_RequiredMaterials;
  float m_RequiredMaterialCenteredX;
  float m_RequiredMaterialSpacing;
  float m_SkillIncreaseChanceOnSuccess;
  float m_SkillIncreaseChanceOnFailure;
  float m_RepairTimeSeconds;
  ModdingAPI::Exposed::UnityEngine::Color m_RepairLabelColorNormal;
  ModdingAPI::Exposed::UnityEngine::Color m_RepairLabelColorNormalHover;
  ModdingAPI::Exposed::UnityEngine::Color m_RepairLabelColorNormalSelected;
  ModdingAPI::Exposed::UnityEngine::Color m_RepairLabelColorDisabled;
  ModdingAPI::Exposed::UnityEngine::Color m_RepairLabelColorDisabledHover;
  ModdingAPI::Exposed::UnityEngine::Color m_RepairLabelColorDisabledSelected;
  ModdingAPI::Exposed::UnityEngine::Color m_HighConditionColor;
  System_String* m_NoToolSpriteName;
  ModdingAPI::Exposed::UnityEngine::Color m_NoToolSpriteColor;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_NoToolSpriteSizeModifier;
  ModdingAPI::Exposed::UILabel* m_RequiresToolLabel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_RepairPanel_Buttons;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_MouseRepairButton;
  ModdingAPI::Exposed::UISprite* m_Clean_X;
  ModdingAPI::Exposed::UILabel* m_Clean_SkillLabel;
  ModdingAPI::Exposed::UILabel* m_Clean_AmountLabel;
  ModdingAPI::Exposed::UILabel* m_Clean_ChanceSuccessLabel;
  ModdingAPI::Exposed::UILabel* m_Clean_TimeLabel;
  ModdingAPI::Exposed::UITexture* m_CleanRequiresToolSprite;
  ModdingAPI::Exposed::UILabel* m_CleanRequiresToolNameLabel;
  ModdingAPI::Exposed::UILabel* m_CleanRequiresToolLabel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_CleanPanel_Buttons;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_MouseCleanButton;
  float m_Clean_SkillIncreaseChanceOnSuccess;
  float m_Clean_SkillIncreaseChanceOnFailure;
  float m_CleanTimeSeconds;
  ModdingAPI::Exposed::UISprite* m_Sharpen_X;
  ModdingAPI::Exposed::UILabel* m_Sharpen_SkillLabel;
  ModdingAPI::Exposed::UILabel* m_Sharpen_AmountLabel;
  ModdingAPI::Exposed::UILabel* m_Sharpen_ChanceSuccessLabel;
  ModdingAPI::Exposed::UILabel* m_Sharpen_TimeLabel;
  ModdingAPI::Exposed::UITexture* m_SharpenRequiresToolSprite;
  ModdingAPI::Exposed::UILabel* m_SharpenRequiresToolNameLabel;
  ModdingAPI::Exposed::UILabel* m_SharpenRequiresToolLabel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SharpenPanel_Buttons;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_MouseSharpenButton;
  float m_Sharpen_SkillIncreaseChanceOnSuccess;
  float m_Sharpen_SkillIncreaseChanceOnFailure;
  float m_SharpenTimeSeconds;
  ModdingAPI::Exposed::UISprite* m_ResearchIcon;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_MouseReadButton;
  ModdingAPI::Exposed::UILabel* m_BookNameLabel;
  ModdingAPI::Exposed::UILabel* m_BookDescLabel;
  ModdingAPI::Exposed::UILabel* m_SkillImprovedLabel;
  ModdingAPI::Exposed::UILabel* m_TimeToReadRemainingLabel;
  ModdingAPI::Exposed::UILabel* m_TimeToReadLabel;
  ModdingAPI::Exposed::UILabel* m_SkillLevelLabel;
  ModdingAPI::Exposed::UILabel* m_SkillProgressBarLabel;
  ModdingAPI::Exposed::UIProgressBar* m_SkillProgressBar;
  ModdingAPI::Exposed::UISprite* m_SkillProgressBarSprite;
  ModdingAPI::Exposed::UIButton* m_ReadHoursIncrease;
  ModdingAPI::Exposed::UIButton* m_ReadHoursDecrease;
  ModdingAPI::Exposed::UISprite* m_GamepadReadHoursSpriteIncrease;
  ModdingAPI::Exposed::UISprite* m_GamepadReadHoursSpriteDecrease;
  float m_ReadTimeSeconds;
  ModdingAPI::Exposed::UISprite* m_Tool_ConditionSprite;
  ModdingAPI::Exposed::UISprite* m_Tool_ConditionBarBG;
  ModdingAPI::Exposed::UISprite* m_Tool_ConditionBarFG;
  ModdingAPI::Exposed::UILabel* m_SelectedToolName_Label;
  ModdingAPI::Exposed::UILabel* m_Tool_Condition_Label;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Button_ToolIncrease;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Button_ToolDecrease;
  ModdingAPI::Exposed::UILabel* m_Tool_ConfirmButtonLabel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ItemConditionObject;
  ModdingAPI::Exposed::UISprite* m_ConditionSprite;
  ModdingAPI::Exposed::UILabel* m_ConditionLabel;
  ModdingAPI::Exposed::UILabel* m_WeightLabel;
  ModdingAPI::Exposed::UILabel* m_HarvestItemName_Label;
  ModdingAPI::Exposed::UILabel* m_HarvestTime_Label;
  ModdingAPI::Exposed::HarvestRepairMaterial_array* m_HarvestYields;
  float m_HarvestYieldCenteredX;
  float m_HarvestYieldSpacing;
  float m_HarvestTimeSeconds;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_HarvestYieldRoot;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_HarvestYieldThreeRoot;
  ModdingAPI::Exposed::HarvestRepairMaterial_array* m_HarvestThreeYields;
  ModdingAPI::Exposed::UILabel* m_HarvestRequiresToolLabel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_RefuelPanel;
  ModdingAPI::Exposed::UISprite* m_Refuel_X;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_RequiresFuelMessage;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ControllerRefuelButton;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_MouseRefuelButton;
  ModdingAPI::Exposed::UILabel* m_LanternFuelAmountLabel;
  ModdingAPI::Exposed::UILabel* m_FuelSupplyAmountLabel;
  ModdingAPI::Exposed::UISlider* m_Slider_ActionProgress;
  ModdingAPI::Exposed::UILabel* m_ProgressBarLabelRepair;
  ModdingAPI::Exposed::UILabel* m_ProgressBarLabelHarvest;
  ModdingAPI::Exposed::UnityEngine::GameObject_array* m_ButtonsToDisableDuringProgressBar;
  ModdingAPI::Exposed::GearItem* m_GearItem;
  bool m_EnableInventoryOnBack;
  bool m_HarvestInProgress;
  int32_t m_NumUnitsLeftToHarvest;
  bool m_ItemHarvestable;
  float m_ElapsedProgressBarSeconds;
  float m_ProgressBarTimeSeconds;
  uint32_t m_ProgressBarAudio;
  bool m_ItemSharpenable;
  bool m_SharpenInProgress;
  bool m_ReadInProgress;
  int32_t m_HoursToRead;
  bool m_ItemRepairable;
  bool m_RepairInProgress;
  bool m_RepairWillSucceed;
  bool m_ItemCleanable;
  bool m_CleanInProgress;
  int32_t m_SelectedToolIndex;
  float m_FailureAtProgressPercentage;
  float m_DayLengthScaleBeforeRepair;
  bool m_TimeAccelerated;
  ModdingAPI::Exposed::Panel_Inventory_Examine_MenuItem* m_MenuItemClean;
  ModdingAPI::Exposed::Panel_Inventory_Examine_MenuItem* m_MenuItemHarvest;
  ModdingAPI::Exposed::Panel_Inventory_Examine_MenuItem* m_MenuItemRefuel;
  ModdingAPI::Exposed::Panel_Inventory_Examine_MenuItem* m_MenuItemRepair;
  ModdingAPI::Exposed::Panel_Inventory_Examine_MenuItem* m_MenuItemSharpen;
  ModdingAPI::Exposed::Panel_Inventory_Examine_MenuItem* m_MenuItemUnload;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_Tools;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_Buttons;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_ButtonsMenuItems;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_ButtonDelegates;
  int32_t m_SelectedButtonIndex;
  bool m_IsInInspectGearMode;
  int32_t m_CameFromScreenCategory;

  // Member methods:
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A3A10))(this);
  }
  void Enable(bool enable, int32_t cameFrom) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, bool, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A4B50))(this, enable, cameFrom);
  }
  bool IsEnabled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x165DF10))(this);
  }
  bool IsHarvesting() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A51D0))(this);
  }
  bool IsRepairing() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A51E0))(this);
  }
  bool IsCleaning() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A51F0))(this);
  }
  bool IsSharpening() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A5200))(this);
  }
  bool IsReading() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A5210))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A5220))(this);
  }
  void UpdateLabels() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A5750))(this);
  }
  void UpdateMainWindowNavigation() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A5AF0))(this);
  }
  void UpdateReadPanelNavigation() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A6270))(this);
  }
  void CheckSelectedButton() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A6620))(this);
  }
  void OnToolSelectBack() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A6A60))(this);
  }
  void UpdateActionToolSelect() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A6A70))(this);
  }
  void UpdateMainAndToolHybrid() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A6C00))(this);
  }
  void SetRepairInProgress(bool on) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A7360))(this, on);
  }
  void SetHarvestInProgress(bool on) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A75E0))(this, on);
  }
  void SetCleanInProgress(bool on) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A7850))(this, on);
  }
  void SetSharpenInProgress(bool on) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A7AD0))(this, on);
  }
  void SetReadInProgress(bool on) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A7D50))(this, on);
  }
  void UpdateActionProgressBar() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A7FD0))(this);
  }
  void RestoreTimeOfDay() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A8740))(this);
  }
  void AccelerateTimeOfDay(int32_t minutes, bool doFadeout) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A8810))(this, minutes, doFadeout);
  }
  void DegradeToolUsedForAction() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A8920))(this);
  }
  void ConsumeMaterialsUsedForRepair() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A8C20))(this);
  }
  void StopProgressBarAudio() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A8EF0))(this);
  }
  void RepairFinished() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A8FF0))(this);
  }
  void RepairFailed() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A9090))(this);
  }
  void RepairSuccessful() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A9180))(this);
  }
  void UpdateClothingSkillAfterRepair(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A9620))(this, gi);
  }
  void UpdateSkillAfterRepair(bool success) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A96E0))(this, success);
  }
  bool RollForRepairSkillIncrease(bool success) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A9950))(this, success);
  }
  void CleanFinished() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A9A30))(this);
  }
  void CleanSuccessful() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A9AB0))(this);
  }
  void UpdateSkillAfterClean(bool success) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A9CC0))(this, success);
  }
  float RollForCleanSkillIncrease(bool success) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19A9E90))(this, success);
  }
  void SharpenFinished() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19AA040))(this);
  }
  void SharpenSuccessful() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19AA0C0))(this);
  }
  void UpdateSkillAfterSharpen(bool success) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19AA2D0))(this, success);
  }
  float RollForSharpenSkillIncrease(bool success) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19AA4A0))(this, success);
  }
  void RefreshSelectedActionTool() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19AA650))(this);
  }
  void RefreshTools() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19AAD50))(this);
  }
  void RefreshMaterialsTable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19ABAB0))(this);
  }
  bool RepairHasRequiredTool() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19AC0E0))(this);
  }
  void UpdateRepairLabels() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19AC170))(this);
  }
  void UpdateCleanLabels() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19ACA10))(this);
  }
  void UpdateWeightAndConditionLabels() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19AD430))(this);
  }
  void GetCleanConditionIncreaseAndDuration(float conditionIncrease, int32_t durationMinutes) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19AD800))(this, conditionIncrease, durationMinutes);
  }
  void UpdateSharpenLabels() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19ADCA0))(this);
  }
  void GetSharpenConditionIncreaseAndDuration(float conditionIncrease, int32_t durationMinutes) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19AE720))(this, conditionIncrease, durationMinutes);
  }
  void RefreshRepairPanel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19AE990))(this);
  }
  void RefreshCleanPanel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19AEC80))(this);
  }
  bool CleanHasRequiredTool() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19AEDF0))(this);
  }
  void RefreshSharpenPanel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19AEE80))(this);
  }
  void RefreshRefuelPanel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19AF0D0))(this);
  }
  void RefreshReadPanel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19AF7A0))(this);
  }
  void RefreshHoursToRead() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B0440))(this);
  }
  bool SharpenHasRequiredTool() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B0860))(this);
  }
  bool CanRefuel() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B08F0))(this);
  }
  void RefreshMainWindow() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B09B0))(this);
  }
  void OnSelectHarvestButton() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B1490))(this);
  }
  void OnSelectRepairButton() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B1540))(this);
  }
  void OnSelectRefuelButton() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B15F0))(this);
  }
  void OnSelectCleanButton() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B16A0))(this);
  }
  void OnSelectSharpenButton() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B1750))(this);
  }
  void SelectHarvestButton(bool selected) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B1800))(this, selected);
  }
  void SelectRepairButton(bool selected) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B1870))(this, selected);
  }
  void SelectRefuelButton(bool selected) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B1940))(this, selected);
  }
  void SelectCleanButton(bool selected) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B19B0))(this, selected);
  }
  void SelectUnloadButton(bool selected) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B1B20))(this, selected);
  }
  void SelectSharpenButton(bool selected) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B1B90))(this, selected);
  }
  void SelectButton(int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B1D00))(this, index);
  }
  void RefreshButton() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B1EE0))(this);
  }
  void OnEquip() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B2940))(this);
  }
  void OnHarvest() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B2A60))(this);
  }
  bool RepairHasRequiredMaterial() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B2CA0))(this);
  }
  bool CanRepair() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B3070))(this);
  }
  void OnRepair() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B30A0))(this);
  }
  void OnProgressBarCancel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B3250))(this);
  }
  ModdingAPI::Exposed::UnityEngine::GameObject* GetSelectedTool() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GameObject*(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B3540))(this);
  }
  void OnSelectActionTool() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B3620))(this);
  }
  void OnSelectRepairTool() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B3810))(this);
  }
  void StartRepair(int32_t durationMinutes, System_String* repairAudio) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B3E40))(this, durationMinutes, repairAudio);
  }
  int32_t GetModifiedRepairDuration(ModdingAPI::Exposed::Repairable* r, int32_t baseMinutes) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, ModdingAPI::Exposed::Repairable*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B4170))(this, r, baseMinutes);
  }
  int32_t GetModifiedCleanDuration(ModdingAPI::Exposed::Cleanable* c, float conditionIncrease, int32_t baseMinutes) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, ModdingAPI::Exposed::Cleanable*, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B4250))(this, c, conditionIncrease, baseMinutes);
  }
  int32_t GetModifiedSharpenDuration(ModdingAPI::Exposed::Sharpenable* s, float conditionIncrease, int32_t baseMinutes) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, ModdingAPI::Exposed::Sharpenable*, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B4330))(this, s, conditionIncrease, baseMinutes);
  }
  int32_t GetModifiedActionDuration(ModdingAPI::Exposed::GearItem* gi, float conditionIncrease, int32_t baseMinutes) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, ModdingAPI::Exposed::GearItem*, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B4410))(this, gi, conditionIncrease, baseMinutes);
  }
  float GetChanceActionSuccess(float skillBaseChance) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B4780))(this, skillBaseChance);
  }
  bool RollForActionSuccess(float baseSkillChance) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B48B0))(this, baseSkillChance);
  }
  void OnRefuel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B49E0))(this);
  }
  void RefuelFinished(bool success, bool playerCancel, float progress) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, bool, bool, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B4DD0))(this, success, playerCancel, progress);
  }
  void OnSelectUnload() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B4F90))(this);
  }
  void OnUnload() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B5040))(this);
  }
  bool DoUnload() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B5140))(this);
  }
  void OnClean() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B5370))(this);
  }
  void OnSelectCleanTool() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B5480))(this);
  }
  void StartClean(int32_t durationMinutes, System_String* cleanAudio) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B57E0))(this, durationMinutes, cleanAudio);
  }
  void OnSharpen() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B5980))(this);
  }
  void OnRead() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B5A90))(this);
  }
  void ReadComplete(float normalizedProgress) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B5FE0))(this, normalizedProgress);
  }
  void OnReadHoursIncrease() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B61D0))(this);
  }
  void OnReadHoursDecrease() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B62F0))(this);
  }
  void OnSelectSharpenTool() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B63D0))(this);
  }
  void StartSharpen(int32_t durationMinutes, System_String* sharpenAudio) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B6760))(this, durationMinutes, sharpenAudio);
  }
  void StartRead(int32_t durationMinutes, System_String* readAudio) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B6900))(this, durationMinutes, readAudio);
  }
  void OnBack() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B6AA0))(this);
  }
  void SelectWindow(ModdingAPI::Exposed::UnityEngine::GameObject* window) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B6F50))(this, window);
  }
  void OnToolIncrease() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B75F0))(this);
  }
  void OnToolDecrease() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B76B0))(this);
  }
  void SelectToolByIndex(int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B7770))(this, index);
  }
  void StartHarvest() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B7870))(this);
  }
  bool CanHarvest() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B7B50))(this);
  }
  void RefreshHarvest() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B7D80))(this);
  }
  bool CheckForHarvestSuccess(ModdingAPI::Exposed::Harvest* harvest) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, ModdingAPI::Exposed::Harvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B8A10))(this, harvest);
  }
  void HarvestSuccessful() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B8B80))(this);
  }
  void MaybeReturnAmmoOrFuelToInventory(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B95B0))(this, gi);
  }
  void MaybeEnableInspectModeMesh(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B9BA0))(this, gi);
  }
  void EnterInspectGearMode() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19B9DB0))(this);
  }
  void ExitInspectGearMode() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19BA0F0))(this);
  }
  void UpdateButtonLegend() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19BA4E0))(this);
  }
  bool MaybeAbortReadingWithHUDMessage() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19BAAF0))(this);
  }
  float GetChanceSuccessfullRepair(ModdingAPI::Exposed::GearItem* gi) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19BAE90))(this, gi);
  }
  System_String* GetCurrentSkillName(ModdingAPI::Exposed::GearItem* gi) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19BB0E0))(this, gi);
  }
  bool GearItemIsConsideredClothing(ModdingAPI::Exposed::GearItem* gi) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19BB2A0))(this, gi);
  }
  float GetConditionIncreaseFromRepair(ModdingAPI::Exposed::GearItem* gi) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19BB4C0))(this, gi);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Inventory_Examine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19BB740))(this);
  }

  // Static methods:
  static inline bool CanClean(ModdingAPI::Exposed::GearItem* gi) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19BA3D0))(gi);
  }
};
}