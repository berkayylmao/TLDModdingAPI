// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System::Xml::Schema {
struct __BaseProcessor_Il2CppStaticFields {
};

struct __BaseProcessor_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __BaseProcessor_Il2CppClass {
  Il2CppClass_1 _1;
  __BaseProcessor_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __BaseProcessor_Il2CppVtbl vtbl;
};

class BaseProcessor {
public:
  // Il2Cpp fields:
  __BaseProcessor_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::System::Xml::XmlNameTable* nameTable;
  ModdingAPI::Exposed::System::Xml::Schema::SchemaNames* schemaNames;
  ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler* eventHandler;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaCompilationSettings* compilationSettings;
  int32_t errorCount;
  System_String* NsXml;

  // Member methods:
  void ::ctor(ModdingAPI::Exposed::System::Xml::XmlNameTable* nameTable, ModdingAPI::Exposed::System::Xml::Schema::SchemaNames* schemaNames, ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler* eventHandler) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::BaseProcessor*, ModdingAPI::Exposed::System::Xml::XmlNameTable*, ModdingAPI::Exposed::System::Xml::Schema::SchemaNames*, ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x839C40))(this, nameTable, schemaNames, eventHandler);
  }
  void ::ctor(ModdingAPI::Exposed::System::Xml::XmlNameTable* nameTable, ModdingAPI::Exposed::System::Xml::Schema::SchemaNames* schemaNames, ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler* eventHandler, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaCompilationSettings* compilationSettings) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::BaseProcessor*, ModdingAPI::Exposed::System::Xml::XmlNameTable*, ModdingAPI::Exposed::System::Xml::Schema::SchemaNames*, ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaCompilationSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x839DC0))(this, nameTable, schemaNames, eventHandler, compilationSettings);
  }
  ModdingAPI::Exposed::System::Xml::XmlNameTable* get_NameTable() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlNameTable*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::BaseProcessor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311320))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::SchemaNames* get_SchemaNames() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::SchemaNames*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::BaseProcessor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x839EA0))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler* get_EventHandler() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::BaseProcessor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110A0))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaCompilationSettings* get_CompilationSettings() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaCompilationSettings*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::BaseProcessor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110B0))(this);
  }
  bool get_HasErrors() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::BaseProcessor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x83A000))(this);
  }
  void AddToTable(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* table, ModdingAPI::Exposed::System::Xml::XmlQualifiedName* qname, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject* item) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::BaseProcessor*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable*, ModdingAPI::Exposed::System::Xml::XmlQualifiedName*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x83A010))(this, table, qname, item);
  }
  bool IsValidAttributeGroupRedefine(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject* existingObject, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject* item, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* table) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::BaseProcessor*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x83A4D0))(this, existingObject, item, table);
  }
  bool IsValidGroupRedefine(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject* existingObject, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject* item, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* table) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::BaseProcessor*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x83A660))(this, existingObject, item, table);
  }
  bool IsValidTypeRedefine(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject* existingObject, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject* item, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* table) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::BaseProcessor*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x83A7C0))(this, existingObject, item, table);
  }
  void SendValidationEvent(System_String* code, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject* source) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::BaseProcessor*, System_String*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x83A930))(this, code, source);
  }
  void SendValidationEvent(System_String* code, System_String* msg, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject* source) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::BaseProcessor*, System_String*, System_String*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x83AAB0))(this, code, msg, source);
  }
  void SendValidationEvent(System_String* code, System_String* msg1, System_String* msg2, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject* source) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::BaseProcessor*, System_String*, System_String*, System_String*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x83AC30))(this, code, msg1, msg2, source);
  }
  void SendValidationEvent(System_String* code, ModdingAPI::Exposed::System::String_array* args, ModdingAPI::Exposed::System::Exception* innerException, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject* source) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::BaseProcessor*, System_String*, ModdingAPI::Exposed::System::String_array*, ModdingAPI::Exposed::System::Exception*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x83AE70))(this, code, args, innerException, source);
  }
  void SendValidationEvent(System_String* code, System_String* msg1, System_String* msg2, System_String* sourceUri, int32_t lineNumber, int32_t linePosition) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::BaseProcessor*, System_String*, System_String*, System_String*, System_String*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x83B040))(this, code, msg1, msg2, sourceUri, lineNumber, linePosition);
  }
  void SendValidationEvent(System_String* code, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject* source, int32_t severity) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::BaseProcessor*, System_String*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x83B290))(this, code, source, severity);
  }
  void SendValidationEvent(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaException* e) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::BaseProcessor*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaException*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x83B410))(this, e);
  }
  void SendValidationEvent(System_String* code, System_String* msg, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject* source, int32_t severity) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::BaseProcessor*, System_String*, System_String*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x83B420))(this, code, msg, source, severity);
  }
  void SendValidationEvent(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaException* e, int32_t severity) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::BaseProcessor*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaException*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x83B5B0))(this, e, severity);
  }
  void SendValidationEventNoThrow(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaException* e, int32_t severity) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::BaseProcessor*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaException*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x83B760))(this, e, severity);
  }
};
}