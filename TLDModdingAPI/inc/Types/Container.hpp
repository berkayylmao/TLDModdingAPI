// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI::Exposed::UnityEngine::Vector3.hpp"


namespace ModdingAPI::Exposed {
struct __Container_Il2CppStaticFields {
  ModdingAPI::Exposed::ContainerSaveDataProxy* m_ContainerSaveDataProxy;
  ModdingAPI::Exposed::ContainerItemSaveData_array* m_ContainerItemSaveDataPool;
};

struct __Container_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_Open;
  VirtualInvokeData _5_Close;
};

struct __Container_Il2CppClass {
  Il2CppClass_1 _1;
  __Container_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Container_Il2CppVtbl vtbl;
};

class Container {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C4D570;
  static inline    Container* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C3CA68;
  static inline    __Container_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline Container* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (Container**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __Container_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__Container_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __Container_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_Items;
  ModdingAPI::Exposed::UnityEngine::GameObject_array* m_ScriptedItemPrefabs;
  ModdingAPI::Exposed::GameModeFilter_array* m_ScriptedItemFilter;
  System_String* m_ContainerFilterName;
  System_String* m_ContainerSortName;
  bool m_DestoryPending;
  bool m_Restored;
  bool m_MarkedInactiveInSaveData;
  ModdingAPI::Exposed::LocalizedString* m_LocalizedDisplayName;
  float m_CapacityKG;
  float m_SearchTimeSeconds;
  float m_OpenDelaySeconds;
  float m_SpawnChance;
  bool m_IsCorpse;
  bool m_CanStickToGroundAfterBreakdown;
  int32_t m_DefaultFilter;
  bool m_FilterLocked;
  int32_t m_ShowOnlyGearType;
  bool m_OnlyShowSpecifiedGearType;
  int32_t m_StartSelectionMode;
  bool m_StartInspected;
  System_String* m_OpenAudio;
  System_String* m_CloseAudio;
  System_String* m_SearchAudio;
  ModdingAPI::Exposed::LootTable* m_LootTablePrefab;
  ModdingAPI::Exposed::LootTable* m_LockedLootTablePrefab;
  ModdingAPI::Exposed::LootTable* m_LootTableStoryPrefab;
  ModdingAPI::Exposed::LootTable* m_LockedLootTableStoryPrefab;
  float m_ChanceEmpty;
  int32_t m_MinRandomItems;
  int32_t m_MaxRandomItems;
  int32_t m_MinRandomItemsLocked;
  int32_t m_MaxRandomItemsLocked;
  bool m_SkipInspectVO;
  float m_DecayScalar;
  System_String* m_MissionSupplyObjectiveId;
  ModdingAPI::Exposed::MissionObjectIdentifier* m_MissionObject;
  bool m_Inspected;
  bool m_CanNeverBeOpened;
  ModdingAPI::Exposed::Lock* m_Lock;
  ModdingAPI::Exposed::SafeCracking* m_Safe;
  bool m_RolledSpawnChance;
  bool m_NotPopulated;
  bool m_SearchInProgress;
  bool m_OpenInProgress;
  ModdingAPI::Exposed::LootTable* m_LootTable;
  bool m_PendingClose;
  ModdingAPI::Exposed::ObjectAnim_array* m_ObjectAnims;
  bool m_StartHasBeenCalled;
  float m_SearchTimeRemaining;
  int32_t m_RestoreControlMode;
  uint32_t m_SearchAudioID;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_GearToInstantiate;

  // Member methods:
  System_String* get_m_DisplayName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1891380))(this);
  }
  void Awake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1966420))(this);
  }
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1966690))(this);
  }
  void UpdateContainer() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1966A60))(this);
  }
  System_String* Serialize() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1966CE0))(this);
  }
  void Deserialize(System_String* text, ModdingAPI::Exposed::System::Collections::Generic::List_T_* loadedItems) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*, System_String*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1967770))(this, text, loadedItems);
  }
  void DeserializeAdditive(System_String* text, ModdingAPI::Exposed::System::Collections::Generic::List_T_* loadedItems) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*, System_String*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1968320))(this, text, loadedItems);
  }
  void AssumeMissionObjectResponsibility(System_String* missionObjectSerialized) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1968910))(this, missionObjectSerialized);
  }
  void MaybeDestroyContainerAfterMission() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1968A10))(this);
  }
  void AddGear(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1968EC0))(this, gi);
  }
  void RemoveGear(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1969580))(this, gi);
  }
  void DestroyGear(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1969780))(this, gi);
  }
  void DestroyAllGear() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1969890))(this);
  }
  float GetTotalWeightKG() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1969A40))(this);
  }
  void OnContainerSearchComplete(bool success, bool playerCancel, float progress) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*, bool, bool, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1969AE0))(this, success, playerCancel, progress);
  }
  void ShowItemsAfterSearch() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1969E00))(this);
  }
  bool Open() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196A020))(this);
  }
  void OnOpenComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196A3A0))(this);
  }
  void ProgressBarStarted() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  bool Close() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196A580))(this);
  }
  void MakeCanNeverBeOpened() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196A7D0))(this);
  }
  bool CanNeverBeOpened() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196A7E0))(this);
  }
  void ForceLock() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196A7F0))(this);
  }
  bool IsLockedOrSafeIsUncracked() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196A9A0))(this);
  }
  bool IsLocked() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196AB30))(this);
  }
  bool IsSafe() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196AC10))(this);
  }
  bool IsSafeLocked() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196ACC0))(this);
  }
  void StartSafeCrackingInterface() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196ADA0))(this);
  }
  bool IsEmpty() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196AF70))(this);
  }
  bool IsInspected() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F22B0))(this);
  }
  void MarkAsInspected() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196B000))(this);
  }
  bool ContainsFoodItems() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196B010))(this);
  }
  int32_t GetAmmoCountForGunType(int32_t gunType) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Container*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196B0B0))(this, gunType);
  }
  bool AddToExistingStackable(System_String* name, float normalizedCondition, int32_t numUnits, ModdingAPI::Exposed::GearItem* gearToAdd) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Container*, System_String*, float, int32_t, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196B160))(this, name, normalizedCondition, numUnits, gearToAdd);
  }
  void InstantiateGearPrefabInContainer(ModdingAPI::Exposed::UnityEngine::GameObject* prefab) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196B480))(this, prefab);
  }
  System_String* GetInteractiveActionText() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196BA30))(this);
  }
  System_String* GetInteractiveDisplayText() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196BC00))(this);
  }
  ModdingAPI::Exposed::WaterSupply* GetWaterSupply(int32_t quality) {
    return reinterpret_cast<ModdingAPI::Exposed::WaterSupply*(__fastcall*)(ModdingAPI::Exposed::Container*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196BDE0))(this, quality);
  }
  void CancelSearch() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196BFE0))(this);
  }
  void ResumeSearch() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196C2F0))(this);
  }
  void PopulateContents() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196C300))(this);
  }
  void InstantiateContents() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196C320))(this);
  }
  int32_t GetTotalCalories() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196C550))(this);
  }
  bool AllFoodItemsAreNatural() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196C7D0))(this);
  }
  float GetHoursFuel() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196C9C0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::GameObject* GetPrefabFromScriptedItems(System_String* name) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GameObject*(__fastcall*)(ModdingAPI::Exposed::Container*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196CC50))(this, name);
  }
  ModdingAPI::Exposed::GearItem* GetClosestMatchStackable(System_String* name, float normalizedHP) {
    return reinterpret_cast<ModdingAPI::Exposed::GearItem*(__fastcall*)(ModdingAPI::Exposed::Container*, System_String*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196CF20))(this, name, normalizedHP);
  }
  void PopulateWithScriptedGear() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196D1E0))(this);
  }
  void PopulateWithRandomGear() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196D450))(this);
  }
  void PlayContainerOpenSound() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196DEC0))(this);
  }
  void PlayContainerCloseSound() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196DFD0))(this);
  }
  void MaybePlayInspectionAudio() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196E0E0))(this);
  }
  void MaybeExitSearch() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196E290))(this);
  }
  void MaybeRevealItemDuringSearch() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196E3B0))(this);
  }
  void RevealGearItem(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196E7A0))(this, gi);
  }
  bool HasGearWithoutInspect() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196EA80))(this);
  }
  int32_t NumGearInContainer(System_String* gearName) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Container*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196EBF0))(this, gearName);
  }
  void GetItems(ModdingAPI::Exposed::System::Collections::Generic::List_T_* list) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196ECA0))(this, list);
  }
  void GetItems(System_String* gearName, ModdingAPI::Exposed::System::Collections::Generic::List_T_* list) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*, System_String*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196EE10))(this, gearName, list);
  }
  void GetItems(int32_t gearItemComponentFilter, ModdingAPI::Exposed::System::Collections::Generic::List_T_* list) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*, int32_t, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196F000))(this, gearItemComponentFilter, list);
  }
  int32_t GetMeasurableTotalByTypeInList(System_String* type) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Container*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196F260))(this, type);
  }
  void OnLockBroken() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196F310))(this);
  }
  void BeginContainerInteraction(float searchTimeSeconds, System_String* LocID) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*, float, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196F410))(this, searchTimeSeconds, LocID);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x196F6D0))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::ContainerSaveDataProxy*> m_ContainerSaveDataProxy = __CppStaticProperty<ModdingAPI::Exposed::ContainerSaveDataProxy*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_ContainerSaveDataProxy; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::ContainerItemSaveData_array*> m_ContainerItemSaveDataPool = __CppStaticProperty<ModdingAPI::Exposed::ContainerItemSaveData_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_ContainerItemSaveDataPool; }
  );

  // Static methods:
  static inline void DeserializeContentsToPos(System_String* text, ModdingAPI::Exposed::UnityEngine::Vector3 pos, ModdingAPI::Exposed::System::Collections::Generic::List_T_* loadedItems) {
    reinterpret_cast<void(__fastcall*)(System_String*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1968BC0))(text, pos, loadedItems);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x196F9C0))();
  }
};
}