// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::FastJson {
struct __JsonParser_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Text::StringBuilder* subStringBuilder;
};

struct __JsonParser_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __JsonParser_Il2CppClass {
  Il2CppClass_1 _1;
  __JsonParser_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __JsonParser_Il2CppVtbl vtbl;
};

class JsonParser {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C215C8;
  static inline    JsonParser* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C1FA50;
  static inline    __JsonParser_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline JsonParser* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (JsonParser**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __JsonParser_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__JsonParser_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __JsonParser_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  int32_t count;
  int32_t textLength;
  System_String* jsonText;

  // Member methods:
  void ::ctor(System_String* jsonText) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x192F900))(this, jsonText);
  }
  wchar_t Peek() {
    return reinterpret_cast<wchar_t(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x192F930))(this);
  }
  wchar_t Read() {
    return reinterpret_cast<wchar_t(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x192F960))(this);
  }
  wchar_t PeekWithTrim() {
    return reinterpret_cast<wchar_t(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x192F990))(this);
  }
  wchar_t ReadWithTrim() {
    return reinterpret_cast<wchar_t(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x192F9E0))(this);
  }
  void Trim() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x192FA20))(this);
  }
  void _Skip() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x192FA70))(this);
  }
  System_String* ReadToken() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x192FB50))(this);
  }
  bool ReadIfNull() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x192FCB0))(this);
  }
  bool _ReadIfNull() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x192FD00))(this);
  }
  void ReadSpecifyChar(wchar_t spec) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*, wchar_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x192FDC0))(this, spec);
  }
  System_String* ReadString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19300A0))(this);
  }
  void SkipValue() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19305E0))(this);
  }
  bool get_End() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1930A60))(this);
  }
  ModdingAPI::Exposed::System::FormatException* CreateFormatException() {
    return reinterpret_cast<ModdingAPI::Exposed::System::FormatException*(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1930A70))(this);
  }
  ModdingAPI::Exposed::System::OverflowException* CreateOverflowException() {
    return reinterpret_cast<ModdingAPI::Exposed::System::OverflowException*(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1930BD0))(this);
  }
  System_String* _GetExceptionText() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1930D30))(this);
  }
  bool ReadBool() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1931000))(this);
  }
  bool _ReadNegativeSign() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19311F0))(this);
  }
  char ReadInt8() {
    return reinterpret_cast<char(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1931260))(this);
  }
  int16_t ReadInt16() {
    return reinterpret_cast<int16_t(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1931530))(this);
  }
  int32_t ReadInt32() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1931800))(this);
  }
  int64_t ReadInt64() {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1931AD0))(this);
  }
  uint8_t ReadUInt8_Fast() {
    return reinterpret_cast<uint8_t(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1931DC0))(this);
  }
  uint8_t ReadUInt8() {
    return reinterpret_cast<uint8_t(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1931E90))(this);
  }
  uint16_t ReadUInt16() {
    return reinterpret_cast<uint16_t(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1932140))(this);
  }
  uint32_t ReadUInt32() {
    return reinterpret_cast<uint32_t(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x19323F0))(this);
  }
  uint64_t ReadUInt64() {
    return reinterpret_cast<uint64_t(__fastcall*)(ModdingAPI::Exposed::FastJson::JsonParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1932690))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Text::StringBuilder*> subStringBuilder = __CppStaticProperty<ModdingAPI::Exposed::System::Text::StringBuilder*>(
   []() { return &GetStaticClassInstance()->pStaticFields->subStringBuilder; }
  );

  // Static methods:
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1932950))();
  }
};
}