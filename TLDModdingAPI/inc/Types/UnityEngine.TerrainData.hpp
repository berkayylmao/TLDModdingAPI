// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"


namespace ModdingAPI::Exposed::UnityEngine {
struct __TerrainData_Il2CppStaticFields {
  int32_t k_MaximumResolution;
  int32_t k_MinimumDetailResolutionPerPatch;
  int32_t k_MaximumDetailResolutionPerPatch;
  int32_t k_MaximumDetailPatchCount;
  int32_t k_MinimumAlphamapResolution;
  int32_t k_MaximumAlphamapResolution;
  int32_t k_MinimumBaseMapResolution;
  int32_t k_MaximumBaseMapResolution;
};

struct __TerrainData_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __TerrainData_Il2CppClass {
  Il2CppClass_1 _1;
  __TerrainData_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __TerrainData_Il2CppVtbl vtbl;
};

class TerrainData {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C7FDA0;
  static inline    __TerrainData_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __TerrainData_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__TerrainData_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __TerrainData_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1568950))(this);
  }
  int32_t get_heightmapWidth() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1568AE0))(this);
  }
  int32_t get_heightmapHeight() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1568B30))(this);
  }
  int32_t get_heightmapResolution() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1568B80))(this);
  }
  int32_t get_internalHeightmapResolution() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1568B80))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 get_heightmapScale() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1568BD0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 get_size() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1568C50))(this);
  }
  float GetHeight(int32_t x, int32_t y) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1568CD0))(this, x, y);
  }
  ModdingAPI::Exposed::System::Single_array* GetHeights(int32_t xBase, int32_t yBase, int32_t width, int32_t height) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Single_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1568D40))(this, xBase, yBase, width, height);
  }
  ModdingAPI::Exposed::System::Single_array* Internal_GetHeights(int32_t xBase, int32_t yBase, int32_t width, int32_t height) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Single_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1568EC0))(this, xBase, yBase, width, height);
  }
  void SetHeights(int32_t xBase, int32_t yBase, ModdingAPI::Exposed::System::Single_array* heights) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*, int32_t, int32_t, ModdingAPI::Exposed::System::Single_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1568F40))(this, xBase, yBase, heights);
  }
  void Internal_SetHeights(int32_t xBase, int32_t yBase, int32_t width, int32_t height, ModdingAPI::Exposed::System::Single_array* heights) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*, int32_t, int32_t, int32_t, int32_t, ModdingAPI::Exposed::System::Single_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15693B0))(this, xBase, yBase, width, height, heights);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetInterpolatedNormal(float x, float y) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1569430))(this, x, y);
  }
  int32_t get_detailWidth() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15694D0))(this);
  }
  int32_t get_detailHeight() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1569520))(this);
  }
  int32_t get_detailResolution() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1569570))(this);
  }
  void RefreshPrototypes() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15695C0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::DetailPrototype_array* get_detailPrototypes() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::DetailPrototype_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1569610))(this);
  }
  ModdingAPI::Exposed::System::Int32_array* GetDetailLayer(int32_t xBase, int32_t yBase, int32_t width, int32_t height, int32_t layer) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Int32_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*, int32_t, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1569660))(this, xBase, yBase, width, height, layer);
  }
  void SetDetailLayer(int32_t xBase, int32_t yBase, int32_t layer, ModdingAPI::Exposed::System::Int32_array* details) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*, int32_t, int32_t, int32_t, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15696E0))(this, xBase, yBase, layer, details);
  }
  void Internal_SetDetailLayer(int32_t xBase, int32_t yBase, int32_t totalWidth, int32_t totalHeight, int32_t detailIndex, ModdingAPI::Exposed::System::Int32_array* data) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*, int32_t, int32_t, int32_t, int32_t, int32_t, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1569800))(this, xBase, yBase, totalWidth, totalHeight, detailIndex, data);
  }
  ModdingAPI::Exposed::UnityEngine::TreeInstance_array* get_treeInstances() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::TreeInstance_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1569880))(this);
  }
  void set_treeInstances(ModdingAPI::Exposed::UnityEngine::TreeInstance_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*, ModdingAPI::Exposed::UnityEngine::TreeInstance_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15698D0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::TreeInstance_array* Internal_GetTreeInstances() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::TreeInstance_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1569880))(this);
  }
  void Internal_SetTreeInstances(ModdingAPI::Exposed::UnityEngine::TreeInstance_array* instances) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*, ModdingAPI::Exposed::UnityEngine::TreeInstance_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15698D0))(this, instances);
  }
  ModdingAPI::Exposed::UnityEngine::TreePrototype_array* get_treePrototypes() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::TreePrototype_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1569930))(this);
  }
  int32_t get_alphamapLayers() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1569980))(this);
  }
  ModdingAPI::Exposed::System::Single_array* GetAlphamaps(int32_t x, int32_t y, int32_t width, int32_t height) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Single_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15699D0))(this, x, y, width, height);
  }
  ModdingAPI::Exposed::System::Single_array* Internal_GetAlphamaps(int32_t x, int32_t y, int32_t width, int32_t height) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Single_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1569B10))(this, x, y, width, height);
  }
  int32_t get_alphamapResolution() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1569B90))(this);
  }
  float GetAlphamapResolutionInternal() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1569BE0))(this);
  }
  int32_t get_Internal_alphamapResolution() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1569B90))(this);
  }
  int32_t get_alphamapWidth() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1569B90))(this);
  }
  int32_t get_alphamapHeight() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1569B90))(this);
  }
  void SetAlphamaps(int32_t x, int32_t y, ModdingAPI::Exposed::System::Single_array* map) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*, int32_t, int32_t, ModdingAPI::Exposed::System::Single_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1569C30))(this, x, y, map);
  }
  void Internal_SetAlphamaps(int32_t x, int32_t y, int32_t width, int32_t height, ModdingAPI::Exposed::System::Single_array* map) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*, int32_t, int32_t, int32_t, int32_t, ModdingAPI::Exposed::System::Single_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1569EB0))(this, x, y, width, height, map);
  }
  ModdingAPI::Exposed::UnityEngine::Texture2D* GetAlphamapTexture(int32_t index) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Texture2D*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1569F30))(this, index);
  }
  int32_t get_alphamapTextureCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1569F90))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Texture2D_array* get_alphamapTextures() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Texture2D_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1569FE0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::SplatPrototype_array* get_splatPrototypes() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::SplatPrototype_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156A180))(this);
  }
  ModdingAPI::Exposed::UnityEngine::TerrainLayer_array* get_terrainLayers() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::TerrainLayer_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156A1D0))(this);
  }
  void get_heightmapScale_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156A550))(this, ret);
  }
  void get_size_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156A5B0))(this, ret);
  }
  void GetInterpolatedNormal_Injected(float x, float y, ModdingAPI::Exposed::UnityEngine::Vector3 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*, float, float, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x156A610))(this, x, y, ret);
  }

  // Static fields:
  static inline __CppStaticProperty<int32_t> k_MaximumResolution = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->k_MaximumResolution; }
  );
  static inline __CppStaticProperty<int32_t> k_MinimumDetailResolutionPerPatch = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->k_MinimumDetailResolutionPerPatch; }
  );
  static inline __CppStaticProperty<int32_t> k_MaximumDetailResolutionPerPatch = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->k_MaximumDetailResolutionPerPatch; }
  );
  static inline __CppStaticProperty<int32_t> k_MaximumDetailPatchCount = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->k_MaximumDetailPatchCount; }
  );
  static inline __CppStaticProperty<int32_t> k_MinimumAlphamapResolution = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->k_MinimumAlphamapResolution; }
  );
  static inline __CppStaticProperty<int32_t> k_MaximumAlphamapResolution = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->k_MaximumAlphamapResolution; }
  );
  static inline __CppStaticProperty<int32_t> k_MinimumBaseMapResolution = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->k_MinimumBaseMapResolution; }
  );
  static inline __CppStaticProperty<int32_t> k_MaximumBaseMapResolution = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->k_MaximumBaseMapResolution; }
  );

  // Static methods:
  static inline int32_t GetBoundaryValue(int32_t type) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1568A40))(type);
  }
  static inline void Internal_Create(ModdingAPI::Exposed::UnityEngine::TerrainData* terrainData) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1568A90))(terrainData);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x156A220))();
  }
};
}