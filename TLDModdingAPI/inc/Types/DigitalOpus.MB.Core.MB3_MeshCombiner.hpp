// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::DigitalOpus::MB::Core {
struct __MB3_MeshCombiner_Il2CppStaticFields {
};

struct __MB3_MeshCombiner_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_get_LOG_LEVEL;
  VirtualInvokeData _5_set_LOG_LEVEL;
  VirtualInvokeData _6_get_validationLevel;
  VirtualInvokeData _7_set_validationLevel;
  VirtualInvokeData _8_get_textureBakeResults;
  VirtualInvokeData _9_set_textureBakeResults;
  VirtualInvokeData _10_get_resultSceneObject;
  VirtualInvokeData _11_set_resultSceneObject;
  VirtualInvokeData _12_get_targetRenderer;
  VirtualInvokeData _13_set_targetRenderer;
  VirtualInvokeData _14_get_renderType;
  VirtualInvokeData _15_set_renderType;
  VirtualInvokeData _16_get_outputOption;
  VirtualInvokeData _17_set_outputOption;
  VirtualInvokeData _18_get_lightmapOption;
  VirtualInvokeData _19_set_lightmapOption;
  VirtualInvokeData _20_get_doNorm;
  VirtualInvokeData _21_set_doNorm;
  VirtualInvokeData _22_get_doTan;
  VirtualInvokeData _23_set_doTan;
  VirtualInvokeData _24_get_doCol;
  VirtualInvokeData _25_set_doCol;
  VirtualInvokeData _26_get_doUV;
  VirtualInvokeData _27_set_doUV;
  VirtualInvokeData _28_get_doUV1;
  VirtualInvokeData _29_set_doUV1;
  VirtualInvokeData _30_doUV2;
  VirtualInvokeData _31_get_doUV3;
  VirtualInvokeData _32_set_doUV3;
  VirtualInvokeData _33_get_doUV4;
  VirtualInvokeData _34_set_doUV4;
  VirtualInvokeData _35_get_doBlendShapes;
  VirtualInvokeData _36_set_doBlendShapes;
  VirtualInvokeData _37_get_recenterVertsToBoundsCenter;
  VirtualInvokeData _38_set_recenterVertsToBoundsCenter;
  VirtualInvokeData _49_Apply;
  VirtualInvokeData _60__CreateTemporaryTextrueBakeResult;
  VirtualInvokeData _65535__ctor;
};

struct __MB3_MeshCombiner_Il2CppClass {
  Il2CppClass_1 _1;
  __MB3_MeshCombiner_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __MB3_MeshCombiner_Il2CppVtbl vtbl;
};

class MB3_MeshCombiner {
public:
  // Il2Cpp fields:
  __MB3_MeshCombiner_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  int32_t _LOG_LEVEL;
  int32_t _validationLevel;
  System_String* _name;
  ModdingAPI::Exposed::MB2_TextureBakeResults* _textureBakeResults;
  ModdingAPI::Exposed::UnityEngine::GameObject* _resultSceneObject;
  ModdingAPI::Exposed::UnityEngine::Renderer* _targetRenderer;
  int32_t _renderType;
  int32_t _outputOption;
  int32_t _lightmapOption;
  bool _doNorm;
  bool _doTan;
  bool _doCol;
  bool _doUV;
  bool _doUV3;
  bool _doUV4;
  bool _doBlendShapes;
  bool _recenterVertsToBoundsCenter;
  bool _optimizeAfterBake;
  float uv2UnwrappingParamsHardAngle;
  float uv2UnwrappingParamsPackMargin;
  bool _usingTemporaryTextureBakeResult;

  // Member methods:
  int32_t get_LOG_LEVEL() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311060))(this);
  }
  void set_LOG_LEVEL(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311070))(this, value);
  }
  int32_t get_validationLevel() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311080))(this);
  }
  void set_validationLevel(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEBD0))(this, value);
  }
  System_String* get_name() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335360))(this);
  }
  void set_name(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A3E0))(this, value);
  }
  ModdingAPI::Exposed::MB2_TextureBakeResults* get_textureBakeResults() {
    return reinterpret_cast<ModdingAPI::Exposed::MB2_TextureBakeResults*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110A0))(this);
  }
  void set_textureBakeResults(ModdingAPI::Exposed::MB2_TextureBakeResults* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*, ModdingAPI::Exposed::MB2_TextureBakeResults*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310F00))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::GameObject* get_resultSceneObject() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GameObject*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110B0))(this);
  }
  void set_resultSceneObject(ModdingAPI::Exposed::UnityEngine::GameObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110C0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Renderer* get_targetRenderer() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Renderer*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335370))(this);
  }
  void set_targetRenderer(ModdingAPI::Exposed::UnityEngine::Renderer* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*, ModdingAPI::Exposed::UnityEngine::Renderer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2686A80))(this, value);
  }
  int32_t get_renderType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8A0))(this);
  }
  void set_renderType(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8B0))(this, value);
  }
  int32_t get_outputOption() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8C0))(this);
  }
  void set_outputOption(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8D0))(this, value);
  }
  int32_t get_lightmapOption() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8E0))(this);
  }
  void set_lightmapOption(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8F0))(this, value);
  }
  bool get_doNorm() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7EA5F0))(this);
  }
  void set_doNorm(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7EA600))(this, value);
  }
  bool get_doTan() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x155ED90))(this);
  }
  void set_doTan(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x155EDA0))(this, value);
  }
  bool get_doCol() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1513810))(this);
  }
  void set_doCol(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1513820))(this, value);
  }
  bool get_doUV() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2686BA0))(this);
  }
  void set_doUV(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2686BB0))(this, value);
  }
  bool get_doUV1() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(this);
  }
  void set_doUV1(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, value);
  }
  bool doUV2() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2686BC0))(this);
  }
  bool get_doUV3() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4EFF30))(this);
  }
  void set_doUV3(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4EFF40))(this, value);
  }
  bool get_doUV4() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x882F50))(this);
  }
  void set_doUV4(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x169B740))(this, value);
  }
  bool get_doBlendShapes() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x931B20))(this);
  }
  void set_doBlendShapes(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2686BE0))(this, value);
  }
  bool get_recenterVertsToBoundsCenter() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2686BF0))(this);
  }
  void set_recenterVertsToBoundsCenter(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2686C00))(this, value);
  }
  bool get_optimizeAfterBake() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5DE510))(this);
  }
  void set_optimizeAfterBake(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x155EDB0))(this, value);
  }
  void Apply() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2686C10))(this);
  }
  bool _CreateTemporaryTextrueBakeResult(ModdingAPI::Exposed::UnityEngine::GameObject_array* gos, ModdingAPI::Exposed::System::Collections::Generic::List_T_* matsOnTargetRenderer) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*, ModdingAPI::Exposed::UnityEngine::GameObject_array*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2687560))(this, gos, matsOnTargetRenderer);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2687660))(this);
  }

  // Static methods:
  static inline bool get_EVAL_VERSION() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))();
  }
  static inline void UpdateSkinnedMeshApproximateBoundsFromBonesStatic(ModdingAPI::Exposed::UnityEngine::Transform_array* bs, ModdingAPI::Exposed::UnityEngine::SkinnedMeshRenderer* smr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Transform_array*, ModdingAPI::Exposed::UnityEngine::SkinnedMeshRenderer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2686C30))(bs, smr);
  }
  static inline void UpdateSkinnedMeshApproximateBoundsFromBoundsStatic(ModdingAPI::Exposed::System::Collections::Generic::List_T_* objectsInCombined, ModdingAPI::Exposed::UnityEngine::SkinnedMeshRenderer* smr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::UnityEngine::SkinnedMeshRenderer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2687330))(objectsInCombined, smr);
  }
};
}