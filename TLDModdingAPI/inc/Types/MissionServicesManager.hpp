// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed {
struct __MissionServicesManager_Il2CppStaticFields {
  bool m_SuppressItemAddedEvent;
  bool m_SuppressItemRemovedEvent;
  bool m_StartFromRestore;
  int32_t m_StartByMissionJumpCount;
  bool m_DeserializeEnabled;
  ModdingAPI::Exposed::MissionServicesManagerSaveProxy* m_MissionServicesManagerSaveProxy;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_RegisteredObjectsToRemove;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_ConcurrentGraphRemoveList;
};

struct __MissionServicesManager_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __MissionServicesManager_Il2CppClass {
  Il2CppClass_1 _1;
  __MissionServicesManager_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __MissionServicesManager_Il2CppVtbl vtbl;
};

class MissionServicesManager {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C4A5E0;
  static inline    __MissionServicesManager_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __MissionServicesManager_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__MissionServicesManager_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __MissionServicesManager_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::NodeCanvas::StateMachines::FSMOwner* m_MainMissionFSMOwner;
  ModdingAPI::Exposed::NodeCanvas::StateMachines::FSMOwner_array* m_SideMissionFSMOwners;
  ModdingAPI::Exposed::NodeCanvas::Framework::GlobalBlackboard* m_GlobalBlackboard;
  ModdingAPI::Exposed::MainMissionManager* m_MainMissionManager;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SideMissionParent;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* m_AllMissions;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* m_ConcurrentGraphs;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* m_RegisteredMissionObjects;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_MissionsToRemove;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* m_ObjectInTriggerInfo;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_MissionTimers;
  ModdingAPI::Exposed::MissionTimer* m_VisibleMissionTimer;
  ModdingAPI::Exposed::System::String_array* m_MissionObjectFilterTags;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* m_FilteredMissionObjects;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* m_CustomManagedObjects;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_PendingEventList;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_QueuedRegistrations;
  int32_t m_DeserializationCleanupTicker;
  bool m_DeserializeComplete;

  // Member methods:
  void Awake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B07150))(this);
  }
  ModdingAPI::Exposed::MissionManagerBase* GetMissionManager(System_String* missionId) {
    return reinterpret_cast<ModdingAPI::Exposed::MissionManagerBase*(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B07B30))(this, missionId);
  }
  bool IsMissionActive(System_String* missionId) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B07C30))(this, missionId);
  }
  void InstantiateMission(System_String* missionId) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B07CF0))(this, missionId);
  }
  System_String* GetActiveGraphNameFromObjective(ModdingAPI::Exposed::StoryMissionObjective* objective) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::StoryMissionObjective*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B08430))(this, objective);
  }
  float GetBlackboardVarAsFloat(System_String* varName, System_String* graphName) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B08620))(this, varName, graphName);
  }
  float GetBlackboardVarAsFloatFullSearch(System_String* varName) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B08750))(this, varName);
  }
  ModdingAPI::Exposed::NodeCanvas::Framework::GraphOwner* GetMissionGraphOwner(System_String* graphName) {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::GraphOwner*(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B08940))(this, graphName);
  }
  void StopMission(System_String* missionId, bool forceNow) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B08B40))(this, missionId, forceNow);
  }
  void StopAllMissions() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B08C10))(this);
  }
  void SceneLoadCompleted() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B08DA0))(this);
  }
  void SceneUnloaded() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B08FC0))(this);
  }
  ModdingAPI::Exposed::NodeCanvas::Framework::Variable* GetGlobalVariable(System_String* name) {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::Variable*(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B09360))(this, name);
  }
  void AddMissionObjectFilterTags(System_String* tags) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B093A0))(this, tags);
  }
  void RemoveMissionObjectFilterTags(System_String* tags) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B09730))(this, tags);
  }
  System_String* GetCurrentMissionFilterTags() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B09AB0))(this);
  }
  bool FiltersAllowObject(ModdingAPI::Exposed::MissionObjectIdentifier* moi) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::MissionObjectIdentifier*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B09BB0))(this, moi);
  }
  void AddCustomManagedObject(System_String* name, bool reqState) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B09BF0))(this, name, reqState);
  }
  void RemoveCustomManagedObject(System_String* name) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B09FB0))(this, name);
  }
  void RemoveCustomManagedObject(ModdingAPI::Exposed::MissionObjectIdentifier* moi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::MissionObjectIdentifier*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0A210))(this, moi);
  }
  System_String* Serialize() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0A470))(this);
  }
  void DeserializeSandbox(System_String* text) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0B3A0))(this, text);
  }
  void DeserializeChallenge(System_String* text) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0B3A0))(this, text);
  }
  void Deserialize(System_String* text) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0B3B0))(this, text);
  }
  void AfterGlobalDeserialize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0B640))(this);
  }
  void SendMissionEvent(System_String* missionId, System_String* eventString) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0B8E0))(this, missionId, eventString);
  }
  void BroadcastMissionEvent(System_String* eventString) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0BA80))(this, eventString);
  }
  void BroadcastMissionEvent(int32_t missionEvent) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0BBE0))(this, missionEvent);
  }
  System_String* GetMissionTimerDebugText() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0BD70))(this);
  }
  void QueueRegistration(ModdingAPI::Exposed::MissionObjectIdentifier* moi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::MissionObjectIdentifier*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0C670))(this, moi);
  }
  void ProcessRegistrationQueue() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0C740))(this);
  }
  void RegisterMissionObject(ModdingAPI::Exposed::MissionObjectIdentifier* moi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::MissionObjectIdentifier*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0C990))(this, moi);
  }
  void UnregisterMissionObject(ModdingAPI::Exposed::MissionObjectIdentifier* moi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::MissionObjectIdentifier*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0CE10))(this, moi);
  }
  ModdingAPI::Exposed::MissionObjectIdentifier* FindMissionObject(System_String* name) {
    return reinterpret_cast<ModdingAPI::Exposed::MissionObjectIdentifier*(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0D110))(this, name);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* FindMissionObjectsByTag(ModdingAPI::Exposed::System::String_array* tags) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::System::String_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0D1F0))(this, tags);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* FindMissionObjectsWithoutTag() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0D420))(this);
  }
  void UnregisterAllMissionObjects() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0D640))(this);
  }
  void RegisterConcurrentGraph(System_String* id, ModdingAPI::Exposed::NodeCanvas::Framework::GraphOwner* graphOwner) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*, ModdingAPI::Exposed::NodeCanvas::Framework::GraphOwner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0D930))(this, id, graphOwner);
  }
  void RemoveConcurrentGraph(System_String* id) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0DD90))(this, id);
  }
  ModdingAPI::Exposed::NodeCanvas::Framework::GraphOwner* LookupConcurrentGraph(System_String* id) {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::GraphOwner*(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0DFA0))(this, id);
  }
  void StartMissionTimer(ModdingAPI::Exposed::MissionManagerBase* manager, System_String* name, float duration, System_String* eventOnExpire, int32_t options) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::MissionManagerBase*, System_String*, float, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0E090))(this, manager, name, duration, eventOnExpire, options);
  }
  void RemoveMissionTimer(System_String* name, bool postEvent) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0E5A0))(this, name, postEvent);
  }
  void OnEnterMissionTrigger(ModdingAPI::Exposed::ObjectInTriggerInfo* info) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::ObjectInTriggerInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0E740))(this, info);
  }
  void OnExitMissionTrigger(ModdingAPI::Exposed::ObjectInTriggerInfo* info, bool bypassListRemove) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::ObjectInTriggerInfo*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0EA40))(this, info, bypassListRemove);
  }
  void MissionTriggerRemoved(ModdingAPI::Exposed::MissionTrigger* mt) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::MissionTrigger*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0EC60))(this, mt);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* IsPlayerInMissionTrigger() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0F120))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* IsMissionObjectInMissionTrigger(ModdingAPI::Exposed::MissionObjectIdentifier* moi) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::MissionObjectIdentifier*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0F200))(this, moi);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* IsGameObjectInMissionTrigger(ModdingAPI::Exposed::UnityEngine::GameObject* obj) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0F320))(this, obj);
  }
  void OnInventoryItemAdded() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0F460))(this);
  }
  void OnInventoryItemRemoved() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0F520))(this);
  }
  void RegisterAnyMissionObjects() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0F5E0))(this);
  }
  void OnItemEquipped() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0F850))(this);
  }
  void OnFiredEquippedWeapon() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0F8E0))(this);
  }
  ModdingAPI::Exposed::MissionTimer* GetMissionTimerByName(System_String* timerName) {
    return reinterpret_cast<ModdingAPI::Exposed::MissionTimer*(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0F970))(this, timerName);
  }
  void RefreshMissionIds() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0FAD0))(this);
  }
  void JumpTo(System_String* id, bool isDebug, System_String* missionConfigData) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*, bool, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0FC10))(this, id, isDebug, missionConfigData);
  }
  int32_t GetMissionsActiveActionCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B10FD0))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B11570))(this);
  }
  System_String* GetActiveGraphName(ModdingAPI::Exposed::System::String_array* graphNames) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::System::String_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B12110))(this, graphNames);
  }
  bool IsSideMission(System_String* missionName) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B12240))(this, missionName);
  }
  ModdingAPI::Exposed::System::Collections::IEnumerator* PostSceneLoadCo() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IEnumerator*(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B122D0))(this);
  }
  void FilterObjectsByTag() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B12420))(this);
  }
  void MaybeCleanupDuplicateBody(ModdingAPI::Exposed::MissionObjectIdentifier* mo) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::MissionObjectIdentifier*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B126A0))(this, mo);
  }
  void ReviewObjectFiltering() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B12C50))(this);
  }
  void DeserializeGlobalBB(ModdingAPI::Exposed::MissionServicesManagerSaveProxy* proxy) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::MissionServicesManagerSaveProxy*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B130F0))(this, proxy);
  }
  void DeserializeMissions(ModdingAPI::Exposed::MissionServicesManagerSaveProxy* proxy) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::MissionServicesManagerSaveProxy*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B13140))(this, proxy);
  }
  void DeserializeConcurrentGraphs(ModdingAPI::Exposed::MissionServicesManagerSaveProxy* proxy) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::MissionServicesManagerSaveProxy*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B13260))(this, proxy);
  }
  void DeserializeTimers(ModdingAPI::Exposed::MissionServicesManagerSaveProxy* proxy) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::MissionServicesManagerSaveProxy*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B13560))(this, proxy);
  }
  void TryUnregisterGuid(ModdingAPI::Exposed::UnityEngine::GameObject* gameObject) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B13940))(this, gameObject);
  }
  void EliminateDuplicateAndRestoreAI(ModdingAPI::Exposed::MissionObjectIdentifier* sceneAiMissionId, ModdingAPI::Exposed::BaseAi* baseAI, ModdingAPI::Exposed::BaseAi* sceneAi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::MissionObjectIdentifier*, ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B13A50))(this, sceneAiMissionId, baseAI, sceneAi);
  }
  void EliminateDuplicateAndRestoreBodyHarvest(ModdingAPI::Exposed::MissionObjectIdentifier* sceneBodyHarvestMissionId, ModdingAPI::Exposed::BodyHarvest* bodyHarvest, ModdingAPI::Exposed::BodyHarvest* sceneBodyHarvest) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::MissionObjectIdentifier*, ModdingAPI::Exposed::BodyHarvest*, ModdingAPI::Exposed::BodyHarvest*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B13D50))(this, sceneBodyHarvestMissionId, bodyHarvest, sceneBodyHarvest);
  }
  void UnregisterDuplicatedGuids(ModdingAPI::Exposed::BaseAi_array* sceneAiList, ModdingAPI::Exposed::BodyHarvest_array* sceneBodyHarvestList) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::BaseAi_array*, ModdingAPI::Exposed::BodyHarvest_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B14060))(this, sceneAiList, sceneBodyHarvestList);
  }
  void EliminateDuplicateAndRestore(ModdingAPI::Exposed::BaseAi_array* sceneAiList, ModdingAPI::Exposed::BodyHarvest_array* sceneBodyHarvestList) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::BaseAi_array*, ModdingAPI::Exposed::BodyHarvest_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B143A0))(this, sceneAiList, sceneBodyHarvestList);
  }
  void MaybeResumeStateOnDeserialize(ModdingAPI::Exposed::MissionObjectIdentifier* moi, int32_t stateInfo) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::MissionObjectIdentifier*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B149B0))(this, moi, stateInfo);
  }
  void DeserializeCustomManagedObjects(ModdingAPI::Exposed::MissionServicesManagerSaveProxy* proxy) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::MissionServicesManagerSaveProxy*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B14C00))(this, proxy);
  }
  void SendEvent(ModdingAPI::Exposed::ParadoxNotion::EventData* ev, System_String* missionId) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::ParadoxNotion::EventData*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B14F10))(this, ev, missionId);
  }
  void SendOrQueueEvent(ModdingAPI::Exposed::ParadoxNotion::EventData* ev, System_String* missionId) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::ParadoxNotion::EventData*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B15010))(this, ev, missionId);
  }
  void RemoveMissionTimer(int32_t timerIndex, bool postEvent) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B15260))(this, timerIndex, postEvent);
  }
  void ProcessRemoveMissionList() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B153E0))(this);
  }
  void MissionCompleted(ModdingAPI::Exposed::MissionManagerBase* mm) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::MissionManagerBase*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B15530))(this, mm);
  }
  void DestroyMission(ModdingAPI::Exposed::MissionManagerBase* mm) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::MissionManagerBase*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B157C0))(this, mm);
  }
  ModdingAPI::Exposed::System::Collections::IEnumerator* JumpCo(System_String* missionName, bool isDeserialize, bool isDebug) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IEnumerator*(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B159A0))(this, missionName, isDeserialize, isDebug);
  }
  ModdingAPI::Exposed::NodeCanvas::Framework::Node* GetActiveNode(System_String* mission) {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::Node*(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B15B20))(this, mission);
  }
  int32_t RecursiveActionListCounter(ModdingAPI::Exposed::NodeCanvas::Framework::ActionList* actionList) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::NodeCanvas::Framework::ActionList*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B15C00))(this, actionList);
  }
  int32_t GetSubNodeActionCountRecursive(ModdingAPI::Exposed::NodeCanvas::Framework::Node* node) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B15DF0))(this, node);
  }
  int32_t GetNodeActiveActionCountRecursive(ModdingAPI::Exposed::NodeCanvas::Framework::Node* node) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, ModdingAPI::Exposed::NodeCanvas::Framework::Node*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B16100))(this, node);
  }
  void SetCurrentEpisode(System_String* id) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B16220))(this, id);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::MissionServicesManager*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B16C50))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<bool> m_SuppressItemAddedEvent = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_SuppressItemAddedEvent; }
  );
  static inline __CppStaticProperty<bool> m_SuppressItemRemovedEvent = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_SuppressItemRemovedEvent; }
  );
  static inline __CppStaticProperty<bool> m_StartFromRestore = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_StartFromRestore; }
  );
  static inline __CppStaticProperty<int32_t> m_StartByMissionJumpCount = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_StartByMissionJumpCount; }
  );
  static inline __CppStaticProperty<bool> m_DeserializeEnabled = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_DeserializeEnabled; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::MissionServicesManagerSaveProxy*> m_MissionServicesManagerSaveProxy = __CppStaticProperty<ModdingAPI::Exposed::MissionServicesManagerSaveProxy*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_MissionServicesManagerSaveProxy; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*> m_RegisteredObjectsToRemove = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_RegisteredObjectsToRemove; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*> m_ConcurrentGraphRemoveList = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_ConcurrentGraphRemoveList; }
  );

  // Static methods:
  static inline bool ShouldIgnoreMissionObject(ModdingAPI::Exposed::MissionObjectIdentifier* moi) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::MissionObjectIdentifier*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B0BEA0))(moi);
  }
  static inline bool IsDuplicateAllowed(ModdingAPI::Exposed::MissionObjectIdentifier* moi) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::MissionObjectIdentifier*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B11200))(moi);
  }
  static inline ModdingAPI::Exposed::UnityEngine::GameObject* GetMissionObject(System_String* moi) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GameObject*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B112D0))(moi);
  }
  static inline ModdingAPI::Exposed::MissionObjectIdentifier* GetMissionObjectIdentifier(System_String* moi) {
    return reinterpret_cast<ModdingAPI::Exposed::MissionObjectIdentifier*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B113F0))(moi);
  }
  static inline void LogConditionEnabledRecursive(ModdingAPI::Exposed::NodeCanvas::Framework::ConditionTask* conditionTask) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::ConditionTask*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(conditionTask);
  }
  static inline void LogTransitionRecursive(ModdingAPI::Exposed::NodeCanvas::Framework::ConditionTask* conditionTask) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::ConditionTask*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(conditionTask);
  }
  static inline void LogActionTaskEnter(ModdingAPI::Exposed::NodeCanvas::Framework::ActionTask* actionTask) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::ActionTask*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(actionTask);
  }
  static inline void LogActionTaskEnd(ModdingAPI::Exposed::NodeCanvas::Framework::ActionTask* actionTask, int32_t status) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::ActionTask*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(actionTask, status);
  }
  static inline void LogActonStateEnter(ModdingAPI::Exposed::NodeCanvas::StateMachines::ActionState* actionState) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::StateMachines::ActionState*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(actionState);
  }
  static inline void LogActonStateExit(ModdingAPI::Exposed::NodeCanvas::StateMachines::ActionState* actionState) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::StateMachines::ActionState*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(actionState);
  }
  static inline void LogPendingSave() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))();
  }
  static inline void LogSave(float timePending) {
    reinterpret_cast<void(__fastcall*)(float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(timePending);
  }
  static inline void LogPendingSaveTimeout(float time) {
    reinterpret_cast<void(__fastcall*)(float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(time);
  }
  static inline ModdingAPI::Exposed::NodeCanvas::Framework::Node* GetOwner(ModdingAPI::Exposed::NodeCanvas::StateMachines::FSM* fsm, ModdingAPI::Exposed::NodeCanvas::Framework::Task* task) {
    return reinterpret_cast<ModdingAPI::Exposed::NodeCanvas::Framework::Node*(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::StateMachines::FSM*, ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B16400))(fsm, task);
  }
  static inline bool GetOwnerRecursive(ModdingAPI::Exposed::NodeCanvas::Framework::ConditionTask* conditionTask, ModdingAPI::Exposed::NodeCanvas::Framework::Task* child) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::ConditionTask*, ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B16950))(conditionTask, child);
  }
  static inline bool GetNodeOwnsChild(ModdingAPI::Exposed::NodeCanvas::Framework::Node* node, ModdingAPI::Exposed::NodeCanvas::Framework::Task* child) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NodeCanvas::Framework::Node*, ModdingAPI::Exposed::NodeCanvas::Framework::Task*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B16AB0))(node, child);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1B16DB0))();
  }
};
}