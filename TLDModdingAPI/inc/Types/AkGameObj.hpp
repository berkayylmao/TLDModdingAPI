// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.SceneManagement.Scene.hpp"


namespace ModdingAPI::Exposed {
struct __AkGameObj_Il2CppStaticFields {
  bool s_DebugBuckets;
  ModdingAPI::Exposed::System::Collections::Generic::List_T__array* s_UpdateBuckets;
  ModdingAPI::Exposed::System::Single_array* s_BucketRanges;
  ModdingAPI::Exposed::System::Int32_array* s_NumToProcessPerBucketUpdate;
  ModdingAPI::Exposed::System::Int32_array* s_BucketUpdateIndex;
};

struct __AkGameObj_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_GetPosition;
  VirtualInvokeData _5_GetForward;
  VirtualInvokeData _6_GetUpward;
};

struct __AkGameObj_Il2CppClass {
  Il2CppClass_1 _1;
  __AkGameObj_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __AkGameObj_Il2CppVtbl vtbl;
};

class AkGameObj {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C296D8;
  static inline    AkGameObj* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C65568;
  static inline    __AkGameObj_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline AkGameObj* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (AkGameObj**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __AkGameObj_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__AkGameObj_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __AkGameObj_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::AkGameObjListenerList* m_listeners;
  bool isEnvironmentAware;
  bool isStaticObject;
  ModdingAPI::Exposed::UnityEngine::Collider* m_Collider;
  ModdingAPI::Exposed::AkGameObjEnvironmentData* m_envData;
  ModdingAPI::Exposed::AkGameObjPositionData* m_posData;
  ModdingAPI::Exposed::AkGameObjPositionOffsetData* m_positionOffsetData;
  int32_t m_BucketIndex;
  bool isRegistered;
  ModdingAPI::Exposed::AkGameObjPosOffsetData* m_posOffsetData;
  int32_t listenerMask;

  // Member methods:
  bool get_IsUsingDefaultListeners() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::AkGameObj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252A9B0))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* get_ListenerList() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::AkGameObj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9BE160))(this);
  }
  void AddListener(ModdingAPI::Exposed::AkAudioListener* listener) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AkGameObj*, ModdingAPI::Exposed::AkAudioListener*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252A9D0))(this, listener);
  }
  void RemoveListener(ModdingAPI::Exposed::AkAudioListener* listener) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AkGameObj*, ModdingAPI::Exposed::AkAudioListener*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252AA00))(this, listener);
  }
  int32_t Register() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::AkGameObj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252AA30))(this);
  }
  void Awake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AkGameObj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252ABA0))(this);
  }
  void CheckStaticStatus() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AkGameObj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void OnEnable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AkGameObj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252B160))(this);
  }
  void OnDisable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AkGameObj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252B1D0))(this);
  }
  void OnDestroy() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AkGameObj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252B280))(this);
  }
  void MaybeUpdateAuxValues() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AkGameObj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252C800))(this);
  }
  void MaybeUpdateObjectPosition() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AkGameObj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252CAF0))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AkGameObj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252CE50))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetPosition() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::AkGameObj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252D2E0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetForward() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::AkGameObj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252D650))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetUpward() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::AkGameObj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252D6E0))(this);
  }
  void OnTriggerEnter(ModdingAPI::Exposed::UnityEngine::Collider* other) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AkGameObj*, ModdingAPI::Exposed::UnityEngine::Collider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252D770))(this, other);
  }
  void OnTriggerExit(ModdingAPI::Exposed::UnityEngine::Collider* other) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AkGameObj*, ModdingAPI::Exposed::UnityEngine::Collider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252D790))(this, other);
  }
  void LevelLoadedCallback(ModdingAPI::Exposed::UnityEngine::SceneManagement::Scene s, int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AkGameObj*, ModdingAPI::Exposed::UnityEngine::SceneManagement::Scene, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252D7B0))(this, s, mode);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AkGameObj*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252D940))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<bool> s_DebugBuckets = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_DebugBuckets; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T__array*> s_UpdateBuckets = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T__array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_UpdateBuckets; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Single_array*> s_BucketRanges = __CppStaticProperty<ModdingAPI::Exposed::System::Single_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_BucketRanges; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Int32_array*> s_NumToProcessPerBucketUpdate = __CppStaticProperty<ModdingAPI::Exposed::System::Int32_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_NumToProcessPerBucketUpdate; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Int32_array*> s_BucketUpdateIndex = __CppStaticProperty<ModdingAPI::Exposed::System::Int32_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_BucketUpdateIndex; }
  );

  // Static methods:
  static inline void MaybeInitializeBuckets() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x252B700))();
  }
  static inline System_String* GetDebugText() {
    return reinterpret_cast<System_String*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x252B970))();
  }
  static inline void UpdateAll() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x252BBC0))();
  }
  static inline void UpdateAuxValuesForBucket(int32_t bucketIndex) {
    reinterpret_cast<void(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252BD50))(bucketIndex);
  }
  static inline void UpdateObjPositionsForBucket(int32_t bucketIndex) {
    reinterpret_cast<void(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252BF20))(bucketIndex);
  }
  static inline void MigrateObjectsBetweenBuckets(int32_t bucketIndex) {
    reinterpret_cast<void(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252C3A0))(bucketIndex);
  }
  static inline void RemoveObjectFromBucket(ModdingAPI::Exposed::AkGameObj* obj, int32_t bucketIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AkGameObj*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252C570))(obj, bucketIndex);
  }
  static inline void AddObjectToBucket(ModdingAPI::Exposed::AkGameObj* obj, int32_t bucketIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AkGameObj*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x252C700))(obj, bucketIndex);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x252DBD0))();
  }
};
}