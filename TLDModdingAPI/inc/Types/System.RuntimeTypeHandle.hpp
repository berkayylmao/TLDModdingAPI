// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Runtime.Serialization.StreamingContext.hpp"

namespace ModdingAPI::Exposed::System {
struct __RuntimeTypeHandle_Il2CppObject {
  intptr_t value;
};
struct __RuntimeTypeHandle_Il2CppStaticFields {
};

struct __RuntimeTypeHandle_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_GetObjectData;
};

struct __RuntimeTypeHandle_Il2CppClass {
  Il2CppClass_1 _1;
  __RuntimeTypeHandle_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __RuntimeTypeHandle_Il2CppVtbl vtbl;
};

class RuntimeTypeHandle {
  static constexpr uint64_t _rvaClassInstance     = 0x3C85C40;
  static inline    __RuntimeTypeHandle_Il2CppClass* _pStaticClassInstance = nullptr;

public:
  // Static class getter:
  static inline __RuntimeTypeHandle_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__RuntimeTypeHandle_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Member fields:
  intptr_t value;

  // Member methods:
  void ::ctor(intptr_t val) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::RuntimeTypeHandle*, intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2C00))(this, val);
  }
  void ::ctor(ModdingAPI::Exposed::System::RuntimeType* type) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::RuntimeTypeHandle*, ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22BE0))(this, type);
  }
  void ::ctor(ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo* info, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::RuntimeTypeHandle*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22C00))(this, info, context);
  }
  intptr_t get_Value() {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::System::RuntimeTypeHandle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6590))(this);
  }
  void GetObjectData(ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo* info, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::RuntimeTypeHandle*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22C20))(this, info, context);
  }
  bool Equals(Il2CppObject* obj) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::RuntimeTypeHandle*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x22C40))(this, obj);
  }
  int32_t GetHashCode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::RuntimeTypeHandle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3030))(this);
  }

  // Static methods:
  static inline int32_t GetAttributes(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA53EB0))(type);
  }
  static inline int32_t GetMetadataToken(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA57A00))(type);
  }
  static inline int32_t GetToken(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA57A00))(type);
  }
  static inline ModdingAPI::Exposed::System::Type* GetGenericTypeDefinition_impl(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type*(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5D210))(type);
  }
  static inline ModdingAPI::Exposed::System::Type* GetGenericTypeDefinition(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type*(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5D210))(type);
  }
  static inline bool HasElementType(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA54200))(type);
  }
  static inline bool HasInstantiation(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA55BD0))(type);
  }
  static inline bool IsArray(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA543B0))(type);
  }
  static inline bool IsByRef(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA53FB0))(type);
  }
  static inline bool IsComObject(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(type);
  }
  static inline bool IsInstanceOfType(ModdingAPI::Exposed::System::RuntimeType* type, Il2CppObject* o) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA53780))(type, o);
  }
  static inline bool IsPointer(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA53FF0))(type);
  }
  static inline bool IsPrimitive(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA53FC0))(type);
  }
  static inline bool HasReferences(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5D270))(type);
  }
  static inline bool IsComObject(ModdingAPI::Exposed::System::RuntimeType* type, bool isGenericCOM) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(type, isGenericCOM);
  }
  static inline bool IsContextful(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA53EE0))(type);
  }
  static inline bool IsEquivalentTo(ModdingAPI::Exposed::System::RuntimeType* rtType1, ModdingAPI::Exposed::System::RuntimeType* rtType2) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*, ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(rtType1, rtType2);
  }
  static inline bool IsSzArray(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA54350))(type);
  }
  static inline bool IsInterface(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5D290))(type);
  }
  static inline int32_t GetArrayRank(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5D2C0))(type);
  }
  static inline ModdingAPI::Exposed::System::Reflection::RuntimeAssembly* GetAssembly(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Reflection::RuntimeAssembly*(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA53760))(type);
  }
  static inline ModdingAPI::Exposed::System::RuntimeType* GetElementType(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<ModdingAPI::Exposed::System::RuntimeType*(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA544C0))(type);
  }
  static inline ModdingAPI::Exposed::System::Reflection::RuntimeModule* GetModule(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Reflection::RuntimeModule*(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA53740))(type);
  }
  static inline bool IsGenericVariable(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA55960))(type);
  }
  static inline ModdingAPI::Exposed::System::RuntimeType* GetBaseType(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<ModdingAPI::Exposed::System::RuntimeType*(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5D2E0))(type);
  }
  static inline bool CanCastTo(ModdingAPI::Exposed::System::RuntimeType* type, ModdingAPI::Exposed::System::RuntimeType* target) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*, ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5D310))(type, target);
  }
  static inline bool type_is_assignable_from(ModdingAPI::Exposed::System::Type* a, ModdingAPI::Exposed::System::Type* b) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5D380))(a, b);
  }
  static inline bool IsGenericTypeDefinition(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA55930))(type);
  }
  static inline intptr_t GetGenericParameterInfo(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA5D3F0))(type);
  }

};
}