// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System::Runtime::Remoting {
struct __RemotingConfiguration_Il2CppStaticFields {
  System_String* applicationID;
  System_String* applicationName;
  System_String* processGuid;
  bool defaultConfigRead;
  bool defaultDelayedConfigRead;
  System_String* _errorMode;
  ModdingAPI::Exposed::System::Collections::Hashtable* wellKnownClientEntries;
  ModdingAPI::Exposed::System::Collections::Hashtable* activatedClientEntries;
  ModdingAPI::Exposed::System::Collections::Hashtable* wellKnownServiceEntries;
  ModdingAPI::Exposed::System::Collections::Hashtable* activatedServiceEntries;
  ModdingAPI::Exposed::System::Collections::Hashtable* channelTemplates;
  ModdingAPI::Exposed::System::Collections::Hashtable* clientProviderTemplates;
  ModdingAPI::Exposed::System::Collections::Hashtable* serverProviderTemplates;
};

struct __RemotingConfiguration_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __RemotingConfiguration_Il2CppClass {
  Il2CppClass_1 _1;
  __RemotingConfiguration_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __RemotingConfiguration_Il2CppVtbl vtbl;
};

class RemotingConfiguration {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C55090;
  static inline    __RemotingConfiguration_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __RemotingConfiguration_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__RemotingConfiguration_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __RemotingConfiguration_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Static fields:
  static inline __CppStaticProperty<System_String*> applicationID = __CppStaticProperty<System_String*>(
   []() { return &GetStaticClassInstance()->pStaticFields->applicationID; }
  );
  static inline __CppStaticProperty<System_String*> applicationName = __CppStaticProperty<System_String*>(
   []() { return &GetStaticClassInstance()->pStaticFields->applicationName; }
  );
  static inline __CppStaticProperty<System_String*> processGuid = __CppStaticProperty<System_String*>(
   []() { return &GetStaticClassInstance()->pStaticFields->processGuid; }
  );
  static inline __CppStaticProperty<bool> defaultConfigRead = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->defaultConfigRead; }
  );
  static inline __CppStaticProperty<bool> defaultDelayedConfigRead = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->defaultDelayedConfigRead; }
  );
  static inline __CppStaticProperty<System_String*> _errorMode = __CppStaticProperty<System_String*>(
   []() { return &GetStaticClassInstance()->pStaticFields->_errorMode; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Hashtable*> wellKnownClientEntries = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Hashtable*>(
   []() { return &GetStaticClassInstance()->pStaticFields->wellKnownClientEntries; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Hashtable*> activatedClientEntries = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Hashtable*>(
   []() { return &GetStaticClassInstance()->pStaticFields->activatedClientEntries; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Hashtable*> wellKnownServiceEntries = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Hashtable*>(
   []() { return &GetStaticClassInstance()->pStaticFields->wellKnownServiceEntries; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Hashtable*> activatedServiceEntries = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Hashtable*>(
   []() { return &GetStaticClassInstance()->pStaticFields->activatedServiceEntries; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Hashtable*> channelTemplates = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Hashtable*>(
   []() { return &GetStaticClassInstance()->pStaticFields->channelTemplates; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Hashtable*> clientProviderTemplates = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Hashtable*>(
   []() { return &GetStaticClassInstance()->pStaticFields->clientProviderTemplates; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Hashtable*> serverProviderTemplates = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Hashtable*>(
   []() { return &GetStaticClassInstance()->pStaticFields->serverProviderTemplates; }
  );

  // Static methods:
  static inline System_String* get_ApplicationName() {
    return reinterpret_cast<System_String*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xF749D0))();
  }
  static inline void set_ApplicationName(System_String* value) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF74A70))(value);
  }
  static inline System_String* get_ProcessId() {
    return reinterpret_cast<System_String*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xF74B20))();
  }
  static inline void LoadDefaultDelayedChannels() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xF74CE0))();
  }
  static inline bool IsActivationAllowed(ModdingAPI::Exposed::System::Type* svrType) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF75220))(svrType);
  }
  static inline ModdingAPI::Exposed::System::Runtime::Remoting::ActivatedClientTypeEntry* IsRemotelyActivatedClientType(ModdingAPI::Exposed::System::Type* svrType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Runtime::Remoting::ActivatedClientTypeEntry*(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF75400))(svrType);
  }
  static inline ModdingAPI::Exposed::System::Runtime::Remoting::WellKnownClientTypeEntry* IsWellKnownClientType(ModdingAPI::Exposed::System::Type* svrType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Runtime::Remoting::WellKnownClientTypeEntry*(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF75620))(svrType);
  }
  static inline void RegisterActivatedClientType(ModdingAPI::Exposed::System::Runtime::Remoting::ActivatedClientTypeEntry* entry) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::ActivatedClientTypeEntry*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF75840))(entry);
  }
  static inline void RegisterActivatedServiceType(ModdingAPI::Exposed::System::Runtime::Remoting::ActivatedServiceTypeEntry* entry) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::ActivatedServiceTypeEntry*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF75B20))(entry);
  }
  static inline void RegisterWellKnownClientType(ModdingAPI::Exposed::System::Runtime::Remoting::WellKnownClientTypeEntry* entry) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::WellKnownClientTypeEntry*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF75CE0))(entry);
  }
  static inline void RegisterWellKnownServiceType(ModdingAPI::Exposed::System::Runtime::Remoting::WellKnownServiceTypeEntry* entry) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::WellKnownServiceTypeEntry*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF75FC0))(entry);
  }
  static inline void RegisterChannelTemplate(ModdingAPI::Exposed::System::Runtime::Remoting::ChannelData* channel) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::ChannelData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF761E0))(channel);
  }
  static inline void RegisterClientProviderTemplate(ModdingAPI::Exposed::System::Runtime::Remoting::ProviderData* prov) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::ProviderData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF762C0))(prov);
  }
  static inline void RegisterServerProviderTemplate(ModdingAPI::Exposed::System::Runtime::Remoting::ProviderData* prov) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::ProviderData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF763A0))(prov);
  }
  static inline void RegisterChannels(ModdingAPI::Exposed::System::Collections::ArrayList* channels, bool onlyDelayed) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::ArrayList*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF76480))(channels, onlyDelayed);
  }
  static inline void RegisterTypes(ModdingAPI::Exposed::System::Collections::ArrayList* types) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::ArrayList*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF76C60))(types);
  }
  static inline bool CustomErrorsEnabled(bool isLocalRequest) {
    return reinterpret_cast<bool(__fastcall*)(bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF770E0))(isLocalRequest);
  }
  static inline void SetCustomErrorsMode(System_String* mode) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF77230))(mode);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xF773F0))();
  }
};
}