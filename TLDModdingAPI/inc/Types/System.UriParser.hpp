// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System {
struct __UriParser_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* m_Table;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* m_TempTable;
  ModdingAPI::Exposed::System::UriParser* HttpUri;
  ModdingAPI::Exposed::System::UriParser* HttpsUri;
  ModdingAPI::Exposed::System::UriParser* WsUri;
  ModdingAPI::Exposed::System::UriParser* WssUri;
  ModdingAPI::Exposed::System::UriParser* FtpUri;
  ModdingAPI::Exposed::System::UriParser* FileUri;
  ModdingAPI::Exposed::System::UriParser* GopherUri;
  ModdingAPI::Exposed::System::UriParser* NntpUri;
  ModdingAPI::Exposed::System::UriParser* NewsUri;
  ModdingAPI::Exposed::System::UriParser* MailToUri;
  ModdingAPI::Exposed::System::UriParser* UuidUri;
  ModdingAPI::Exposed::System::UriParser* TelnetUri;
  ModdingAPI::Exposed::System::UriParser* LdapUri;
  ModdingAPI::Exposed::System::UriParser* NetTcpUri;
  ModdingAPI::Exposed::System::UriParser* NetPipeUri;
  ModdingAPI::Exposed::System::UriParser* VsMacrosUri;
  int32_t s_QuirksVersion;
  int32_t HttpSyntaxFlags;
  int32_t FileSyntaxFlags;
};

struct __UriParser_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_OnNewUri;
  VirtualInvokeData _5_InitializeAndValidate;
  VirtualInvokeData _6_Resolve;
  VirtualInvokeData _7_GetComponents;
};

struct __UriParser_Il2CppClass {
  Il2CppClass_1 _1;
  __UriParser_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __UriParser_Il2CppVtbl vtbl;
};

class UriParser {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C78590;
  static inline    __UriParser_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __UriParser_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__UriParser_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __UriParser_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  int32_t m_Flags;
  int32_t m_UpdatableFlags;
  bool m_UpdatableFlagsUsed;
  int32_t m_Port;
  System_String* m_Scheme;

  // Member methods:
  System_String* get_SchemeName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::UriParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110A0))(this);
  }
  int32_t get_DefaultPort() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::UriParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36E9C0))(this);
  }
  ModdingAPI::Exposed::System::UriParser* OnNewUri() {
    return reinterpret_cast<ModdingAPI::Exposed::System::UriParser*(__fastcall*)(ModdingAPI::Exposed::System::UriParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3201B0))(this);
  }
  void InitializeAndValidate(ModdingAPI::Exposed::System::Uri* uri, ModdingAPI::Exposed::System::UriFormatException* parsingError) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::UriParser*, ModdingAPI::Exposed::System::Uri*, ModdingAPI::Exposed::System::UriFormatException*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x122EB60))(this, uri, parsingError);
  }
  System_String* Resolve(ModdingAPI::Exposed::System::Uri* baseUri, ModdingAPI::Exposed::System::Uri* relativeUri, ModdingAPI::Exposed::System::UriFormatException* parsingError) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::UriParser*, ModdingAPI::Exposed::System::Uri*, ModdingAPI::Exposed::System::Uri*, ModdingAPI::Exposed::System::UriFormatException*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x122EC50))(this, baseUri, relativeUri, parsingError);
  }
  System_String* GetComponents(ModdingAPI::Exposed::System::Uri* uri, int32_t components, int32_t format) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::UriParser*, ModdingAPI::Exposed::System::Uri*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x122EE80))(this, uri, components, format);
  }
  int32_t get_Flags() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::UriParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311060))(this);
  }
  bool NotAny(int32_t flags) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::UriParser*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x12309C0))(this, flags);
  }
  bool InFact(int32_t flags) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::UriParser*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1230A00))(this, flags);
  }
  bool IsAllSet(int32_t flags) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::UriParser*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1230A40))(this, flags);
  }
  bool IsFullMatch(int32_t flags, int32_t expected) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::UriParser*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1230A80))(this, flags, expected);
  }
  void ::ctor(int32_t flags) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::UriParser*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1230AC0))(this, flags);
  }
  bool get_IsSimple() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::UriParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x12312D0))(this);
  }
  ModdingAPI::Exposed::System::UriParser* InternalOnNewUri() {
    return reinterpret_cast<ModdingAPI::Exposed::System::UriParser*(__fastcall*)(ModdingAPI::Exposed::System::UriParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x12312E0))(this);
  }
  void InternalValidate(ModdingAPI::Exposed::System::Uri* thisUri, ModdingAPI::Exposed::System::UriFormatException* parsingError) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::UriParser*, ModdingAPI::Exposed::System::Uri*, ModdingAPI::Exposed::System::UriFormatException*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1231330))(this, thisUri, parsingError);
  }
  System_String* InternalResolve(ModdingAPI::Exposed::System::Uri* thisBaseUri, ModdingAPI::Exposed::System::Uri* uriLink, ModdingAPI::Exposed::System::UriFormatException* parsingError) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::UriParser*, ModdingAPI::Exposed::System::Uri*, ModdingAPI::Exposed::System::Uri*, ModdingAPI::Exposed::System::UriFormatException*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xED42A0))(this, thisBaseUri, uriLink, parsingError);
  }
  System_String* InternalGetComponents(ModdingAPI::Exposed::System::Uri* thisUri, int32_t uriComponents, int32_t uriFormat) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::UriParser*, ModdingAPI::Exposed::System::Uri*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1231350))(this, thisUri, uriComponents, uriFormat);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_*> m_Table = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_Table; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_*> m_TempTable = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_TempTable; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*> HttpUri = __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*>(
   []() { return &GetStaticClassInstance()->pStaticFields->HttpUri; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*> HttpsUri = __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*>(
   []() { return &GetStaticClassInstance()->pStaticFields->HttpsUri; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*> WsUri = __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*>(
   []() { return &GetStaticClassInstance()->pStaticFields->WsUri; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*> WssUri = __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*>(
   []() { return &GetStaticClassInstance()->pStaticFields->WssUri; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*> FtpUri = __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*>(
   []() { return &GetStaticClassInstance()->pStaticFields->FtpUri; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*> FileUri = __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*>(
   []() { return &GetStaticClassInstance()->pStaticFields->FileUri; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*> GopherUri = __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*>(
   []() { return &GetStaticClassInstance()->pStaticFields->GopherUri; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*> NntpUri = __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*>(
   []() { return &GetStaticClassInstance()->pStaticFields->NntpUri; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*> NewsUri = __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*>(
   []() { return &GetStaticClassInstance()->pStaticFields->NewsUri; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*> MailToUri = __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*>(
   []() { return &GetStaticClassInstance()->pStaticFields->MailToUri; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*> UuidUri = __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*>(
   []() { return &GetStaticClassInstance()->pStaticFields->UuidUri; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*> TelnetUri = __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*>(
   []() { return &GetStaticClassInstance()->pStaticFields->TelnetUri; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*> LdapUri = __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*>(
   []() { return &GetStaticClassInstance()->pStaticFields->LdapUri; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*> NetTcpUri = __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*>(
   []() { return &GetStaticClassInstance()->pStaticFields->NetTcpUri; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*> NetPipeUri = __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*>(
   []() { return &GetStaticClassInstance()->pStaticFields->NetPipeUri; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*> VsMacrosUri = __CppStaticProperty<ModdingAPI::Exposed::System::UriParser*>(
   []() { return &GetStaticClassInstance()->pStaticFields->VsMacrosUri; }
  );
  static inline __CppStaticProperty<int32_t> s_QuirksVersion = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_QuirksVersion; }
  );
  static inline __CppStaticProperty<int32_t> HttpSyntaxFlags = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->HttpSyntaxFlags; }
  );
  static inline __CppStaticProperty<int32_t> FileSyntaxFlags = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->FileSyntaxFlags; }
  );

  // Static methods:
  static inline bool get_ShouldUseLegacyV2Quirks() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x122F0D0))();
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x122F180))();
  }
  static inline ModdingAPI::Exposed::System::UriParser* FindOrFetchAsUnknownV1Syntax(System_String* lwrCaseScheme) {
    return reinterpret_cast<ModdingAPI::Exposed::System::UriParser*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1230B60))(lwrCaseScheme);
  }
  static inline ModdingAPI::Exposed::System::UriParser* GetSyntax(System_String* lwrCaseScheme) {
    return reinterpret_cast<ModdingAPI::Exposed::System::UriParser*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1231100))(lwrCaseScheme);
  }
};
}