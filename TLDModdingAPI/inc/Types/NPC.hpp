// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI::Exposed::UnityEngine::Vector3.hpp"


namespace ModdingAPI::Exposed {
struct __NPC_Il2CppStaticFields {
  bool s_DisableConditionUpdates;
  bool s_Invulnerable;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* s_NPCList;
  System_String* s_ActiveGuid;
};

struct __NPC_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __NPC_Il2CppClass {
  Il2CppClass_1 _1;
  __NPC_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __NPC_Il2CppVtbl vtbl;
};

class NPC {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C46AC0;
  static inline    NPC* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C5FA70;
  static inline    __NPC_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline NPC* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (NPC**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __NPC_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__NPC_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __NPC_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::LocalizedString* m_DisplayName;
  bool m_EnableConditionUpdate;
  float m_AmbientAudioTimeVariance;
  float m_MinTimeBetweenAmbientAudio;
  System_String* m_AmbientAudioEvent;
  float m_MinTimeBetweenCarryAmbientAudio;
  System_String* m_CarryAmbientAudioEvent;
  ModdingAPI::Exposed::NPCAfflictions* m_AfflictionsComponent;
  ModdingAPI::Exposed::NPCCondition* m_Condition;
  ModdingAPI::Exposed::NPCFreezing* m_Freezing;
  ModdingAPI::Exposed::NPCThirst* m_Thirst;
  ModdingAPI::Exposed::NPCVoice* m_Voice;
  ModdingAPI::Exposed::CarryableBody* m_Body;
  System_String* m_Guid;
  ModdingAPI::Exposed::IndoorSpaceTrigger* m_IndoorSpaceTrigger;
  bool m_Initialized;
  float m_LastUpdatedTODHours;
  float m_NextAmbientAudioTime;
  bool m_HasBeenInteractedWith;

  // Member methods:
  System_String* GetHoverText() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::NPC*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E79A60))(this);
  }
  void HandlePickUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NPC*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E79D40))(this);
  }
  bool IsAlive() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NPC*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E79F10))(this);
  }
  bool IsBeingCarried() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NPC*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E79FE0))(this);
  }
  bool IsConditionUpdateEnabled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NPC*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x46FCC0))(this);
  }
  bool IsIndoors() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NPC*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7A0E0))(this);
  }
  void SetConditionUpdateEnabled(bool enabled) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NPC*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7A210))(this, enabled);
  }
  void SetHasBeenInteractedWith(bool flag) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NPC*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7A220))(this, flag);
  }
  bool ProcessInteraction() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::NPC*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7A230))(this);
  }
  ModdingAPI::Exposed::NPC::NPCSavedData* Serialize() {
    return reinterpret_cast<ModdingAPI::Exposed::NPC::NPCSavedData*(__fastcall*)(ModdingAPI::Exposed::NPC*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7A310))(this);
  }
  void Deserialize(ModdingAPI::Exposed::NPC::NPCSavedData* savedData) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NPC*, ModdingAPI::Exposed::NPC::NPCSavedData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7A5C0))(this, savedData);
  }
  void ResetNextAmbientAudioTimer() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NPC*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7AA40))(this);
  }
  void Awake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NPC*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7AAE0))(this);
  }
  void DoConditionUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NPC*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7AAF0))(this);
  }
  void DoUpdate(int32_t flags) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NPC*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7AE70))(this, flags);
  }
  void Initialize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NPC*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7B150))(this);
  }
  void OnDestroy() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NPC*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7B540))(this);
  }
  void UpdateAmbientVoiceOver() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NPC*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7B600))(this);
  }
  void UpdateTODHours() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NPC*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7B770))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NPC*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x389390))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<bool> s_DisableConditionUpdates = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_DisableConditionUpdates; }
  );
  static inline __CppStaticProperty<bool> s_Invulnerable = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_Invulnerable; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*> s_NPCList = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_NPCList; }
  );
  static inline __CppStaticProperty<System_String*> s_ActiveGuid = __CppStaticProperty<System_String*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_ActiveGuid; }
  );

  // Static methods:
  static inline void ClearActive() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7B840))();
  }
  static inline ModdingAPI::Exposed::NPC* GetFromGuid(System_String* guid) {
    return reinterpret_cast<ModdingAPI::Exposed::NPC*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7B8E0))(guid);
  }
  static inline ModdingAPI::Exposed::NPC* GetActive() {
    return reinterpret_cast<ModdingAPI::Exposed::NPC*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7BAE0))();
  }
  static inline bool HasActive() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7BBC0))();
  }
  static inline bool IsActive(System_String* guid) {
    return reinterpret_cast<bool(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7BC70))(guid);
  }
  static inline void SetActive(ModdingAPI::Exposed::NPC* npc) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::NPC*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7BD80))(npc);
  }
  static inline ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* GetAll() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7BEA0))();
  }
  static inline void DeserializeGlobal(System_String* serialized) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7BF40))(serialized);
  }
  static inline System_String* SerializeGlobal() {
    return reinterpret_cast<System_String*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7C070))();
  }
  static inline System_String* SerializeAll() {
    return reinterpret_cast<System_String*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7C250))();
  }
  static inline void DeserializeAll(System_String* text) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7C4A0))(text);
  }
  static inline void FindAll() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7C690))();
  }
  static inline void Reset() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7C8D0))();
  }
  static inline void UpdateAll() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7C9B0))();
  }
  static inline ModdingAPI::Exposed::NPC* FindNPCByGuid(System_String* guid) {
    return reinterpret_cast<ModdingAPI::Exposed::NPC*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7CCC0))(guid);
  }
  static inline ModdingAPI::Exposed::NPC* FindNearest(ModdingAPI::Exposed::UnityEngine::Vector3 position, float maxDistance, int32_t flags) {
    return reinterpret_cast<ModdingAPI::Exposed::NPC*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7CDB0))(position, maxDistance, flags);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1E7D120))();
  }
};
}