// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Color.hpp"


namespace ModdingAPI::Exposed::EasyRoads3Dv3 {
struct __ERRoad_Il2CppStaticFields {
};

struct __ERRoad_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __ERRoad_Il2CppClass {
  Il2CppClass_1 _1;
  __ERRoad_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __ERRoad_Il2CppVtbl vtbl;
};

class ERRoad {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C49D68;
  static inline    __ERRoad_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __ERRoad_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__ERRoad_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __ERRoad_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* roadScript;
  ModdingAPI::Exposed::UnityEngine::GameObject* gameObject;
  System_String* str;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x592F50))(this);
  }
  void ::ctor(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x592FE0))(this, scr);
  }
  void AddInititialMarkers(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5930C0))(this, pos);
  }
  void AddMarker(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x593190))(this, pos);
  }
  void FlipTexture() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x593300))(this);
  }
  void AddMarkers(ModdingAPI::Exposed::UnityEngine::Vector3_array* pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::UnityEngine::Vector3_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x593690))(this, pos);
  }
  void InsertMarker(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x593810))(this, pos);
  }
  void InsertMarkerAt(ModdingAPI::Exposed::UnityEngine::Vector3 pos, int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x593860))(this, pos, index);
  }
  void DeleteMarker(int32_t i) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x593970))(this, i);
  }
  void SetLayer(int32_t layer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x593A50))(this, layer);
  }
  void SetTag(System_String* tag) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x593B30))(this, tag);
  }
  void SetWidth(float width) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x593C20))(this, width);
  }
  float GetWidth() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x593D00))(this);
  }
  float GetLength() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x593DD0))(this);
  }
  ModdingAPI::Exposed::EasyRoads3Dv3::ERRoadType* GetRoadType(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoadType_array* roadTypes) {
    return reinterpret_cast<ModdingAPI::Exposed::EasyRoads3Dv3::ERRoadType*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::EasyRoads3Dv3::ERRoadType_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x593DF0))(this, roadTypes);
  }
  ModdingAPI::Exposed::EasyRoads3Dv3::ERRoadType* GetRoadType() {
    return reinterpret_cast<ModdingAPI::Exposed::EasyRoads3Dv3::ERRoadType*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x593EA0))(this);
  }
  bool SetRoadType(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoadType* roadType) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::EasyRoads3Dv3::ERRoadType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x593F50))(this, roadType);
  }
  bool SetMarkerControlType(int32_t marker, int32_t type) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5940C0))(this, marker, type);
  }
  bool SetSplineStrength(int32_t marker, float strength) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x594270))(this, marker, strength);
  }
  void IsSideObject(bool isSideObject) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5943B0))(this, isSideObject);
  }
  ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad* InsertIConnector(int32_t index) {
    return reinterpret_cast<ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5943D0))(this, index);
  }
  ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad* InsertIConnector(int32_t index, System_String* connectionName) {
    return reinterpret_cast<ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5943F0))(this, index, connectionName);
  }
  ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad* InsertIConnector(int32_t index, System_String* connectionName, ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection* connection) {
    return reinterpret_cast<ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, int32_t, System_String*, ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x594490))(this, index, connectionName, connection);
  }
  ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad* InsertIConnectorCore(int32_t index, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* pScript) {
    return reinterpret_cast<ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, int32_t, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x594740))(this, index, pScript);
  }
  ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* ODCQCQODDD() {
    return reinterpret_cast<ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x594C70))(this);
  }
  void SetSideObjects(ModdingAPI::Exposed::System::Collections::Generic::List_T_* soDataExt) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x594C80))(this, soDataExt);
  }
  void SetSplatmap(bool active) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x594F50))(this, active);
  }
  void SetSplatmap(bool active, int32_t splatIndex, int32_t expand, int32_t smoothLevel, float opacity) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, bool, int32_t, int32_t, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x594F70))(this, active, splatIndex, expand, smoothLevel, opacity);
  }
  void SetMaterial(ModdingAPI::Exposed::UnityEngine::Material* mat) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::UnityEngine::Material*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x594FF0))(this, mat);
  }
  void SetMarkerPosition(int32_t marker, ModdingAPI::Exposed::UnityEngine::Vector3 vec) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, int32_t, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x595250))(this, marker, vec);
  }
  void SetResolution(float res) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x595350))(this, res);
  }
  void IsStatic(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x595380))(this, value);
  }
  bool IsStatic() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x595440))(this);
  }
  float GetResolution() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5954F0))(this);
  }
  void SetAngleThreshold(float res) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x595510))(this, res);
  }
  float GetAngleTreshold(float res) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x595540))(this, res);
  }
  bool ClosedTrack(bool value) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x595560))(this, value);
  }
  void SetMarkerPositions(ModdingAPI::Exposed::UnityEngine::Vector3_array* vecs) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::UnityEngine::Vector3_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5956B0))(this, vecs);
  }
  void SetMarkerPositions(ModdingAPI::Exposed::UnityEngine::Vector3_array* vecs, int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::UnityEngine::Vector3_array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5958B0))(this, vecs, index);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetMarkerPosition(int32_t marker) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x595A20))(this, marker);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3_array* GetMarkerPositions() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3_array*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x595B60))(this);
  }
  void SetMarkerTilting(float value, int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x595F70))(this, value, index);
  }
  float GetMarkerTilting(int32_t index) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x596070))(this, index);
  }
  void SetMarkerTiltingCenter(float value, int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x596170))(this, value, index);
  }
  float GetMarkerTiltingCenter(int32_t index) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x596290))(this, index);
  }
  ModdingAPI::Exposed::UnityEngine::Color GetVertexColor(int32_t index) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Color(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x596390))(this, index);
  }
  void SetVertexColor(int32_t index, ModdingAPI::Exposed::UnityEngine::Color color) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, int32_t, ModdingAPI::Exposed::UnityEngine::Color)>(Helpers::Memory::GetInstance().MakeAbsolute(0x596490))(this, index, color);
  }
  void SetDistances() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x596590))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetPosition(float distance, int32_t currentElement) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5968C0))(this, distance, currentElement);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetLookatAtDistanceSmooth(float distance, int32_t currentElement) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x596D20))(this, distance, currentElement);
  }
  int32_t GetMarkerByPoint(int32_t el) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x597690))(this, el);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3_array* GetSplinePointsCenter() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3_array*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5978B0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3_array* GetSplinePointsRightSide() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3_array*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5979C0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3_array* GetSplinePointsRightSideExt() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3_array*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x597AD0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3_array* GetSplinePointsLeftSide() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3_array*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x597BE0))(this);
  }
  void SetMeshCollider(bool flag) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x597CF0))(this, flag);
  }
  void Refresh() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x598000))(this);
  }
  ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection* GetConnectionAtStart() {
    return reinterpret_cast<ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x598560))(this);
  }
  ModdingAPI::Exposed::UnityEngine::GameObject* GetConnectionObjectAtStart() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GameObject*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x598730))(this);
  }
  ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection* GetConnectionAtStart(int32_t connection) {
    return reinterpret_cast<ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x598860))(this, connection);
  }
  ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection* GetConnectionObjectAtEnd() {
    return reinterpret_cast<ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x598A60))(this);
  }
  ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection* GetConnectionAtEnd() {
    return reinterpret_cast<ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x598C30))(this);
  }
  ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection* GetConnectionAtEnd(int32_t connection) {
    return reinterpret_cast<ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x598E00))(this, connection);
  }
  ModdingAPI::Exposed::UnityEngine::GameObject* GetConnectionObjectAtEnd(int32_t connection) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GameObject*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x599000))(this, connection);
  }
  bool ConnectionCheck(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* prefab, int32_t index, int32_t startEnd) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x599160))(this, prefab, index, startEnd);
  }
  bool ConnectToStart(ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection* connectionObject, int32_t connectionIndex) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5994F0))(this, connectionObject, connectionIndex);
  }
  bool ConnectToStart(ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection* connectionObject, int32_t connectionIndex, bool autoAlign) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x599570))(this, connectionObject, connectionIndex, autoAlign);
  }
  bool ConnectToStartExt(ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection* connectionObject, int32_t connectionIndex, bool autoAlign) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x599610))(this, connectionObject, connectionIndex, autoAlign);
  }
  bool ConnectToEnd(ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection* connectionObject, int32_t connectionIndex) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5998E0))(this, connectionObject, connectionIndex);
  }
  bool ConnectToEnd(ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection* connectionObject, int32_t connectionIndex, bool autoAlign) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x599960))(this, connectionObject, connectionIndex, autoAlign);
  }
  bool ConnectToEndEx(ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection* connectionObject, int32_t connectionIndex, bool autoAlign) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x599A00))(this, connectionObject, connectionIndex, autoAlign);
  }
  ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection* AttachToStart(ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection* connectionObject) {
    return reinterpret_cast<ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x599D00))(this, connectionObject);
  }
  ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection* AttachToEnd(ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection* connectionObject) {
    return reinterpret_cast<ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x599FD0))(this, connectionObject);
  }
  bool ConnectionMatch(ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection* connection) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x59A2C0))(this, connection);
  }
  void UnConnectStart() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x59A440))(this);
  }
  void UnConnectEnd() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x59A540))(this);
  }
  bool ConnectionMatch(ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection* connection, int32_t connectionIndex) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, ModdingAPI::Exposed::EasyRoads3Dv3::ERConnection*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x59A660))(this, connection, connectionIndex);
  }
  void SnapToTerrain(bool flag) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x59A7B0))(this, flag);
  }
  void SnapToTerrain(bool flag, float offset) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, bool, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x59A7F0))(this, flag, offset);
  }
  System_String* GetName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x59A840))(this);
  }
  void SetName(System_String* name) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x59A920))(this, name);
  }
  void Destroy() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x59AA10))(this);
  }
};
}