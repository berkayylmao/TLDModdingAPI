// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.DateTime.hpp"
#include "ModdingAPI.Exposed.System.DateTimeOffset.hpp"
#include "ModdingAPI.Exposed.System.Decimal.hpp"
#include "ModdingAPI.Exposed.System.TimeSpan.hpp"
#include "ModdingAPI::Exposed::System::DateTime.hpp"
#include "ModdingAPI::Exposed::System::TimeSpan.hpp"
#include "ModdingAPI::Exposed::System::DateTimeOffset.hpp"
#include "ModdingAPI::Exposed::System::Decimal.hpp"


namespace ModdingAPI::Exposed::System::Xml::Schema {
struct __XmlBaseConverter_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Type* ICollectionType;
  ModdingAPI::Exposed::System::Type* IEnumerableType;
  ModdingAPI::Exposed::System::Type* IListType;
  ModdingAPI::Exposed::System::Type* ObjectArrayType;
  ModdingAPI::Exposed::System::Type* StringArrayType;
  ModdingAPI::Exposed::System::Type* XmlAtomicValueArrayType;
  ModdingAPI::Exposed::System::Type* DecimalType;
  ModdingAPI::Exposed::System::Type* Int32Type;
  ModdingAPI::Exposed::System::Type* Int64Type;
  ModdingAPI::Exposed::System::Type* StringType;
  ModdingAPI::Exposed::System::Type* XmlAtomicValueType;
  ModdingAPI::Exposed::System::Type* ObjectType;
  ModdingAPI::Exposed::System::Type* ByteType;
  ModdingAPI::Exposed::System::Type* Int16Type;
  ModdingAPI::Exposed::System::Type* SByteType;
  ModdingAPI::Exposed::System::Type* UInt16Type;
  ModdingAPI::Exposed::System::Type* UInt32Type;
  ModdingAPI::Exposed::System::Type* UInt64Type;
  ModdingAPI::Exposed::System::Type* XPathItemType;
  ModdingAPI::Exposed::System::Type* DoubleType;
  ModdingAPI::Exposed::System::Type* SingleType;
  ModdingAPI::Exposed::System::Type* DateTimeType;
  ModdingAPI::Exposed::System::Type* DateTimeOffsetType;
  ModdingAPI::Exposed::System::Type* BooleanType;
  ModdingAPI::Exposed::System::Type* ByteArrayType;
  ModdingAPI::Exposed::System::Type* XmlQualifiedNameType;
  ModdingAPI::Exposed::System::Type* UriType;
  ModdingAPI::Exposed::System::Type* TimeSpanType;
  ModdingAPI::Exposed::System::Type* XPathNavigatorType;
};

struct __XmlBaseConverter_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_ToBoolean;
  VirtualInvokeData _5_ToBoolean;
  VirtualInvokeData _6_ToBoolean;
  VirtualInvokeData _7_ToBoolean;
  VirtualInvokeData _8_ToBoolean;
  VirtualInvokeData _9_ToBoolean;
  VirtualInvokeData _10_ToInt32;
  VirtualInvokeData _11_ToInt32;
  VirtualInvokeData _12_ToInt32;
  VirtualInvokeData _13_ToInt32;
  VirtualInvokeData _14_ToInt32;
  VirtualInvokeData _15_ToInt32;
  VirtualInvokeData _16_ToInt64;
  VirtualInvokeData _17_ToInt64;
  VirtualInvokeData _18_ToInt64;
  VirtualInvokeData _19_ToInt64;
  VirtualInvokeData _20_ToInt64;
  VirtualInvokeData _21_ToInt64;
  VirtualInvokeData _22_ToDecimal;
  VirtualInvokeData _23_ToDecimal;
  VirtualInvokeData _24_ToDouble;
  VirtualInvokeData _25_ToDouble;
  VirtualInvokeData _26_ToDouble;
  VirtualInvokeData _27_ToDouble;
  VirtualInvokeData _28_ToDouble;
  VirtualInvokeData _29_ToDouble;
  VirtualInvokeData _30_ToSingle;
  VirtualInvokeData _31_ToSingle;
  VirtualInvokeData _32_ToSingle;
  VirtualInvokeData _33_ToDateTime;
  VirtualInvokeData _34_ToDateTime;
  VirtualInvokeData _35_ToDateTime;
  VirtualInvokeData _36_ToDateTime;
  VirtualInvokeData _37_ToDateTime;
  VirtualInvokeData _38_ToDateTime;
  VirtualInvokeData _39_ToDateTime;
  VirtualInvokeData _40_ToDateTimeOffset;
  VirtualInvokeData _41_ToDateTimeOffset;
  VirtualInvokeData _42_ToDateTimeOffset;
  VirtualInvokeData _43_ToString;
  VirtualInvokeData _44_ToString;
  VirtualInvokeData _45_ToString;
  VirtualInvokeData _46_ToString;
  VirtualInvokeData _47_ToString;
  VirtualInvokeData _48_ToString;
  VirtualInvokeData _49_ToString;
  VirtualInvokeData _50_ToString;
  VirtualInvokeData _51_ToString;
  VirtualInvokeData _52_ToString;
  VirtualInvokeData _53_ChangeType;
  VirtualInvokeData _54_ChangeType;
  VirtualInvokeData _55_ChangeType;
  VirtualInvokeData _56_ChangeType;
  VirtualInvokeData _57_ChangeType;
  VirtualInvokeData _58_ChangeType;
  VirtualInvokeData _59_ChangeType;
  VirtualInvokeData _60_ChangeType;
  VirtualInvokeData _62_ChangeListType;
  VirtualInvokeData _65535__ctor;
};

struct __XmlBaseConverter_Il2CppClass {
  Il2CppClass_1 _1;
  __XmlBaseConverter_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __XmlBaseConverter_Il2CppVtbl vtbl;
};

class XmlBaseConverter {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C88498;
  static inline    __XmlBaseConverter_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __XmlBaseConverter_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__XmlBaseConverter_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __XmlBaseConverter_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaType* schemaType;
  int32_t typeCode;
  ModdingAPI::Exposed::System::Type* clrTypeDefault;

  // Member methods:
  void ::ctor(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaType* schemaType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC58E50))(this, schemaType);
  }
  void ::ctor(int32_t typeCode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC58FA0))(this, typeCode);
  }
  void ::ctor(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter* converterAtomic) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC59100))(this, converterAtomic);
  }
  void ::ctor(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter* converterAtomic, ModdingAPI::Exposed::System::Type* clrTypeDefault) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC59160))(this, converterAtomic, clrTypeDefault);
  }
  bool ToBoolean(ModdingAPI::Exposed::System::DateTime value) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, ModdingAPI::Exposed::System::DateTime)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC59190))(this, value);
  }
  bool ToBoolean(double value) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC592B0))(this, value);
  }
  bool ToBoolean(int32_t value) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC593E0))(this, value);
  }
  bool ToBoolean(int64_t value) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC59500))(this, value);
  }
  bool ToBoolean(System_String* value) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC59620))(this, value);
  }
  bool ToBoolean(Il2CppObject* value) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC59730))(this, value);
  }
  ModdingAPI::Exposed::System::DateTime ToDateTime(bool value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC59840))(this, value);
  }
  ModdingAPI::Exposed::System::DateTime ToDateTime(ModdingAPI::Exposed::System::DateTimeOffset value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, ModdingAPI::Exposed::System::DateTimeOffset)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC59960))(this, value);
  }
  ModdingAPI::Exposed::System::DateTime ToDateTime(double value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC59A80))(this, value);
  }
  ModdingAPI::Exposed::System::DateTime ToDateTime(int32_t value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC59BB0))(this, value);
  }
  ModdingAPI::Exposed::System::DateTime ToDateTime(int64_t value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC59CD0))(this, value);
  }
  ModdingAPI::Exposed::System::DateTime ToDateTime(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC59DF0))(this, value);
  }
  ModdingAPI::Exposed::System::DateTime ToDateTime(Il2CppObject* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC59F00))(this, value);
  }
  ModdingAPI::Exposed::System::DateTimeOffset ToDateTimeOffset(ModdingAPI::Exposed::System::DateTime value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTimeOffset(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, ModdingAPI::Exposed::System::DateTime)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5A010))(this, value);
  }
  ModdingAPI::Exposed::System::DateTimeOffset ToDateTimeOffset(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTimeOffset(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5A140))(this, value);
  }
  ModdingAPI::Exposed::System::DateTimeOffset ToDateTimeOffset(Il2CppObject* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTimeOffset(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5A260))(this, value);
  }
  ModdingAPI::Exposed::System::Decimal ToDecimal(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Decimal(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5A380))(this, value);
  }
  ModdingAPI::Exposed::System::Decimal ToDecimal(Il2CppObject* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Decimal(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5A490))(this, value);
  }
  double ToDouble(bool value) {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5A5A0))(this, value);
  }
  double ToDouble(ModdingAPI::Exposed::System::DateTime value) {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, ModdingAPI::Exposed::System::DateTime)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5A6C0))(this, value);
  }
  double ToDouble(int32_t value) {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5A7E0))(this, value);
  }
  double ToDouble(int64_t value) {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5A900))(this, value);
  }
  double ToDouble(System_String* value) {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5AA20))(this, value);
  }
  double ToDouble(Il2CppObject* value) {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5AB30))(this, value);
  }
  int32_t ToInt32(bool value) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5AC40))(this, value);
  }
  int32_t ToInt32(ModdingAPI::Exposed::System::DateTime value) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, ModdingAPI::Exposed::System::DateTime)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5AD60))(this, value);
  }
  int32_t ToInt32(double value) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5AE80))(this, value);
  }
  int32_t ToInt32(int64_t value) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5AFA0))(this, value);
  }
  int32_t ToInt32(System_String* value) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5B0C0))(this, value);
  }
  int32_t ToInt32(Il2CppObject* value) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5B1C0))(this, value);
  }
  int64_t ToInt64(bool value) {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5B2C0))(this, value);
  }
  int64_t ToInt64(ModdingAPI::Exposed::System::DateTime value) {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, ModdingAPI::Exposed::System::DateTime)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5B3E0))(this, value);
  }
  int64_t ToInt64(double value) {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5B500))(this, value);
  }
  int64_t ToInt64(int32_t value) {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5B620))(this, value);
  }
  int64_t ToInt64(System_String* value) {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5B740))(this, value);
  }
  int64_t ToInt64(Il2CppObject* value) {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5B840))(this, value);
  }
  float ToSingle(double value) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5B940))(this, value);
  }
  float ToSingle(System_String* value) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5BA70))(this, value);
  }
  float ToSingle(Il2CppObject* value) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5BB80))(this, value);
  }
  System_String* ToString(bool value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5BC90))(this, value);
  }
  System_String* ToString(ModdingAPI::Exposed::System::DateTime value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, ModdingAPI::Exposed::System::DateTime)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5BDA0))(this, value);
  }
  System_String* ToString(ModdingAPI::Exposed::System::DateTimeOffset value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, ModdingAPI::Exposed::System::DateTimeOffset)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5BEB0))(this, value);
  }
  System_String* ToString(ModdingAPI::Exposed::System::Decimal value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, ModdingAPI::Exposed::System::Decimal)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5BFD0))(this, value);
  }
  System_String* ToString(double value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5C0F0))(this, value);
  }
  System_String* ToString(int32_t value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5C210))(this, value);
  }
  System_String* ToString(int64_t value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5C320))(this, value);
  }
  System_String* ToString(float value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5C430))(this, value);
  }
  System_String* ToString(Il2CppObject* value, ModdingAPI::Exposed::System::Xml::IXmlNamespaceResolver* nsResolver) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, Il2CppObject*, ModdingAPI::Exposed::System::Xml::IXmlNamespaceResolver*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5C550))(this, value, nsResolver);
  }
  System_String* ToString(Il2CppObject* value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5C660))(this, value);
  }
  Il2CppObject* ChangeType(bool value, ModdingAPI::Exposed::System::Type* destinationType) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, bool, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5C680))(this, value, destinationType);
  }
  Il2CppObject* ChangeType(ModdingAPI::Exposed::System::DateTime value, ModdingAPI::Exposed::System::Type* destinationType) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, ModdingAPI::Exposed::System::DateTime, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5C740))(this, value, destinationType);
  }
  Il2CppObject* ChangeType(ModdingAPI::Exposed::System::Decimal value, ModdingAPI::Exposed::System::Type* destinationType) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, ModdingAPI::Exposed::System::Decimal, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5C800))(this, value, destinationType);
  }
  Il2CppObject* ChangeType(double value, ModdingAPI::Exposed::System::Type* destinationType) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, double, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5C8D0))(this, value, destinationType);
  }
  Il2CppObject* ChangeType(int32_t value, ModdingAPI::Exposed::System::Type* destinationType) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, int32_t, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5C9A0))(this, value, destinationType);
  }
  Il2CppObject* ChangeType(int64_t value, ModdingAPI::Exposed::System::Type* destinationType) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, int64_t, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5CA60))(this, value, destinationType);
  }
  Il2CppObject* ChangeType(System_String* value, ModdingAPI::Exposed::System::Type* destinationType, ModdingAPI::Exposed::System::Xml::IXmlNamespaceResolver* nsResolver) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, System_String*, ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Xml::IXmlNamespaceResolver*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5CB20))(this, value, destinationType, nsResolver);
  }
  Il2CppObject* ChangeType(Il2CppObject* value, ModdingAPI::Exposed::System::Type* destinationType) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, Il2CppObject*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5CB40))(this, value, destinationType);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaType* get_SchemaType() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaType*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311320))(this);
  }
  int32_t get_TypeCode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FED20))(this);
  }
  System_String* get_XmlTypeName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5CB70))(this);
  }
  ModdingAPI::Exposed::System::Type* get_DefaultClrType() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110A0))(this);
  }
  ModdingAPI::Exposed::System::Exception* CreateInvalidClrMappingException(ModdingAPI::Exposed::System::Type* sourceType, ModdingAPI::Exposed::System::Type* destinationType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5CFC0))(this, sourceType, destinationType);
  }
  Il2CppObject* ChangeListType(Il2CppObject* value, ModdingAPI::Exposed::System::Type* destinationType, ModdingAPI::Exposed::System::Xml::IXmlNamespaceResolver* nsResolver) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlBaseConverter*, Il2CppObject*, ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Xml::IXmlNamespaceResolver*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5D580))(this, value, destinationType, nsResolver);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> ICollectionType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->ICollectionType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> IEnumerableType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->IEnumerableType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> IListType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->IListType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> ObjectArrayType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->ObjectArrayType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> StringArrayType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->StringArrayType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> XmlAtomicValueArrayType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->XmlAtomicValueArrayType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> DecimalType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->DecimalType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> Int32Type = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->Int32Type; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> Int64Type = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->Int64Type; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> StringType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->StringType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> XmlAtomicValueType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->XmlAtomicValueType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> ObjectType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->ObjectType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> ByteType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->ByteType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> Int16Type = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->Int16Type; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> SByteType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->SByteType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> UInt16Type = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->UInt16Type; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> UInt32Type = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->UInt32Type; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> UInt64Type = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->UInt64Type; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> XPathItemType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->XPathItemType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> DoubleType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->DoubleType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> SingleType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->SingleType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> DateTimeType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->DateTimeType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> DateTimeOffsetType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->DateTimeOffsetType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> BooleanType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->BooleanType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> ByteArrayType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->ByteArrayType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> XmlQualifiedNameType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->XmlQualifiedNameType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> UriType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->UriType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> TimeSpanType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->TimeSpanType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> XPathNavigatorType = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->XPathNavigatorType; }
  );

  // Static methods:
  static inline bool IsDerivedFrom(ModdingAPI::Exposed::System::Type* derivedType, ModdingAPI::Exposed::System::Type* baseType) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5CEC0))(derivedType, baseType);
  }
  static inline System_String* QNameToString(ModdingAPI::Exposed::System::Xml::XmlQualifiedName* name) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlQualifiedName*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5D410))(name);
  }
  static inline ModdingAPI::Exposed::System::Byte_array* StringToBase64Binary(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Byte_array*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5D5F0))(value);
  }
  static inline ModdingAPI::Exposed::System::DateTime StringToDate(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5D6C0))(value);
  }
  static inline ModdingAPI::Exposed::System::DateTime StringToDateTime(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5D790))(value);
  }
  static inline ModdingAPI::Exposed::System::TimeSpan StringToDayTimeDuration(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::TimeSpan(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5D860))(value);
  }
  static inline ModdingAPI::Exposed::System::TimeSpan StringToDuration(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::TimeSpan(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5D8C0))(value);
  }
  static inline ModdingAPI::Exposed::System::DateTime StringToGDay(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5D920))(value);
  }
  static inline ModdingAPI::Exposed::System::DateTime StringToGMonth(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5D9F0))(value);
  }
  static inline ModdingAPI::Exposed::System::DateTime StringToGMonthDay(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5DAC0))(value);
  }
  static inline ModdingAPI::Exposed::System::DateTime StringToGYear(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5DB90))(value);
  }
  static inline ModdingAPI::Exposed::System::DateTime StringToGYearMonth(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5DC60))(value);
  }
  static inline ModdingAPI::Exposed::System::DateTimeOffset StringToDateOffset(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTimeOffset(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5DD30))(value);
  }
  static inline ModdingAPI::Exposed::System::DateTimeOffset StringToDateTimeOffset(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTimeOffset(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5DE10))(value);
  }
  static inline ModdingAPI::Exposed::System::DateTimeOffset StringToGDayOffset(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTimeOffset(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5DEF0))(value);
  }
  static inline ModdingAPI::Exposed::System::DateTimeOffset StringToGMonthOffset(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTimeOffset(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5DFD0))(value);
  }
  static inline ModdingAPI::Exposed::System::DateTimeOffset StringToGMonthDayOffset(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTimeOffset(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5E0C0))(value);
  }
  static inline ModdingAPI::Exposed::System::DateTimeOffset StringToGYearOffset(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTimeOffset(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5E1A0))(value);
  }
  static inline ModdingAPI::Exposed::System::DateTimeOffset StringToGYearMonthOffset(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTimeOffset(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5E280))(value);
  }
  static inline ModdingAPI::Exposed::System::Byte_array* StringToHexBinary(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Byte_array*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5E360))(value);
  }
  static inline ModdingAPI::Exposed::System::Xml::XmlQualifiedName* StringToQName(System_String* value, ModdingAPI::Exposed::System::Xml::IXmlNamespaceResolver* nsResolver) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlQualifiedName*(__fastcall*)(System_String*, ModdingAPI::Exposed::System::Xml::IXmlNamespaceResolver*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5E470))(value, nsResolver);
  }
  static inline ModdingAPI::Exposed::System::DateTime StringToTime(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5E7E0))(value);
  }
  static inline ModdingAPI::Exposed::System::DateTimeOffset StringToTimeOffset(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTimeOffset(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5E8B0))(value);
  }
  static inline ModdingAPI::Exposed::System::TimeSpan StringToYearMonthDuration(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::TimeSpan(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5E990))(value);
  }
  static inline System_String* AnyUriToString(ModdingAPI::Exposed::System::Uri* value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Uri*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5E9F0))(value);
  }
  static inline System_String* Base64BinaryToString(ModdingAPI::Exposed::System::Byte_array* value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Byte_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5EA60))(value);
  }
  static inline System_String* DateToString(ModdingAPI::Exposed::System::DateTime value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::DateTime)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5EB00))(value);
  }
  static inline System_String* DateTimeToString(ModdingAPI::Exposed::System::DateTime value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::DateTime)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5EB40))(value);
  }
  static inline System_String* DayTimeDurationToString(ModdingAPI::Exposed::System::TimeSpan value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::TimeSpan)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5EB80))(value);
  }
  static inline System_String* DurationToString(ModdingAPI::Exposed::System::TimeSpan value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::TimeSpan)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C6530))(value);
  }
  static inline System_String* GDayToString(ModdingAPI::Exposed::System::DateTime value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::DateTime)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5EBE0))(value);
  }
  static inline System_String* GMonthToString(ModdingAPI::Exposed::System::DateTime value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::DateTime)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5EC20))(value);
  }
  static inline System_String* GMonthDayToString(ModdingAPI::Exposed::System::DateTime value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::DateTime)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5EC60))(value);
  }
  static inline System_String* GYearToString(ModdingAPI::Exposed::System::DateTime value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::DateTime)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5ECA0))(value);
  }
  static inline System_String* GYearMonthToString(ModdingAPI::Exposed::System::DateTime value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::DateTime)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5ECE0))(value);
  }
  static inline System_String* DateOffsetToString(ModdingAPI::Exposed::System::DateTimeOffset value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::DateTimeOffset)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5ED20))(value);
  }
  static inline System_String* DateTimeOffsetToString(ModdingAPI::Exposed::System::DateTimeOffset value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::DateTimeOffset)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5ED70))(value);
  }
  static inline System_String* GDayOffsetToString(ModdingAPI::Exposed::System::DateTimeOffset value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::DateTimeOffset)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5EDC0))(value);
  }
  static inline System_String* GMonthOffsetToString(ModdingAPI::Exposed::System::DateTimeOffset value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::DateTimeOffset)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5EE10))(value);
  }
  static inline System_String* GMonthDayOffsetToString(ModdingAPI::Exposed::System::DateTimeOffset value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::DateTimeOffset)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5EE60))(value);
  }
  static inline System_String* GYearOffsetToString(ModdingAPI::Exposed::System::DateTimeOffset value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::DateTimeOffset)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5EEB0))(value);
  }
  static inline System_String* GYearMonthOffsetToString(ModdingAPI::Exposed::System::DateTimeOffset value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::DateTimeOffset)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5EF00))(value);
  }
  static inline System_String* QNameToString(ModdingAPI::Exposed::System::Xml::XmlQualifiedName* qname, ModdingAPI::Exposed::System::Xml::IXmlNamespaceResolver* nsResolver) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlQualifiedName*, ModdingAPI::Exposed::System::Xml::IXmlNamespaceResolver*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5EF50))(qname, nsResolver);
  }
  static inline System_String* TimeToString(ModdingAPI::Exposed::System::DateTime value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::DateTime)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5F140))(value);
  }
  static inline System_String* TimeOffsetToString(ModdingAPI::Exposed::System::DateTimeOffset value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::DateTimeOffset)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5F180))(value);
  }
  static inline System_String* YearMonthDurationToString(ModdingAPI::Exposed::System::TimeSpan value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::TimeSpan)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5F1D0))(value);
  }
  static inline ModdingAPI::Exposed::System::DateTime DateTimeOffsetToDateTime(ModdingAPI::Exposed::System::DateTimeOffset value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(ModdingAPI::Exposed::System::DateTimeOffset)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5F230))(value);
  }
  static inline int32_t DecimalToInt32(ModdingAPI::Exposed::System::Decimal value) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Decimal)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5F250))(value);
  }
  static inline int64_t DecimalToInt64(ModdingAPI::Exposed::System::Decimal value) {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::System::Decimal)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5F480))(value);
  }
  static inline uint64_t DecimalToUInt64(ModdingAPI::Exposed::System::Decimal value) {
    return reinterpret_cast<uint64_t(__fastcall*)(ModdingAPI::Exposed::System::Decimal)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5F6C0))(value);
  }
  static inline uint8_t Int32ToByte(int32_t value) {
    return reinterpret_cast<uint8_t(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5F900))(value);
  }
  static inline int16_t Int32ToInt16(int32_t value) {
    return reinterpret_cast<int16_t(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5FA50))(value);
  }
  static inline char Int32ToSByte(int32_t value) {
    return reinterpret_cast<char(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5FBB0))(value);
  }
  static inline uint16_t Int32ToUInt16(int32_t value) {
    return reinterpret_cast<uint16_t(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5FD10))(value);
  }
  static inline int32_t Int64ToInt32(int64_t value) {
    return reinterpret_cast<int32_t(__fastcall*)(int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5FE60))(value);
  }
  static inline uint32_t Int64ToUInt32(int64_t value) {
    return reinterpret_cast<uint32_t(__fastcall*)(int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC5FFC0))(value);
  }
  static inline ModdingAPI::Exposed::System::DateTime UntypedAtomicToDateTime(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC60120))(value);
  }
  static inline ModdingAPI::Exposed::System::DateTimeOffset UntypedAtomicToDateTimeOffset(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTimeOffset(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC601F0))(value);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xC602E0))();
  }
};
}