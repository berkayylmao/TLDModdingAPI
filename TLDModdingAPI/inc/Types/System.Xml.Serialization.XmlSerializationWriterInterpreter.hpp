// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System::Xml::Serialization {
struct __XmlSerializationWriterInterpreter_Il2CppStaticFields {
};

struct __XmlSerializationWriterInterpreter_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_InitCallbacks;
  VirtualInvokeData _5_WriteObject;
  VirtualInvokeData _6_WriteMessage;
  VirtualInvokeData _7_WriteObjectElement;
  VirtualInvokeData _8_WriteObjectElementAttributes;
  VirtualInvokeData _9_WriteObjectElementElements;
  VirtualInvokeData _10_WriteListElement;
  VirtualInvokeData _11_WritePrimitiveElement;
  VirtualInvokeData _12_WriteEnumElement;
};

struct __XmlSerializationWriterInterpreter_Il2CppClass {
  Il2CppClass_1 _1;
  __XmlSerializationWriterInterpreter_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __XmlSerializationWriterInterpreter_Il2CppVtbl vtbl;
};

class XmlSerializationWriterInterpreter {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C650A0;
  static inline    __XmlSerializationWriterInterpreter_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __XmlSerializationWriterInterpreter_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__XmlSerializationWriterInterpreter_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __XmlSerializationWriterInterpreter_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::System::Runtime::Serialization::ObjectIDGenerator* XmlSerializationWriter_idGenerator;
  int32_t XmlSerializationWriter_qnameCount;
  bool XmlSerializationWriter_topLevelElement;
  ModdingAPI::Exposed::System::Collections::ArrayList* XmlSerializationWriter_namespaces;
  ModdingAPI::Exposed::System::Xml::XmlWriter* XmlSerializationWriter_writer;
  ModdingAPI::Exposed::System::Collections::Queue* XmlSerializationWriter_referencedElements;
  ModdingAPI::Exposed::System::Collections::Hashtable* XmlSerializationWriter_callbacks;
  ModdingAPI::Exposed::System::Collections::Hashtable* XmlSerializationWriter_serializedObjects;
  ModdingAPI::Exposed::System::Xml::Serialization::XmlMapping* _typeMap;
  int32_t _format;

  // Member methods:
  void ::ctor(ModdingAPI::Exposed::System::Xml::Serialization::XmlMapping* typeMap) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, ModdingAPI::Exposed::System::Xml::Serialization::XmlMapping*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9AAEE0))(this, typeMap);
  }
  void InitCallbacks() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9AB050))(this);
  }
  void WriteRoot(Il2CppObject* ob) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9AB5D0))(this, ob);
  }
  void WriteObject(ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping* typeMap, Il2CppObject* ob, System_String* element, System_String* namesp, bool isNullable, bool needType, bool writeWrappingElem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping*, Il2CppObject*, System_String*, System_String*, bool, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9AB8B0))(this, typeMap, ob, element, namesp, isNullable, needType, writeWrappingElem);
  }
  void WriteMessage(ModdingAPI::Exposed::System::Xml::Serialization::XmlMembersMapping* membersMap, ModdingAPI::Exposed::System::Object_array* parameters) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, ModdingAPI::Exposed::System::Xml::Serialization::XmlMembersMapping*, ModdingAPI::Exposed::System::Object_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9ABF10))(this, membersMap, parameters);
  }
  void WriteObjectElement(ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping* typeMap, Il2CppObject* ob, System_String* element, System_String* namesp) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping*, Il2CppObject*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9AC150))(this, typeMap, ob, element, namesp);
  }
  void WriteObjectElementAttributes(ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping* typeMap, Il2CppObject* ob) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9AC2F0))(this, typeMap, ob);
  }
  void WriteObjectElementElements(ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping* typeMap, Il2CppObject* ob) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9AC400))(this, typeMap, ob);
  }
  void WriteMembers(ModdingAPI::Exposed::System::Xml::Serialization::ClassMap* map, Il2CppObject* ob, bool isValueList) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, ModdingAPI::Exposed::System::Xml::Serialization::ClassMap*, Il2CppObject*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9AC510))(this, map, ob, isValueList);
  }
  void WriteAttributeMembers(ModdingAPI::Exposed::System::Xml::Serialization::ClassMap* map, Il2CppObject* ob, bool isValueList) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, ModdingAPI::Exposed::System::Xml::Serialization::ClassMap*, Il2CppObject*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9AC570))(this, map, ob, isValueList);
  }
  void WriteElementMembers(ModdingAPI::Exposed::System::Xml::Serialization::ClassMap* map, Il2CppObject* ob, bool isValueList) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, ModdingAPI::Exposed::System::Xml::Serialization::ClassMap*, Il2CppObject*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9ACAD0))(this, map, ob, isValueList);
  }
  Il2CppObject* GetMemberValue(ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapMember* member, Il2CppObject* ob, bool isValueList) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapMember*, Il2CppObject*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9ACF60))(this, member, ob, isValueList);
  }
  bool MemberHasValue(ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapMember* member, Il2CppObject* ob, bool isValueList) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapMember*, Il2CppObject*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9AD090))(this, member, ob, isValueList);
  }
  void WriteMemberElement(ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapElementInfo* elem, Il2CppObject* memberValue) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapElementInfo*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9AD330))(this, elem, memberValue);
  }
  void WritePrimitiveValueLiteral(Il2CppObject* memberValue, System_String* name, System_String* ns, ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping* mappedType, ModdingAPI::Exposed::System::Xml::Serialization::TypeData* typeData, bool wrapped, bool isNullable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, Il2CppObject*, System_String*, System_String*, ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping*, ModdingAPI::Exposed::System::Xml::Serialization::TypeData*, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9ADCA0))(this, memberValue, name, ns, mappedType, typeData, wrapped, isNullable);
  }
  void WritePrimitiveValueEncoded(Il2CppObject* memberValue, System_String* name, System_String* ns, ModdingAPI::Exposed::System::Xml::XmlQualifiedName* xsiType, ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping* mappedType, ModdingAPI::Exposed::System::Xml::Serialization::TypeData* typeData, bool wrapped, bool isNullable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, Il2CppObject*, System_String*, System_String*, ModdingAPI::Exposed::System::Xml::XmlQualifiedName*, ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping*, ModdingAPI::Exposed::System::Xml::Serialization::TypeData*, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9ADFC0))(this, memberValue, name, ns, xsiType, mappedType, typeData, wrapped, isNullable);
  }
  void WriteListElement(ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping* typeMap, Il2CppObject* ob, System_String* element, System_String* namesp) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping*, Il2CppObject*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9AE300))(this, typeMap, ob, element, namesp);
  }
  void WriteListContent(Il2CppObject* container, ModdingAPI::Exposed::System::Xml::Serialization::TypeData* listType, ModdingAPI::Exposed::System::Xml::Serialization::ListMap* map, Il2CppObject* ob, ModdingAPI::Exposed::System::Text::StringBuilder* targetString) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, Il2CppObject*, ModdingAPI::Exposed::System::Xml::Serialization::TypeData*, ModdingAPI::Exposed::System::Xml::Serialization::ListMap*, Il2CppObject*, ModdingAPI::Exposed::System::Text::StringBuilder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9AE660))(this, container, listType, map, ob, targetString);
  }
  int32_t GetListCount(ModdingAPI::Exposed::System::Xml::Serialization::TypeData* listType, Il2CppObject* ob) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, ModdingAPI::Exposed::System::Xml::Serialization::TypeData*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9AED80))(this, listType, ob);
  }
  void WriteAnyElementContent(ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapMemberAnyElement* member, Il2CppObject* memberValue) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapMemberAnyElement*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9AEF60))(this, member, memberValue);
  }
  void WritePrimitiveElement(ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping* typeMap, Il2CppObject* ob, System_String* element, System_String* namesp) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping*, Il2CppObject*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9AF470))(this, typeMap, ob, element, namesp);
  }
  void WriteEnumElement(ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping* typeMap, Il2CppObject* ob, System_String* element, System_String* namesp) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping*, Il2CppObject*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9AF4D0))(this, typeMap, ob, element, namesp);
  }
  System_String* GetStringValue(ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping* typeMap, ModdingAPI::Exposed::System::Xml::Serialization::TypeData* type, Il2CppObject* value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping*, ModdingAPI::Exposed::System::Xml::Serialization::TypeData*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9AF510))(this, typeMap, type, value);
  }
  System_String* GetEnumXmlValue(ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping* typeMap, Il2CppObject* ob) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Serialization::XmlSerializationWriterInterpreter*, ModdingAPI::Exposed::System::Xml::Serialization::XmlTypeMapping*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9AF7D0))(this, typeMap, ob);
  }

  // Static methods:
  static inline Il2CppObject* ImplicitConvert(Il2CppObject* obj, ModdingAPI::Exposed::System::Type* type) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(Il2CppObject*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9AD900))(obj, type);
  }
};
}