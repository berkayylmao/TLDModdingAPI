// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Color.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"


namespace ModdingAPI::Exposed {
struct __Panel_ActionsRadial_Il2CppStaticFields {
};

struct __Panel_ActionsRadial_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __Panel_ActionsRadial_Il2CppClass {
  Il2CppClass_1 _1;
  __Panel_ActionsRadial_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Panel_ActionsRadial_Il2CppVtbl vtbl;
};

class Panel_ActionsRadial {
public:
  // Il2Cpp fields:
  __Panel_ActionsRadial_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_TimeWidgetPos;
  ModdingAPI::Exposed::GearItem* m_GearItemAddToSatchel;
  ModdingAPI::Exposed::RadialMenuArm* m_RadialArmThatDidInvoke;
  ModdingAPI::Exposed::UnityEngine::Color m_FirstAidRedColor;
  ModdingAPI::Exposed::UnityEngine::Color m_FirstAidRiskColor;
  ModdingAPI::Exposed::UnityEngine::Color m_FirstAidBuffColor;
  float m_SecondsToLockControlsAfter;
  ModdingAPI::Exposed::ButtonLegendContainer* m_ButtonLegendContainer;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_NonAnimatingObjects;
  ModdingAPI::Exposed::UISpriteAnimation* m_BackpieceAnim;
  ModdingAPI::Exposed::UISpriteAnimation* m_BackpieceAnimOut;
  ModdingAPI::Exposed::UISprite* m_FadeOverlaySprite;
  float m_FadeOverlayMaxAlpha;
  int32_t m_NumFramesToFadeInOut;
  bool m_DisableStatusBarsDuringFadeOut;
  float m_CenterButtonRadius;
  ModdingAPI::Exposed::TweenScale* m_TweenScale;
  ModdingAPI::Exposed::TweenAlpha* m_TweenAlpha;
  ModdingAPI::Exposed::RadialMenuArm_array* m_RadialArms;
  ModdingAPI::Exposed::Panel_ActionsRadial::RadialInfo_array* m_PrimaryRadial;
  ModdingAPI::Exposed::Panel_ActionsRadial::RadialInfo_array* m_PrimaryRadialStory;
  ModdingAPI::Exposed::Panel_ActionsRadial::RadialInfo* m_FireRadialInfo;
  ModdingAPI::Exposed::Panel_ActionsRadial::RadialInfo* m_PassTimeRadialInfo;
  ModdingAPI::Exposed::Panel_ActionsRadial::RadialInfo* m_SnowShelterRadialInfo;
  ModdingAPI::Exposed::Panel_ActionsRadial::RadialInfo* m_DecoyRadialInfo;
  ModdingAPI::Exposed::Panel_ActionsRadial::RadialInfo* m_OpenMapRadialInfo;
  ModdingAPI::Exposed::UnityEngine::Color m_SectionColorUnselected;
  ModdingAPI::Exposed::UnityEngine::Color m_SectionColorSelected;
  ModdingAPI::Exposed::UnityEngine::Color m_SectionColorEmpty;
  ModdingAPI::Exposed::UnityEngine::Color m_SectionColorEmptySelected;
  ModdingAPI::Exposed::UnityEngine::Color m_IconColorGreyedOut;
  ModdingAPI::Exposed::UnityEngine::Color m_GearIconColorGreyedOut;
  ModdingAPI::Exposed::UnityEngine::Color m_SubRadialBackButtonSelected;
  ModdingAPI::Exposed::UnityEngine::Color m_SubRadialBackButtonUnselected;
  ModdingAPI::Exposed::UILabel* m_SegmentLabel;
  ModdingAPI::Exposed::UILabel* m_CurrentTimeLabel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_CraftingObject;
  ModdingAPI::Exposed::UILabel* m_CraftingItemName;
  ModdingAPI::Exposed::UILabel* m_CraftingItemDesc;
  ModdingAPI::Exposed::UILabel* m_CraftingItemTime;
  ModdingAPI::Exposed::HarvestRepairMaterial_array* m_CraftingRequiredMaterials;
  float m_CraftingRequiredMaterialCenteredX;
  float m_CraftingRequiredMaterialSpacing;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_InspectGearOffset;
  ModdingAPI::Exposed::Panel_ActionsRadial::CustomInspectOffset_array* m_CustomOffsets;
  float m_InspectModeSizeModifier;
  ModdingAPI::Exposed::System::String_array* m_LightSourceRadialOrder;
  ModdingAPI::Exposed::System::String_array* m_WeaponRadialOrder;
  ModdingAPI::Exposed::System::String_array* m_PlaceItemRadialOrder;
  ModdingAPI::Exposed::System::String_array* m_NavigationRadialOrder;
  System_String* m_ClickAudio;
  System_String* m_BackAudio;
  System_String* m_OpenAudio;
  System_String* m_CloseAudio;
  ModdingAPI::Exposed::StatusBar* m_ColdStatusBar;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_GearStatsObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_GearConditionObject;
  ModdingAPI::Exposed::UISprite* m_GearConditionSprite;
  ModdingAPI::Exposed::UILabel* m_GearConditionLabel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_GearConditionCenteredObject;
  ModdingAPI::Exposed::UISprite* m_GearConditionCenteredSprite;
  ModdingAPI::Exposed::UILabel* m_GearConditionCenteredLabel;
  ModdingAPI::Exposed::UISprite* m_StackStatusIcon;
  ModdingAPI::Exposed::UISprite* m_StackStatusIconShadow;
  ModdingAPI::Exposed::UILabel* m_StackStatusLabel;
  ModdingAPI::Exposed::UnityEngine::Color m_StackStatusColor;
  System_String* m_LiquidIcon;
  System_String* m_LampFuelIcon;
  ModdingAPI::Exposed::UISprite* m_HotColdStatusIcon;
  ModdingAPI::Exposed::UISprite* m_HotColdStatusIconShadow;
  ModdingAPI::Exposed::UILabel* m_HotColdStatusLabel;
  System_String* m_FoodHotStatusIcon;
  ModdingAPI::Exposed::UnityEngine::Color m_FoodHotStatusColor;
  System_String* m_FoodColdStatusIcon;
  ModdingAPI::Exposed::UnityEngine::Color m_FoodColdStatusColor;
  ModdingAPI::Exposed::UILabel* m_MissionObjectiveLabel;
  ModdingAPI::Exposed::UILabel* m_MissionObjectiveWithTimerLabel;
  ModdingAPI::Exposed::UILabel* m_MissionTimerLabel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_MissionObjectWithTimer;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_MissionObjectNoTimer;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_MissionObjectivePanel;
  ModdingAPI::Exposed::UILabel* m_ObjectiveStatus;
  ModdingAPI::Exposed::UILabel* m_SubObjectiveStatus;
  ModdingAPI::Exposed::MissionsProgressBar* m_MissionsProgressBar;
  ModdingAPI::Exposed::Panel_ActionsRadial::RadialInfo* m_PlaceBodyRadialInfo;
  ModdingAPI::Exposed::Panel_ActionsRadial::RadialInfo* m_DropBodyRadialInfo;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_BodyCarryRadialOrder;
  int32_t m_NextArmToAdd;
  bool m_UsingGamepadLastFrame;
  ModdingAPI::Exposed::BlueprintItem* m_ItemBeingCrafted;
  uint32_t m_CraftingAudio;
  bool m_TimeAccelerated;
  float m_ElapsedCraftingTime;
  float m_DayLengthScaleBeforeCrafting;
  ModdingAPI::Exposed::GearItem* m_GearItemBeingInspected;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_InspectLightOrigPos;
  float m_InspectCamOrigDepth;
  float m_MaxFadeOverlayAlphaReached;
  int32_t m_NumFramesActive;
  bool m_RadialDisabled;
  bool m_IsExiting;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_Queue;
  ModdingAPI::Exposed::GearItem_array* m_SatchelItems;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_TempGearItemListNormal;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_TempGearItemListFavorites;
  ModdingAPI::Exposed::UIPanel* m_Panel;
  bool m_DoItemInHandsDuringInteractionEnd;

  // Member methods:
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A241F0))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A24640))(this);
  }
  void Enable(bool enable, bool doHoverDisable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A25300))(this, enable, doHoverDisable);
  }
  float GetPanelAlpha() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A25A70))(this);
  }
  bool IsRadialDisabled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A25AA0))(this);
  }
  void DisableRadial(bool disabled) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A25AB0))(this, disabled);
  }
  void DoFirstOpen() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A25AC0))(this);
  }
  void DoTween() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A25BA0))(this);
  }
  void ShowSatchelSelectSlotRadial() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A25E50))(this);
  }
  void ShowSatchelRadial() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A26590))(this);
  }
  void ShowPrimaryRadial() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A26E60))(this);
  }
  void ShowLightSourceRadial() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A27280))(this);
  }
  void ShowWeaponRadial() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A27950))(this);
  }
  void ShowToolsRadial() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A28020))(this);
  }
  void ShowPlaceItemRadial() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A289F0))(this);
  }
  void ShowNavigationRadial() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A29C80))(this);
  }
  void ShowCraftingRadial() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2A400))(this);
  }
  void ShowBodyCarryRadial() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2A4C0))(this);
  }
  void DoBodyDrop() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2AD10))(this);
  }
  void DoBodyPlacement() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2ADC0))(this);
  }
  void DoOpenMap() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2AE70))(this);
  }
  void ShowFoodRadial() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2AFC0))(this);
  }
  void ShowDrinkRadial() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2B230))(this);
  }
  void ShowFirstAidRadial() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2B4A0))(this);
  }
  bool IsEnabled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x165DF10))(this);
  }
  void AddRadialSelection(ModdingAPI::Exposed::Panel_ActionsRadial::RadialInfo* radialInfo, ModdingAPI::Exposed::System::Action* callback, bool greyOut, bool showHighlight) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, ModdingAPI::Exposed::Panel_ActionsRadial::RadialInfo*, ModdingAPI::Exposed::System::Action*, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2B710))(this, radialInfo, callback, greyOut, showHighlight);
  }
  void AddRadialSelectionGear(System_String* textureName, ModdingAPI::Exposed::Panel_ActionsRadial::RadialGearDelegate* callback, ModdingAPI::Exposed::GearItem* gi, bool greyOut, bool showCrafting, int32_t numItems) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, System_String*, ModdingAPI::Exposed::Panel_ActionsRadial::RadialGearDelegate*, ModdingAPI::Exposed::GearItem*, bool, bool, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2B830))(this, textureName, callback, gi, greyOut, showCrafting, numItems);
  }
  void OnPrevRadial() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2B900))(this);
  }
  void OnBack() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2BA90))(this);
  }
  void OnBackFinal() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2BCC0))(this);
  }
  void ShowNotInjuredMessage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2BDF0))(this);
  }
  void ShowNoBedrollMessage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2BEA0))(this);
  }
  void ShowNoDecoyMessage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2BF50))(this);
  }
  void ShowNoCampfireMessage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2C090))(this);
  }
  void ShowNoLightSourceMessage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2C1A0))(this);
  }
  void ShowNoWeaponMessage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2C250))(this);
  }
  void ShowNoToolsMessage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2C300))(this);
  }
  void ShowNoMapsMessage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2C3B0))(this);
  }
  void ShowNotImplemented() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2C460))(this);
  }
  void ShowNoEmergencyStimMessage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2C4E0))(this);
  }
  void ShowNoFirstAidItemsMessage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2C590))(this);
  }
  void ShowNoFoodMessage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2C640))(this);
  }
  void ShowNoDrinkMessage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2C6F0))(this);
  }
  void UseEmergencyStim() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2C7A0))(this);
  }
  void StartClothingUI() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2C860))(this);
  }
  void ShowNoSnowShelterMessage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2C920))(this);
  }
  void UseItem(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2CA50))(this, gi);
  }
  void ReplaceItemInSatchel(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2CC30))(this, gi);
  }
  void AddItemToSatchel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2CD60))(this);
  }
  void OpenVehicleRest() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2CF10))(this);
  }
  void OpenVehicleRest(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2CFC0))(this, gi);
  }
  void OpenSnowShelterRest() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2D070))(this);
  }
  void OpenSnowShelterRest(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2D120))(this, gi);
  }
  void DoPassTime() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2D1D0))(this);
  }
  void DoCraftItem(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2D290))(this, gi);
  }
  bool IsCrafting() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2D6E0))(this);
  }
  void OnCancelCrafting() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2D790))(this);
  }
  void ShowEatRawMeatConfirmPopup() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2D7E0))(this);
  }
  bool CanPlaceFromRadial(ModdingAPI::Exposed::GearItem* gi) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2DA10))(this, gi);
  }
  bool CanUseFromRadial(ModdingAPI::Exposed::GearItem* gi) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2DB40))(this, gi);
  }
  void UpdateButtonLegend() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2DBE0))(this);
  }
  void UpdateButtonStates() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2E010))(this);
  }
  void DetermineHoveredItemState(bool canPlace, System_String* useAction) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, bool, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2E250))(this, canPlace, useAction);
  }
  System_String* GetActionText(ModdingAPI::Exposed::RadialMenuArm* arm) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, ModdingAPI::Exposed::RadialMenuArm*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2E520))(this, arm);
  }
  int32_t StickDirectionToIndex(ModdingAPI::Exposed::UnityEngine::Vector2 stickVec) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2E7C0))(this, stickVec);
  }
  int32_t MousePosToIndex() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2E950))(this);
  }
  ModdingAPI::Exposed::System::Action* GetDelegateForRadial(int32_t radialType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Action*(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A2ED40))(this, radialType);
  }
  bool GetShouldGreyOut(int32_t radialType) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A30760))(this, radialType);
  }
  bool ShouldShowNewItemHighlight(int32_t radialType) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A31550))(this, radialType);
  }
  void UpdateDisplayText() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A31670))(this);
  }
  void UpdateCurrentTimeLabel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A32D40))(this);
  }
  void RefreshCraftingRequiredMaterials(ModdingAPI::Exposed::BlueprintItem* bpi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, ModdingAPI::Exposed::BlueprintItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A32E10))(this, bpi);
  }
  void UpdateCrafting() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A335C0))(this);
  }
  void RestoreTimeOfDay() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A33880))(this);
  }
  void AccelerateTimeOfDay(int32_t craftingMinutes) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A33950))(this, craftingMinutes);
  }
  void StopProgressBarAudio() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A33AB0))(this);
  }
  void ConsumeMaterialsUsedForCrafting(ModdingAPI::Exposed::BlueprintItem* bpi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, ModdingAPI::Exposed::BlueprintItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A33BB0))(this, bpi);
  }
  void AddCraftedItemToInventory(ModdingAPI::Exposed::BlueprintItem* bpi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, ModdingAPI::Exposed::BlueprintItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A33DD0))(this, bpi);
  }
  bool CanCraftItem(ModdingAPI::Exposed::GearItem* gi) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A34180))(this, gi);
  }
  int32_t GetCraftResultAmount(ModdingAPI::Exposed::GearItem* gi) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A34500))(this, gi);
  }
  void ShowGearRadial(ModdingAPI::Exposed::System::Collections::Generic::List_T_* gearItems, ModdingAPI::Exposed::System::Action* noItemsAction) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Action*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A346B0))(this, gearItems, noItemsAction);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* GetFoodItemsInInventory() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A34A20))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* GetDrinkItemsInInventory() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A34D50))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* GetFirstAidItemsInInventory() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A35140))(this);
  }
  void UpdateFadeOverlay() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A354A0))(this);
  }
  void UpdateStackStatus(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A35800))(this, gi);
  }
  void UpdateHotColdStatus(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A36370))(this, gi);
  }
  void UpdateAndEnableStackStatus(System_String* text, System_String* spriteName, ModdingAPI::Exposed::UnityEngine::Color c) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, System_String*, System_String*, ModdingAPI::Exposed::UnityEngine::Color)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A364F0))(this, text, spriteName, c);
  }
  void UpdateAndEnableHotColdStatus(System_String* text, System_String* spriteName, ModdingAPI::Exposed::UnityEngine::Color c) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, System_String*, System_String*, ModdingAPI::Exposed::UnityEngine::Color)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A36950))(this, text, spriteName, c);
  }
  System_String* StripBraces(System_String* text) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A36D40))(this, text);
  }
  void UpdateMissionInfo() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A36E60))(this);
  }
  void ForceRadialMenuArmCallback() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A371A0))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_ActionsRadial*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1A37270))(this);
  }
};
}