// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.ExposedReference_T_.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Playables.Playable.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Playables.PlayableGraph.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Playables::Playable.hpp"


namespace ModdingAPI::Exposed::UnityEngine::Timeline {
struct __ControlPlayableAsset_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* k_EmptyDirectorsList;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* k_EmptyParticlesList;
  ModdingAPI::Exposed::System::Collections::Generic::HashSet_T_* s_ProcessedDirectors;
  ModdingAPI::Exposed::System::Collections::Generic::HashSet_T_* s_CreatedPrefabs;
};

struct __ControlPlayableAsset_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _6_CreatePlayable;
  VirtualInvokeData _7_get_duration;
  VirtualInvokeData _8_get_outputs;
  VirtualInvokeData _9_GatherProperties;
  VirtualInvokeData _10_get_clipCaps;
  VirtualInvokeData _11_UnityEngine_Timeline_IClipInitializer_OnCreate;
  VirtualInvokeData _12_UnityEngine_Timeline_IDirectorDriver_GetDrivenDirectors;
};

struct __ControlPlayableAsset_Il2CppClass {
  Il2CppClass_1 _1;
  __ControlPlayableAsset_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __ControlPlayableAsset_Il2CppVtbl vtbl;
};

class ControlPlayableAsset {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C7C3F0;
  static inline    ControlPlayableAsset* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C738E0;
  static inline    __ControlPlayableAsset_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline ControlPlayableAsset* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (ControlPlayableAsset**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __ControlPlayableAsset_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__ControlPlayableAsset_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __ControlPlayableAsset_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::UnityEngine::ExposedReference_T_ sourceGameObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* prefabGameObject;
  bool updateParticle;
  uint32_t particleRandomSeed;
  bool updateDirector;
  bool updateITimeControl;
  bool searchHierarchy;
  bool active;
  int32_t postPlayback;
  ModdingAPI::Exposed::UnityEngine::Playables::PlayableAsset* m_ControlDirectorAsset;
  double m_Duration;
  bool m_SupportLoop;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::ControlPlayableAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFAC0A0))(this);
  }
  void OnEnable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::ControlPlayableAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFAC170))(this);
  }
  double get_duration() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::ControlPlayableAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFAC1D0))(this);
  }
  int32_t get_clipCaps() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::ControlPlayableAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFAC1E0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Playables::Playable CreatePlayable(ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph graph, ModdingAPI::Exposed::UnityEngine::GameObject* go) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Playables::Playable(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::ControlPlayableAsset*, ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFAC1F0))(this, graph, go);
  }
  void CreateActivationPlayable(ModdingAPI::Exposed::UnityEngine::GameObject* root, ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph graph, ModdingAPI::Exposed::System::Collections::Generic::List_T_* outplayables) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::ControlPlayableAsset*, ModdingAPI::Exposed::UnityEngine::GameObject*, ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFAD020))(this, root, graph, outplayables);
  }
  void SearchHiearchyAndConnectParticleSystem(ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* particleSystems, ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph graph, ModdingAPI::Exposed::System::Collections::Generic::List_T_* outplayables) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::ControlPlayableAsset*, ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*, ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFAD280))(this, particleSystems, graph, outplayables);
  }
  void SearchHierarchyAndConnectDirector(ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* directors, ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph graph, ModdingAPI::Exposed::System::Collections::Generic::List_T_* outplayables, bool disableSelfReferences) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::ControlPlayableAsset*, ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*, ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFAD4C0))(this, directors, graph, outplayables, disableSelfReferences);
  }
  void UpdateDurationAndLoopFlag(ModdingAPI::Exposed::System::Collections::Generic::IList_T_* directors, ModdingAPI::Exposed::System::Collections::Generic::IList_T_* particleSystems) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::ControlPlayableAsset*, ModdingAPI::Exposed::System::Collections::Generic::IList_T_*, ModdingAPI::Exposed::System::Collections::Generic::IList_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFADD00))(this, directors, particleSystems);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IList_T_* GetParticleSystemRoots(ModdingAPI::Exposed::UnityEngine::GameObject* go) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IList_T_*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::ControlPlayableAsset*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFAE2B0))(this, go);
  }
  void GatherProperties(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector* director, ModdingAPI::Exposed::UnityEngine::Timeline::IPropertyCollector* driver) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::ControlPlayableAsset*, ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*, ModdingAPI::Exposed::UnityEngine::Timeline::IPropertyCollector*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFAE6A0))(this, director, driver);
  }
  void UnityEngine::Timeline::IClipInitializer::OnCreate(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip* newClip, ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset* track, ModdingAPI::Exposed::UnityEngine::IExposedPropertyTable* table) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::ControlPlayableAsset*, ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*, ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset*, ModdingAPI::Exposed::UnityEngine::IExposedPropertyTable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFAED80))(this, newClip, track, table);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IList_T_* UnityEngine::Timeline::IDirectorDriver::GetDrivenDirectors(ModdingAPI::Exposed::UnityEngine::IExposedPropertyTable* resolver) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IList_T_*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::ControlPlayableAsset*, ModdingAPI::Exposed::UnityEngine::IExposedPropertyTable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFAEF20))(this, resolver);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*> k_EmptyDirectorsList = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->k_EmptyDirectorsList; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*> k_EmptyParticlesList = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->k_EmptyParticlesList; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::HashSet_T_*> s_ProcessedDirectors = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::HashSet_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_ProcessedDirectors; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::HashSet_T_*> s_CreatedPrefabs = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::HashSet_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_CreatedPrefabs; }
  );

  // Static methods:
  static inline ModdingAPI::Exposed::UnityEngine::Playables::Playable ConnectPlayablesToMixer(ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph graph, ModdingAPI::Exposed::System::Collections::Generic::List_T_* playables) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Playables::Playable(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFACE70))(graph, playables);
  }
  static inline void SearchHierarchyAndConnectControlableScripts(ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* controlableScripts, ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph graph, ModdingAPI::Exposed::System::Collections::Generic::List_T_* outplayables) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*, ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFAD770))(controlableScripts, graph, outplayables);
  }
  static inline void ConnectMixerAndPlayable(ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph graph, ModdingAPI::Exposed::UnityEngine::Playables::Playable mixer, ModdingAPI::Exposed::UnityEngine::Playables::Playable playable, int32_t portIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph, ModdingAPI::Exposed::UnityEngine::Playables::Playable, ModdingAPI::Exposed::UnityEngine::Playables::Playable, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFADA80))(graph, mixer, playable, portIndex);
  }
  static inline ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* GetControlableScripts(ModdingAPI::Exposed::UnityEngine::GameObject* root) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFADBA0))(root);
  }
  static inline void GetParticleSystemRoots(ModdingAPI::Exposed::UnityEngine::Transform* t, ModdingAPI::Exposed::System::Collections::Generic::ICollection_T_* roots) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Transform*, ModdingAPI::Exposed::System::Collections::Generic::ICollection_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFAE4B0))(t, roots);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xFAF3B0))();
  }
};
}