// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Runtime.InteropServices.GCHandle.hpp"


namespace ModdingAPI::Exposed::Storage {
struct __ConnectedStorage_Il2CppStaticFields {
  ModdingAPI::Exposed::UnityAOT::ObjectResultCallback* gInitializedThunk;
  ModdingAPI::Exposed::Storage::ConnectedStoragePlugin::ContainerInfoQueryAsyncCallback* gContainerInfoQueryThunk;
  ModdingAPI::Exposed::Storage::ConnectedStoragePlugin::QueryRemainingQuotaAsyncCallback* gQueryRemainingQuotaThunk;
  ModdingAPI::Exposed::Storage::ConnectedStoragePlugin::UserSignedOutStorageInvalidCallback* gUserSignedOutThunk;
  ModdingAPI::Exposed::UnityAOT::GenericActionCallback* gDeleteContainerThunk;
};

struct __ConnectedStorage_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_Dispose;
};

struct __ConnectedStorage_Il2CppClass {
  Il2CppClass_1 _1;
  __ConnectedStorage_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __ConnectedStorage_Il2CppVtbl vtbl;
};

class ConnectedStorage {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C5C920;
  static inline    __ConnectedStorage_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __ConnectedStorage_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__ConnectedStorage_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __ConnectedStorage_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::Storage::ConnectedStorage::OnUserSignedOutDelegate* OnUserSignedOut;
  bool AmSignedIn;
  int32_t UserId;
  intptr_t m_Self;
  ModdingAPI::Exposed::System::Runtime::InteropServices::GCHandle m_Handle;
  ModdingAPI::Exposed::Storage::ContainerContext* m_ActiveContainer;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* m_KnownContainers;

  // Member methods:
  void add_OnUserSignedOut(ModdingAPI::Exposed::Storage::ConnectedStorage::OnUserSignedOutDelegate* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Storage::ConnectedStorage*, ModdingAPI::Exposed::Storage::ConnectedStorage::OnUserSignedOutDelegate*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA3CD0))(this, value);
  }
  void remove_OnUserSignedOut(ModdingAPI::Exposed::Storage::ConnectedStorage::OnUserSignedOutDelegate* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Storage::ConnectedStorage*, ModdingAPI::Exposed::Storage::ConnectedStorage::OnUserSignedOutDelegate*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA3DC0))(this, value);
  }
  bool get_IsMachineStorage() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Storage::ConnectedStorage*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA3EB0))(this);
  }
  int32_t get_GetMaxQuotaForStorage() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Storage::ConnectedStorage*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA3EC0))(this);
  }
  ModdingAPI::Exposed::Storage::DeleteContainerAsyncOp* DeleteThisContainer(ModdingAPI::Exposed::Storage::DeleteContainerAsyncOp::DeleteContainerAsyncCallback* callback) {
    return reinterpret_cast<ModdingAPI::Exposed::Storage::DeleteContainerAsyncOp*(__fastcall*)(ModdingAPI::Exposed::Storage::ConnectedStorage*, ModdingAPI::Exposed::Storage::DeleteContainerAsyncOp::DeleteContainerAsyncCallback*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA4200))(this, callback);
  }
  ModdingAPI::Exposed::Storage::DeleteContainerAsyncOp* DeleteContainer(System_String* containerName, ModdingAPI::Exposed::Storage::DeleteContainerAsyncOp::DeleteContainerAsyncCallback* callback) {
    return reinterpret_cast<ModdingAPI::Exposed::Storage::DeleteContainerAsyncOp*(__fastcall*)(ModdingAPI::Exposed::Storage::ConnectedStorage*, System_String*, ModdingAPI::Exposed::Storage::DeleteContainerAsyncOp::DeleteContainerAsyncCallback*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA4450))(this, containerName, callback);
  }
  ModdingAPI::Exposed::Storage::QueryRemainingQuotaAsyncOp* QueryRemainingQuotaAsync(ModdingAPI::Exposed::Storage::QueryRemainingQuotaAsyncOp::QueryAsyncCallback* callback) {
    return reinterpret_cast<ModdingAPI::Exposed::Storage::QueryRemainingQuotaAsyncOp*(__fastcall*)(ModdingAPI::Exposed::Storage::ConnectedStorage*, ModdingAPI::Exposed::Storage::QueryRemainingQuotaAsyncOp::QueryAsyncCallback*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA46A0))(this, callback);
  }
  ModdingAPI::Exposed::Storage::ContainerInfoQueryAsyncOp* QueryContainerInfoAsync(System_String* query, ModdingAPI::Exposed::Storage::ContainerInfoQueryAsyncOp::ContainerInfoQueryCallback* callback) {
    return reinterpret_cast<ModdingAPI::Exposed::Storage::ContainerInfoQueryAsyncOp*(__fastcall*)(ModdingAPI::Exposed::Storage::ConnectedStorage*, System_String*, ModdingAPI::Exposed::Storage::ContainerInfoQueryAsyncOp::ContainerInfoQueryCallback*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA4970))(this, query, callback);
  }
  ModdingAPI::Exposed::Storage::ContainerContext* OpenOrCreateContainer(System_String* containerName) {
    return reinterpret_cast<ModdingAPI::Exposed::Storage::ContainerContext*(__fastcall*)(ModdingAPI::Exposed::Storage::ConnectedStorage*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA4C60))(this, containerName);
  }
  void SetActiveContainer(ModdingAPI::Exposed::Storage::ContainerContext* context) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Storage::ConnectedStorage*, ModdingAPI::Exposed::Storage::ContainerContext*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A410))(this, context);
  }
  void SetActiveContainer(System_String* name) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Storage::ConnectedStorage*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA4F70))(this, name);
  }
  uint32_t GetNumberOfContainersChangedSinceLastSync() {
    return reinterpret_cast<uint32_t(__fastcall*)(ModdingAPI::Exposed::Storage::ConnectedStorage*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA4F90))(this);
  }
  System_String* GetContainerChangedSinceLastSync(uint32_t idx) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Storage::ConnectedStorage*, uint32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA4FA0))(this, idx);
  }
  ModdingAPI::Exposed::Storage::GetDataMapViewAsyncOp* GetAsync(ModdingAPI::Exposed::System::String_array* names, ModdingAPI::Exposed::Storage::GetDataMapViewAsyncOp::GetAsyncCallback* callback) {
    return reinterpret_cast<ModdingAPI::Exposed::Storage::GetDataMapViewAsyncOp*(__fastcall*)(ModdingAPI::Exposed::Storage::ConnectedStorage*, ModdingAPI::Exposed::System::String_array*, ModdingAPI::Exposed::Storage::GetDataMapViewAsyncOp::GetAsyncCallback*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA5140))(this, names, callback);
  }
  ModdingAPI::Exposed::Storage::ReadDataMapAsyncOp* ReadAsync(ModdingAPI::Exposed::Storage::DataMap* map, ModdingAPI::Exposed::Storage::ReadDataMapAsyncOp::ReadAsyncCallback* callback) {
    return reinterpret_cast<ModdingAPI::Exposed::Storage::ReadDataMapAsyncOp*(__fastcall*)(ModdingAPI::Exposed::Storage::ConnectedStorage*, ModdingAPI::Exposed::Storage::DataMap*, ModdingAPI::Exposed::Storage::ReadDataMapAsyncOp::ReadAsyncCallback*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA5160))(this, map, callback);
  }
  ModdingAPI::Exposed::Storage::SubmitDataMapUpdatesAsyncOp* SubmitUpdatesAsync(ModdingAPI::Exposed::Storage::DataMap* toUpdate, ModdingAPI::Exposed::System::String_array* toDelete, ModdingAPI::Exposed::Storage::SubmitDataMapUpdatesAsyncOp::UpdateAsyncCallback* callback, System_String* displayName) {
    return reinterpret_cast<ModdingAPI::Exposed::Storage::SubmitDataMapUpdatesAsyncOp*(__fastcall*)(ModdingAPI::Exposed::Storage::ConnectedStorage*, ModdingAPI::Exposed::Storage::DataMap*, ModdingAPI::Exposed::System::String_array*, ModdingAPI::Exposed::Storage::SubmitDataMapUpdatesAsyncOp::UpdateAsyncCallback*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA5180))(this, toUpdate, toDelete, callback, displayName);
  }
  ModdingAPI::Exposed::Storage::SubmitDataMapUpdatesAsyncOp* DeleteAsync(ModdingAPI::Exposed::System::String_array* toDelete, ModdingAPI::Exposed::Storage::SubmitDataMapUpdatesAsyncOp::UpdateAsyncCallback* callback, System_String* displayName) {
    return reinterpret_cast<ModdingAPI::Exposed::Storage::SubmitDataMapUpdatesAsyncOp*(__fastcall*)(ModdingAPI::Exposed::Storage::ConnectedStorage*, ModdingAPI::Exposed::System::String_array*, ModdingAPI::Exposed::Storage::SubmitDataMapUpdatesAsyncOp::UpdateAsyncCallback*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA51B0))(this, toDelete, callback, displayName);
  }
  void ::ctor(intptr_t self, int32_t userId) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Storage::ConnectedStorage*, intptr_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA51F0))(this, self, userId);
  }
  void Dispose() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Storage::ConnectedStorage*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA5470))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityAOT::ObjectResultCallback*> gInitializedThunk = __CppStaticProperty<ModdingAPI::Exposed::UnityAOT::ObjectResultCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->gInitializedThunk; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::Storage::ConnectedStoragePlugin::ContainerInfoQueryAsyncCallback*> gContainerInfoQueryThunk = __CppStaticProperty<ModdingAPI::Exposed::Storage::ConnectedStoragePlugin::ContainerInfoQueryAsyncCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->gContainerInfoQueryThunk; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::Storage::ConnectedStoragePlugin::QueryRemainingQuotaAsyncCallback*> gQueryRemainingQuotaThunk = __CppStaticProperty<ModdingAPI::Exposed::Storage::ConnectedStoragePlugin::QueryRemainingQuotaAsyncCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->gQueryRemainingQuotaThunk; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::Storage::ConnectedStoragePlugin::UserSignedOutStorageInvalidCallback*> gUserSignedOutThunk = __CppStaticProperty<ModdingAPI::Exposed::Storage::ConnectedStoragePlugin::UserSignedOutStorageInvalidCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->gUserSignedOutThunk; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityAOT::GenericActionCallback*> gDeleteContainerThunk = __CppStaticProperty<ModdingAPI::Exposed::UnityAOT::GenericActionCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->gDeleteContainerThunk; }
  );

  // Static methods:
  static inline ModdingAPI::Exposed::Storage::CreateConnectedStorageOp* CreateAsync(int32_t userId, System_String* containerName, ModdingAPI::Exposed::Storage::CreateConnectedStorageOp::ConnectedStorageInitializedCallback* callback, int32_t flags, System_String* serviceConfigurationId) {
    return reinterpret_cast<ModdingAPI::Exposed::Storage::CreateConnectedStorageOp*(__fastcall*)(int32_t, System_String*, ModdingAPI::Exposed::Storage::CreateConnectedStorageOp::ConnectedStorageInitializedCallback*, int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA3EE0))(userId, containerName, callback, flags, serviceConfigurationId);
  }
  static inline void InitializedThunk(uint32_t result, intptr_t self, intptr_t userData) {
    reinterpret_cast<void(__fastcall*)(uint32_t, intptr_t, intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA5590))(result, self, userData);
  }
  static inline void OnUserSignedOutThunk(uint32_t userId, intptr_t userData) {
    reinterpret_cast<void(__fastcall*)(uint32_t, intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA56D0))(userId, userData);
  }
  static inline void DeleteContainerAsyncThunk(uint32_t result, uint32_t status, intptr_t userData) {
    reinterpret_cast<void(__fastcall*)(uint32_t, uint32_t, intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA5800))(result, status, userData);
  }
  static inline void QueryRemainingQuotaAsyncThunk(uint32_t result, int64_t quota, intptr_t userData) {
    reinterpret_cast<void(__fastcall*)(uint32_t, int64_t, intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA59C0))(result, quota, userData);
  }
  static inline void ContainerInfoQueryAsyncThunk(uint32_t result, intptr_t queryHandle, intptr_t userData, uint32_t totalResults) {
    reinterpret_cast<void(__fastcall*)(uint32_t, intptr_t, intptr_t, uint32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA5B00))(result, queryHandle, userData, totalResults);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EA5C60))();
  }
};
}