// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::Rewired::Utils::Classes::Utility {
struct __UnityStopwatch_Il2CppStaticFields {
  ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch* gVaoyPuSyOhTEUMzwSDIaQzeCotd;
};

struct __UnityStopwatch_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_get_offsetSeconds;
  VirtualInvokeData _5_set_offsetSeconds;
  VirtualInvokeData _6_get_offsetTicks;
  VirtualInvokeData _7_set_offsetTicks;
  VirtualInvokeData _8_get_elapsedSeconds;
  VirtualInvokeData _9_get_elapsedSecondsRaw;
  VirtualInvokeData _10_get_elapsedMilliseconds;
  VirtualInvokeData _11_get_elapsedMillisecondsRaw;
  VirtualInvokeData _12_get_elapsedTicks;
  VirtualInvokeData _13_get_elapsedTicksRaw;
  VirtualInvokeData _14_get_isRunning;
  VirtualInvokeData _15_Stop;
  VirtualInvokeData _16_Start;
  VirtualInvokeData _17_Reset;
};

struct __UnityStopwatch_Il2CppClass {
  Il2CppClass_1 _1;
  __UnityStopwatch_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __UnityStopwatch_Il2CppVtbl vtbl;
};

class UnityStopwatch {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C482D8;
  static inline    __UnityStopwatch_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __UnityStopwatch_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__UnityStopwatch_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __UnityStopwatch_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch::jufRDfbcBYmmRtkJhkIqflsuBJH* waodDgbTMgDBFvxwJbGUefdXWOSx;
  bool rmhhgjluoXuXeRaccxSDdNfWujM;
  double ARjdjmRnonhXDRGvHnBXWBRHeSn;

  // Member methods:
  double get_offsetSeconds() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC11C0))(this);
  }
  void set_offsetSeconds(double value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC11D0))(this, value);
  }
  int64_t get_offsetTicks() {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC11E0))(this);
  }
  void set_offsetTicks(int64_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC1200))(this, value);
  }
  double get_elapsedSeconds() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC1220))(this);
  }
  double get_elapsedSecondsRaw() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC1270))(this);
  }
  int64_t get_elapsedMilliseconds() {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC1290))(this);
  }
  int64_t get_elapsedMillisecondsRaw() {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC12D0))(this);
  }
  int64_t get_elapsedTicks() {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC1300))(this);
  }
  int64_t get_elapsedTicksRaw() {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC1330))(this);
  }
  bool get_isRunning() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC1360))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC1380))(this);
  }
  void ::ctor(bool isGlobal) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC1390))(this, isGlobal);
  }
  void Finalize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC1500))(this);
  }
  void Stop() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC1590))(this);
  }
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC1670))(this);
  }
  void Reset() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC16F0))(this);
  }
  void VincHJdciUGYUfiGVjakSjxoOLu() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC1870))(this);
  }
  void XiIjlKvWEDuLpqcOKTCpFcOTkRw() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC1AC0))(this);
  }
  void VqrnGUoyPvrwEsWizOGNxzCoqKi(int32_t ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC1D10))(this, );
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*> gVaoyPuSyOhTEUMzwSDIaQzeCotd = __CppStaticProperty<ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*>(
   []() { return &GetStaticClassInstance()->pStaticFields->gVaoyPuSyOhTEUMzwSDIaQzeCotd; }
  );

  // Static methods:
  static inline ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch* get_Global() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC0EE0))();
  }
  static inline int64_t get_frequency() {
    return reinterpret_cast<int64_t(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC1050))();
  }
  static inline ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch* StartNew() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::UnityStopwatch*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xCC1060))();
  }
  static inline int64_t ConvertTo100NSTicks(int64_t ticks) {
    return reinterpret_cast<int64_t(__fastcall*)(int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3201B0))(ticks);
  }
};
}