// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::UnityEngine::Timeline {
struct __TimelineClip_Il2CppStaticFields {
  int32_t kDefaultClipCaps;
  float kDefaultClipDurationInSeconds;
  double kTimeScaleMin;
  double kTimeScaleMax;
  double kMinDuration;
  double kMaxTimeValue;
};

struct __TimelineClip_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize;
  VirtualInvokeData _5_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize;
};

struct __TimelineClip_Il2CppClass {
  Il2CppClass_1 _1;
  __TimelineClip_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __TimelineClip_Il2CppVtbl vtbl;
};

class TimelineClip {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C73358;
  static inline    __TimelineClip_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __TimelineClip_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__TimelineClip_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __TimelineClip_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  double m_Start;
  double m_ClipIn;
  ModdingAPI::Exposed::UnityEngine::Object* m_Asset;
  double m_Duration;
  double m_TimeScale;
  ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset* m_ParentTrack;
  double m_EaseInDuration;
  double m_EaseOutDuration;
  double m_BlendInDuration;
  double m_BlendOutDuration;
  ModdingAPI::Exposed::UnityEngine::AnimationCurve* m_MixInCurve;
  ModdingAPI::Exposed::UnityEngine::AnimationCurve* m_MixOutCurve;
  int32_t m_BlendInCurveMode;
  int32_t m_BlendOutCurveMode;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_ExposedParameterNames;
  ModdingAPI::Exposed::UnityEngine::AnimationClip* m_AnimationCurves;
  bool m_Recordable;
  int32_t m_PostExtrapolationMode;
  int32_t m_PreExtrapolationMode;
  double m_PostExtrapolationTime;
  double m_PreExtrapolationTime;
  System_String* m_DisplayName;
  int32_t _dirtyHash_k__BackingField;
  int32_t m_Version;

  // Member methods:
  void ::ctor(ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset* parent) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*, ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB92A0))(this, parent);
  }
  double get_timeScale() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB9420))(this);
  }
  double get_start() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB9550))(this);
  }
  void set_start(double value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB9560))(this, value);
  }
  double get_duration() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB96B0))(this);
  }
  void set_duration(double value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB96C0))(this, value);
  }
  double get_end() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB97C0))(this);
  }
  double get_clipIn() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB97D0))(this);
  }
  System_String* get_displayName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB9800))(this);
  }
  void set_displayName(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3F1050))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::AnimationClip* get_curves() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AnimationClip*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB9810))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Object* get_asset() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Object*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD4220))(this);
  }
  void set_asset(ModdingAPI::Exposed::UnityEngine::Object* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*, ModdingAPI::Exposed::UnityEngine::Object*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310F00))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset* get_parentTrack() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD25D0))(this);
  }
  void set_parentTrack(ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*, ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB9820))(this, value);
  }
  double get_easeInDuration() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB9980))(this);
  }
  double get_easeOutDuration() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB9A60))(this);
  }
  double get_blendInDuration() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB9B40))(this);
  }
  double get_blendOutDuration() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB9B70))(this);
  }
  bool get_hasBlendIn() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB9BA0))(this);
  }
  bool get_hasBlendOut() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB9BE0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::AnimationCurve* get_mixInCurve() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AnimationCurve*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB9C20))(this);
  }
  void set_mixInCurve(ModdingAPI::Exposed::UnityEngine::AnimationCurve* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*, ModdingAPI::Exposed::UnityEngine::AnimationCurve*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A4B0))(this, value);
  }
  double get_mixInDuration() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB9D30))(this);
  }
  ModdingAPI::Exposed::UnityEngine::AnimationCurve* get_mixOutCurve() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AnimationCurve*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB9DA0))(this);
  }
  void set_mixOutCurve(ModdingAPI::Exposed::UnityEngine::AnimationCurve* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*, ModdingAPI::Exposed::UnityEngine::AnimationCurve*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A4C0))(this, value);
  }
  double get_mixOutTime() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB9EB0))(this);
  }
  double get_mixOutDuration() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB9EF0))(this);
  }
  bool get_recordable() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB9F60))(this);
  }
  int32_t get_clipCaps() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB9F70))(this);
  }
  int32_t Hash() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBA040))(this);
  }
  float EvaluateMixOut(double time) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBA110))(this, time);
  }
  float EvaluateMixIn(double time) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBA3A0))(this, time);
  }
  double ToLocalTime(double time) {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBA680))(this, time);
  }
  int32_t get_postExtrapolationMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBAA50))(this);
  }
  void set_postExtrapolationMode(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBAA80))(this, value);
  }
  int32_t get_preExtrapolationMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBAAC0))(this);
  }
  void set_preExtrapolationMode(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBAAF0))(this, value);
  }
  void SetPostExtrapolationTime(double time) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBAB30))(this, time);
  }
  void SetPreExtrapolationTime(double time) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFA75E0))(this, time);
  }
  bool IsPreExtrapolatedTime(double sequenceTime) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBAB40))(this, sequenceTime);
  }
  bool IsPostExtrapolatedTime(double sequenceTime) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBABA0))(this, sequenceTime);
  }
  double get_extrapolatedStart() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBAC10))(this);
  }
  double get_extrapolatedDuration() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBAC30))(this);
  }
  void UnityEngine::ISerializationCallbackReceiver::OnBeforeSerialize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBAEE0))(this);
  }
  void UnityEngine::ISerializationCallbackReceiver::OnAfterDeserialize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBAEF0))(this);
  }
  System_String* ToString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBAF20))(this);
  }
  void UpgradeToLatestVersion() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBAEF0))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<int32_t> kDefaultClipCaps = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->kDefaultClipCaps; }
  );
  static inline __CppStaticProperty<float> kDefaultClipDurationInSeconds = __CppStaticProperty<float>(
   []() { return &GetStaticClassInstance()->pStaticFields->kDefaultClipDurationInSeconds; }
  );
  static inline __CppStaticProperty<double> kTimeScaleMin = __CppStaticProperty<double>(
   []() { return &GetStaticClassInstance()->pStaticFields->kTimeScaleMin; }
  );
  static inline __CppStaticProperty<double> kTimeScaleMax = __CppStaticProperty<double>(
   []() { return &GetStaticClassInstance()->pStaticFields->kTimeScaleMax; }
  );
  static inline __CppStaticProperty<double> kMinDuration = __CppStaticProperty<double>(
   []() { return &GetStaticClassInstance()->pStaticFields->kMinDuration; }
  );
  static inline __CppStaticProperty<double> kMaxTimeValue = __CppStaticProperty<double>(
   []() { return &GetStaticClassInstance()->pStaticFields->kMaxTimeValue; }
  );

  // Static methods:
  static inline ModdingAPI::Exposed::UnityEngine::AnimationCurve* GetDefaultMixInCurve() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AnimationCurve*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBA620))();
  }
  static inline ModdingAPI::Exposed::UnityEngine::AnimationCurve* GetDefaultMixOutCurve() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::AnimationCurve*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBA650))();
  }
  static inline double SanitizeTimeValue(double value, double defaultValue) {
    return reinterpret_cast<double(__fastcall*)(double, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBA890))(value, defaultValue);
  }
  static inline double GetExtrapolatedTime(double time, int32_t mode, double duration) {
    return reinterpret_cast<double(__fastcall*)(double, int32_t, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBAD60))(time, mode, duration);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xFBB1E0))();
  }
};
}