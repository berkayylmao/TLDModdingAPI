// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"


namespace ModdingAPI::Exposed {
struct __BearEncounter_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* s_BearEncounters;
  bool s_FindBearRequested;
  ModdingAPI::Exposed::BearEncounterSaveData* s_BearEncounterSaveData;
};

struct __BearEncounter_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __BearEncounter_Il2CppClass {
  Il2CppClass_1 _1;
  __BearEncounter_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __BearEncounter_Il2CppVtbl vtbl;
};

class BearEncounter {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C2A9F0;
  static inline    __BearEncounter_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __BearEncounter_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__BearEncounter_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __BearEncounter_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  float m_DelaySpawnSeconds;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_BearPrefab;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_BearStart;
  bool m_BearStartForceLocation;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_BearFleeDestination;
  float m_MinRadius;
  float m_MaxRadius;
  float m_FloatHeight;
  ModdingAPI::Exposed::BearHuntReduxSettings* m_BearHuntReduxSettings;
  ModdingAPI::Exposed::GearItem* m_HangingItem;
  float m_CurrentTimerSpawnSeconds;
  int32_t m_BearSpawnState;
  bool m_StartHasBeenCalled;
  ModdingAPI::Exposed::BaseAi* m_BearBaseAi;
  int32_t m_NumSpawnAttemptsWithInvalidPositions;
  float m_ObjectToSpawnBoundingRadius;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_InvestigatePosition;
  bool m_IsEncounterEnabled;
  bool m_HasSelectedInvestigatePosition;
  float m_RandomAngleStart;
  int32_t m_CurrentAttemptFindLocationIndex;
  bool m_RefreshSpawnedBearAiAfterLoadRequested;
  int32_t m_RestoreControlMode;
  int32_t m_LatestEncounterResult;
  bool m_LastEncounter;
  int32_t m_PostStruggleBehavior;
  ModdingAPI::Exposed::MissionObjectIdentifier* m_MissionObjectIdentifier;

  // Member methods:
  void Awake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BearEncounter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD65A0))(this);
  }
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BearEncounter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD69F0))(this);
  }
  void OnDestroy() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BearEncounter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD6AC0))(this);
  }
  void SetLastEncounter(bool isLastEncounter) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BearEncounter*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD6B80))(this, isLastEncounter);
  }
  void SetPostStruggleBehavior(int32_t postStruggleBehavior) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BearEncounter*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD6B90))(this, postStruggleBehavior);
  }
  int32_t GetPostStruggleBehavior() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::BearEncounter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD6CB0))(this);
  }
  bool IsLastEncounter() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BearEncounter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD6CC0))(this);
  }
  void EncounterWon() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BearEncounter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD6CD0))(this);
  }
  void EncounterFailed(int32_t result) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BearEncounter*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD6ED0))(this, result);
  }
  void SelectInvestigatePosition() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BearEncounter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD70D0))(this);
  }
  void MaybeRefreshSpawnedBearAiAfterLoad() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BearEncounter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD72C0))(this);
  }
  void UpdateBearSpawn() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BearEncounter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD7450))(this);
  }
  void UpdateBearDespawn() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BearEncounter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD75B0))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BearEncounter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD7A60))(this);
  }
  void ResetSpawnBearTimer() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BearEncounter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x13F5320))(this);
  }
  void Activate(bool enableInteraction) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BearEncounter*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD7E60))(this, enableInteraction);
  }
  void InstantiateBear(ModdingAPI::Exposed::UnityEngine::Vector3 position) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BearEncounter*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD8080))(this, position);
  }
  void SpawnBear() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BearEncounter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD85A0))(this);
  }
  bool IsEncounterActivated() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BearEncounter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x187F620))(this);
  }
  bool HasWonLatestEncounter() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BearEncounter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD87F0))(this);
  }
  int32_t GetLatestEncounterResult() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::BearEncounter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F1030))(this);
  }
  void RefreshSpawnedBearSettings(ModdingAPI::Exposed::BearHuntAiRedux* bearHuntAiRedux) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BearEncounter*, ModdingAPI::Exposed::BearHuntAiRedux*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD8800))(this, bearHuntAiRedux);
  }
  void UpdateSpawnedBear(ModdingAPI::Exposed::BearHuntAiRedux* bearHuntAiRedux) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BearEncounter*, ModdingAPI::Exposed::BearHuntAiRedux*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD8A90))(this, bearHuntAiRedux);
  }
  void InitializeSpawnedBearData(ModdingAPI::Exposed::UnityEngine::GameObject* go) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BearEncounter*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD8B60))(this, go);
  }
  System_String* Serialize() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::BearEncounter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD8CF0))(this);
  }
  void Deserialize(System_String* text) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BearEncounter*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD8FA0))(this, text);
  }
  System_String* GetMissionObjectId() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::BearEncounter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD9220))(this);
  }
  bool SpawnObjectAttempt(bool doVisCheck) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BearEncounter*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD9910))(this, doVisCheck);
  }
  bool AttemptFindingValidInvestigateLocation() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::BearEncounter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BDA140))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::BearEncounter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x389390))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*> s_BearEncounters = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_BearEncounters; }
  );
  static inline __CppStaticProperty<bool> s_FindBearRequested = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_FindBearRequested; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::BearEncounterSaveData*> s_BearEncounterSaveData = __CppStaticProperty<ModdingAPI::Exposed::BearEncounterSaveData*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_BearEncounterSaveData; }
  );

  // Static methods:
  static inline System_String* SerializeAll() {
    return reinterpret_cast<System_String*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD9300))();
  }
  static inline void DeserializeAll(System_String* text) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD96B0))(text);
  }
  static inline ModdingAPI::Exposed::BearEncounter* FindByGuid(System_String* guid) {
    return reinterpret_cast<ModdingAPI::Exposed::BearEncounter*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BDA4A0))(guid);
  }
  static inline void Reset() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BDA590))();
  }
  static inline int32_t GetCurrentActiveBearEncounterCountInScene() {
    return reinterpret_cast<int32_t(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BDA670))();
  }
  static inline ModdingAPI::Exposed::BearEncounter* GetCurrentActiveBearEncounter() {
    return reinterpret_cast<ModdingAPI::Exposed::BearEncounter*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BDA7F0))();
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BDA990))();
  }
};
}