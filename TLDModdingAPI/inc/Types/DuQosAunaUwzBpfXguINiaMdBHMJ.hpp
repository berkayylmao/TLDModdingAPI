// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"


namespace ModdingAPI::Exposed {
struct __DuQosAunaUwzBpfXguINiaMdBHMJ_Il2CppStaticFields {
};

struct __DuQosAunaUwzBpfXguINiaMdBHMJ_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_Dispose;
  VirtualInvokeData _5_get_SystemName;
  VirtualInvokeData _6_get_FriendlyName;
  VirtualInvokeData _7_get_VendorId;
  VirtualInvokeData _8_get_ProductId;
  VirtualInvokeData _9_get_PidVid;
  VirtualInvokeData _10_get_InstanceGuid;
  VirtualInvokeData _12_get_IsBluetoothDevice;
  VirtualInvokeData _13_get_ControllerExtension;
  VirtualInvokeData _14_get_SupportsVibration;
  VirtualInvokeData _15_get_VibrationMotorCount;
  VirtualInvokeData _18_Acquire;
  VirtualInvokeData _19_Unacquire;
  VirtualInvokeData _21_Matches;
  VirtualInvokeData _22_SetVibration;
  VirtualInvokeData _23_StopVibration;
  VirtualInvokeData _24_hBrVVmrdIBdzlWHPriZmuajDAJY;
  VirtualInvokeData _25_MehdlFiOEubLjfRvtUYFkDQVlbu;
  VirtualInvokeData _26_get_NativeJoystick;
  VirtualInvokeData _27_get_DeviceType;
  VirtualInvokeData _28_Update;
  VirtualInvokeData _29_UpdateFinished;
  VirtualInvokeData _30_IsAttached;
  VirtualInvokeData _31_gzjrdStMdRYvnlBHPtmxSIAUzON;
  VirtualInvokeData _32_InitializeHaptic;
  VirtualInvokeData _33_CloseDevice;
  VirtualInvokeData _35_get_JoystickId;
  VirtualInvokeData _36_get_ButtonCount;
  VirtualInvokeData _37_get_AxisCount;
  VirtualInvokeData _38_get_HatCount;
  VirtualInvokeData _39_get_BallCount;
  VirtualInvokeData _40_get_HasElements;
  VirtualInvokeData _41_get_InputSource;
  VirtualInvokeData _42_get_HasEverReceivedInput;
  VirtualInvokeData _43_GetAxisValue;
  VirtualInvokeData _44_GetAxisRawValue;
  VirtualInvokeData _45_GetButtonValue;
  VirtualInvokeData _46_GetHatValue;
  VirtualInvokeData _47_GetBallValue;
};

struct __DuQosAunaUwzBpfXguINiaMdBHMJ_Il2CppClass {
  Il2CppClass_1 _1;
  __DuQosAunaUwzBpfXguINiaMdBHMJ_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __DuQosAunaUwzBpfXguINiaMdBHMJ_Il2CppVtbl vtbl;
};

class DuQosAunaUwzBpfXguINiaMdBHMJ {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C70798;
  static inline    __DuQosAunaUwzBpfXguINiaMdBHMJ_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __DuQosAunaUwzBpfXguINiaMdBHMJ_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__DuQosAunaUwzBpfXguINiaMdBHMJ_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __DuQosAunaUwzBpfXguINiaMdBHMJ_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::ApboJJvFTdNROUCAmOZVhjyzPsT* qioWhAhSMGfrhGBsXWHSjINxGcoQ;
  int32_t cXfaBPLEQFTunMyHqvqtbpERqpX;
  int32_t iVVCipepmErsfHMmDuQvtZHwzyG;
  ModdingAPI::Exposed::yKteYrTircYkMtCuwggqxEIahVY* WMPmSPVGIZVrFELVDTpenAdonhG_tjFkLGokxnGcvKlvMwjLCincdTJP;
  bool WMPmSPVGIZVrFELVDTpenAdonhG_lUcIGCLIWkCmWeInmyFcCPqJaTE;
  bool PAOUCWzrsONyrHbXaCBJfsyvsUJ;
  ModdingAPI::Exposed::RKomKLiSyfmUBBhhfSyhBrXfYBn* hVOTzDqThmwrOnTQPeJZEuGNeSU;
  bool WzCnjMWIRWqTnQLNwjyltJrOyaK;
  int32_t WxvTMlQOpPPZGcfHYeeQDrEuQaEM;
  ModdingAPI::Exposed::System::Single_array* RVTEZMpMwBNwnEvYHHwxCvLyvYB;
  bool WMPmSPVGIZVrFELVDTpenAdonhG_IPjKDfWEXfJCxnkfIfovlZZlcJe;
  int32_t dDNJBeLTEOXyUBAoXfIiTmbRkkG;
  int32_t gGqsPINwPlkxiZtFvGZmFCGnWSC;
  int32_t BHnCxJLGKvOfgLzoIrFbGsZpjic;
  int32_t VEUBAfdcYjZyOBHoIhtBcsSSEUO;
  ModdingAPI::Exposed::System::Int16_array* WSIOCjMMetsRSMHnHLQhQgeOPUN;
  ModdingAPI::Exposed::Rewired::ButtonLoopSet* aEbTgWRpEJLIOrHInRXCkZAUSoO;
  ModdingAPI::Exposed::System::Int16_array* lYgyObHElPqkbTlNshjrFMNiAOcv;
  ModdingAPI::Exposed::System::Int16_array* wjEuwLmlVVkqoGhyfWnTxeQVocw;
  bool oiOYghEpHpuYKljVhDVXuCcCOwb;

  // Member methods:
  ModdingAPI::Exposed::System::Boolean_array* get_ButtonValues() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Boolean_array*(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7F5BD0))(this);
  }
  void ::ctor(ModdingAPI::Exposed::EpBeWNMtqxcQCkslCbIrqTQjbEv* nativeJoystick, ModdingAPI::Exposed::yKteYrTircYkMtCuwggqxEIahVY* joystickInfo) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*, ModdingAPI::Exposed::EpBeWNMtqxcQCkslCbIrqTQjbEv*, ModdingAPI::Exposed::yKteYrTircYkMtCuwggqxEIahVY*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7F5CA0))(this, nativeJoystick, joystickInfo);
  }
  void ::ctor(ModdingAPI::Exposed::EpBeWNMtqxcQCkslCbIrqTQjbEv* nativeJoystick, ModdingAPI::Exposed::yKteYrTircYkMtCuwggqxEIahVY* joystickInfo, int32_t type) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*, ModdingAPI::Exposed::EpBeWNMtqxcQCkslCbIrqTQjbEv*, ModdingAPI::Exposed::yKteYrTircYkMtCuwggqxEIahVY*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7F5CF0))(this, nativeJoystick, joystickInfo, type);
  }
  void ::ctor(ModdingAPI::Exposed::ApboJJvFTdNROUCAmOZVhjyzPsT* nativeDevice, ModdingAPI::Exposed::yKteYrTircYkMtCuwggqxEIahVY* joystickInfo, int32_t type, int32_t buttonCount, int32_t axisCount, int32_t hatCount, int32_t ballCount) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*, ModdingAPI::Exposed::ApboJJvFTdNROUCAmOZVhjyzPsT*, ModdingAPI::Exposed::yKteYrTircYkMtCuwggqxEIahVY*, int32_t, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7F5D40))(this, nativeDevice, joystickInfo, type, buttonCount, axisCount, hatCount, ballCount);
  }
  void buCXBvWCRWKasFmkSUeDBXrIMtL(uint8_t , uint8_t , int16_t , float ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*, uint8_t, uint8_t, int16_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7F60B0))(this, , , , );
  }
  void Update(int32_t ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7F6320))(this, );
  }
  void UpdateFinished() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7F63C0))(this);
  }
  int32_t get_JoystickId() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36E9C0))(this);
  }
  int32_t get_ButtonCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319990))(this);
  }
  int32_t get_AxisCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3199A0))(this);
  }
  int32_t get_HatCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5E8B70))(this);
  }
  int32_t get_BallCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F11E0))(this);
  }
  bool get_HasElements() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7F6470))(this);
  }
  int32_t get_InputSource() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x51FC70))(this);
  }
  bool get_HasEverReceivedInput() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7F6490))(this);
  }
  float GetAxisValue(int32_t ) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7F64A0))(this, );
  }
  int32_t GetAxisRawValue(int32_t ) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7F6530))(this, );
  }
  bool GetButtonValue(int32_t ) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7F6580))(this, );
  }
  int32_t GetHatValue(int32_t ) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7F6690))(this, );
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 GetBallValue(int32_t ) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7F67A0))(this, );
  }
  void zsVjKpEzlxUXhtfSflUbvdBxweM(ModdingAPI::Exposed::EpBeWNMtqxcQCkslCbIrqTQjbEv* ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*, ModdingAPI::Exposed::EpBeWNMtqxcQCkslCbIrqTQjbEv*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7F6830))(this, );
  }
  void InitializeHaptic() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7F6C70))(this);
  }
  void CloseDevice() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7F6D40))(this);
  }
  float gMNpdZDYMwALsLIgdtBVeXAzQHM(int32_t ) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7F6E80))(this, );
  }
  int32_t kTujfecNOIkoRXsckHVNriMFkhl(int16_t ) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DuQosAunaUwzBpfXguINiaMdBHMJ*, int16_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7F6ED0))(this, );
  }
};
}