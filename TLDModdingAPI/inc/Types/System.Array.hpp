// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System {
struct __Array_Il2CppStaticFields {
};

struct __Array_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_CopyTo;
  VirtualInvokeData _5_System_Collections_ICollection_get_Count;
  VirtualInvokeData _6_get_SyncRoot;
  VirtualInvokeData _7_get_IsSynchronized;
  VirtualInvokeData _8_GetEnumerator;
  VirtualInvokeData _9_System_Collections_IList_get_Item;
  VirtualInvokeData _10_System_Collections_IList_set_Item;
  VirtualInvokeData _11_System_Collections_IList_Add;
  VirtualInvokeData _12_System_Collections_IList_Contains;
  VirtualInvokeData _13_System_Collections_IList_Clear;
  VirtualInvokeData _14_System_Collections_IList_get_IsReadOnly;
  VirtualInvokeData _15_get_IsFixedSize;
  VirtualInvokeData _16_System_Collections_IList_IndexOf;
  VirtualInvokeData _17_System_Collections_IList_Insert;
  VirtualInvokeData _18_System_Collections_IList_Remove;
  VirtualInvokeData _19_System_Collections_IList_RemoveAt;
  VirtualInvokeData _20_System_Collections_IStructuralComparable_CompareTo;
  VirtualInvokeData _21_System_Collections_IStructuralEquatable_Equals;
  VirtualInvokeData _22_System_Collections_IStructuralEquatable_GetHashCode;
  VirtualInvokeData _23_Clone;
  VirtualInvokeData _24_get_IsReadOnly;
};

struct __Array_Il2CppClass {
  Il2CppClass_1 _1;
  __Array_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Array_Il2CppVtbl vtbl;
};

class Array {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C85388;
  static inline    Array* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C405F8;
  static inline    __Array_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline Array* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (Array**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __Array_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__Array_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __Array_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member methods:
  int32_t System::Collections::ICollection::get_Count() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEAFA0))(this);
  }
  bool System::Collections::IList::get_IsReadOnly() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(this);
  }
  Il2CppObject* System::Collections::IList::get_Item(int32_t index) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEAFB0))(this, index);
  }
  void System::Collections::IList::set_Item(int32_t index, Il2CppObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEAFC0))(this, index, value);
  }
  int32_t System::Collections::IList::Add(Il2CppObject* value) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEAFE0))(this, value);
  }
  bool System::Collections::IList::Contains(Il2CppObject* value) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEB040))(this, value);
  }
  void System::Collections::IList::Clear() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEB060))(this);
  }
  int32_t System::Collections::IList::IndexOf(Il2CppObject* value) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEB0C0))(this, value);
  }
  void System::Collections::IList::Insert(int32_t index, Il2CppObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEB0D0))(this, index, value);
  }
  void System::Collections::IList::Remove(Il2CppObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEB130))(this, value);
  }
  void System::Collections::IList::RemoveAt(int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEB190))(this, index);
  }
  void CopyTo(ModdingAPI::Exposed::System::Array* array, int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, ModdingAPI::Exposed::System::Array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEB1F0))(this, array, index);
  }
  Il2CppObject* Clone() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6E16B0))(this);
  }
  int32_t System::Collections::IStructuralComparable::CompareTo(Il2CppObject* other, ModdingAPI::Exposed::System::Collections::IComparer* comparer) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*, ModdingAPI::Exposed::System::Collections::IComparer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEB320))(this, other, comparer);
  }
  bool System::Collections::IStructuralEquatable::Equals(Il2CppObject* other, ModdingAPI::Exposed::System::Collections::IEqualityComparer* comparer) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*, ModdingAPI::Exposed::System::Collections::IEqualityComparer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEB550))(this, other, comparer);
  }
  int32_t System::Collections::IStructuralEquatable::GetHashCode(ModdingAPI::Exposed::System::Collections::IEqualityComparer* comparer) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*, ModdingAPI::Exposed::System::Collections::IEqualityComparer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEB6D0))(this, comparer);
  }
  void CopyTo(ModdingAPI::Exposed::System::Array* array, int64_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, ModdingAPI::Exposed::System::Array*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEBCD0))(this, array, index);
  }
  int64_t get_LongLength() {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEBDC0))(this);
  }
  int64_t GetLongLength(int32_t dimension) {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEBE60))(this, dimension);
  }
  Il2CppObject* GetValue(int64_t index) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Array*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEBEB0))(this, index);
  }
  Il2CppObject* GetValue(int64_t index1, int64_t index2) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Array*, int64_t, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEBF90))(this, index1, index2);
  }
  Il2CppObject* GetValue(int64_t index1, int64_t index2, int64_t index3) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Array*, int64_t, int64_t, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEC0C0))(this, index1, index2, index3);
  }
  Il2CppObject* GetValue(ModdingAPI::Exposed::System::Int64_array* indices) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Array*, ModdingAPI::Exposed::System::Int64_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEC320))(this, indices);
  }
  bool get_IsFixedSize() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x403F70))(this);
  }
  bool get_IsReadOnly() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(this);
  }
  bool get_IsSynchronized() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(this);
  }
  Il2CppObject* get_SyncRoot() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3201B0))(this);
  }
  void SetValue(Il2CppObject* value, int64_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDED7B0))(this, value, index);
  }
  void SetValue(Il2CppObject* value, int64_t index1, int64_t index2) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*, int64_t, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDED8A0))(this, value, index1, index2);
  }
  void SetValue(Il2CppObject* value, int64_t index1, int64_t index2, int64_t index3) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*, int64_t, int64_t, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEDAA0))(this, value, index1, index2, index3);
  }
  void SetValue(Il2CppObject* value, ModdingAPI::Exposed::System::Int64_array* indices) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*, ModdingAPI::Exposed::System::Int64_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEDD00))(this, value, indices);
  }
  ModdingAPI::Exposed::System::Collections::IEnumerator* GetEnumerator() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IEnumerator*(__fastcall*)(ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEE750))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  int32_t InternalArray__ICollection_get_Count() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEAFA0))(this);
  }
  bool InternalArray__ICollection_get_IsReadOnly() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x403F70))(this);
  }
  void InternalArray__ICollection_Clear() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEE8B0))(this);
  }
  int32_t InternalArray__IReadOnlyCollection_get_Count() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEAFA0))(this);
  }
  void InternalArray__RemoveAt(int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEE910))(this, index);
  }
  int32_t get_Length() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEE970))(this);
  }
  int32_t get_Rank() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEEA10))(this);
  }
  int32_t GetRank() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEEA10))(this);
  }
  int32_t GetLength(int32_t dimension) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEEA20))(this, dimension);
  }
  int32_t GetLowerBound(int32_t dimension) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEEA70))(this, dimension);
  }
  Il2CppObject* GetValue(ModdingAPI::Exposed::System::Int32_array* indices) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Array*, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEEAC0))(this, indices);
  }
  void SetValue(Il2CppObject* value, ModdingAPI::Exposed::System::Int32_array* indices) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEEAD0))(this, value, indices);
  }
  Il2CppObject* GetValueImpl(int32_t pos) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEEAE0))(this, pos);
  }
  void SetValueImpl(Il2CppObject* value, int32_t pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEEB10))(this, value, pos);
  }
  int32_t GetUpperBound(int32_t dimension) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEEB40))(this, dimension);
  }
  Il2CppObject* GetValue(int32_t index) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEEBA0))(this, index);
  }
  Il2CppObject* GetValue(int32_t index1, int32_t index2) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEEDA0))(this, index1, index2);
  }
  Il2CppObject* GetValue(int32_t index1, int32_t index2, int32_t index3) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEEE80))(this, index1, index2, index3);
  }
  void SetValue(Il2CppObject* value, int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEEF90))(this, value, index);
  }
  void SetValue(Il2CppObject* value, int32_t index1, int32_t index2) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEF170))(this, value, index1, index2);
  }
  void SetValue(Il2CppObject* value, int32_t index1, int32_t index2, int32_t index3) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEF260))(this, value, index1, index2, index3);
  }
  void Initialize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }

  // Static methods:
  static inline ModdingAPI::Exposed::System::Array* CreateInstance(ModdingAPI::Exposed::System::Type* elementType, ModdingAPI::Exposed::System::Int64_array* lengths) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Array*(__fastcall*)(ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Int64_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEADE0))(elementType, lengths);
  }
  static inline int32_t CombineHashCodes(int32_t h1, int32_t h2) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEB6C0))(h1, h2);
  }
  static inline int32_t BinarySearch(ModdingAPI::Exposed::System::Array* array, Il2CppObject* value) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEB920))(array, value);
  }
  static inline void Copy(ModdingAPI::Exposed::System::Array* sourceArray, ModdingAPI::Exposed::System::Array* destinationArray, int64_t length) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, ModdingAPI::Exposed::System::Array*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEBA40))(sourceArray, destinationArray, length);
  }
  static inline void Copy(ModdingAPI::Exposed::System::Array* sourceArray, int64_t sourceIndex, ModdingAPI::Exposed::System::Array* destinationArray, int64_t destinationIndex, int64_t length) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, int64_t, ModdingAPI::Exposed::System::Array*, int64_t, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEBB30))(sourceArray, sourceIndex, destinationArray, destinationIndex, length);
  }
  static inline int32_t BinarySearch(ModdingAPI::Exposed::System::Array* array, int32_t index, int32_t length, Il2CppObject* value) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t, int32_t, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEC4F0))(array, index, length, value);
  }
  static inline int32_t BinarySearch(ModdingAPI::Exposed::System::Array* array, Il2CppObject* value, ModdingAPI::Exposed::System::Collections::IComparer* comparer) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*, ModdingAPI::Exposed::System::Collections::IComparer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEC510))(array, value, comparer);
  }
  static inline int32_t BinarySearch(ModdingAPI::Exposed::System::Array* array, int32_t index, int32_t length, Il2CppObject* value, ModdingAPI::Exposed::System::Collections::IComparer* comparer) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t, int32_t, Il2CppObject*, ModdingAPI::Exposed::System::Collections::IComparer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEC640))(array, index, length, value, comparer);
  }
  static inline int32_t GetMedian(int32_t low, int32_t hi) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEC9A0))(low, hi);
  }
  static inline int32_t IndexOf(ModdingAPI::Exposed::System::Array* array, Il2CppObject* value) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEC9B0))(array, value);
  }
  static inline int32_t IndexOf(ModdingAPI::Exposed::System::Array* array, Il2CppObject* value, int32_t startIndex) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDECAC0))(array, value, startIndex);
  }
  static inline int32_t IndexOf(ModdingAPI::Exposed::System::Array* array, Il2CppObject* value, int32_t startIndex, int32_t count) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDECBF0))(array, value, startIndex, count);
  }
  static inline int32_t LastIndexOf(ModdingAPI::Exposed::System::Array* array, Il2CppObject* value) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDECEB0))(array, value);
  }
  static inline int32_t LastIndexOf(ModdingAPI::Exposed::System::Array* array, Il2CppObject* value, int32_t startIndex) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDECFA0))(array, value, startIndex);
  }
  static inline int32_t LastIndexOf(ModdingAPI::Exposed::System::Array* array, Il2CppObject* value, int32_t startIndex, int32_t count) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Array*, Il2CppObject*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDED080))(array, value, startIndex, count);
  }
  static inline void Reverse(ModdingAPI::Exposed::System::Array* array) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDED370))(array);
  }
  static inline void Reverse(ModdingAPI::Exposed::System::Array* array, int32_t index, int32_t length) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDED470))(array, index, length);
  }
  static inline void Sort(ModdingAPI::Exposed::System::Array* array) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEDEE0))(array);
  }
  static inline void Sort(ModdingAPI::Exposed::System::Array* array, int32_t index, int32_t length) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEDFF0))(array, index, length);
  }
  static inline void Sort(ModdingAPI::Exposed::System::Array* array, ModdingAPI::Exposed::System::Collections::IComparer* comparer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, ModdingAPI::Exposed::System::Collections::IComparer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEE020))(array, comparer);
  }
  static inline void Sort(ModdingAPI::Exposed::System::Array* array, int32_t index, int32_t length, ModdingAPI::Exposed::System::Collections::IComparer* comparer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t, int32_t, ModdingAPI::Exposed::System::Collections::IComparer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEE140))(array, index, length, comparer);
  }
  static inline void Sort(ModdingAPI::Exposed::System::Array* keys, ModdingAPI::Exposed::System::Array* items) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, ModdingAPI::Exposed::System::Array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEE170))(keys, items);
  }
  static inline void Sort(ModdingAPI::Exposed::System::Array* keys, ModdingAPI::Exposed::System::Array* items, ModdingAPI::Exposed::System::Collections::IComparer* comparer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, ModdingAPI::Exposed::System::Array*, ModdingAPI::Exposed::System::Collections::IComparer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEE290))(keys, items, comparer);
  }
  static inline void Sort(ModdingAPI::Exposed::System::Array* keys, ModdingAPI::Exposed::System::Array* items, int32_t index, int32_t length) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, ModdingAPI::Exposed::System::Array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEE3C0))(keys, items, index, length);
  }
  static inline void Sort(ModdingAPI::Exposed::System::Array* keys, ModdingAPI::Exposed::System::Array* items, int32_t index, int32_t length, ModdingAPI::Exposed::System::Collections::IComparer* comparer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, ModdingAPI::Exposed::System::Array*, int32_t, int32_t, ModdingAPI::Exposed::System::Collections::IComparer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEE3E0))(keys, items, index, length, comparer);
  }
  static inline bool FastCopy(ModdingAPI::Exposed::System::Array* source, int32_t source_idx, ModdingAPI::Exposed::System::Array* dest, int32_t dest_idx, int32_t length) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t, ModdingAPI::Exposed::System::Array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEEB20))(source, source_idx, dest, dest_idx, length);
  }
  static inline ModdingAPI::Exposed::System::Array* CreateInstanceImpl(ModdingAPI::Exposed::System::Type* elementType, ModdingAPI::Exposed::System::Int32_array* lengths, ModdingAPI::Exposed::System::Int32_array* bounds) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Array*(__fastcall*)(ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Int32_array*, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEEB30))(elementType, lengths, bounds);
  }
  static inline ModdingAPI::Exposed::System::Array* UnsafeCreateInstance(ModdingAPI::Exposed::System::Type* elementType, ModdingAPI::Exposed::System::Int32_array* lengths, ModdingAPI::Exposed::System::Int32_array* lowerBounds) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Array*(__fastcall*)(ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Int32_array*, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEF370))(elementType, lengths, lowerBounds);
  }
  static inline ModdingAPI::Exposed::System::Array* UnsafeCreateInstance(ModdingAPI::Exposed::System::Type* elementType, int32_t length1, int32_t length2) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Array*(__fastcall*)(ModdingAPI::Exposed::System::Type*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEF380))(elementType, length1, length2);
  }
  static inline ModdingAPI::Exposed::System::Array* UnsafeCreateInstance(ModdingAPI::Exposed::System::Type* elementType, ModdingAPI::Exposed::System::Int32_array* lengths) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Array*(__fastcall*)(ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEF470))(elementType, lengths);
  }
  static inline ModdingAPI::Exposed::System::Array* CreateInstance(ModdingAPI::Exposed::System::Type* elementType, int32_t length) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Array*(__fastcall*)(ModdingAPI::Exposed::System::Type*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEF480))(elementType, length);
  }
  static inline ModdingAPI::Exposed::System::Array* CreateInstance(ModdingAPI::Exposed::System::Type* elementType, int32_t length1, int32_t length2) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Array*(__fastcall*)(ModdingAPI::Exposed::System::Type*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEF380))(elementType, length1, length2);
  }
  static inline ModdingAPI::Exposed::System::Array* CreateInstance(ModdingAPI::Exposed::System::Type* elementType, int32_t length1, int32_t length2, int32_t length3) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Array*(__fastcall*)(ModdingAPI::Exposed::System::Type*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEF550))(elementType, length1, length2, length3);
  }
  static inline ModdingAPI::Exposed::System::Array* CreateInstance(ModdingAPI::Exposed::System::Type* elementType, ModdingAPI::Exposed::System::Int32_array* lengths) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Array*(__fastcall*)(ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEF660))(elementType, lengths);
  }
  static inline ModdingAPI::Exposed::System::Array* CreateInstance(ModdingAPI::Exposed::System::Type* elementType, ModdingAPI::Exposed::System::Int32_array* lengths, ModdingAPI::Exposed::System::Int32_array* lowerBounds) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Array*(__fastcall*)(ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Int32_array*, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEF910))(elementType, lengths, lowerBounds);
  }
  static inline void Clear(ModdingAPI::Exposed::System::Array* array, int32_t index, int32_t length) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEFDA0))(array, index, length);
  }
  static inline void ClearInternal(ModdingAPI::Exposed::System::Array* a, int32_t index, int32_t count) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEFF80))(a, index, count);
  }
  static inline void Copy(ModdingAPI::Exposed::System::Array* sourceArray, ModdingAPI::Exposed::System::Array* destinationArray, int32_t length) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, ModdingAPI::Exposed::System::Array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDEFFB0))(sourceArray, destinationArray, length);
  }
  static inline void Copy(ModdingAPI::Exposed::System::Array* sourceArray, int32_t sourceIndex, ModdingAPI::Exposed::System::Array* destinationArray, int32_t destinationIndex, int32_t length) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t, ModdingAPI::Exposed::System::Array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDF0130))(sourceArray, sourceIndex, destinationArray, destinationIndex, length);
  }
  static inline ModdingAPI::Exposed::System::Exception* CreateArrayTypeMismatchException() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xDF06C0))();
  }
  static inline bool CanAssignArrayElement(ModdingAPI::Exposed::System::Type* source, ModdingAPI::Exposed::System::Type* target) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDF0870))(source, target);
  }
  static inline void ConstrainedCopy(ModdingAPI::Exposed::System::Array* sourceArray, int32_t sourceIndex, ModdingAPI::Exposed::System::Array* destinationArray, int32_t destinationIndex, int32_t length) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, int32_t, ModdingAPI::Exposed::System::Array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDF0990))(sourceArray, sourceIndex, destinationArray, destinationIndex, length);
  }
  static inline void SortImpl(ModdingAPI::Exposed::System::Array* keys, ModdingAPI::Exposed::System::Array* items, int32_t index, int32_t length, ModdingAPI::Exposed::System::Collections::IComparer* comparer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Array*, ModdingAPI::Exposed::System::Array*, int32_t, int32_t, ModdingAPI::Exposed::System::Collections::IComparer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xDF09A0))(keys, items, index, length, comparer);
  }
};
}