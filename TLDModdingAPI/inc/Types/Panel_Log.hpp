// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Color.hpp"
#include "ModdingAPI.Exposed.Panel_Log.NavigationTabs.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"


namespace ModdingAPI::Exposed {
struct __Panel_Log_Il2CppStaticFields {
  bool m_MarkFalseBlizzards;
};

struct __Panel_Log_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __Panel_Log_Il2CppClass {
  Il2CppClass_1 _1;
  __Panel_Log_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Panel_Log_Il2CppVtbl vtbl;
};

class Panel_Log {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C383F0;
  static inline    __Panel_Log_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __Panel_Log_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__Panel_Log_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __Panel_Log_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  bool m_EnableDiaryOnExit;
  ModdingAPI::Exposed::ButtonLegendContainer* m_ButtonLegendContainer;
  ModdingAPI::Exposed::UnityEngine::Color m_BoldColor;
  ModdingAPI::Exposed::Panel_Log::NavigationTabs m_SurvivalTabs;
  ModdingAPI::Exposed::Panel_Log::NavigationTabs m_StoryTabs;
  int32_t m_NavigationTabState;
  ModdingAPI::Exposed::UILabel* m_PageHeader;
  ModdingAPI::Exposed::UILabel* m_ScrollListHeader;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_LogGridItemPrefab;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_GridItemParent;
  ModdingAPI::Exposed::UnityEngine::Vector2 m_GridItemSpacing;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SelectedSpriteObj;
  ModdingAPI::Exposed::TweenScale* m_SelectedSpriteTweenScale;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_MainLogObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_NotesSectionObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_LogSectionObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_CollectibleSectionObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_NotesObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_DailyLogObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_TOCObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_DailyStatsPageObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_NoDataMessageObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ExamineObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_TabsObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_TabsNotesObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_StatsPages;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_DailyScrollbar;
  ModdingAPI::Exposed::UILabel* m_CurrentGameLabel;
  ModdingAPI::Exposed::UILabel* m_StatsDayLabel;
  ModdingAPI::Exposed::UILabel* m_StatsExploredLabel;
  ModdingAPI::Exposed::UILabel* m_StatsRestedLabel;
  ModdingAPI::Exposed::UILabel* m_StatsConditionLabel;
  ModdingAPI::Exposed::UILabel* m_StatsCalorieLabel;
  ModdingAPI::Exposed::UILabel* m_StatsInjuriesLabel;
  ModdingAPI::Exposed::UILabel* m_StatsNumLocationsLabel;
  ModdingAPI::Exposed::UIGrid* m_StatsLocationGrid;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_StatsLocationPrefab;
  ModdingAPI::Exposed::TextInputField* m_NotesTextField;
  ModdingAPI::Exposed::UIPanel* m_NotesTextPanel;
  ModdingAPI::Exposed::GenericButtonMouseSpawner* m_NotesButtonWrite;
  ModdingAPI::Exposed::UILabel* m_CollectibleNameLabel;
  ModdingAPI::Exposed::UILabel* m_CollectibleDescLabel;
  ModdingAPI::Exposed::UITexture* m_CollectibleBigIcon;
  ModdingAPI::Exposed::UILabel* m_CollectibleNameExamineLabel;
  ModdingAPI::Exposed::UILabel* m_CollectibleReadTextLabel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_DescriptionPageObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_NoCollectiblesObject;
  ModdingAPI::Exposed::UIPanel* m_ExamineCollectibleTextPanel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ButtonExamineCollectible;
  ModdingAPI::Exposed::UITexture* m_CollectibleItemTexture;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ScrollbarDays;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ScrollbarStats;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ScrollbarNotes;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ScrollbarCollectibles;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ScrollbarExamineCollectible;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ScrollbarDetailedStats;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SectionNav;
  ModdingAPI::Exposed::UnityEngine::Transform* m_SectionNavSelectedSprite;
  ModdingAPI::Exposed::UnityEngine::Transform* m_SectionNavButtonStartPosition;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_SectionNavButtonSpacing;
  ModdingAPI::Exposed::UIButton* m_DailyLogButton;
  ModdingAPI::Exposed::UIButton* m_StatsButton;
  ModdingAPI::Exposed::UIButton* m_CollectiblesButton;
  ModdingAPI::Exposed::UIButton* m_GeneralNotesButton;
  ModdingAPI::Exposed::GamepadButtonSprite_array* m_GamepadButtonSprites;
  ModdingAPI::Exposed::UILabel* m_Label_CauseOfDeath;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Object_FadeBackground;
  ModdingAPI::Exposed::UILabel* m_SandboxHeader;
  ModdingAPI::Exposed::PanelLogState_array* m_PanelLogStateOrder;
  ModdingAPI::Exposed::UnityEngine::GameObject_array* m_TopNavButtonOrder;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SectionNavArrowPrompts;
  ModdingAPI::Exposed::UnityEngine::Transform* m_SectionNavBottomArrow;
  float m_SectionNavBottomArrowOffset;
  ModdingAPI::Exposed::Log* m_Log;
  int32_t m_State;
  int32_t m_SandboxSelectedIndex;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_CollectibleList;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_CollectibleGearItems;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_CollectibleCairnItems;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_CollectibleAuroraScreenItems;
  float m_StatsPanelHeight;
  float m_NotesPanelHeight;
  float m_ExamineCollectiblePanelHeight;
  System_String* m_CachedNotesString;
  int32_t m_PrevCursorPosition;
  bool m_ViewNotesToggle;
  bool m_ReadyForInput;
  bool m_WasRenamingInMouseScheme;
  bool m_WasRenamingLastFrame;
  int32_t m_CachedScheme;
  bool m_FadeInProgress;
  bool m_OverwriteView;
  bool m_HasSavedJournal;
  bool m_EnabledFromMainMenu;
  int32_t m_MaxJournals;
  ModdingAPI::Exposed::SandboxRecord* m_SandboxRecordAtDeath;
  ModdingAPI::Exposed::SummaryStatsView* m_SummaryStatsView;
  ModdingAPI::Exposed::DetailedStatsView* m_DetailedStatsView;
  ModdingAPI::Exposed::UIGrid* m_MouseButtonGrid;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Button_SaveJournal;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Button_View;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Button_Overwrite;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Button_Delete;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Button_Rename;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Button_ResetAllTimeStats;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Button_Back;
  ModdingAPI::Exposed::UILabel* m_Label_SurvivalRecordText;
  ModdingAPI::Exposed::UILabel* m_Label_DiedFromText;
  ModdingAPI::Exposed::UITexture* m_TOCRegionTexture;
  ModdingAPI::Exposed::UISprite* m_Sprite_ExperienceMode;
  ModdingAPI::Exposed::UILabel* m_Label_EndDate;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_TOCContent;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_NoTOCContent;
  ModdingAPI::Exposed::UIGrid* m_TocButtonGrid;
  ModdingAPI::Exposed::ScrollList* m_TocScrollList;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_TocScrollbar;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_TocItems;
  bool m_LeftStickUpNonZeroOnEnter;
  System_String* m_OpenLogAudio;
  System_String* m_CloseLogAudio;
  System_String* m_CloseJournalSelectAudio;
  int32_t m_ExamineNotesAnchorLeft;
  int32_t m_ExamineNotesAnchorRight;
  int32_t m_ExamineNotesAnchorTop;
  int32_t m_ExamineNotesAnchorBottom;
  int32_t m_ExamineBufferMemoryAnchorLeft;
  int32_t m_ExamineBufferMemoryAnchorRight;
  int32_t m_ExamineBufferMemoryAnchorTop;
  int32_t m_ExamineBufferMemoryAnchorBottom;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_LogGridItemList;
  int32_t m_NumColumns;
  int32_t m_NumRows;
  int32_t m_NumGridItemsVisible;
  int32_t m_LogGridItemIndex;
  int32_t m_LogGridNumRowsScrolled;
  int32_t m_SectionNavIndex;
  int32_t m_SectionNavCacheState;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_ActiveStates;
  uint32_t m_OpenCloseAudioID;
  int32_t m_BackAction;
  ModdingAPI::Exposed::AssetBundleRef* m_LogImagesBundle;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_AlmanacSectionObject;
  ModdingAPI::Exposed::UIButton* m_AlmanacButton;
  ModdingAPI::Exposed::UIGrid* m_AlmanacGrid;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_AlmanacGridItemPrefab;
  ModdingAPI::Exposed::UILabel* m_CatFiveLabel;
  ModdingAPI::Exposed::UILabel* m_CatFiveChanceLabel;
  int32_t m_NumDaysShown;
  float m_ThresholdHoursCat4;
  float m_ThresholdHoursCat3;
  float m_ThresholdHoursCat2;
  int32_t m_MinNumberFalseBlizzards;
  int32_t m_MaxNumberFalseBlizzards;
  int32_t m_DaysToBlockFalseBlizzard;
  int32_t m_MaxChanceShownForFalseBlizard;
  int32_t m_MinChanceShownForTrueBlizard;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_AlmanacGridItems;
  int32_t m_AlmanacListSelectedIndex;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_CollectiblesSubSectionObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_CollectionsSubSectionObject;
  ModdingAPI::Exposed::ScrollList* m_CollectionsScrollList;
  ModdingAPI::Exposed::UITexture* m_CollectionsImage;
  ModdingAPI::Exposed::UILabel* m_CollectionsNameLabel;
  ModdingAPI::Exposed::UILabel* m_CollectionsDescLabel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_NoCollectionsOfType;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_CollectionSelectSubScreenButton;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_CollectionSelectScreenOnly;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_NoCollectionObject;
  int32_t m_TotalNumNoteCollectibles;
  int32_t m_TotalNumMatchbookCollectibles;
  int32_t m_TotalNumPostcardCollectibles;
  int32_t m_TotalNumCairnCollectibles;
  int32_t m_TotalNumAuroraScreenCollectibles;
  System_String* m_NotesSpriteNameSmall;
  System_String* m_NotesSpriteNameBig;
  System_String* m_MatchbooksSpriteNameSmall;
  System_String* m_MatchbooksSpriteNameBig;
  System_String* m_PostcardsSpriteNameSmall;
  System_String* m_PostcardsSpriteNameBig;
  System_String* m_CairnsSpriteNameSmall;
  System_String* m_CairnsSpriteNameBig;
  System_String* m_AuroraScreensSpriteNameSmall;
  System_String* m_AuroraScreensSpriteNameBig;
  bool m_CollectionsToggle;
  int32_t m_CollectionsCurrType;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_CollectionList;
  int32_t m_CollectionListSelectedIndex;
  int32_t m_CurrNumNoteCollectibles;
  int32_t m_CurrNumMatchbookCollectibles;
  int32_t m_CurrNumPostcardCollectibles;
  int32_t m_CurrNumCairnCollectibles;
  int32_t m_CurrNumAuroraScreenCollectibles;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_CollectionDataList;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_MissionsSectionObject;
  ModdingAPI::Exposed::UILabel* m_MissionNameLabel;
  ModdingAPI::Exposed::UILabel* m_MissionNameHeaderLabel;
  ModdingAPI::Exposed::UILabel* m_MissionDescriptionLabel;
  ModdingAPI::Exposed::UnityEngine::Transform* m_ObjectiveTransform;
  ModdingAPI::Exposed::UILabel* m_MainObjectiveLabel;
  ModdingAPI::Exposed::ChallengeChecklistEntry_array* m_ChecklistEntries;
  float m_ChallengeChecklistOffsetY;
  float m_ChallengeChecklistVerticalSpacing;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_TimerObject;
  ModdingAPI::Exposed::UILabel* m_TimerLabel;
  ModdingAPI::Exposed::UITexture* m_ChallengeTexture;
  ModdingAPI::Exposed::UIButton* m_MissionsButton;
  int32_t m_PixelBufferTimer;
  ModdingAPI::Exposed::UISprite* m_MainObjectiveSprite;
  ModdingAPI::Exposed::StoryMissionInfo* m_CurrentMissionInfo;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_ObjectivesToShow;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_MissionsInfoList;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SkillsSectionObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SkillBenefitPrefab;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SkillBenefitsStartDummy;
  int32_t m_SkillBenefitLabelOffsetY;
  int32_t m_SkillBenefitSpacingY;
  int32_t m_DescriptionOffsetY;
  ModdingAPI::Exposed::ScrollList* m_SkillsScrollList;
  ModdingAPI::Exposed::UITexture* m_SkillImageLarge;
  ModdingAPI::Exposed::UILabel* m_SkillName;
  ModdingAPI::Exposed::UILabel* m_SkillLevelName;
  ModdingAPI::Exposed::UILabel* m_SkillLevelIconLargeLabel;
  ModdingAPI::Exposed::UILabel* m_SkillDescription;
  ModdingAPI::Exposed::UIButton* m_SkillsButton;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_SkillList;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_SkillBenefitLines;
  int32_t m_SkillListSelectedIndex;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_TrustSectionObject;
  ModdingAPI::Exposed::ScrollList* m_TrustScrollList;
  ModdingAPI::Exposed::UITexture* m_TrustImage;
  ModdingAPI::Exposed::UILabel* m_TrustNameLabel;
  ModdingAPI::Exposed::UILabel* m_TrustDescLabel;
  ModdingAPI::Exposed::UIButton* m_TrustButton;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_PeopleDescriptionSection;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_PeopleTrustSection;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_NoUnlocksSection;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_HasUnlocksSection;
  ModdingAPI::Exposed::UILabel* m_PeopleDescTrustValLabel;
  ModdingAPI::Exposed::UILabel* m_PeopleTrustValLabel;
  ModdingAPI::Exposed::TrustListItemInfo_array* m_TrustIDInfo;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_NeedsHeadersObject;
  ModdingAPI::Exposed::UILabel* m_NoNeedsLabel;
  ModdingAPI::Exposed::UILabel_array* m_NeedsListNameLabels;
  ModdingAPI::Exposed::UILabel_array* m_NeedsListTrustLabels;
  ModdingAPI::Exposed::TrustMapEntry_array* m_TrustMapEntries;
  ModdingAPI::Exposed::UILabel* m_TrustUnlockNameLabel;
  ModdingAPI::Exposed::UILabel* m_TrustUnlockValueLabel;
  ModdingAPI::Exposed::UILabel* m_TrustUnlockDescLabel;
  ModdingAPI::Exposed::UnityEngine::Color m_TrustMapReqLockedColor;
  ModdingAPI::Exposed::UnityEngine::Color m_TrustMapReqUnlockedColor;
  int32_t m_TrustGridNumColumns;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_TrustList;
  int32_t m_TrustListSelectedIndex;
  bool m_PeopleScreenTrustToggle;
  int32_t m_TrustMapSelectedIndex;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_TrustDataList;
  ModdingAPI::Exposed::NPC_NeedTracker* m_CurrNeedTracker;
  ModdingAPI::Exposed::NPC_UnlockableTracker* m_CurrUnlockableTracker;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_WhatIKnowSectionObject;
  ModdingAPI::Exposed::ScrollList* m_WhatIKnowScrollList;
  ModdingAPI::Exposed::UITexture* m_WhatIKnowImage;
  ModdingAPI::Exposed::UILabel* m_WhatIKnowNameLabel;
  ModdingAPI::Exposed::UILabel* m_WhatIKnowDescLabel;
  ModdingAPI::Exposed::UIButton* m_WhatIKnowButton;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SelectSubScreenButton;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SelectScreenOnly;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SubScreenOnly;
  ModdingAPI::Exposed::UILabel* m_SubscreenHeaderLabel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ScrollbarWhatIKnow;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ScrollbarWhatIKnowDesc;
  ModdingAPI::Exposed::UIPanel* m_WhatIKnowDescPanel;
  int32_t m_TotalNumKnowledgePeople;
  int32_t m_TotalNumKnowledgePlaces;
  int32_t m_TotalNumKnowledgeThings;
  int32_t m_TotalNumKnowledgeActions;
  System_String* m_PeopleSpriteNameSmall;
  System_String* m_PeopleSpriteNameBig;
  System_String* m_PlacesSpriteNameSmall;
  System_String* m_PlacesSpriteNameBig;
  System_String* m_ThingsSpriteNameSmall;
  System_String* m_ThingsSpriteNameBig;
  System_String* m_ActionsSpriteNameSmall;
  System_String* m_ActionsSpriteNameBig;
  int32_t m_WhatIKnowCurrType;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_WhatIKnowList;
  int32_t m_WhatIKnowListSelectedIndex;
  float m_WhatIKnowDescPanelHeight;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_WhatIKnowDataList;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_ListKnowledgeUnlockedPeople;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_ListKnowledgeUnlockedPlaces;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_ListKnowledgeUnlockedThings;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_ListKnowledgeUnlockedActions;
  bool m_WasQuickSelectActivated;

  // Member methods:
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171BF70))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171C410))(this);
  }
  void FixedUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171C900))(this);
  }
  void LateUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171CB70))(this);
  }
  void Enable(bool enable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171CCF0))(this, enable);
  }
  void Disable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171D3B0))(this);
  }
  void EnableTableOfContentsView() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171D3C0))(this);
  }
  void EnableFromRadial(int32_t state) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171D6D0))(this, state);
  }
  void EnableFromMissionsStory(int32_t state) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171DB20))(this, state);
  }
  void EnableFromMap(System_String* missionId) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171DC10))(this, missionId);
  }
  void EnableFromObjective(System_String* missionId) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171DD90))(this, missionId);
  }
  void EnableDailyView() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171DF10))(this);
  }
  void EnableStatsView() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171DFE0))(this);
  }
  void EnableDeathView() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171E0D0))(this);
  }
  bool IsEnabled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x165DF10))(this);
  }
  void OnBack() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171E1C0))(this);
  }
  void OnTocScrollbarChange() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171E590))(this);
  }
  void OnTocItemClicked(int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171E710))(this, index);
  }
  void LogGridItemCallback(int32_t entryNum) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171EAD0))(this, entryNum);
  }
  void LogListItemCallback(int32_t indexClicked) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171EAF0))(this, indexClicked);
  }
  void OnWriteButton() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171EE60))(this);
  }
  void OnStatus() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171EF10))(this);
  }
  void OnInventory() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171F000))(this);
  }
  void OnScrollbarDaysUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171F0D0))(this);
  }
  void OnScrollbarDaysDown() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171F1E0))(this);
  }
  void OnScrollbarDaysChange() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171F2E0))(this);
  }
  void OnScrollbarStatsChange() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171F450))(this);
  }
  void OnScrollbarStatsUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171F480))(this);
  }
  void OnScrollbarStatsDown() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171F4B0))(this);
  }
  void OnScrollbarCollectiblesUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171F4E0))(this);
  }
  void OnScrollbarCollectiblesDown() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171F5F0))(this);
  }
  void OnScrollbarCollectiblesChange() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171F6F0))(this);
  }
  void OnScrollbarDayStatsUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171F860))(this);
  }
  void OnScrollbarDayStatsDown() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171F9F0))(this);
  }
  void OnScrollbarStatsDaysChange() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171FB80))(this);
  }
  void OnScrollbarNotesUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171FC20))(this);
  }
  void OnScrollbarNotesDown() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171FD90))(this);
  }
  void OnScrollbarNotesChange() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171FF00))(this);
  }
  void OnScrollbarExamineCollectibleUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x171FFA0))(this);
  }
  void OnScrollbarExamineCollectibleDown() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1720110))(this);
  }
  void OnScrollbarExamineCollectibleChange() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1720280))(this);
  }
  void OnEnterGeneralNotes() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1720320))(this);
  }
  void NotesToggle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17203D0))(this);
  }
  void OnEnterNoteTaking() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1720490))(this);
  }
  void OnShowDayStats() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17204B0))(this);
  }
  void NoteTakingStart() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17204D0))(this);
  }
  void OnReadText() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1720790))(this);
  }
  void OnDailyLogButton() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1720860))(this);
  }
  void OnStatsButton() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1720910))(this);
  }
  void OnCollectibleButton() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17209C0))(this);
  }
  void OnExamineCollectible() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1720A70))(this);
  }
  void Reset() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1720B20))(this);
  }
  void OnInventoryNav() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1720F20))(this);
  }
  void OnClothingNav() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1721020))(this);
  }
  void OnCraftingNav() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1721110))(this);
  }
  void OnFirstAidNav() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1721200))(this);
  }
  void OnMapNav() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17212F0))(this);
  }
  void OnJournalNav() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1721480))(this);
  }
  void OnMissionsNav() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1721560))(this);
  }
  void Refresh() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1721640))(this);
  }
  void ExitInterfaceOnDeath() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1721820))(this);
  }
  void ExitInterface() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1721840))(this);
  }
  void OnQuitToMainMenu() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17219C0))(this);
  }
  void ForceQuit() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1721CD0))(this);
  }
  void ReallyQuitToMainMenu() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1721CE0))(this);
  }
  bool IsInSectionNav() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1721DB0))(this);
  }
  bool QuitToMainMenuOnBack() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1721DC0))(this);
  }
  System_String* GetOnBackText() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1721EC0))(this);
  }
  void SelectSandbox(int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1721FD0))(this, index);
  }
  void EnterState(int32_t newState) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1721FE0))(this, newState);
  }
  void ViewSandbox() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1722B30))(this);
  }
  void UpdateTOCSelection() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1722CA0))(this);
  }
  void OnDeleteSandbox() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1723330))(this);
  }
  void OnDeleteSandboxConfirmed() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1723580))(this);
  }
  void OnRenameSandbox() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1723730))(this);
  }
  void OnRenameSandboxConfirmed() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1723B10))(this);
  }
  void OnRenameSandboxCancelled(bool wasCancelled) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1723D60))(this, wasCancelled);
  }
  void OnOverwriteSandbox() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1723E20))(this);
  }
  void OnOverwriteSandboxConfirmed() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1724070))(this);
  }
  void OnSandboxLimitNotification() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1724170))(this);
  }
  void OnSandboxLimitNotificationConfirmed() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17243C0))(this);
  }
  void OnSaveJournal() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17243F0))(this);
  }
  void UncacheSandboxRecord(ModdingAPI::Exposed::SandboxRecord* record) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, ModdingAPI::Exposed::SandboxRecord*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1724560))(this, record);
  }
  void ReallySaveJournal() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1724E60))(this);
  }
  void UpdateDailyStatsPage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1724F90))(this);
  }
  void UpdateStatsSlider() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1725890))(this);
  }
  void UpdateNotesPage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1725CB0))(this);
  }
  void UpdateExamineCollectibleSlider() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1726150))(this);
  }
  void UpdateNotesSlider() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1726560))(this);
  }
  void CheckForNotesChange() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1726970))(this);
  }
  void UpdateCollectibleList() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17271F0))(this);
  }
  void UpdateExamineCollectible() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17279C0))(this);
  }
  void BuildTOCList() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1728200))(this);
  }
  void BuildStatsView() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17286F0))(this);
  }
  void BuildDailyList(bool doSelectionReset) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1728740))(this, doSelectionReset);
  }
  void BuildCollectibleList(bool doSelectionReset) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1728D40))(this, doSelectionReset);
  }
  void ClearGrid(ModdingAPI::Exposed::UIGrid* gridToClear) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, ModdingAPI::Exposed::UIGrid*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172A400))(this, gridToClear);
  }
  bool ShouldShowNotes() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172A5A0))(this);
  }
  bool CanEditJournal() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172A5C0))(this);
  }
  bool CanSaveJournal() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172A690))(this);
  }
  void ScrollListMovement(int32_t moveVal) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172A7B0))(this, moveVal);
  }
  void DoScrollListScrollLeft() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172A820))(this);
  }
  void DoScrollListScrolLRight() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172A940))(this);
  }
  void DoControlsCollectibleList() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172AA50))(this);
  }
  void DoControlsDailyListStats() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172B030))(this);
  }
  void DoControlsStats() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172B570))(this);
  }
  void OnResetAllTimeStats() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172BA60))(this);
  }
  void DoControlsExamineCollectible() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172BA90))(this);
  }
  void UpdateTocViewButtons() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172BD80))(this);
  }
  void DoControlsTOCView() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172C020))(this);
  }
  void UpdateTocViewSelection() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172C310))(this);
  }
  void UpdateTocViewOverwriteButtons() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172C520))(this);
  }
  void DoControlsTOCViewOverwrite() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172C7C0))(this);
  }
  void DoSectionNavControls() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172CA00))(this);
  }
  void RefreshActivePanelStates() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172CEC0))(this);
  }
  void DisableAllMouseButtons() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172D380))(this);
  }
  void DoControls() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172D630))(this);
  }
  void DoMouseScrollControls() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172D8A0))(this);
  }
  void UpdateNavigationButtons() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172DBB0))(this);
  }
  void BeginFadeIn() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172DBC0))(this);
  }
  void OnFinalScreenShown() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172E300))(this);
  }
  void ToggleButtonColliders(ModdingAPI::Exposed::UnityEngine::Transform* transform, bool enabled) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, ModdingAPI::Exposed::UnityEngine::Transform*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172E3C0))(this, transform, enabled);
  }
  void SetUpTopNav() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172E5F0))(this);
  }
  void UpdateCurrentGameLabel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172EAE0))(this);
  }
  void UpdateScrollbarThumbSize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172EE10))(this);
  }
  void UpdateScrollbarThumbSizeIndividual(ModdingAPI::Exposed::UISlider* slider, int32_t numVisible, int32_t total) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, ModdingAPI::Exposed::UISlider*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172F330))(this, slider, numVisible, total);
  }
  void DoMainNavControls() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172F410))(this);
  }
  bool ShouldRenderOverOtherScreens() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172F7B0))(this);
  }
  void ActivateBackButton() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172F860))(this);
  }
  void InstantiateLogGridItems() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172F980))(this);
  }
  void MoveSelectedSpriteAndTween(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172FBB0))(this, pos);
  }
  bool ShouldEnterSectionNav() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172FDD0))(this);
  }
  void MoveSectionNavToButton(int32_t buttonState) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x172FE90))(this, buttonState);
  }
  void MoveGridSelection(int32_t horizontal, int32_t vertical) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1730630))(this, horizontal, vertical);
  }
  int32_t GetNumGridItemsShowing() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17307A0))(this);
  }
  int32_t GetTotalNumGridItems() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17307D0))(this);
  }
  void SetLogGridItemIndex(int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17309E0))(this, index);
  }
  int32_t GetCollectibleListTrueIndex() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1730B00))(this);
  }
  bool StateIsShowing(int32_t state) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1730B20))(this, state);
  }
  void UpdateSectionNavButtonColors() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1730B40))(this);
  }
  void SetButtonColors(ModdingAPI::Exposed::UIButton* button, ModdingAPI::Exposed::UnityEngine::Color defaultColor, ModdingAPI::Exposed::UnityEngine::Color hoverColor, ModdingAPI::Exposed::UnityEngine::Color disabledColor) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, ModdingAPI::Exposed::UIButton*, ModdingAPI::Exposed::UnityEngine::Color, ModdingAPI::Exposed::UnityEngine::Color, ModdingAPI::Exposed::UnityEngine::Color)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1730EB0))(this, button, defaultColor, hoverColor, disabledColor);
  }
  void DoSectionNavUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1731090))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Texture2D* GetTOCTextureFromRegion(int32_t region) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Texture2D*(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17312C0))(this, region);
  }
  void EnterSectionNav() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17313F0))(this);
  }
  void DeselectLogGridItems() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1731670))(this);
  }
  void EnableAllLBRBButtons(bool shouldEnable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1731950))(this, shouldEnable);
  }
  void EnableNavigationTabs(bool enable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1731A60))(this, enable);
  }
  void SetActiveTab(int32_t state) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1731B70))(this, state);
  }
  void SetActive(ModdingAPI::Exposed::UnityEngine::GameObject* go, bool enable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, ModdingAPI::Exposed::UnityEngine::GameObject*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1731D40))(this, go, enable);
  }
  void UpdateAlmanacPage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1731E20))(this);
  }
  void OnAlmanacButton() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17326E0))(this);
  }
  void DoControlsAlmanac() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1732790))(this);
  }
  void InstantiateGridItems() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1732950))(this);
  }
  void UpdateCollectionsPage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1732D40))(this);
  }
  void OnCollectiblesTab() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x40B4A0))(this);
  }
  void OnCollectionsTab() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x40B4A0))(this);
  }
  void DoCollectionsToggle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void DoControlsCollectionList() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1732FA0))(this);
  }
  void OnCollectionsSubScreen() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1733400))(this);
  }
  void BuildCollectionsList() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1733530))(this);
  }
  void AddEntryToList(int32_t scrollIndex, ModdingAPI::Exposed::CollectionListItemInfo* itemInfo) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t, ModdingAPI::Exposed::CollectionListItemInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1733750))(this, scrollIndex, itemInfo);
  }
  void UpdateCollectionListSelectionScroll(int32_t moveVal, int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17338E0))(this, moveVal, index);
  }
  void UpdateCollectionListItemsColor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1733AA0))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* GenerateCollectionSelectScreenDummyData() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1733BA0))(this);
  }
  bool IsInCollectionsSelectScreen() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1734430))(this);
  }
  void SetCollectionSubscreenNameLabel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1734450))(this);
  }
  void RefreshCollectibleCounters() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17346C0))(this);
  }
  void UpdateMissionsPage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1734A30))(this);
  }
  void UpdateMissionInfo(System_String* name, System_String* description, ModdingAPI::Exposed::System::String_array* checklistKeys, ModdingAPI::Exposed::System::String_array* checklistValues, ModdingAPI::Exposed::System::Boolean_array* checklistBools) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, System_String*, System_String*, ModdingAPI::Exposed::System::String_array*, ModdingAPI::Exposed::System::String_array*, ModdingAPI::Exposed::System::Boolean_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17365B0))(this, name, description, checklistKeys, checklistValues, checklistBools);
  }
  void RemoveMission(System_String* name) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1736970))(this, name);
  }
  void ClearMissions() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1736AC0))(this);
  }
  void OnMissionsButton() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1736BA0))(this);
  }
  void DoControlsMissions() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1736C50))(this);
  }
  void UpdateMissionInfoFromPrefab() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1736F30))(this);
  }
  void UpdateSkillsPage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1737730))(this);
  }
  void OnSkillsButton() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17383E0))(this);
  }
  void DoControlsSkillsListStats() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1738490))(this);
  }
  void OnScrollbarSkillsUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void OnScrollbarSkillsDown() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void OnScrollbarSkillsChange() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void BuildSkillsList() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1738750))(this);
  }
  void AddSkillToList(int32_t scrollIndex, int32_t skillType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1738980))(this, scrollIndex, skillType);
  }
  void UpdateSkillsListSelectionScroll(int32_t moveVal, int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1739110))(this, moveVal, index);
  }
  void UpdateSkillListItemsColor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17392D0))(this);
  }
  void UpdateTrustPage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17394E0))(this);
  }
  void OnTrustMapClicked(int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1739890))(this, index);
  }
  void OnTrustButton() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1739AB0))(this);
  }
  void OnPeopleDescriptionTab() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1739B60))(this);
  }
  void OnPeopleTrustTab() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1739B80))(this);
  }
  void DoPeopleTabToggle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1739BA0))(this);
  }
  void DoControlsTrustList() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1739C50))(this);
  }
  void BuildTrustList() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1739F80))(this);
  }
  void AddTrustEntryToList(int32_t scrollIndex, ModdingAPI::Exposed::CollectionListItemInfo* itemInfo) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t, ModdingAPI::Exposed::CollectionListItemInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173A150))(this, scrollIndex, itemInfo);
  }
  void UpdateTrustListSelectionScroll(int32_t moveVal, int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173A2E0))(this, moveVal, index);
  }
  void UpdateTrustListItemsColor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173A4A0))(this);
  }
  void GenerateTrustListData() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173A5A0))(this);
  }
  System_String* GetTrustIDFromNameID(System_String* nameLocID) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173A990))(this, nameLocID);
  }
  void SetupNeedsInfo(System_String* trustID) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173AB10))(this, trustID);
  }
  System_String* GetStringForNeed(ModdingAPI::Exposed::NeedPrefabSaveData* needData) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, ModdingAPI::Exposed::NeedPrefabSaveData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173B190))(this, needData);
  }
  bool IsTrustWithinNeedRange(ModdingAPI::Exposed::NeedPrefabSaveData* needData, System_String* trustID) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, ModdingAPI::Exposed::NeedPrefabSaveData*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173B6A0))(this, needData, trustID);
  }
  void SetupTrustMap(System_String* trustID) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173B7A0))(this, trustID);
  }
  void RefreshTrustMapSelection() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173BD10))(this);
  }
  void DeselectAllTrustMapEntries() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173C310))(this);
  }
  void UpdateWhatIKnowPage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173C3A0))(this);
  }
  void OnWhatIKnowButton() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173C7B0))(this);
  }
  void DoControlsWhatIKnowList() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173C860))(this);
  }
  void SetWhatIKnowListSelectedToEntry(System_String* nameLocID) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173CE50))(this, nameLocID);
  }
  void PointToWhatIKnowEntryOnQuickKeyActive(int32_t category, System_String* nameLocID) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173CFA0))(this, category, nameLocID);
  }
  void OnWhatIKnowSubScreen() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173D160))(this);
  }
  void OnWhatIKnowScrollbarChange() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173D260))(this);
  }
  void OnScrollbarWhatIKnowDescUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173D3B0))(this);
  }
  void OnScrollbarWhatIKnowDescDown() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173D500))(this);
  }
  void OnWhatIKnowDescScrollbarChange() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173D650))(this);
  }
  void UpdateWhatIKnowDescScrollbar() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173D6F0))(this);
  }
  void BuildWhatIKnowList() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173DAD0))(this);
  }
  void AddWhatIKnowEntryToList(int32_t scrollIndex, ModdingAPI::Exposed::CollectionListItemInfo* itemInfo) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t, ModdingAPI::Exposed::CollectionListItemInfo*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173DE80))(this, scrollIndex, itemInfo);
  }
  void UpdateWhatIKnowListSelectionScroll(int32_t moveVal, int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173E010))(this, moveVal, index);
  }
  void UpdateWhatIKnowListItemsColor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173E270))(this);
  }
  void GenerateSelectScreenData() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173E370))(this);
  }
  void GenerateSubscreenData(ModdingAPI::Exposed::System::Collections::Generic::List_T_* knowledgeList) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173EA40))(this, knowledgeList);
  }
  void RefreshCachedKnowledgeUnlocks() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173EC80))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Log*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x173EE30))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<bool> m_MarkFalseBlizzards = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_MarkFalseBlizzards; }
  );

  // Static methods:
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))();
  }
};
}