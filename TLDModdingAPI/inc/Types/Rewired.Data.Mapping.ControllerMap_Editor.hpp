// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Guid.hpp"
#include "ModdingAPI.Exposed.Rewired.HardwareControllerMapIdentifier.hpp"


namespace ModdingAPI::Exposed::Rewired::Data::Mapping {
struct __ControllerMap_Editor_Il2CppStaticFields {
};

struct __ControllerMap_Editor_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __ControllerMap_Editor_Il2CppClass {
  Il2CppClass_1 _1;
  __ControllerMap_Editor_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __ControllerMap_Editor_Il2CppVtbl vtbl;
};

class ControllerMap_Editor {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C79448;
  static inline    __ControllerMap_Editor_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __ControllerMap_Editor_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__ControllerMap_Editor_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __ControllerMap_Editor_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  int32_t id;
  int32_t categoryId;
  int32_t layoutId;
  System_String* name;
  System_String* hardwareGuidString;
  int32_t customControllerUid;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* actionElementMaps;

  // Member methods:
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* get_ActionElementMaps() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x88CFC0))(this);
  }
  ModdingAPI::Exposed::System::Guid get_hardwareGuid() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Guid(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x88D150))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x88D210))(this);
  }
  ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor* Clone() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x88D360))(this);
  }
  ModdingAPI::Exposed::Rewired::ActionElementMap* GetActionElementMap(int32_t index) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ActionElementMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x88D850))(this, index);
  }
  ModdingAPI::Exposed::Rewired::JoystickMap* gGDyNvCSxPoLJcqOgOrVsVJlBuo(ModdingAPI::Exposed::System::Func_T__TResult_* , ModdingAPI::Exposed::Rewired::HardwareControllerMapIdentifier , ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap* , bool ) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::JoystickMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*, ModdingAPI::Exposed::System::Func_T__TResult_*, ModdingAPI::Exposed::Rewired::HardwareControllerMapIdentifier, ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x88D920))(this, , , , );
  }
  ModdingAPI::Exposed::Rewired::KeyboardMap* fyllgRQeeJNcOpXEDkbPGNTlipZ(ModdingAPI::Exposed::System::Func_T__TResult_* ) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::KeyboardMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*, ModdingAPI::Exposed::System::Func_T__TResult_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x88DAD0))(this, );
  }
  ModdingAPI::Exposed::Rewired::MouseMap* aMhZkiHiaJpnjNGnDwayHNYmIgd(ModdingAPI::Exposed::System::Func_T__TResult_* ) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::MouseMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*, ModdingAPI::Exposed::System::Func_T__TResult_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x88DC80))(this, );
  }
  ModdingAPI::Exposed::Rewired::CustomControllerMap* EMeTLueeEZtMqkGhEWLYOkLlWvq(ModdingAPI::Exposed::System::Func_T__TResult_* , ModdingAPI::Exposed::Rewired::Data::CustomController_Editor* ) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::CustomControllerMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*, ModdingAPI::Exposed::System::Func_T__TResult_*, ModdingAPI::Exposed::Rewired::Data::CustomController_Editor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x88DE30))(this, , );
  }
  ModdingAPI::Exposed::Rewired::ControllerTemplateMap* tNHtvbreDoqJAxpHcbkUjFoVMS() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ControllerTemplateMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x88DFB0))(this);
  }
  void sBDtIBvkHaGxrDYbrZbDKULrWLvG(ModdingAPI::Exposed::System::Func_T__TResult_* , ModdingAPI::Exposed::Rewired::ControllerMap* , ModdingAPI::Exposed::Rewired::HardwareControllerMapIdentifier , ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap* , bool ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*, ModdingAPI::Exposed::System::Func_T__TResult_*, ModdingAPI::Exposed::Rewired::ControllerMap*, ModdingAPI::Exposed::Rewired::HardwareControllerMapIdentifier, ModdingAPI::Exposed::Rewired::Data::Mapping::HardwareJoystickMap*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x88E330))(this, , , , , );
  }
  void bryXOsGDNSCEudfLeiUBYDZPJaK(ModdingAPI::Exposed::System::Func_T__TResult_* , int32_t , ModdingAPI::Exposed::Rewired::CustomControllerMap* , ModdingAPI::Exposed::Rewired::Data::CustomController_Editor* ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*, ModdingAPI::Exposed::System::Func_T__TResult_*, int32_t, ModdingAPI::Exposed::Rewired::CustomControllerMap*, ModdingAPI::Exposed::Rewired::Data::CustomController_Editor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x88EAF0))(this, , , , );
  }
  void CreateElementsFromHardwareMap(ModdingAPI::Exposed::Rewired::Data::Mapping::IHardwareControllerMap* hardwareJoystickMap) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*, ModdingAPI::Exposed::Rewired::Data::Mapping::IHardwareControllerMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x88F2A0))(this, hardwareJoystickMap);
  }
  void CreateElementsFromHardwareMap(ModdingAPI::Exposed::Rewired::Data::CustomController_Editor* customController) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*, ModdingAPI::Exposed::Rewired::Data::CustomController_Editor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x88F600))(this, customController);
  }
  void AddActionElementMap() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x88FE50))(this);
  }
  void InsertActionElementMap(int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x88FF00))(this, index);
  }
  void DeleteActionElementMap(int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x890020))(this, index);
  }
  bool ReorderActionElementMap(int32_t index, bool offsetDown, bool offsetNow) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*, int32_t, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x890130))(this, index, offsetDown, offsetNow);
  }
  void DuplicateActionElementMap(int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8901F0))(this, index);
  }
  ModdingAPI::Exposed::Rewired::ActionElementMap* PrcqmlrkEAZURQYVxdLWWBVdjTI() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ActionElementMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::Data::Mapping::ControllerMap_Editor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x890500))(this);
  }
};
}