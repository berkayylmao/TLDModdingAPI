// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext.hpp"


namespace ModdingAPI::Exposed::System::Runtime::Serialization {
struct __FormatterServices_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Collections::Concurrent::ConcurrentDictionary_TKey__TValue_* m_MemberInfoTable;
  bool unsafeTypeForwardersIsEnabled;
  bool unsafeTypeForwardersIsEnabledInitialized;
  ModdingAPI::Exposed::System::Type_array* advancedTypes;
  ModdingAPI::Exposed::System::Reflection::Binder* s_binder;
};

struct __FormatterServices_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __FormatterServices_Il2CppClass {
  Il2CppClass_1 _1;
  __FormatterServices_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __FormatterServices_Il2CppVtbl vtbl;
};

class FormatterServices {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C92478;
  static inline    __FormatterServices_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __FormatterServices_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__FormatterServices_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __FormatterServices_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Concurrent::ConcurrentDictionary_TKey__TValue_*> m_MemberInfoTable = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Concurrent::ConcurrentDictionary_TKey__TValue_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_MemberInfoTable; }
  );
  static inline __CppStaticProperty<bool> unsafeTypeForwardersIsEnabled = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->unsafeTypeForwardersIsEnabled; }
  );
  static inline __CppStaticProperty<bool> unsafeTypeForwardersIsEnabledInitialized = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->unsafeTypeForwardersIsEnabledInitialized; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type_array*> advancedTypes = __CppStaticProperty<ModdingAPI::Exposed::System::Type_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->advancedTypes; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Reflection::Binder*> s_binder = __CppStaticProperty<ModdingAPI::Exposed::System::Reflection::Binder*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_binder; }
  );

  // Static methods:
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x962AC0))();
  }
  static inline ModdingAPI::Exposed::System::Reflection::MemberInfo_array* GetSerializableMembers(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Reflection::MemberInfo_array*(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x962D00))(type);
  }
  static inline bool CheckSerializable(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x962F00))(type);
  }
  static inline ModdingAPI::Exposed::System::Reflection::MemberInfo_array* InternalGetSerializableMembers(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Reflection::MemberInfo_array*(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x962F30))(type);
  }
  static inline bool GetParentTypes(ModdingAPI::Exposed::System::RuntimeType* parentType, ModdingAPI::Exposed::System::RuntimeType_array* parentTypes, int32_t parentTypeCount) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*, ModdingAPI::Exposed::System::RuntimeType_array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9636E0))(parentType, parentTypes, parentTypeCount);
  }
  static inline ModdingAPI::Exposed::System::Reflection::MemberInfo_array* GetSerializableMembers(ModdingAPI::Exposed::System::Type* type, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Reflection::MemberInfo_array*(__fastcall*)(ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext)>(Helpers::Memory::GetInstance().MakeAbsolute(0x963A70))(type, context);
  }
  static inline Il2CppObject* GetUninitializedObject(ModdingAPI::Exposed::System::Type* type) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x963EE0))(type);
  }
  static inline Il2CppObject* GetSafeUninitializedObject(ModdingAPI::Exposed::System::Type* type) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x964100))(type);
  }
  static inline Il2CppObject* nativeGetUninitializedObject(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x73BEA0))(type);
  }
  static inline Il2CppObject* nativeGetSafeUninitializedObject(ModdingAPI::Exposed::System::RuntimeType* type) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::RuntimeType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x73BEA0))(type);
  }
  static inline bool GetEnableUnsafeTypeForwarders() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))();
  }
  static inline bool UnsafeTypeForwardersIsEnabled() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x9643C0))();
  }
  static inline void SerializationSetValue(ModdingAPI::Exposed::System::Reflection::MemberInfo* fi, Il2CppObject* target, Il2CppObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Reflection::MemberInfo*, Il2CppObject*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9644F0))(fi, target, value);
  }
  static inline Il2CppObject* PopulateObjectMembers(Il2CppObject* obj, ModdingAPI::Exposed::System::Reflection::MemberInfo_array* members, ModdingAPI::Exposed::System::Object_array* data) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(Il2CppObject*, ModdingAPI::Exposed::System::Reflection::MemberInfo_array*, ModdingAPI::Exposed::System::Object_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9647B0))(obj, members, data);
  }
  static inline ModdingAPI::Exposed::System::Object_array* GetObjectData(Il2CppObject* obj, ModdingAPI::Exposed::System::Reflection::MemberInfo_array* members) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Object_array*(__fastcall*)(Il2CppObject*, ModdingAPI::Exposed::System::Reflection::MemberInfo_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x964B10))(obj, members);
  }
  static inline ModdingAPI::Exposed::System::Type* GetTypeFromAssembly(ModdingAPI::Exposed::System::Reflection::Assembly* assem, System_String* name) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::Assembly*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x964F00))(assem, name);
  }
  static inline ModdingAPI::Exposed::System::Reflection::Assembly* LoadAssemblyFromString(System_String* assemblyName) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Reflection::Assembly*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x964FE0))(assemblyName);
  }
  static inline ModdingAPI::Exposed::System::Reflection::Assembly* LoadAssemblyFromStringNoThrow(System_String* assemblyName) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Reflection::Assembly*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x964FF0))(assemblyName);
  }
  static inline System_String* GetClrAssemblyName(ModdingAPI::Exposed::System::Type* type, bool hasTypeForwardedFrom) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Type*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9650B0))(type, hasTypeForwardedFrom);
  }
  static inline System_String* GetClrTypeFullName(ModdingAPI::Exposed::System::Type* type) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x965260))(type);
  }
  static inline System_String* GetClrTypeFullNameForArray(ModdingAPI::Exposed::System::Type* type) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x965340))(type);
  }
  static inline System_String* GetClrTypeFullNameForNonArrayTypes(ModdingAPI::Exposed::System::Type* type) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x965630))(type);
  }
};
}