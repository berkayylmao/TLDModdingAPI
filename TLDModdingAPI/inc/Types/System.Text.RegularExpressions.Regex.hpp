// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.TimeSpan.hpp"
#include "ModdingAPI.Exposed.System.Runtime.Serialization.StreamingContext.hpp"
#include "ModdingAPI::Exposed::System::TimeSpan.hpp"


namespace ModdingAPI::Exposed::System::Text::RegularExpressions {
struct __Regex_Il2CppStaticFields {
  ModdingAPI::Exposed::System::TimeSpan MaximumMatchTimeout;
  ModdingAPI::Exposed::System::TimeSpan InfiniteMatchTimeout;
  ModdingAPI::Exposed::System::TimeSpan FallbackDefaultMatchTimeout;
  ModdingAPI::Exposed::System::TimeSpan DefaultMatchTimeout;
  ModdingAPI::Exposed::System::Collections::Generic::LinkedList_T_* livecode;
  int32_t cacheSize;
};

struct __Regex_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_System_Runtime_Serialization_ISerializable_GetObjectData;
};

struct __Regex_Il2CppClass {
  Il2CppClass_1 _1;
  __Regex_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Regex_Il2CppVtbl vtbl;
};

class Regex {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C6D920;
  static inline    Regex* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C6C8C0;
  static inline    __Regex_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline Regex* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (Regex**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __Regex_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__Regex_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __Regex_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  System_String* pattern;
  ModdingAPI::Exposed::System::Text::RegularExpressions::RegexRunnerFactory* factory;
  int32_t roptions;
  ModdingAPI::Exposed::System::TimeSpan internalMatchTimeout;
  ModdingAPI::Exposed::System::Collections::Hashtable* caps;
  ModdingAPI::Exposed::System::Collections::Hashtable* capnames;
  ModdingAPI::Exposed::System::String_array* capslist;
  int32_t capsize;
  ModdingAPI::Exposed::System::Text::RegularExpressions::ExclusiveReference* runnerref;
  ModdingAPI::Exposed::System::Text::RegularExpressions::SharedReference* replref;
  ModdingAPI::Exposed::System::Text::RegularExpressions::RegexCode* code;
  bool refsInitialized;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3A250))(this);
  }
  void ::ctor(System_String* pattern) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3A300))(this, pattern);
  }
  void ::ctor(System_String* pattern, int32_t options) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3A3E0))(this, pattern, options);
  }
  void ::ctor(System_String* pattern, int32_t options, ModdingAPI::Exposed::System::TimeSpan matchTimeout, bool useCache) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*, System_String*, int32_t, ModdingAPI::Exposed::System::TimeSpan, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3A4C0))(this, pattern, options, matchTimeout, useCache);
  }
  void ::ctor(ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo* info, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3AA80))(this, info, context);
  }
  void System::Runtime::Serialization::ISerializable::GetObjectData(ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo* si, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3ABB0))(this, si, context);
  }
  int32_t get_Options() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x37AAE0))(this);
  }
  ModdingAPI::Exposed::System::TimeSpan get_MatchTimeout() {
    return reinterpret_cast<ModdingAPI::Exposed::System::TimeSpan(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110B0))(this);
  }
  bool get_RightToLeft() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3B340))(this);
  }
  System_String* ToString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311320))(this);
  }
  System_String* GroupNameFromNumber(int32_t i) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3B350))(this, i);
  }
  bool IsMatch(System_String* input) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3B850))(this, input);
  }
  bool IsMatch(System_String* input, int32_t startat) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3B9B0))(this, input, startat);
  }
  ModdingAPI::Exposed::System::Text::RegularExpressions::Match* Match(System_String* input) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::RegularExpressions::Match*(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3BD10))(this, input);
  }
  ModdingAPI::Exposed::System::Text::RegularExpressions::Match* Match(System_String* input, int32_t startat) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::RegularExpressions::Match*(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3BDF0))(this, input, startat);
  }
  ModdingAPI::Exposed::System::Text::RegularExpressions::MatchCollection* Matches(System_String* input) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::RegularExpressions::MatchCollection*(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3C1E0))(this, input);
  }
  ModdingAPI::Exposed::System::Text::RegularExpressions::MatchCollection* Matches(System_String* input, int32_t startat) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::RegularExpressions::MatchCollection*(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3C2C0))(this, input, startat);
  }
  System_String* Replace(System_String* input, System_String* replacement) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3C8A0))(this, input, replacement);
  }
  System_String* Replace(System_String* input, System_String* replacement, int32_t count, int32_t startat) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*, System_String*, System_String*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3C990))(this, input, replacement, count, startat);
  }
  void InitializeReferences() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3CC20))(this);
  }
  ModdingAPI::Exposed::System::Text::RegularExpressions::Match* Run(bool quick, int32_t prevlen, System_String* input, int32_t beginning, int32_t length, int32_t startat) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::RegularExpressions::Match*(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*, bool, int32_t, System_String*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3CFA0))(this, quick, prevlen, input, beginning, length, startat);
  }
  ModdingAPI::Exposed::System::Text::RegularExpressions::CachedCodeEntry* CacheCode(System_String* key) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::RegularExpressions::CachedCodeEntry*(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3D810))(this, key);
  }
  bool UseOptionR() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3B340))(this);
  }
  bool UseOptionInvariant() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3DE30))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::TimeSpan> MaximumMatchTimeout = __CppStaticProperty<ModdingAPI::Exposed::System::TimeSpan>(
   []() { return &GetStaticClassInstance()->pStaticFields->MaximumMatchTimeout; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::TimeSpan> InfiniteMatchTimeout = __CppStaticProperty<ModdingAPI::Exposed::System::TimeSpan>(
   []() { return &GetStaticClassInstance()->pStaticFields->InfiniteMatchTimeout; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::TimeSpan> FallbackDefaultMatchTimeout = __CppStaticProperty<ModdingAPI::Exposed::System::TimeSpan>(
   []() { return &GetStaticClassInstance()->pStaticFields->FallbackDefaultMatchTimeout; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::TimeSpan> DefaultMatchTimeout = __CppStaticProperty<ModdingAPI::Exposed::System::TimeSpan>(
   []() { return &GetStaticClassInstance()->pStaticFields->DefaultMatchTimeout; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::LinkedList_T_*> livecode = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::LinkedList_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->livecode; }
  );
  static inline __CppStaticProperty<int32_t> cacheSize = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->cacheSize; }
  );

  // Static methods:
  static inline void ValidateMatchTimeout(ModdingAPI::Exposed::System::TimeSpan matchTimeout) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::TimeSpan)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3ACB0))(matchTimeout);
  }
  static inline ModdingAPI::Exposed::System::TimeSpan InitDefaultMatchTimeout() {
    return reinterpret_cast<ModdingAPI::Exposed::System::TimeSpan(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3AE40))();
  }
  static inline System_String* Escape(System_String* str) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3B270))(str);
  }
  static inline bool IsMatch(System_String* input, System_String* pattern) {
    return reinterpret_cast<bool(__fastcall*)(System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3B510))(input, pattern);
  }
  static inline bool IsMatch(System_String* input, System_String* pattern, int32_t options) {
    return reinterpret_cast<bool(__fastcall*)(System_String*, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3B5E0))(input, pattern, options);
  }
  static inline bool IsMatch(System_String* input, System_String* pattern, int32_t options, ModdingAPI::Exposed::System::TimeSpan matchTimeout) {
    return reinterpret_cast<bool(__fastcall*)(System_String*, System_String*, int32_t, ModdingAPI::Exposed::System::TimeSpan)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3B6C0))(input, pattern, options, matchTimeout);
  }
  static inline ModdingAPI::Exposed::System::Text::RegularExpressions::Match* Match(System_String* input, System_String* pattern) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::RegularExpressions::Match*(__fastcall*)(System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3BAB0))(input, pattern);
  }
  static inline ModdingAPI::Exposed::System::Text::RegularExpressions::Match* Match(System_String* input, System_String* pattern, int32_t options, ModdingAPI::Exposed::System::TimeSpan matchTimeout) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::RegularExpressions::Match*(__fastcall*)(System_String*, System_String*, int32_t, ModdingAPI::Exposed::System::TimeSpan)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3BB80))(input, pattern, options, matchTimeout);
  }
  static inline ModdingAPI::Exposed::System::Text::RegularExpressions::MatchCollection* Matches(System_String* input, System_String* pattern) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::RegularExpressions::MatchCollection*(__fastcall*)(System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3BEE0))(input, pattern);
  }
  static inline ModdingAPI::Exposed::System::Text::RegularExpressions::MatchCollection* Matches(System_String* input, System_String* pattern, int32_t options, ModdingAPI::Exposed::System::TimeSpan matchTimeout) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::RegularExpressions::MatchCollection*(__fastcall*)(System_String*, System_String*, int32_t, ModdingAPI::Exposed::System::TimeSpan)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3BFB0))(input, pattern, options, matchTimeout);
  }
  static inline System_String* Replace(System_String* input, System_String* pattern, System_String* replacement) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3C480))(input, pattern, replacement);
  }
  static inline System_String* Replace(System_String* input, System_String* pattern, System_String* replacement, int32_t options) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*, System_String*, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3C560))(input, pattern, replacement, options);
  }
  static inline System_String* Replace(System_String* input, System_String* pattern, System_String* replacement, int32_t options, ModdingAPI::Exposed::System::TimeSpan matchTimeout) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*, System_String*, System_String*, int32_t, ModdingAPI::Exposed::System::TimeSpan)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3C650))(input, pattern, replacement, options, matchTimeout);
  }
  static inline ModdingAPI::Exposed::System::Text::RegularExpressions::CachedCodeEntry* LookupCachedAndUpdate(System_String* key) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Text::RegularExpressions::CachedCodeEntry*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3D4D0))(key);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xF3DE40))();
  }
};
}