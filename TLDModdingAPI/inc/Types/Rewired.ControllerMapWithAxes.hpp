// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Guid.hpp"
#include "ModdingAPI.Exposed.Rewired.ElementAssignmentConflictCheck.hpp"


namespace ModdingAPI::Exposed::Rewired {
struct __ControllerMapWithAxes_Il2CppStaticFields {
};

struct __ControllerMapWithAxes_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_ContainsAction;
  VirtualInvokeData _5_CreateElementMap;
  VirtualInvokeData _6_ReplaceElementMap;
  VirtualInvokeData _7_DeleteElementMap;
  VirtualInvokeData _8_DeleteElementMapsWithAction;
  VirtualInvokeData _9_DeleteElementMapsWithAction;
  VirtualInvokeData _10_GetElementMap;
  VirtualInvokeData _11_GetFirstElementMapWithAction;
  VirtualInvokeData _12_GetFirstElementMapWithAction;
  VirtualInvokeData _13_GetFirstElementMapWithAction;
  VirtualInvokeData _14_GetFirstElementMapMatch;
  VirtualInvokeData _15_GetElementMapMatches;
  VirtualInvokeData _16_ClearElementMaps;
  VirtualInvokeData _17_DoesElementAssignmentConflict;
  VirtualInvokeData _18_DoesElementAssignmentConflict;
  VirtualInvokeData _19_DoesElementAssignmentConflict;
  VirtualInvokeData _20_ElementAssignmentConflicts;
  VirtualInvokeData _21_ElementAssignmentConflicts;
  VirtualInvokeData _22_ElementAssignmentConflicts;
  VirtualInvokeData _23_RemoveElementAssignmentConflicts;
  VirtualInvokeData _24_RemoveElementAssignmentConflicts;
  VirtualInvokeData _25_RemoveElementAssignmentConflicts;
  VirtualInvokeData _26_DisableElementAssignmentConflicts;
  VirtualInvokeData _27_DisableElementAssignmentConflicts;
  VirtualInvokeData _28_DisableElementAssignmentConflicts;
  VirtualInvokeData _29_AddActionMapping_BeforeBake;
  VirtualInvokeData _30_GetElementMaps_Append;
  VirtualInvokeData _31_GetFirstElementMapWithMapping;
  VirtualInvokeData _32_GetElementMapsWithElementIdentifier;
  VirtualInvokeData _33_ContainsElementMapping;
  VirtualInvokeData _34_FirstIndexOfElementMapping;
  VirtualInvokeData _35_GetElementMapsWithAction;
  VirtualInvokeData _36_GetFirstElementMapWithElementTarget;
  VirtualInvokeData _37_GetElementMapsWithElementTarget;
  VirtualInvokeData _38_AddElementMap;
  VirtualInvokeData _39_Import;
  VirtualInvokeData _40_ExportDataToSerializedObject;
};

struct __ControllerMapWithAxes_Il2CppClass {
  Il2CppClass_1 _1;
  __ControllerMapWithAxes_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __ControllerMapWithAxes_Il2CppVtbl vtbl;
};

class ControllerMapWithAxes {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C7B718;
  static inline    ControllerMapWithAxes* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C621E8;
  static inline    __ControllerMapWithAxes_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline ControllerMapWithAxes* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (ControllerMapWithAxes**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __ControllerMapWithAxes_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__ControllerMapWithAxes_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __ControllerMapWithAxes_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  int32_t _id;
  int32_t _sourceMapId;
  int32_t _categoryId;
  int32_t _layoutId;
  System_String* _name;
  ModdingAPI::Exposed::System::Guid _hardwareGuid;
  bool _enabled;
  int32_t CtWHpgOaCVZYpcBzymhejPsalLW;
  ModdingAPI::Exposed::Rewired::Utils::Classes::Data::AList_T_* ControllerMap_PhdBrdLZLySJwEJoFqgmOZLGADR;
  ModdingAPI::Exposed::System::Collections::ObjectModel::ReadOnlyCollection_T_* ControllerMap_FNIOecSdAwFfXOChNCSBhnNnnbka;
  ModdingAPI::Exposed::Rewired::Utils::Classes::Data::AList_T_* ControllerMap_mftHrujFyOeJxVlVXVfXGxwpxdPc;
  ModdingAPI::Exposed::System::Collections::ObjectModel::ReadOnlyCollection_T_* ControllerMap_gehPVOolHXHNOJfospWSsVoXpahN;
  int32_t _playerId;
  int32_t _controllerId;
  int32_t _controllerType;
  ModdingAPI::Exposed::System::Collections::Generic::IList_T_* NNqBCxMMtMjTQFEaIrybchbdSum;
  ModdingAPI::Exposed::System::Collections::ObjectModel::ReadOnlyCollection_T_* gEpAPaicQRLRrrfLiDcSssZJAmZO;

  // Member methods:
  int32_t get_axisMapCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1A4D0))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IList_T_* get_AxisMaps() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IList_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1A5D0))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1A6C0))(this);
  }
  void ::ctor(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes* controllerMap) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1A940))(this, controllerMap);
  }
  bool ContainsAction(int32_t actionId) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1ADC0))(this, actionId);
  }
  bool CreateElementMap(int32_t actionId, int32_t axisContribution, int32_t elementIdentifierId, int32_t elementType, int32_t axisRange, bool invert, ModdingAPI::Exposed::Rewired::ActionElementMap* result) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t, int32_t, int32_t, int32_t, int32_t, bool, ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1B140))(this, actionId, axisContribution, elementIdentifierId, elementType, axisRange, invert, result);
  }
  bool ReplaceElementMap(int32_t elementMapId, int32_t actionId, int32_t axisContribution, int32_t elementIdentifierId, int32_t elementType, int32_t axisRange, bool invert, ModdingAPI::Exposed::Rewired::ActionElementMap* result) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t, int32_t, int32_t, int32_t, int32_t, int32_t, bool, ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1B3C0))(this, elementMapId, actionId, axisContribution, elementIdentifierId, elementType, axisRange, invert, result);
  }
  bool DeleteElementMap(int32_t elementMapId) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1B660))(this, elementMapId);
  }
  bool DeleteElementMapsWithAction(System_String* actionName) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1B890))(this, actionName);
  }
  bool DeleteElementMapsWithAction(int32_t actionId) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1B9E0))(this, actionId);
  }
  ModdingAPI::Exposed::Rewired::ActionElementMap* GetElementMap(int32_t elementMapId) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ActionElementMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1BAF0))(this, elementMapId);
  }
  ModdingAPI::Exposed::Rewired::ActionElementMap* GetFirstElementMapWithAction(int32_t actionId) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ActionElementMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x824CF0))(this, actionId);
  }
  ModdingAPI::Exposed::Rewired::ActionElementMap* GetFirstElementMapWithAction(int32_t actionId, bool skipDisabledMaps) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ActionElementMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1BDD0))(this, actionId, skipDisabledMaps);
  }
  ModdingAPI::Exposed::Rewired::ActionElementMap* GetFirstElementMapMatch(ModdingAPI::Exposed::System::Predicate_T_* , bool ) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ActionElementMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::System::Predicate_T_*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1C060))(this, , );
  }
  int32_t GetElementMapMatches(ModdingAPI::Exposed::System::Predicate_T_* , bool , ModdingAPI::Exposed::System::Collections::Generic::List_T_* , bool ) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::System::Predicate_T_*, bool, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1C0B0))(this, , , , );
  }
  void ClearElementMaps() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1C130))(this);
  }
  ModdingAPI::Exposed::Rewired::ActionElementMap* GetAxisMap(int32_t index) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ActionElementMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1C240))(this, index);
  }
  ModdingAPI::Exposed::Rewired::ActionElementMap_array* GetAxisMaps() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ActionElementMap_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1C410))(this);
  }
  ModdingAPI::Exposed::Rewired::ActionElementMap_array* GetAxisMaps(bool skipDisabledMaps) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ActionElementMap_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1C510))(this, skipDisabledMaps);
  }
  int32_t GetAxisMaps(bool skipDisabledMaps, ModdingAPI::Exposed::System::Collections::Generic::List_T_* results) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, bool, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1C8C0))(this, skipDisabledMaps, results);
  }
  ModdingAPI::Exposed::Rewired::ActionElementMap_array* GetAxisMapsWithAction(System_String* actionName) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ActionElementMap_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1C9D0))(this, actionName);
  }
  ModdingAPI::Exposed::Rewired::ActionElementMap_array* GetAxisMapsWithAction(int32_t actionId) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ActionElementMap_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1CB20))(this, actionId);
  }
  ModdingAPI::Exposed::Rewired::ActionElementMap_array* GetAxisMapsWithAction(System_String* actionName, bool skipDisabledMaps) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ActionElementMap_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, System_String*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1CB30))(this, actionName, skipDisabledMaps);
  }
  ModdingAPI::Exposed::Rewired::ActionElementMap_array* GetAxisMapsWithAction(int32_t actionId, bool skipDisabledMaps) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ActionElementMap_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1CC80))(this, actionId, skipDisabledMaps);
  }
  int32_t GetAxisMapsWithAction(System_String* actionName, ModdingAPI::Exposed::System::Collections::Generic::List_T_* results) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, System_String*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1D120))(this, actionName, results);
  }
  int32_t GetAxisMapsWithAction(int32_t actionId, ModdingAPI::Exposed::System::Collections::Generic::List_T_* results) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1D290))(this, actionId, results);
  }
  int32_t GetAxisMapsWithAction(System_String* actionName, bool skipDisabledMaps, ModdingAPI::Exposed::System::Collections::Generic::List_T_* results) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, System_String*, bool, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1D2B0))(this, actionName, skipDisabledMaps, results);
  }
  int32_t GetAxisMapsWithAction(int32_t actionId, bool skipDisabledMaps, ModdingAPI::Exposed::System::Collections::Generic::List_T_* results) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t, bool, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1D420))(this, actionId, skipDisabledMaps, results);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* AxisMapsWithAction(System_String* actionName) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1D540))(this, actionName);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* AxisMapsWithAction(int32_t actionId) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1D6B0))(this, actionId);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* AxisMapsWithAction(System_String* actionName, bool skipDisabledMaps) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, System_String*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1D6C0))(this, actionName, skipDisabledMaps);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* AxisMapsWithAction(int32_t actionId, bool skipDisabledMaps) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1D7B0))(this, actionId, skipDisabledMaps);
  }
  ModdingAPI::Exposed::Rewired::ActionElementMap* GetFirstAxisMapWithAction(int32_t actionId) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ActionElementMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1D960))(this, actionId);
  }
  ModdingAPI::Exposed::Rewired::ActionElementMap* GetFirstAxisMapWithAction(System_String* actionName) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ActionElementMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1DA60))(this, actionName);
  }
  ModdingAPI::Exposed::Rewired::ActionElementMap* GetFirstAxisMapWithAction(int32_t actionId, bool skipDisabledMaps) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ActionElementMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1DC90))(this, actionId, skipDisabledMaps);
  }
  ModdingAPI::Exposed::Rewired::ActionElementMap* GetFirstAxisMapWithAction(System_String* actionName, bool skipDisabledMaps) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ActionElementMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, System_String*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1DF30))(this, actionName, skipDisabledMaps);
  }
  ModdingAPI::Exposed::Rewired::ActionElementMap* GetFirstAxisMapMatch(ModdingAPI::Exposed::System::Predicate_T_* predicate) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ActionElementMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::System::Predicate_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1E070))(this, predicate);
  }
  ModdingAPI::Exposed::Rewired::ActionElementMap* cFxJNYuFyQFUfvNCzRgOQGTWrqw(ModdingAPI::Exposed::System::Predicate_T_* , bool ) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ActionElementMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::System::Predicate_T_*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1E170))(this, , );
  }
  int32_t GetAxisMapMatches(ModdingAPI::Exposed::System::Predicate_T_* predicate, ModdingAPI::Exposed::System::Collections::Generic::List_T_* results) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::System::Predicate_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1E3C0))(this, predicate, results);
  }
  int32_t qejexugQjhEIAXHHrgqseYBOBRX(ModdingAPI::Exposed::System::Predicate_T_* , bool , ModdingAPI::Exposed::System::Collections::Generic::List_T_* , bool ) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::System::Predicate_T_*, bool, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1E4E0))(this, , , , );
  }
  void ForEachAxisMapMatch(ModdingAPI::Exposed::System::Predicate_T_* predicate, ModdingAPI::Exposed::System::Action_T_* actionToPerform) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::System::Predicate_T_*, ModdingAPI::Exposed::System::Action_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1E840))(this, predicate, actionToPerform);
  }
  bool DeleteAxisMapsWithAction(System_String* actionName) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1EAD0))(this, actionName);
  }
  bool DeleteAxisMapsWithAction(int32_t actionId) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1EBB0))(this, actionId);
  }
  int32_t SetAllAxisMapsEnabled(bool state) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1EDF0))(this, state);
  }
  bool DoesElementAssignmentConflict(ModdingAPI::Exposed::Rewired::ControllerMap* controllerMap, bool skipDisabledMaps) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::ControllerMap*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1F030))(this, controllerMap, skipDisabledMaps);
  }
  bool DoesElementAssignmentConflict(ModdingAPI::Exposed::Rewired::ActionElementMap* actionElementMap, bool skipDisabledMaps) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::ActionElementMap*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1F490))(this, actionElementMap, skipDisabledMaps);
  }
  bool DoesElementAssignmentConflict(ModdingAPI::Exposed::Rewired::ElementAssignmentConflictCheck conflictCheck, bool skipDisabledMaps) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::ElementAssignmentConflictCheck, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1F7D0))(this, conflictCheck, skipDisabledMaps);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* ElementAssignmentConflicts(ModdingAPI::Exposed::Rewired::ControllerMap* controllerMap, bool skipDisabledMaps) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::ControllerMap*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1FBA0))(this, controllerMap, skipDisabledMaps);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* ElementAssignmentConflicts(ModdingAPI::Exposed::Rewired::ActionElementMap* actionElementMap, bool skipDisabledMaps) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::ActionElementMap*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1FD50))(this, actionElementMap, skipDisabledMaps);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* ElementAssignmentConflicts(ModdingAPI::Exposed::Rewired::ElementAssignmentConflictCheck conflictCheck, bool skipDisabledMaps) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::ElementAssignmentConflictCheck, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE1FF00))(this, conflictCheck, skipDisabledMaps);
  }
  int32_t RemoveElementAssignmentConflicts(ModdingAPI::Exposed::Rewired::ControllerMap* controllerMap, bool skipDisabledMaps) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::ControllerMap*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE200E0))(this, controllerMap, skipDisabledMaps);
  }
  int32_t RemoveElementAssignmentConflicts(ModdingAPI::Exposed::Rewired::ActionElementMap* actionElementMap, bool skipDisabledMaps) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::ActionElementMap*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE20670))(this, actionElementMap, skipDisabledMaps);
  }
  int32_t RemoveElementAssignmentConflicts(ModdingAPI::Exposed::Rewired::ElementAssignmentConflictCheck conflictCheck, bool skipDisabledMaps) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::ElementAssignmentConflictCheck, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE209C0))(this, conflictCheck, skipDisabledMaps);
  }
  int32_t DisableElementAssignmentConflicts(ModdingAPI::Exposed::Rewired::ControllerMap* , bool , ModdingAPI::Exposed::System::Collections::Generic::List_T_* , bool ) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::ControllerMap*, bool, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE20E80))(this, , , , );
  }
  int32_t DisableElementAssignmentConflicts(ModdingAPI::Exposed::Rewired::ActionElementMap* , bool , ModdingAPI::Exposed::System::Collections::Generic::List_T_* , bool ) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::ActionElementMap*, bool, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE21410))(this, , , , );
  }
  int32_t DisableElementAssignmentConflicts(ModdingAPI::Exposed::Rewired::ElementAssignmentConflictCheck , bool , ModdingAPI::Exposed::System::Collections::Generic::List_T_* , bool ) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::ElementAssignmentConflictCheck, bool, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE216F0))(this, , , , );
  }
  ModdingAPI::Exposed::System::String_array* GetAxisNames() {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE21B80))(this);
  }
  ModdingAPI::Exposed::Rewired::Utils::Classes::Data::AList_T_* get_AxisMaps_orig() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Utils::Classes::Data::AList_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE21DF0))(this);
  }
  bool AddActionMapping_BeforeBake(ModdingAPI::Exposed::Rewired::ActionElementMap* ) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE21EC0))(this, );
  }
  int32_t GetElementMaps_Append(ModdingAPI::Exposed::System::Collections::Generic::List_T_* , bool ) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE21F60))(this, , );
  }
  ModdingAPI::Exposed::Rewired::ActionElementMap* GetFirstElementMapWithMapping(int32_t , int32_t , int32_t ) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ActionElementMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE222B0))(this, , , );
  }
  int32_t GetElementMapsWithElementIdentifier(int32_t , ModdingAPI::Exposed::System::Collections::Generic::List_T_* , bool ) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE22440))(this, , , );
  }
  bool ContainsElementMapping(int32_t , int32_t , int32_t ) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE22630))(this, , , );
  }
  int32_t FirstIndexOfElementMapping(int32_t , int32_t , int32_t ) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE229F0))(this, , , );
  }
  int32_t ZSpTLKqkEWsgxNyimTQtqsgocUs(int32_t ) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE22E60))(this, );
  }
  int32_t WndCtlfQrtVgrFKlDLXgWSUTAsR(bool , ModdingAPI::Exposed::System::Collections::Generic::List_T_* , bool ) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, bool, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE23010))(this, , , );
  }
  int32_t DtbkxBRcTleqbDJPjUHPAoXpdKA(int32_t , bool , ModdingAPI::Exposed::System::Collections::Generic::List_T_* , bool ) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t, bool, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE232D0))(this, , , , );
  }
  int32_t GetElementMapsWithAction(int32_t , bool , ModdingAPI::Exposed::System::Collections::Generic::List_T_* , bool ) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t, bool, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE23570))(this, , , , );
  }
  ModdingAPI::Exposed::Rewired::ActionElementMap* GetFirstElementMapWithElementTarget(ModdingAPI::Exposed::Rewired::IControllerElementTarget* , bool , int32_t , bool , bool ) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ActionElementMap*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::IControllerElementTarget*, bool, int32_t, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE23750))(this, , , , , );
  }
  int32_t GetElementMapsWithElementTarget(ModdingAPI::Exposed::Rewired::IControllerElementTarget* , bool , int32_t , bool , ModdingAPI::Exposed::System::Collections::Generic::List_T_* , bool , bool ) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::IControllerElementTarget*, bool, int32_t, bool, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE23BE0))(this, , , , , , , );
  }
  bool AddElementMap(ModdingAPI::Exposed::Rewired::ActionElementMap* ) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE24180))(this, );
  }
  bool yZuwpJHUgsIfSPTIoYGAXEJkMZa(int32_t ) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE242F0))(this, );
  }
  void fmFbBtOOXgCEeylzPgIlRrAPUdq(int32_t , int32_t ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE24300))(this, , );
  }
  void JWsFOMvKswiESkREaWJDScVWAaQ(ModdingAPI::Exposed::Rewired::ActionElementMap* ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::ActionElementMap*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE244A0))(this, );
  }
  void EUwdYLxNIOpQWYodpYiWgsSmXPq(ModdingAPI::Exposed::Rewired::ActionElementMap* , int32_t ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::ActionElementMap*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE24580))(this, , );
  }
  void ExportDataToSerializedObject(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::SerializedObject* ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::Utils::Classes::Data::SerializedObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE247E0))(this, );
  }
  bool Import(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::SerializedObject* ) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::Utils::Classes::Data::SerializedObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE24B60))(this, );
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* LnJsQHZiFEvgiZiMVsQDAPvmBlY(ModdingAPI::Exposed::Rewired::ControllerMap* , bool ) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::ControllerMap*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE24EF0))(this, , );
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* kDFzvvoHmXDjuRSdYuONguNKTmo(ModdingAPI::Exposed::Rewired::ActionElementMap* , bool ) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::ActionElementMap*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE24F00))(this, , );
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* uIkUVszdeistWVBvncfTEeqiOBKJ(ModdingAPI::Exposed::Rewired::ElementAssignmentConflictCheck , bool ) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::ControllerMapWithAxes*, ModdingAPI::Exposed::Rewired::ElementAssignmentConflictCheck, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE24F10))(this, , );
  }
};
}