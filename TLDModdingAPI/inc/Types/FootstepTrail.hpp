// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"


namespace ModdingAPI::Exposed {
struct __FootstepTrail_Il2CppStaticFields {
  ModdingAPI::Exposed::FootstepTrailSaveDataProxy* m_FootstepTrailSaveDataProxy;
  ModdingAPI::Exposed::FootstepGroupSaveDataProxy* m_FootstepGroupSaveDataProxy;
};

struct __FootstepTrail_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __FootstepTrail_Il2CppClass {
  Il2CppClass_1 _1;
  __FootstepTrail_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __FootstepTrail_Il2CppVtbl vtbl;
};

class FootstepTrail {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C2BA18;
  static inline    __FootstepTrail_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __FootstepTrail_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__FootstepTrail_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __FootstepTrail_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  bool m_IsOpen;
  int32_t m_TrailType;
  int32_t m_ImprintType;
  ModdingAPI::Exposed::SnowImprintDef* m_ImprintDef;
  ModdingAPI::Exposed::SnowImprintQualitySettings* m_ImprintQualityDef;
  ModdingAPI::Exposed::System::Collections::Generic::Stack_T_* m_FootstepFreeBlocks;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_FootstepGroups;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_Footsteps;
  bool m_RequireFadeIn;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_FadingInBasePos;
  bool m_FadingIn;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_SnowDepthTriggerRecords;
  float m_LastFootprintDepthFrac;
  float m_LastFootprintDepth;

  // Member methods:
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* get_Footsteps() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319960))(this);
  }
  int32_t get_NumGroups() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15E7430))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void ::ctor(int32_t trailType, int32_t imprintType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15E74C0))(this, trailType, imprintType);
  }
  void Initialize(int32_t trailType, int32_t imprintType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15E74D0))(this, trailType, imprintType);
  }
  void ::ctor(ModdingAPI::Exposed::FootstepTrailSaveDataProxy* sdp) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*, ModdingAPI::Exposed::FootstepTrailSaveDataProxy*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD1BB0))(this, sdp);
  }
  void Reset() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15E7970))(this);
  }
  void Destroy() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15E7A80))(this);
  }
  void Close() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15E7A90))(this);
  }
  void OnQualityChange(int32_t quality) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15E7B60))(this, quality);
  }
  bool ProcessPurge(int32_t currCaptureTick, float currSnowDepth) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15E7DB0))(this, currCaptureTick, currSnowDepth);
  }
  void OnOwnerEnterSnowDepthTrigger(ModdingAPI::Exposed::SnowDepth* sd) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*, ModdingAPI::Exposed::SnowDepth*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15E7EF0))(this, sd);
  }
  void OnOwnerExitSnowDepthTrigger(ModdingAPI::Exposed::SnowDepth* sd) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*, ModdingAPI::Exposed::SnowDepth*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15E8500))(this, sd);
  }
  void AddFootstep(ModdingAPI::Exposed::UnityEngine::Vector3 ownerPos, ModdingAPI::Exposed::UnityEngine::Vector3 pos, ModdingAPI::Exposed::UnityEngine::Vector3 groundNormal, float yRotation, bool flip, int32_t variantIndex, float forceDeepFrac) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, float, bool, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15E8660))(this, ownerPos, pos, groundNormal, yRotation, flip, variantIndex, forceDeepFrac);
  }
  void FadeFootprintsAtTrailEnd(bool atStart) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15E8EA0))(this, atStart);
  }
  float GetFootprintDepth(ModdingAPI::Exposed::UnityEngine::Vector3 pos, ModdingAPI::Exposed::UnityEngine::Vector3 groundNormal, float forceDeepFrac) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15E95A0))(this, pos, groundNormal, forceDeepFrac);
  }
  ModdingAPI::Exposed::FootstepGroup* GetOpenFootstepGroup() {
    return reinterpret_cast<ModdingAPI::Exposed::FootstepGroup*(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15E9990))(this);
  }
  int32_t ReserveFootstepBlock() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15E9A50))(this);
  }
  void ReturnFootstepBlock(int32_t baseIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15E9C10))(this, baseIndex);
  }
  void RemoveFootstepGroup(ModdingAPI::Exposed::FootstepGroup* fg) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*, ModdingAPI::Exposed::FootstepGroup*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15E9D40))(this, fg);
  }
  System_String* Serialize() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15E9DE0))(this);
  }
  void Deserialize(System_String* text) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15EA250))(this, text);
  }
  void AdjustSnowDepthRecords(float baseDepth) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15EA610))(this, baseDepth);
  }
  int32_t GetNumFootsteps() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15EA710))(this);
  }
  bool IsVisible() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::FootstepTrail*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15EA7E0))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::FootstepTrailSaveDataProxy*> m_FootstepTrailSaveDataProxy = __CppStaticProperty<ModdingAPI::Exposed::FootstepTrailSaveDataProxy*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_FootstepTrailSaveDataProxy; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::FootstepGroupSaveDataProxy*> m_FootstepGroupSaveDataProxy = __CppStaticProperty<ModdingAPI::Exposed::FootstepGroupSaveDataProxy*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_FootstepGroupSaveDataProxy; }
  );

  // Static methods:
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x15EA8C0))();
  }
};
}