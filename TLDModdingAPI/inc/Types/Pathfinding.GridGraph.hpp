// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Matrix4x4.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Bounds.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Quaternion.hpp"
#include "ModdingAPI.Exposed.Pathfinding.Int3.hpp"
#include "ModdingAPI.Exposed.Pathfinding.NNInfo.hpp"
#include "ModdingAPI.Exposed.Pathfinding.GraphHitInfo.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Bounds.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Matrix4x4.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Vector3.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Vector2.hpp"


namespace ModdingAPI::Exposed::Pathfinding {
struct __GridGraph_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Int32_array* hexagonNeighbourIndices;
};

struct __GridGraph_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_CountNodes;
  VirtualInvokeData _5_GetNodes;
  VirtualInvokeData _6_RelocateNodes;
  VirtualInvokeData _7_GetNearest;
  VirtualInvokeData _8_GetNearestForce;
  VirtualInvokeData _9_Awake;
  VirtualInvokeData _10_OnDestroy;
  VirtualInvokeData _11_ScanInternal;
  VirtualInvokeData _12_NodeColor;
  VirtualInvokeData _13_SerializeExtraInfo;
  VirtualInvokeData _14_DeserializeExtraInfo;
  VirtualInvokeData _15_PostDeserialization;
  VirtualInvokeData _16_SerializeSettings;
  VirtualInvokeData _17_DeserializeSettings;
  VirtualInvokeData _18_OnDrawGizmos;
  VirtualInvokeData _19_UnloadGizmoMeshes;
  VirtualInvokeData _20_UpdateArea;
  VirtualInvokeData _21_UpdateAreaInit;
  VirtualInvokeData _22_CanUpdateAsync;
  VirtualInvokeData _23_Linecast;
  VirtualInvokeData _24_Linecast;
  VirtualInvokeData _25_Linecast;
  VirtualInvokeData _26_Linecast;
  VirtualInvokeData _27_get_uniformWidthDepthGrid;
  VirtualInvokeData _28_SetUpOffsetsAndCosts;
  VirtualInvokeData _29_UpdateNodePositionCollision;
  VirtualInvokeData _30_ErodeWalkableArea;
  VirtualInvokeData _31_ErodeWalkableArea;
  VirtualInvokeData _32_IsValidConnection;
  VirtualInvokeData _33_CalculateConnections;
  VirtualInvokeData _34_CalculateConnections;
  VirtualInvokeData _35_GetNeighbourAlongDirection;
};

struct __GridGraph_Il2CppClass {
  Il2CppClass_1 _1;
  __GridGraph_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __GridGraph_Il2CppVtbl vtbl;
};

class GridGraph {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C6E010;
  static inline    GridGraph* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C74210;
  static inline    __GridGraph_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline GridGraph* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (GridGraph**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __GridGraph_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__GridGraph_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __GridGraph_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::System::Byte_array* _sguid;
  ModdingAPI::Exposed::AstarPath* active;
  uint32_t initialPenalty;
  bool open;
  uint32_t graphIndex;
  System_String* name;
  bool drawGizmos;
  bool infoScreenOpen;
  ModdingAPI::Exposed::UnityEngine::Matrix4x4 matrix;
  ModdingAPI::Exposed::UnityEngine::Matrix4x4 inverseMatrix;
  int32_t width;
  int32_t depth;
  float aspectRatio;
  float isometricAngle;
  bool uniformEdgeCosts;
  ModdingAPI::Exposed::UnityEngine::Vector3 rotation;
  ModdingAPI::Exposed::UnityEngine::Bounds bounds;
  ModdingAPI::Exposed::UnityEngine::Vector3 center;
  ModdingAPI::Exposed::UnityEngine::Vector2 unclampedSize;
  float nodeSize;
  ModdingAPI::Exposed::Pathfinding::GraphCollision* collision;
  float maxClimb;
  int32_t maxClimbAxis;
  float maxSlope;
  int32_t erodeIterations;
  bool erosionUseTags;
  int32_t erosionFirstTag;
  bool autoLinkGrids;
  float autoLinkDistLimit;
  int32_t neighbours;
  bool cutCorners;
  float penaltyPositionOffset;
  bool penaltyPosition;
  float penaltyPositionFactor;
  bool penaltyAngle;
  float penaltyAngleFactor;
  float penaltyAnglePower;
  bool useJumpPointSearch;
  ModdingAPI::Exposed::Pathfinding::GridGraph::TextureData* textureData;
  ModdingAPI::Exposed::UnityEngine::Vector2 _size_k__BackingField;
  ModdingAPI::Exposed::System::Int32_array* neighbourOffsets;
  ModdingAPI::Exposed::System::UInt32_array* neighbourCosts;
  ModdingAPI::Exposed::System::Int32_array* neighbourXOffsets;
  ModdingAPI::Exposed::System::Int32_array* neighbourZOffsets;
  ModdingAPI::Exposed::UnityEngine::Matrix4x4 _boundsMatrix_k__BackingField;
  ModdingAPI::Exposed::Pathfinding::GridNode_array* nodes;

  // Member methods:
  void OnDestroy() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BB0D0))(this);
  }
  void RemoveGridGraphFromStatic() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BB1D0))(this);
  }
  bool get_uniformWidthDepthGrid() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x403F70))(this);
  }
  int32_t CountNodes() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BB2D0))(this);
  }
  void GetNodes(ModdingAPI::Exposed::Pathfinding::GraphNodeDelegateCancelable* del) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::Pathfinding::GraphNodeDelegateCancelable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BB2F0))(this, del);
  }
  bool get_useRaycastNormal() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BB3A0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 get_size() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BB470))(this);
  }
  void set_size(ModdingAPI::Exposed::UnityEngine::Vector2 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BB490))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Matrix4x4 get_boundsMatrix() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Matrix4x4(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BB4C0))(this);
  }
  void set_boundsMatrix(ModdingAPI::Exposed::UnityEngine::Matrix4x4 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::UnityEngine::Matrix4x4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BB4F0))(this, value);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BB520))(this);
  }
  void RelocateNodes(ModdingAPI::Exposed::UnityEngine::Vector3 center, ModdingAPI::Exposed::UnityEngine::Quaternion rotation, float nodeSize, float aspectRatio, float isometricAngle) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Quaternion, float, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BB8E0))(this, center, rotation, nodeSize, aspectRatio, isometricAngle);
  }
  ModdingAPI::Exposed::Pathfinding::Int3 GraphPointToWorld(int32_t x, int32_t z, float height) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::Int3(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, int32_t, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BBAF0))(this, x, z, height);
  }
  int32_t get_Width() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x307740))(this);
  }
  void set_Width(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x874230))(this, value);
  }
  int32_t get_Depth() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xA85020))(this);
  }
  void set_Depth(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BBC90))(this, value);
  }
  uint32_t GetConnectionCost(int32_t dir) {
    return reinterpret_cast<uint32_t(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BBCA0))(this, dir);
  }
  ModdingAPI::Exposed::Pathfinding::GridNode* GetNodeConnection(ModdingAPI::Exposed::Pathfinding::GridNode* node, int32_t dir) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::GridNode*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::Pathfinding::GridNode*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BBCE0))(this, node, dir);
  }
  bool HasNodeConnection(ModdingAPI::Exposed::Pathfinding::GridNode* node, int32_t dir) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::Pathfinding::GridNode*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BBDE0))(this, node, dir);
  }
  void SetNodeConnection(ModdingAPI::Exposed::Pathfinding::GridNode* node, int32_t dir, bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::Pathfinding::GridNode*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BBF50))(this, node, dir, value);
  }
  ModdingAPI::Exposed::Pathfinding::GridNode* GetNodeConnection(int32_t index, int32_t x, int32_t z, int32_t dir) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::GridNode*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BBFD0))(this, index, x, z, dir);
  }
  void SetNodeConnection(int32_t index, int32_t x, int32_t z, int32_t dir, bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, int32_t, int32_t, int32_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BC150))(this, index, x, z, dir, value);
  }
  bool HasNodeConnection(int32_t index, int32_t x, int32_t z, int32_t dir) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BC1D0))(this, index, x, z, dir);
  }
  void UpdateSizeFromWidthDepth() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BC2D0))(this);
  }
  void GenerateMatrix() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BC3D0))(this);
  }
  ModdingAPI::Exposed::Pathfinding::NNInfo GetNearest(ModdingAPI::Exposed::UnityEngine::Vector3 position, ModdingAPI::Exposed::Pathfinding::NNConstraint* constraint, ModdingAPI::Exposed::Pathfinding::GraphNode* hint) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::NNInfo(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::Pathfinding::NNConstraint*, ModdingAPI::Exposed::Pathfinding::GraphNode*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BD0A0))(this, position, constraint, hint);
  }
  ModdingAPI::Exposed::Pathfinding::NNInfo GetNearestForce(ModdingAPI::Exposed::UnityEngine::Vector3 position, ModdingAPI::Exposed::Pathfinding::NNConstraint* constraint) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::NNInfo(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::Pathfinding::NNConstraint*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BD4D0))(this, position, constraint);
  }
  void SetUpOffsetsAndCosts() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BEA80))(this);
  }
  void ScanInternal(ModdingAPI::Exposed::OnScanStatus* statusCallback) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::OnScanStatus*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BF280))(this, statusCallback);
  }
  void UpdateNodePositionCollision(ModdingAPI::Exposed::Pathfinding::GridNode* node, int32_t x, int32_t z, bool resetPenalty) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::Pathfinding::GridNode*, int32_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26BFAF0))(this, node, x, z, resetPenalty);
  }
  void ErodeWalkableArea() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C00B0))(this);
  }
  bool ErosionAnyFalseConnections(ModdingAPI::Exposed::Pathfinding::GridNode* node) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::Pathfinding::GridNode*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C00F0))(this, node);
  }
  void ErodeWalkableArea(int32_t xmin, int32_t zmin, int32_t xmax, int32_t zmax) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C0250))(this, xmin, zmin, xmax, zmax);
  }
  bool IsValidConnection(ModdingAPI::Exposed::Pathfinding::GridNode* n1, ModdingAPI::Exposed::Pathfinding::GridNode* n2) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::Pathfinding::GridNode*, ModdingAPI::Exposed::Pathfinding::GridNode*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C0A20))(this, n1, n2);
  }
  void CalculateConnections(ModdingAPI::Exposed::Pathfinding::GridNode_array* nodes, int32_t x, int32_t z, ModdingAPI::Exposed::Pathfinding::GridNode* node) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::Pathfinding::GridNode_array*, int32_t, int32_t, ModdingAPI::Exposed::Pathfinding::GridNode*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C0C90))(this, nodes, x, z, node);
  }
  void CalculateConnections(int32_t x, int32_t z, ModdingAPI::Exposed::Pathfinding::GridNode* node) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, int32_t, int32_t, ModdingAPI::Exposed::Pathfinding::GridNode*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C0CC0))(this, x, z, node);
  }
  void OnPostScan(ModdingAPI::Exposed::AstarPath* script) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::AstarPath*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C13B0))(this, script);
  }
  void OnDrawGizmos(bool drawNodes) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C15C0))(this, drawNodes);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* GetNodesInArea(ModdingAPI::Exposed::UnityEngine::Bounds b) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::UnityEngine::Bounds)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C2BC0))(this, b);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* GetNodesInArea(ModdingAPI::Exposed::Pathfinding::GraphUpdateShape* shape) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::Pathfinding::GraphUpdateShape*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C2BF0))(this, shape);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* GetNodesInArea(ModdingAPI::Exposed::UnityEngine::Bounds b, ModdingAPI::Exposed::Pathfinding::GraphUpdateShape* shape) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::UnityEngine::Bounds, ModdingAPI::Exposed::Pathfinding::GraphUpdateShape*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C2C50))(this, b, shape);
  }
  int32_t CanUpdateAsync(ModdingAPI::Exposed::Pathfinding::GraphUpdateObject* o) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::Pathfinding::GraphUpdateObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, o);
  }
  void UpdateAreaInit(ModdingAPI::Exposed::Pathfinding::GraphUpdateObject* o) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::Pathfinding::GraphUpdateObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, o);
  }
  void UpdateArea(ModdingAPI::Exposed::Pathfinding::GraphUpdateObject* o) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::Pathfinding::GraphUpdateObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C3150))(this, o);
  }
  bool Linecast(ModdingAPI::Exposed::UnityEngine::Vector3 _a, ModdingAPI::Exposed::UnityEngine::Vector3 _b) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C4340))(this, _a, _b);
  }
  bool Linecast(ModdingAPI::Exposed::UnityEngine::Vector3 _a, ModdingAPI::Exposed::UnityEngine::Vector3 _b, ModdingAPI::Exposed::Pathfinding::GraphNode* hint) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::Pathfinding::GraphNode*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C43C0))(this, _a, _b, hint);
  }
  bool Linecast(ModdingAPI::Exposed::UnityEngine::Vector3 _a, ModdingAPI::Exposed::UnityEngine::Vector3 _b, ModdingAPI::Exposed::Pathfinding::GraphNode* hint, ModdingAPI::Exposed::Pathfinding::GraphHitInfo hit) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::Pathfinding::GraphNode*, ModdingAPI::Exposed::Pathfinding::GraphHitInfo)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C4440))(this, _a, _b, hint, hit);
  }
  ModdingAPI::Exposed::Pathfinding::GridNodeBase* GetNeighbourAlongDirection(ModdingAPI::Exposed::Pathfinding::GridNodeBase* node, int32_t direction) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::GridNodeBase*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::Pathfinding::GridNodeBase*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C44A0))(this, node, direction);
  }
  bool ClipLineSegmentToBounds(ModdingAPI::Exposed::UnityEngine::Vector3 a, ModdingAPI::Exposed::UnityEngine::Vector3 b, ModdingAPI::Exposed::UnityEngine::Vector3 outA, ModdingAPI::Exposed::UnityEngine::Vector3 outB) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C4600))(this, a, b, outA, outB);
  }
  bool Linecast(ModdingAPI::Exposed::UnityEngine::Vector3 _a, ModdingAPI::Exposed::UnityEngine::Vector3 _b, ModdingAPI::Exposed::Pathfinding::GraphNode* hint, ModdingAPI::Exposed::Pathfinding::GraphHitInfo hit, ModdingAPI::Exposed::System::Collections::Generic::List_T_* trace) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::Pathfinding::GraphNode*, ModdingAPI::Exposed::Pathfinding::GraphHitInfo, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C4BC0))(this, _a, _b, hint, hit, trace);
  }
  bool SnappedLinecast(ModdingAPI::Exposed::UnityEngine::Vector3 a, ModdingAPI::Exposed::UnityEngine::Vector3 b, ModdingAPI::Exposed::Pathfinding::GraphNode* hint, ModdingAPI::Exposed::Pathfinding::GraphHitInfo hit) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::Pathfinding::GraphNode*, ModdingAPI::Exposed::Pathfinding::GraphHitInfo)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C59B0))(this, a, b, hint, hit);
  }
  bool CheckConnection(ModdingAPI::Exposed::Pathfinding::GridNode* node, int32_t dir) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::Pathfinding::GridNode*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C5C00))(this, node, dir);
  }
  void SerializeExtraInfo(ModdingAPI::Exposed::Pathfinding::Serialization::GraphSerializationContext* ctx) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::Pathfinding::Serialization::GraphSerializationContext*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C5DE0))(this, ctx);
  }
  void DeserializeExtraInfo(ModdingAPI::Exposed::Pathfinding::Serialization::GraphSerializationContext* ctx) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::Pathfinding::Serialization::GraphSerializationContext*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C5F10))(this, ctx);
  }
  void SerializeSettings(ModdingAPI::Exposed::Pathfinding::Serialization::GraphSerializationContext* ctx) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::Pathfinding::Serialization::GraphSerializationContext*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C6240))(this, ctx);
  }
  void DeserializeSettings(ModdingAPI::Exposed::Pathfinding::Serialization::GraphSerializationContext* ctx) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*, ModdingAPI::Exposed::Pathfinding::Serialization::GraphSerializationContext*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C66E0))(this, ctx);
  }
  void PostDeserialization() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C6C80))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Int32_array*> hexagonNeighbourIndices = __CppStaticProperty<ModdingAPI::Exposed::System::Int32_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->hexagonNeighbourIndices; }
  );

  // Static methods:
  static inline void CalculateConnections(ModdingAPI::Exposed::Pathfinding::GridNode* node) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GridNode*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C0B90))(node);
  }
  static inline void GetBoundsMinMax(ModdingAPI::Exposed::UnityEngine::Bounds b, ModdingAPI::Exposed::UnityEngine::Matrix4x4 matrix, ModdingAPI::Exposed::UnityEngine::Vector3 min, ModdingAPI::Exposed::UnityEngine::Vector3 max) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Bounds, ModdingAPI::Exposed::UnityEngine::Matrix4x4, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C1F20))(b, matrix, min, max);
  }
  static inline float CrossMagnitude(ModdingAPI::Exposed::UnityEngine::Vector2 a, ModdingAPI::Exposed::UnityEngine::Vector2 b) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector2, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCD2950))(a, b);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x26C6EF0))();
  }
};
}