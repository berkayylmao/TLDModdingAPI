// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Runtime.Serialization.StreamingContext.hpp"


namespace ModdingAPI::Exposed::System::Runtime::Remoting::Messaging {
struct __ConstructionCall_Il2CppStaticFields {
};

struct __ConstructionCall_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_get_ArgCount;
  VirtualInvokeData _5_get_Args;
  VirtualInvokeData _6_get_LogicalCallContext;
  VirtualInvokeData _7_get_MethodBase;
  VirtualInvokeData _8_get_MethodName;
  VirtualInvokeData _9_get_MethodSignature;
  VirtualInvokeData _10_get_TypeName;
  VirtualInvokeData _11_get_Uri;
  VirtualInvokeData _12_GetArg;
  VirtualInvokeData _15_System_Runtime_Remoting_Messaging_IInternalMessage_get_TargetIdentity;
  VirtualInvokeData _16_System_Runtime_Remoting_Messaging_IInternalMessage_set_TargetIdentity;
  VirtualInvokeData _17_System_Runtime_Remoting_Messaging_IInternalMessage_get_Uri;
  VirtualInvokeData _18_System_Runtime_Remoting_Messaging_IInternalMessage_set_Uri;
  VirtualInvokeData _19_InitMethodProperty;
  VirtualInvokeData _20_GetObjectData;
  VirtualInvokeData _21_get_Properties;
  VirtualInvokeData _22_InitDictionary;
  VirtualInvokeData _23_Init;
  VirtualInvokeData _24_get_ActivationType;
  VirtualInvokeData _25_get_ActivationTypeName;
  VirtualInvokeData _26_get_Activator;
  VirtualInvokeData _27_set_Activator;
  VirtualInvokeData _28_get_CallSiteActivationAttributes;
  VirtualInvokeData _29_get_ContextProperties;
};

struct __ConstructionCall_Il2CppClass {
  Il2CppClass_1 _1;
  __ConstructionCall_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __ConstructionCall_Il2CppVtbl vtbl;
};

class ConstructionCall {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C54B08;
  static inline    __ConstructionCall_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __ConstructionCall_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__ConstructionCall_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __ConstructionCall_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  System_String* MethodCall__uri;
  System_String* MethodCall__typeName;
  System_String* MethodCall__methodName;
  ModdingAPI::Exposed::System::Object_array* MethodCall__args;
  ModdingAPI::Exposed::System::Type_array* MethodCall__methodSignature;
  ModdingAPI::Exposed::System::Reflection::MethodBase* MethodCall__methodBase;
  ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::LogicalCallContext* MethodCall__callContext;
  ModdingAPI::Exposed::System::Runtime::Remoting::Identity* MethodCall__targetIdentity;
  ModdingAPI::Exposed::System::Type_array* MethodCall__genericArguments;
  ModdingAPI::Exposed::System::Collections::IDictionary* ExternalProperties;
  ModdingAPI::Exposed::System::Collections::IDictionary* InternalProperties;
  ModdingAPI::Exposed::System::Runtime::Remoting::Activation::IActivator* _activator;
  ModdingAPI::Exposed::System::Object_array* _activationAttributes;
  ModdingAPI::Exposed::System::Collections::IList* _contextProperties;
  ModdingAPI::Exposed::System::Type* _activationType;
  System_String* _activationTypeName;
  bool _isContextOk;
  ModdingAPI::Exposed::System::Runtime::Remoting::Proxies::RemotingProxy* _sourceProxy;

  // Member methods:
  void ::ctor(ModdingAPI::Exposed::System::Type* type) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::ConstructionCall*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF62840))(this, type);
  }
  void ::ctor(ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo* info, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::ConstructionCall*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF62890))(this, info, context);
  }
  void InitDictionary() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::ConstructionCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF62940))(this);
  }
  bool get_IsContextOk() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::ConstructionCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3199F0))(this);
  }
  void set_IsContextOk(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::ConstructionCall*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAFE170))(this, value);
  }
  ModdingAPI::Exposed::System::Type* get_ActivationType() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::ConstructionCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF62B40))(this);
  }
  System_String* get_ActivationTypeName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::ConstructionCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x307640))(this);
  }
  ModdingAPI::Exposed::System::Runtime::Remoting::Activation::IActivator* get_Activator() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Runtime::Remoting::Activation::IActivator*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::ConstructionCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319930))(this);
  }
  void set_Activator(ModdingAPI::Exposed::System::Runtime::Remoting::Activation::IActivator* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::ConstructionCall*, ModdingAPI::Exposed::System::Runtime::Remoting::Activation::IActivator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A4C0))(this, value);
  }
  ModdingAPI::Exposed::System::Object_array* get_CallSiteActivationAttributes() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Object_array*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::ConstructionCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319940))(this);
  }
  void SetActivationAttributes(ModdingAPI::Exposed::System::Object_array* attributes) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::ConstructionCall*, ModdingAPI::Exposed::System::Object_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x477710))(this, attributes);
  }
  ModdingAPI::Exposed::System::Collections::IList* get_ContextProperties() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IList*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::ConstructionCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF62C50))(this);
  }
  void InitMethodProperty(System_String* key, Il2CppObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::ConstructionCall*, System_String*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF62DB0))(this, key, value);
  }
  void GetObjectData(ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo* info, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::ConstructionCall*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF63020))(this, info, context);
  }
  ModdingAPI::Exposed::System::Collections::IDictionary* get_Properties() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IDictionary*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::ConstructionCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF63170))(this);
  }
  ModdingAPI::Exposed::System::Runtime::Remoting::Proxies::RemotingProxy* get_SourceProxy() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Runtime::Remoting::Proxies::RemotingProxy*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::ConstructionCall*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319850))(this);
  }
  void set_SourceProxy(ModdingAPI::Exposed::System::Runtime::Remoting::Proxies::RemotingProxy* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::ConstructionCall*, ModdingAPI::Exposed::System::Runtime::Remoting::Proxies::RemotingProxy*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319860))(this, value);
  }
};
}