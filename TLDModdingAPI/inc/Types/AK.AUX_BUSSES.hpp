// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::AK {
struct __AUX_BUSSES_Il2CppStaticFields {
  uint32_t BARN;
  uint32_t BEARCAVE;
  uint32_t BOXCRATE;
  uint32_t CABIN;
  uint32_t CABINSMALL;
  uint32_t CABINSTONE;
  uint32_t CANYON;
  uint32_t CAR;
  uint32_t CAVE;
  uint32_t CAVEHUGE;
  uint32_t CHURCH;
  uint32_t CLIFFS;
  uint32_t EARLYREFLECTIONSAUX;
  uint32_t FIELDNARROW;
  uint32_t FIELDWIDE;
  uint32_t FISHINGHUT;
  uint32_t FORESTDENSE;
  uint32_t FORESTLIGHT;
  uint32_t LAKE;
  uint32_t LARGEWOODEN;
  uint32_t LIGHTHOUSE;
  uint32_t LIVINGROOM;
  uint32_t MEDIUMLARGEREFLECTIVE;
  uint32_t MEDIUMREFLECTIVE;
  uint32_t MEDIUMSMALLREFLECTIVE;
  uint32_t MINECORRIDOR;
  uint32_t OCEAN;
  uint32_t PIPE;
  uint32_t PREPPERCACHE;
  uint32_t RIVERBEDROCKWALLS;
  uint32_t SCENEDEFAULT;
  uint32_t SCENEDEFAULTCANNERY;
  uint32_t SCENEDEFAULTCOASTAL;
  uint32_t SCENEDEFAULTCRASHMOUNTAIN;
  uint32_t SCENEDEFAULTLAKE;
  uint32_t SCENEDEFAULTMARSH;
  uint32_t SCENEDEFAULTRIVERVALLEY;
  uint32_t SCENEDEFAULTRURAL;
  uint32_t SCENEDEFAULTTRACKS;
  uint32_t SCENEDEFAULTWHALINGSTATION;
  uint32_t SETTLEMENT;
  uint32_t SMALLOPEN;
  uint32_t SMALLREFLECTIVE;
  uint32_t TUNNEL;
  uint32_t UNDERPASSCONCRETE;
  uint32_t UNDERPASSWOOD;
  uint32_t WHALINGSHIPLARGE;
  uint32_t WHALINGSHIPSMALL;
  uint32_t WHALINGWAREHOUSELARGEROOM;
};

struct __AUX_BUSSES_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __AUX_BUSSES_Il2CppClass {
  Il2CppClass_1 _1;
  __AUX_BUSSES_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __AUX_BUSSES_Il2CppVtbl vtbl;
};

class AUX_BUSSES {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C8ADD0;
  static inline    __AUX_BUSSES_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __AUX_BUSSES_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__AUX_BUSSES_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __AUX_BUSSES_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::AK::AUX_BUSSES*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<uint32_t> BARN = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->BARN; }
  );
  static inline __CppStaticProperty<uint32_t> BEARCAVE = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->BEARCAVE; }
  );
  static inline __CppStaticProperty<uint32_t> BOXCRATE = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->BOXCRATE; }
  );
  static inline __CppStaticProperty<uint32_t> CABIN = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->CABIN; }
  );
  static inline __CppStaticProperty<uint32_t> CABINSMALL = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->CABINSMALL; }
  );
  static inline __CppStaticProperty<uint32_t> CABINSTONE = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->CABINSTONE; }
  );
  static inline __CppStaticProperty<uint32_t> CANYON = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->CANYON; }
  );
  static inline __CppStaticProperty<uint32_t> CAR = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->CAR; }
  );
  static inline __CppStaticProperty<uint32_t> CAVE = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->CAVE; }
  );
  static inline __CppStaticProperty<uint32_t> CAVEHUGE = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->CAVEHUGE; }
  );
  static inline __CppStaticProperty<uint32_t> CHURCH = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->CHURCH; }
  );
  static inline __CppStaticProperty<uint32_t> CLIFFS = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->CLIFFS; }
  );
  static inline __CppStaticProperty<uint32_t> EARLYREFLECTIONSAUX = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->EARLYREFLECTIONSAUX; }
  );
  static inline __CppStaticProperty<uint32_t> FIELDNARROW = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->FIELDNARROW; }
  );
  static inline __CppStaticProperty<uint32_t> FIELDWIDE = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->FIELDWIDE; }
  );
  static inline __CppStaticProperty<uint32_t> FISHINGHUT = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->FISHINGHUT; }
  );
  static inline __CppStaticProperty<uint32_t> FORESTDENSE = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->FORESTDENSE; }
  );
  static inline __CppStaticProperty<uint32_t> FORESTLIGHT = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->FORESTLIGHT; }
  );
  static inline __CppStaticProperty<uint32_t> LAKE = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->LAKE; }
  );
  static inline __CppStaticProperty<uint32_t> LARGEWOODEN = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->LARGEWOODEN; }
  );
  static inline __CppStaticProperty<uint32_t> LIGHTHOUSE = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->LIGHTHOUSE; }
  );
  static inline __CppStaticProperty<uint32_t> LIVINGROOM = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->LIVINGROOM; }
  );
  static inline __CppStaticProperty<uint32_t> MEDIUMLARGEREFLECTIVE = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->MEDIUMLARGEREFLECTIVE; }
  );
  static inline __CppStaticProperty<uint32_t> MEDIUMREFLECTIVE = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->MEDIUMREFLECTIVE; }
  );
  static inline __CppStaticProperty<uint32_t> MEDIUMSMALLREFLECTIVE = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->MEDIUMSMALLREFLECTIVE; }
  );
  static inline __CppStaticProperty<uint32_t> MINECORRIDOR = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->MINECORRIDOR; }
  );
  static inline __CppStaticProperty<uint32_t> OCEAN = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->OCEAN; }
  );
  static inline __CppStaticProperty<uint32_t> PIPE = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->PIPE; }
  );
  static inline __CppStaticProperty<uint32_t> PREPPERCACHE = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->PREPPERCACHE; }
  );
  static inline __CppStaticProperty<uint32_t> RIVERBEDROCKWALLS = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->RIVERBEDROCKWALLS; }
  );
  static inline __CppStaticProperty<uint32_t> SCENEDEFAULT = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->SCENEDEFAULT; }
  );
  static inline __CppStaticProperty<uint32_t> SCENEDEFAULTCANNERY = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->SCENEDEFAULTCANNERY; }
  );
  static inline __CppStaticProperty<uint32_t> SCENEDEFAULTCOASTAL = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->SCENEDEFAULTCOASTAL; }
  );
  static inline __CppStaticProperty<uint32_t> SCENEDEFAULTCRASHMOUNTAIN = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->SCENEDEFAULTCRASHMOUNTAIN; }
  );
  static inline __CppStaticProperty<uint32_t> SCENEDEFAULTLAKE = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->SCENEDEFAULTLAKE; }
  );
  static inline __CppStaticProperty<uint32_t> SCENEDEFAULTMARSH = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->SCENEDEFAULTMARSH; }
  );
  static inline __CppStaticProperty<uint32_t> SCENEDEFAULTRIVERVALLEY = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->SCENEDEFAULTRIVERVALLEY; }
  );
  static inline __CppStaticProperty<uint32_t> SCENEDEFAULTRURAL = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->SCENEDEFAULTRURAL; }
  );
  static inline __CppStaticProperty<uint32_t> SCENEDEFAULTTRACKS = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->SCENEDEFAULTTRACKS; }
  );
  static inline __CppStaticProperty<uint32_t> SCENEDEFAULTWHALINGSTATION = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->SCENEDEFAULTWHALINGSTATION; }
  );
  static inline __CppStaticProperty<uint32_t> SETTLEMENT = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->SETTLEMENT; }
  );
  static inline __CppStaticProperty<uint32_t> SMALLOPEN = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->SMALLOPEN; }
  );
  static inline __CppStaticProperty<uint32_t> SMALLREFLECTIVE = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->SMALLREFLECTIVE; }
  );
  static inline __CppStaticProperty<uint32_t> TUNNEL = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->TUNNEL; }
  );
  static inline __CppStaticProperty<uint32_t> UNDERPASSCONCRETE = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->UNDERPASSCONCRETE; }
  );
  static inline __CppStaticProperty<uint32_t> UNDERPASSWOOD = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->UNDERPASSWOOD; }
  );
  static inline __CppStaticProperty<uint32_t> WHALINGSHIPLARGE = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->WHALINGSHIPLARGE; }
  );
  static inline __CppStaticProperty<uint32_t> WHALINGSHIPSMALL = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->WHALINGSHIPSMALL; }
  );
  static inline __CppStaticProperty<uint32_t> WHALINGWAREHOUSELARGEROOM = __CppStaticProperty<uint32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->WHALINGWAREHOUSELARGEROOM; }
  );

  // Static methods:
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1EED2B0))();
  }
};
}