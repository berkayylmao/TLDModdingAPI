// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI::Exposed::UnityEngine::EventSystems::RaycastResult.hpp"


namespace ModdingAPI::Exposed::UnityEngine::EventSystems {
struct __EventSystem_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_EventSystems;
  ModdingAPI::Exposed::System::Comparison_T_* s_RaycastComparer;
  ModdingAPI::Exposed::System::Comparison_T_* __f__mg_cache0;
};

struct __EventSystem_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_Awake;
  VirtualInvokeData _5_OnEnable;
  VirtualInvokeData _6_Start;
  VirtualInvokeData _7_OnDisable;
  VirtualInvokeData _8_OnDestroy;
  VirtualInvokeData _9_IsActive;
  VirtualInvokeData _10_OnRectTransformDimensionsChange;
  VirtualInvokeData _11_OnBeforeTransformParentChanged;
  VirtualInvokeData _12_OnTransformParentChanged;
  VirtualInvokeData _13_OnDidApplyAnimationProperties;
  VirtualInvokeData _14_OnCanvasGroupChanged;
  VirtualInvokeData _15_OnCanvasHierarchyChanged;
  VirtualInvokeData _16_IsDestroyed;
  VirtualInvokeData _17_OnApplicationFocus;
  VirtualInvokeData _18_Update;
};

struct __EventSystem_Il2CppClass {
  Il2CppClass_1 _1;
  __EventSystem_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __EventSystem_Il2CppVtbl vtbl;
};

class EventSystem {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C426D8;
  static inline    EventSystem* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C27258;
  static inline    __EventSystem_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline EventSystem* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (EventSystem**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __EventSystem_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__EventSystem_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __EventSystem_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_SystemInputModules;
  ModdingAPI::Exposed::UnityEngine::EventSystems::BaseInputModule* m_CurrentInputModule;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_FirstSelected;
  bool m_sendNavigationEvents;
  int32_t m_DragThreshold;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_CurrentSelected;
  bool m_HasFocus;
  bool m_SelectionGuard;
  ModdingAPI::Exposed::UnityEngine::EventSystems::BaseEventData* m_DummyData;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD3E20))(this);
  }
  bool get_sendNavigationEvents() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD4200))(this);
  }
  void set_sendNavigationEvents(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x57C630))(this, value);
  }
  int32_t get_pixelDragThreshold() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD4210))(this);
  }
  void set_pixelDragThreshold(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D890))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::EventSystems::BaseInputModule* get_currentInputModule() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::EventSystems::BaseInputModule*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD4220))(this);
  }
  ModdingAPI::Exposed::UnityEngine::GameObject* get_firstSelectedGameObject() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GameObject*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD25E0))(this);
  }
  void set_firstSelectedGameObject(ModdingAPI::Exposed::UnityEngine::GameObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110C0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::GameObject* get_currentSelectedGameObject() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GameObject*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD25D0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::GameObject* get_lastSelectedGameObject() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GameObject*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x594C70))(this);
  }
  bool get_isFocused() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD4230))(this);
  }
  void UpdateModules() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD4240))(this);
  }
  bool get_alreadySelecting() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD43D0))(this);
  }
  void SetSelectedGameObject(ModdingAPI::Exposed::UnityEngine::GameObject* selected, ModdingAPI::Exposed::UnityEngine::EventSystems::BaseEventData* pointer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*, ModdingAPI::Exposed::UnityEngine::GameObject*, ModdingAPI::Exposed::UnityEngine::EventSystems::BaseEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD43E0))(this, selected, pointer);
  }
  ModdingAPI::Exposed::UnityEngine::EventSystems::BaseEventData* get_baseEventDataCache() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::EventSystems::BaseEventData*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD4680))(this);
  }
  void SetSelectedGameObject(ModdingAPI::Exposed::UnityEngine::GameObject* selected) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD47D0))(this, selected);
  }
  void RaycastAll(ModdingAPI::Exposed::UnityEngine::EventSystems::PointerEventData* eventData, ModdingAPI::Exposed::System::Collections::Generic::List_T_* raycastResults) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*, ModdingAPI::Exposed::UnityEngine::EventSystems::PointerEventData*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD4D90))(this, eventData, raycastResults);
  }
  bool IsPointerOverGameObject() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD5030))(this);
  }
  bool IsPointerOverGameObject(int32_t pointerId) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD5110))(this, pointerId);
  }
  void OnEnable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD5200))(this);
  }
  void OnDisable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD52C0))(this);
  }
  void TickModules() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD53E0))(this);
  }
  void OnApplicationFocus(bool hasFocus) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD5550))(this, hasFocus);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD5560))(this);
  }
  void ChangeEventModule(ModdingAPI::Exposed::UnityEngine::EventSystems::BaseInputModule* module) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*, ModdingAPI::Exposed::UnityEngine::EventSystems::BaseInputModule*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD59C0))(this, module);
  }
  System_String* ToString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD5B20))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*> m_EventSystems = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_EventSystems; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Comparison_T_*> s_RaycastComparer = __CppStaticProperty<ModdingAPI::Exposed::System::Comparison_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_RaycastComparer; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Comparison_T_*> __f__mg_cache0 = __CppStaticProperty<ModdingAPI::Exposed::System::Comparison_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->__f__mg_cache0; }
  );

  // Static methods:
  static inline ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem* get_current() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD3F90))();
  }
  static inline void set_current(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD4090))(value);
  }
  static inline int32_t RaycastComparer(ModdingAPI::Exposed::UnityEngine::EventSystems::RaycastResult lhs, ModdingAPI::Exposed::UnityEngine::EventSystems::RaycastResult rhs) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::EventSystems::RaycastResult, ModdingAPI::Exposed::UnityEngine::EventSystems::RaycastResult)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD4930))(lhs, rhs);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD5D70))();
  }
};
}