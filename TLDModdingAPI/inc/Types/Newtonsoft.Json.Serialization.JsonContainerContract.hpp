// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Nullable_T_.hpp"


namespace ModdingAPI::Exposed::Newtonsoft::Json::Serialization {
struct __JsonContainerContract_Il2CppStaticFields {
};

struct __JsonContainerContract_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __JsonContainerContract_Il2CppClass {
  Il2CppClass_1 _1;
  __JsonContainerContract_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __JsonContainerContract_Il2CppVtbl vtbl;
};

class JsonContainerContract {
public:
  // Il2Cpp fields:
  __JsonContainerContract_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  bool IsNullable;
  bool IsConvertable;
  bool IsEnum;
  ModdingAPI::Exposed::System::Type* NonNullableUnderlyingType;
  int32_t InternalReadType;
  int32_t ContractType;
  bool IsReadOnlyOrFixedSize;
  bool IsSealed;
  bool IsInstantiable;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* JsonContract__onDeserializedCallbacks;
  ModdingAPI::Exposed::System::Collections::Generic::IList_T_* JsonContract__onDeserializingCallbacks;
  ModdingAPI::Exposed::System::Collections::Generic::IList_T_* JsonContract__onSerializedCallbacks;
  ModdingAPI::Exposed::System::Collections::Generic::IList_T_* JsonContract__onSerializingCallbacks;
  ModdingAPI::Exposed::System::Collections::Generic::IList_T_* JsonContract__onErrorCallbacks;
  ModdingAPI::Exposed::System::Type* JsonContract__createdType;
  ModdingAPI::Exposed::System::Type* JsonContract__UnderlyingType_k__BackingField;
  ModdingAPI::Exposed::System::Nullable_T_ JsonContract__IsReference_k__BackingField;
  ModdingAPI::Exposed::Newtonsoft::Json::JsonConverter* JsonContract__Converter_k__BackingField;
  ModdingAPI::Exposed::Newtonsoft::Json::JsonConverter* JsonContract__InternalConverter_k__BackingField;
  ModdingAPI::Exposed::System::Func_TResult_* JsonContract__DefaultCreator_k__BackingField;
  bool JsonContract__DefaultCreatorNonPublic_k__BackingField;
  ModdingAPI::Exposed::Newtonsoft::Json::Serialization::JsonContract* _itemContract;
  ModdingAPI::Exposed::Newtonsoft::Json::Serialization::JsonContract* _finalItemContract;
  ModdingAPI::Exposed::Newtonsoft::Json::JsonConverter* _ItemConverter_k__BackingField;
  ModdingAPI::Exposed::System::Nullable_T_ _ItemIsReference_k__BackingField;
  ModdingAPI::Exposed::System::Nullable_T_ _ItemReferenceLoopHandling_k__BackingField;
  ModdingAPI::Exposed::System::Nullable_T_ _ItemTypeNameHandling_k__BackingField;

  // Member methods:
  ModdingAPI::Exposed::Newtonsoft::Json::Serialization::JsonContract* get_ItemContract() {
    return reinterpret_cast<ModdingAPI::Exposed::Newtonsoft::Json::Serialization::JsonContract*(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::JsonContainerContract*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3BC530))(this);
  }
  void set_ItemContract(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::JsonContract* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::JsonContainerContract*, ModdingAPI::Exposed::Newtonsoft::Json::Serialization::JsonContract*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8710B0))(this, value);
  }
  ModdingAPI::Exposed::Newtonsoft::Json::Serialization::JsonContract* get_FinalItemContract() {
    return reinterpret_cast<ModdingAPI::Exposed::Newtonsoft::Json::Serialization::JsonContract*(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::JsonContainerContract*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319850))(this);
  }
  ModdingAPI::Exposed::Newtonsoft::Json::JsonConverter* get_ItemConverter() {
    return reinterpret_cast<ModdingAPI::Exposed::Newtonsoft::Json::JsonConverter*(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::JsonContainerContract*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3BC850))(this);
  }
  void set_ItemConverter(ModdingAPI::Exposed::Newtonsoft::Json::JsonConverter* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::JsonContainerContract*, ModdingAPI::Exposed::Newtonsoft::Json::JsonConverter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x47E010))(this, value);
  }
  ModdingAPI::Exposed::System::Nullable_T_ get_ItemIsReference() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Nullable_T_(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::JsonContainerContract*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x871120))(this);
  }
  void set_ItemIsReference(ModdingAPI::Exposed::System::Nullable_T_ value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::JsonContainerContract*, ModdingAPI::Exposed::System::Nullable_T_)>(Helpers::Memory::GetInstance().MakeAbsolute(0x871130))(this, value);
  }
  ModdingAPI::Exposed::System::Nullable_T_ get_ItemReferenceLoopHandling() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Nullable_T_(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::JsonContainerContract*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x871140))(this);
  }
  void set_ItemReferenceLoopHandling(ModdingAPI::Exposed::System::Nullable_T_ value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::JsonContainerContract*, ModdingAPI::Exposed::System::Nullable_T_)>(Helpers::Memory::GetInstance().MakeAbsolute(0x871150))(this, value);
  }
  ModdingAPI::Exposed::System::Nullable_T_ get_ItemTypeNameHandling() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Nullable_T_(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::JsonContainerContract*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x871160))(this);
  }
  void set_ItemTypeNameHandling(ModdingAPI::Exposed::System::Nullable_T_ value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::JsonContainerContract*, ModdingAPI::Exposed::System::Nullable_T_)>(Helpers::Memory::GetInstance().MakeAbsolute(0x871170))(this, value);
  }
  void ::ctor(ModdingAPI::Exposed::System::Type* underlyingType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Newtonsoft::Json::Serialization::JsonContainerContract*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x871180))(this, underlyingType);
  }
};
}