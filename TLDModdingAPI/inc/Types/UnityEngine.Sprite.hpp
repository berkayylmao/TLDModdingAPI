// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Rect.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector4.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Bounds.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Rect.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Vector2.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Vector4.hpp"


namespace ModdingAPI::Exposed::UnityEngine {
struct __Sprite_Il2CppStaticFields {
};

struct __Sprite_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __Sprite_Il2CppClass {
  Il2CppClass_1 _1;
  __Sprite_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Sprite_Il2CppVtbl vtbl;
};

class Sprite {
public:
  // Il2Cpp fields:
  __Sprite_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AD4F0))(this);
  }
  int32_t GetPackingMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AD580))(this);
  }
  int32_t GetPacked() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AD5D0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Rect GetTextureRect() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Rect(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AD620))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 GetTextureRectOffset() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AD6A0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector4 GetInnerUVs() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector4(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AD710))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector4 GetOuterUVs() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector4(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AD790))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector4 GetPadding() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector4(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AD810))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Bounds get_bounds() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Bounds(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AD940))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Rect get_rect() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Rect(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AD9D0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector4 get_border() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector4(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10ADA50))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Texture2D* get_texture() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Texture2D*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10ADAD0))(this);
  }
  float get_pixelsPerUnit() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10ADB20))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Texture2D* get_associatedAlphaSplitTexture() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Texture2D*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10ADB70))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 get_pivot() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10ADBC0))(this);
  }
  bool get_packed() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10ADC30))(this);
  }
  int32_t get_packingMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AD580))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Rect get_textureRect() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Rect(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10ADC90))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 get_textureRectOffset() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10ADDB0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2_array* get_vertices() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10ADF50))(this);
  }
  ModdingAPI::Exposed::System::UInt16_array* get_triangles() {
    return reinterpret_cast<ModdingAPI::Exposed::System::UInt16_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10ADFA0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2_array* get_uv() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10ADFF0))(this);
  }
  void GetTextureRect_Injected(ModdingAPI::Exposed::UnityEngine::Rect ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*, ModdingAPI::Exposed::UnityEngine::Rect)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AEA20))(this, ret);
  }
  void GetTextureRectOffset_Injected(ModdingAPI::Exposed::UnityEngine::Vector2 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AEA80))(this, ret);
  }
  void GetInnerUVs_Injected(ModdingAPI::Exposed::UnityEngine::Vector4 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*, ModdingAPI::Exposed::UnityEngine::Vector4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AEAE0))(this, ret);
  }
  void GetOuterUVs_Injected(ModdingAPI::Exposed::UnityEngine::Vector4 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*, ModdingAPI::Exposed::UnityEngine::Vector4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AEB40))(this, ret);
  }
  void GetPadding_Injected(ModdingAPI::Exposed::UnityEngine::Vector4 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*, ModdingAPI::Exposed::UnityEngine::Vector4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AEBA0))(this, ret);
  }
  void get_bounds_Injected(ModdingAPI::Exposed::UnityEngine::Bounds ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*, ModdingAPI::Exposed::UnityEngine::Bounds)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AECA0))(this, ret);
  }
  void get_rect_Injected(ModdingAPI::Exposed::UnityEngine::Rect ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*, ModdingAPI::Exposed::UnityEngine::Rect)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AED00))(this, ret);
  }
  void get_border_Injected(ModdingAPI::Exposed::UnityEngine::Vector4 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*, ModdingAPI::Exposed::UnityEngine::Vector4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AED60))(this, ret);
  }
  void get_pivot_Injected(ModdingAPI::Exposed::UnityEngine::Vector2 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Sprite*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AEDC0))(this, ret);
  }

  // Static methods:
  static inline ModdingAPI::Exposed::UnityEngine::Sprite* CreateSprite(ModdingAPI::Exposed::UnityEngine::Texture2D* texture, ModdingAPI::Exposed::UnityEngine::Rect rect, ModdingAPI::Exposed::UnityEngine::Vector2 pivot, float pixelsPerUnit, uint32_t extrude, int32_t meshType, ModdingAPI::Exposed::UnityEngine::Vector4 border, bool generateFallbackPhysicsShape) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Sprite*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Texture2D*, ModdingAPI::Exposed::UnityEngine::Rect, ModdingAPI::Exposed::UnityEngine::Vector2, float, uint32_t, int32_t, ModdingAPI::Exposed::UnityEngine::Vector4, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AD890))(texture, rect, pivot, pixelsPerUnit, extrude, meshType, border, generateFallbackPhysicsShape);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Sprite* Create(ModdingAPI::Exposed::UnityEngine::Texture2D* texture, ModdingAPI::Exposed::UnityEngine::Rect rect, ModdingAPI::Exposed::UnityEngine::Vector2 pivot, float pixelsPerUnit, uint32_t extrude, int32_t meshType, ModdingAPI::Exposed::UnityEngine::Vector4 border, bool generateFallbackPhysicsShape) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Sprite*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Texture2D*, ModdingAPI::Exposed::UnityEngine::Rect, ModdingAPI::Exposed::UnityEngine::Vector2, float, uint32_t, int32_t, ModdingAPI::Exposed::UnityEngine::Vector4, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AE040))(texture, rect, pivot, pixelsPerUnit, extrude, meshType, border, generateFallbackPhysicsShape);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Sprite* Create(ModdingAPI::Exposed::UnityEngine::Texture2D* texture, ModdingAPI::Exposed::UnityEngine::Rect rect, ModdingAPI::Exposed::UnityEngine::Vector2 pivot, float pixelsPerUnit, uint32_t extrude, int32_t meshType, ModdingAPI::Exposed::UnityEngine::Vector4 border) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Sprite*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Texture2D*, ModdingAPI::Exposed::UnityEngine::Rect, ModdingAPI::Exposed::UnityEngine::Vector2, float, uint32_t, int32_t, ModdingAPI::Exposed::UnityEngine::Vector4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AE520))(texture, rect, pivot, pixelsPerUnit, extrude, meshType, border);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Sprite* Create(ModdingAPI::Exposed::UnityEngine::Texture2D* texture, ModdingAPI::Exposed::UnityEngine::Rect rect, ModdingAPI::Exposed::UnityEngine::Vector2 pivot, float pixelsPerUnit, uint32_t extrude, int32_t meshType) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Sprite*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Texture2D*, ModdingAPI::Exposed::UnityEngine::Rect, ModdingAPI::Exposed::UnityEngine::Vector2, float, uint32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AE580))(texture, rect, pivot, pixelsPerUnit, extrude, meshType);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Sprite* Create(ModdingAPI::Exposed::UnityEngine::Texture2D* texture, ModdingAPI::Exposed::UnityEngine::Rect rect, ModdingAPI::Exposed::UnityEngine::Vector2 pivot, float pixelsPerUnit, uint32_t extrude) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Sprite*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Texture2D*, ModdingAPI::Exposed::UnityEngine::Rect, ModdingAPI::Exposed::UnityEngine::Vector2, float, uint32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AE6B0))(texture, rect, pivot, pixelsPerUnit, extrude);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Sprite* Create(ModdingAPI::Exposed::UnityEngine::Texture2D* texture, ModdingAPI::Exposed::UnityEngine::Rect rect, ModdingAPI::Exposed::UnityEngine::Vector2 pivot, float pixelsPerUnit) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Sprite*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Texture2D*, ModdingAPI::Exposed::UnityEngine::Rect, ModdingAPI::Exposed::UnityEngine::Vector2, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AE7E0))(texture, rect, pivot, pixelsPerUnit);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Sprite* Create(ModdingAPI::Exposed::UnityEngine::Texture2D* texture, ModdingAPI::Exposed::UnityEngine::Rect rect, ModdingAPI::Exposed::UnityEngine::Vector2 pivot) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Sprite*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Texture2D*, ModdingAPI::Exposed::UnityEngine::Rect, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AE900))(texture, rect, pivot);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Sprite* CreateSprite_Injected(ModdingAPI::Exposed::UnityEngine::Texture2D* texture, ModdingAPI::Exposed::UnityEngine::Rect rect, ModdingAPI::Exposed::UnityEngine::Vector2 pivot, float pixelsPerUnit, uint32_t extrude, int32_t meshType, ModdingAPI::Exposed::UnityEngine::Vector4 border, bool generateFallbackPhysicsShape) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Sprite*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Texture2D*, ModdingAPI::Exposed::UnityEngine::Rect, ModdingAPI::Exposed::UnityEngine::Vector2, float, uint32_t, int32_t, ModdingAPI::Exposed::UnityEngine::Vector4, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10AEC00))(texture, rect, pivot, pixelsPerUnit, extrude, meshType, border, generateFallbackPhysicsShape);
  }
};
}