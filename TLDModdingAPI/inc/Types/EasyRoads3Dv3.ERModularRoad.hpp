// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Bounds.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Vector3.hpp"


namespace ModdingAPI::Exposed::EasyRoads3Dv3 {
struct __ERModularRoad_Il2CppStaticFields {
  int32_t OQDCDQDDOQ;
  int32_t OCDQODQQOQ;
  int32_t OQQDDDQODC;
  int32_t ODQQQCCDDO;
  int32_t ODQQOCOQDD;
  int32_t ODODDDOCDC;
};

struct __ERModularRoad_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __ERModularRoad_Il2CppClass {
  Il2CppClass_1 _1;
  __ERModularRoad_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __ERModularRoad_Il2CppVtbl vtbl;
};

class ERModularRoad {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C88D70;
  static inline    ERModularRoad* _pStaticObjectInstance = nullptr;

public:
// Singleton object getter:
  static inline ERModularRoad* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (ERModularRoad**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

  // Il2Cpp fields:
  __ERModularRoad_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::EasyRoads3Dv3::ERModularBase* baseScript;
  System_String* roadName;
  bool locked;
  double roadType;
  bool isCustomRoadSet;
  bool isCustomRoad;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* markers;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* tmpMarkers;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* markersExt;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* tmpMarkersExt;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* tValues;
  float roadWidth;
  float faceDistance;
  float angleTreshold;
  bool closedTrack;
  float minNodeDistance;
  int32_t nodeWithinRange;
  float uvTiling;
  bool planarUVs;
  bool flipNormals;
  bool randomnessFlag;
  bool randomnessMarkerFlag;
  float randomYPosition;
  float randomMinYPosition;
  float randomMaxYPosition;
  float minRandomYPositionDistance;
  float maxRandomYPositionDistance;
  float randomMinRotation;
  float randomMaxRotation;
  float minRandomRotationDistance;
  float maxRandomRotationDistance;
  float vegetationStudioGrassPerimeter;
  float vegetationStudioPlantPerimeter;
  float vegetationStudioTreePerimeter;
  float vegetationStudioObjectPerimeter;
  float vegetationStudioLargeObjectPerimeter;
  int32_t vertsStats;
  int32_t trisStats;
  float indent;
  float surrounding;
  bool followTerrainContours;
  float terrainContoursOffset;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadShape;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadShapeIntsStart;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadShapeIntsEnd;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadShapeIntsStartFull;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadShapeIntsEndFull;
  System_String* roadShapeString;
  System_String* roadShapeReversedString;
  int32_t roadShapeMatchCount;
  int32_t geoReversed;
  int32_t roadShapeCols;
  int32_t subSegments;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* nodeDistance;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadShapeUVs;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadShapeUVs2;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* doConnectionTri;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* randomRotations;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* hardEdge;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadShapeMaterialInts;
  int32_t subMeshCount;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadShapeMaterialIntCounts;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* controlPoints;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* splinePoints;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* distances;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* markerInts;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* insertSplinePoints;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* soSplinePoints;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* soSplinePointsLeft;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* soSplinePointsRight;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* OOQDQQOQCD;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* OQCODCDCDC;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* meshVecs;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* meshUVs;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* meshUVs2;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* tris;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* surfaceMeshVecs;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftIndentVecs;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightIndentVecs;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* middleIndentVecs;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftSurroundingVecs;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightSurroundingVecs;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftIndentVecsSV;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightIndentVecsSV;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* bridgeElement;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* vecsBelowTerrain;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* treeVecs;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* detailVecs;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* vegetationTris;
  float totalDistance;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* nodeSplinePoint;
  System_String* totalDistanceString;
  ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* startPrefabScript;
  ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* endPrefabScript;
  int32_t startConnectionSegment;
  bool startConnectionFlag;
  int32_t endConnectionSegment;
  bool endConnectionFlag;
  bool tCrossingConnected;
  ModdingAPI::Exposed::UnityEngine::Material* roadMaterial;
  ModdingAPI::Exposed::UnityEngine::Material_array* roadMaterials;
  ModdingAPI::Exposed::UnityEngine::Material* roadPhysicsMaterial;
  ModdingAPI::Exposed::UnityEngine::Material_array* roadPhysicsMaterials;
  ModdingAPI::Exposed::UnityEngine::Vector3 startDir;
  ModdingAPI::Exposed::UnityEngine::Vector3 endDir;
  float startAngle;
  float endAngle;
  int32_t _;
  int32_t ERModularRoad__;
  int32_t startbendLeftRight;
  int32_t endbendLeftRight;
  ModdingAPI::Exposed::UnityEngine::Vector3 pivotp;
  ModdingAPI::Exposed::UnityEngine::Vector3 p1;
  ModdingAPI::Exposed::UnityEngine::Vector3 p2;
  ModdingAPI::Exposed::UnityEngine::Vector3 p3;
  ModdingAPI::Exposed::UnityEngine::Vector3 p4;
  ModdingAPI::Exposed::UnityEngine::Vector3 p5;
  ModdingAPI::Exposed::UnityEngine::Vector3 p6;
  ModdingAPI::Exposed::UnityEngine::Vector3 p7;
  ModdingAPI::Exposed::UnityEngine::Vector3 cp1;
  ModdingAPI::Exposed::UnityEngine::Vector3 cp2;
  ModdingAPI::Exposed::UnityEngine::Vector3 cp3;
  ModdingAPI::Exposed::UnityEngine::Vector3 cp4;
  ModdingAPI::Exposed::UnityEngine::Vector3 cp5;
  ModdingAPI::Exposed::UnityEngine::Vector3 cp6;
  ModdingAPI::Exposed::UnityEngine::Vector3 cp7;
  ModdingAPI::Exposed::UnityEngine::Vector3 cp8;
  ModdingAPI::Exposed::UnityEngine::Vector3 cp9;
  ModdingAPI::Exposed::UnityEngine::Vector3 cpcenter;
  ModdingAPI::Exposed::UnityEngine::Vector3 p1Circle;
  ModdingAPI::Exposed::UnityEngine::Vector3 p2Circle;
  float cpradius;
  float cpangle;
  ModdingAPI::Exposed::UnityEngine::Vector3 dp1;
  ModdingAPI::Exposed::UnityEngine::Vector3 dp2;
  ModdingAPI::Exposed::UnityEngine::Vector3 dp3;
  ModdingAPI::Exposed::UnityEngine::Vector3 dp4;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* segPoints;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* testPoints;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* testPoints2;
  ModdingAPI::Exposed::UnityEngine::Vector3 ODODCOOOCD;
  ModdingAPI::Exposed::UnityEngine::Vector3 OOOQOODOCD;
  ModdingAPI::Exposed::UnityEngine::Vector3 endLeft;
  ModdingAPI::Exposed::UnityEngine::Vector3 endRight;
  ModdingAPI::Exposed::UnityEngine::Mesh* testmesh;
  ModdingAPI::Exposed::UnityEngine::GameObject* surfaceMesh;
  ModdingAPI::Exposed::UnityEngine::Vector3 sv1;
  ModdingAPI::Exposed::UnityEngine::Vector3 sv2;
  ModdingAPI::Exposed::UnityEngine::Vector3 prefabIndentLeft;
  ModdingAPI::Exposed::UnityEngine::Vector3 prefabIndentRight;
  ModdingAPI::Exposed::UnityEngine::Vector3 roadIndent1;
  ModdingAPI::Exposed::UnityEngine::Vector3 tmpPerpCP;
  ModdingAPI::Exposed::UnityEngine::Vector3 tmpCP;
  int32_t ERModularRoad__;
  int32_t _4AAAA;
  float splinePos;
  float camHeight;
  ModdingAPI::Exposed::UnityEngine::Vector3_array* flyOverPoints;
  ModdingAPI::Exposed::UnityEngine::Vector3 splinePosV3;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* markerDistances;
  System_String* osmRoadType;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* soData;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* soDataExt;
  ModdingAPI::Exposed::System::String_array* sideObjectNames;
  int32_t selectedSO;
  bool rebuildSos;
  bool sosCleared;
  bool isSideObject;
  int32_t startOffsetActiveMarker;
  int32_t endOffsetActiveMarker;
  float leftToCenterPerc;
  ModdingAPI::Exposed::EasyRoads3Dv3::ERRoad* road;
  bool splatMapActive;
  int32_t splatIndex;
  int32_t expandLevel;
  int32_t smoothLevel;
  float splatOpacity;
  int32_t layer;
  System_String* tag;
  bool castShadow;
  bool fadeInFlag;
  float fadeInDistance;
  bool fadeOutFlag;
  float fadeOutDistance;
  bool doSurroundingSurfaces;
  bool terrainDeformation;
  bool snapToTerrain;
  bool snapVertices;
  float snapOffset;
  bool hasMeshCollider;
  bool isUpdated;
  bool QDDDQODQQDQDQQD;
  int32_t uv4Type;
  float detailDistance;
  bool startDecalCollapsed;
  ModdingAPI::Exposed::EasyRoads3Dv3::ERDecal* startDecal;
  ModdingAPI::Exposed::EasyRoads3Dv3::ERDecal* endDecal;
  ModdingAPI::Exposed::UnityEngine::GameObject* startDecalPrefab;
  ModdingAPI::Exposed::UnityEngine::GameObject* startDecalPrefabSource;
  bool endDecalCollapsed;
  ModdingAPI::Exposed::UnityEngine::GameObject* endDecalPrefab;
  ModdingAPI::Exposed::UnityEngine::GameObject* endDecalPrefabSource;
  int32_t startDecalID;
  int32_t endDecalID;
  ModdingAPI::Exposed::UnityEngine::Vector3 lastForward;
  bool roadUpdate;
  ModdingAPI::Exposed::UnityEngine::Bounds bounds;

  // Member methods:
  bool OQCDCDQDCQ(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* prefabScript) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6665A0))(this, prefabScript);
  }
  void OOOQOCDDOQ(ModdingAPI::Exposed::System::Collections::Generic::List_T_* decalPresets) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x666700))(this, decalPresets);
  }
  void ODQQOOCQOD() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x666FD0))(this);
  }
  float GetRoadWidth() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x667520))(this);
  }
  void OCOCOCDQDD(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x667580))(this, pos);
  }
  void GetInsertPointExt(ModdingAPI::Exposed::UnityEngine::Vector3 pos, int32_t n1, int32_t marker) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x667740))(this, pos, n1, marker);
  }
  void OOQODDCODD(ModdingAPI::Exposed::UnityEngine::Vector3 pos, int32_t n1) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x667770))(this, pos, n1);
  }
  void ODCQOCCQCD(ModdingAPI::Exposed::UnityEngine::Vector3 pos, int32_t n1, int32_t selectedMarker, bool sameRoad) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6679D0))(this, pos, n1, selectedMarker, sameRoad);
  }
  int32_t OOQQDOOODC(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x667D50))(this, pos);
  }
  int32_t OQQQDOQCDQ(ModdingAPI::Exposed::UnityEngine::Vector3 pos, int32_t selectedMarker) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x668440))(this, pos, selectedMarker);
  }
  int32_t HandleAddMarkerAtStart(ModdingAPI::Exposed::UnityEngine::Vector3 pos, int32_t selectedMarker) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x668580))(this, pos, selectedMarker);
  }
  void OQCCCCQCCO(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* ODDOCQCCDQ, int32_t targetElement, bool reverse, bool uvReverse) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*, int32_t, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6686B0))(this, ODDOCQCCDQ, targetElement, reverse, uvReverse);
  }
  void ODCQOCQDOO(bool ignorePrefabAlignment, int32_t selectedMarker) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, bool, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x40B4A0))(this, ignorePrefabAlignment, selectedMarker);
  }
  void PrintRoadShape(ModdingAPI::Exposed::System::Collections::Generic::List_T_* lst) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6686D0))(this, lst);
  }
  void OCCCCCCDCC(bool ignorePrefabAlignment, bool forceAutoRotate) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6689F0))(this, ignorePrefabAlignment, forceAutoRotate);
  }
  void OOOOOQQQQQ(ModdingAPI::Exposed::UnityEngine::Mesh* m) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::UnityEngine::Mesh*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x67D250))(this, m);
  }
  void OODODQCCCO(ModdingAPI::Exposed::EasyRoads3Dv3::ERDecal* decal, ModdingAPI::Exposed::UnityEngine::GameObject* decalPrefab, System_String* name) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::EasyRoads3Dv3::ERDecal*, ModdingAPI::Exposed::UnityEngine::GameObject*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x67D5B0))(this, decal, decalPrefab, name);
  }
  float OQDQQDQQOO(ModdingAPI::Exposed::EasyRoads3Dv3::ERDecal* decal, float roadWidth) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::EasyRoads3Dv3::ERDecal*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x67D910))(this, decal, roadWidth);
  }
  void ODDQCQOCDD(System_String* type) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x67D920))(this, type);
  }
  void OCOCDQDQOQ(ModdingAPI::Exposed::UnityEngine::GameObject* decal, int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::UnityEngine::GameObject*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x67E0F0))(this, decal, index);
  }
  float ODDQQOCOCO(int32_t startEnd) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x67EDE0))(this, startEnd);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3_array* AdjustNormals(ModdingAPI::Exposed::UnityEngine::Vector3_array* normals) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3_array*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::UnityEngine::Vector3_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x67F3F0))(this, normals);
  }
  void AdjustPrefabNormals(ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadInts, ModdingAPI::Exposed::System::Collections::Generic::List_T_* prefabInts, ModdingAPI::Exposed::UnityEngine::Vector3_array* normals, ModdingAPI::Exposed::UnityEngine::GameObject* prefab, ModdingAPI::Exposed::UnityEngine::Vector3_array* verts) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::UnityEngine::Vector3_array*, ModdingAPI::Exposed::UnityEngine::GameObject*, ModdingAPI::Exposed::UnityEngine::Vector3_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x67F5F0))(this, roadInts, prefabInts, normals, prefab, verts);
  }
  bool OOOOCDQQOC(ModdingAPI::Exposed::UnityEngine::Vector3 pTarget, ModdingAPI::Exposed::UnityEngine::Vector3 pSource, ModdingAPI::Exposed::UnityEngine::Vector3 pCheck) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x67F9D0))(this, pTarget, pSource, pCheck);
  }
  void OCOCQQCCCC(ModdingAPI::Exposed::System::Collections::Generic::List_T_* surfaceVecs, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* prefabScript, bool startSurfacesSafe, float distance, float minIndent) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*, bool, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, surfaceVecs, prefabScript, startSurfacesSafe, distance, minIndent);
  }
  void OCQDQDDCQO(ModdingAPI::Exposed::System::Collections::Generic::List_T_* surfaceVecs, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs* prefabScript, int32_t el, bool surfacesSafe, float distance, float minIndent) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossingPrefabs*, int32_t, bool, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, surfaceVecs, prefabScript, el, surfacesSafe, distance, minIndent);
  }
  bool OQQCDQOCDO(ModdingAPI::Exposed::UnityEngine::Vector3 ODDOCQCCDQIndent, ModdingAPI::Exposed::UnityEngine::Vector3 otherPrefabIndent, ModdingAPI::Exposed::UnityEngine::Vector3 v) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x67FC90))(this, ODDOCQCCDQIndent, otherPrefabIndent, v);
  }
  void OOCCDQQODC(ModdingAPI::Exposed::System::Collections::Generic::List_T_* surfaceVecs, ModdingAPI::Exposed::System::Collections::Generic::List_T_* uvs, int32_t h, ModdingAPI::Exposed::System::Collections::Generic::List_T_* doBridge, ModdingAPI::Exposed::UnityEngine::Vector3 firstDir, ModdingAPI::Exposed::UnityEngine::Vector3 lastDir, float indent, float surrounding) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x67FCA0))(this, surfaceVecs, uvs, h, doBridge, firstDir, lastDir, indent, surrounding);
  }
  void InterpolateSurfaces(ModdingAPI::Exposed::System::Collections::Generic::List_T_* surfaceVecs, ModdingAPI::Exposed::System::Collections::Generic::List_T_* uvs, ModdingAPI::Exposed::System::Collections::Generic::List_T_* tris, ModdingAPI::Exposed::UnityEngine::Vector3 dir, int32_t vecCount, int32_t startEnd, float indent, float surrounding) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t, int32_t, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x681DA0))(this, surfaceVecs, uvs, tris, dir, vecCount, startEnd, indent, surrounding);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* OQQOQCQQQD(ModdingAPI::Exposed::System::Collections::Generic::List_T_* markersExt, float faceDist, bool ignorePrefabAlignment, ModdingAPI::Exposed::System::Collections::Generic::List_T_* tValues, ModdingAPI::Exposed::System::Collections::Generic::List_T_* markerDistances, bool forceAutoRotate, ModdingAPI::Exposed::System::Collections::Generic::List_T_* rotationArray) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, float, bool, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, bool, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x683890))(this, markersExt, faceDist, ignorePrefabAlignment, tValues, markerDistances, forceAutoRotate, rotationArray);
  }
  void OOCCQOOOCQ(ModdingAPI::Exposed::System::Collections::Generic::List_T_* tmpMarkers, int32_t j, ModdingAPI::Exposed::UnityEngine::Vector3_array* tr, ModdingAPI::Exposed::UnityEngine::Vector3 circleDir, float totalDist, ModdingAPI::Exposed::UnityEngine::Vector3 startCP, int32_t startMarker, ModdingAPI::Exposed::System::Collections::Generic::List_T_* p) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t, ModdingAPI::Exposed::UnityEngine::Vector3_array*, ModdingAPI::Exposed::UnityEngine::Vector3, float, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x68CC90))(this, tmpMarkers, j, tr, circleDir, totalDist, startCP, startMarker, p);
  }
  void OOQDDDDDCD(ModdingAPI::Exposed::System::Collections::Generic::List_T_* tmpMarkersExt, int32_t j, ModdingAPI::Exposed::UnityEngine::Vector3_array* tr, ModdingAPI::Exposed::UnityEngine::Vector3 endCP, int32_t startMarker) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t, ModdingAPI::Exposed::UnityEngine::Vector3_array*, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x68D420))(this, tmpMarkersExt, j, tr, endCP, startMarker);
  }
  void OQDCOOCQOQ(ModdingAPI::Exposed::UnityEngine::Vector3 endCP, ModdingAPI::Exposed::UnityEngine::Vector3 curV3, ModdingAPI::Exposed::UnityEngine::Vector3 nextV3, ModdingAPI::Exposed::UnityEngine::Vector3 nextNextV3) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x68DC90))(this, endCP, curV3, nextV3, nextNextV3);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* OQCDDDCOOD(ModdingAPI::Exposed::System::Collections::Generic::List_T_* tValues, ModdingAPI::Exposed::System::Collections::Generic::List_T_* markerDistances, ModdingAPI::Exposed::System::Collections::Generic::List_T_* markers, int32_t startMarker, int32_t endMarker, ModdingAPI::Exposed::System::Collections::Generic::List_T_* OQCODCDCDC, ModdingAPI::Exposed::System::Collections::Generic::List_T_* randomRotations) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t, int32_t, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x68E0E0))(this, tValues, markerDistances, markers, startMarker, endMarker, OQCODCDCDC, randomRotations);
  }
  void RoadSmoothness(float curDist, ModdingAPI::Exposed::EasyRoads3Dv3::ERMarkerExt* marker, float totalDistance, float randomYDistanceStart, float randomYDistanceEnd, float randomYDistanceMiddle, ModdingAPI::Exposed::UnityEngine::Vector3 randomYDistanceV3, ModdingAPI::Exposed::UnityEngine::Vector3 v, float currentRandomYDistance, float randomRotationStart, float randomRotationEnd, float randomRotationMiddle, ModdingAPI::Exposed::UnityEngine::Vector3 randomRotationV3, float currentRandomRotation, ModdingAPI::Exposed::System::Collections::Generic::List_T_* rotationArray) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, float, ModdingAPI::Exposed::EasyRoads3Dv3::ERMarkerExt*, float, float, float, float, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, float, float, float, float, ModdingAPI::Exposed::UnityEngine::Vector3, float, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x68F590))(this, curDist, marker, totalDistance, randomYDistanceStart, randomYDistanceEnd, randomYDistanceMiddle, randomYDistanceV3, v, currentRandomYDistance, randomRotationStart, randomRotationEnd, randomRotationMiddle, randomRotationV3, currentRandomRotation, rotationArray);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* GetRoadShapeValues(ModdingAPI::Exposed::System::Collections::Generic::List_T_* tValues, ModdingAPI::Exposed::System::Collections::Generic::List_T_* markerDistances, ModdingAPI::Exposed::System::Collections::Generic::List_T_* markers, int32_t startMarker, int32_t endMarker, ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadShape) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t, int32_t, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x68FBA0))(this, tValues, markerDistances, markers, startMarker, endMarker, roadShape);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* GetSurfaceValues(ModdingAPI::Exposed::System::Collections::Generic::List_T_* tValues, ModdingAPI::Exposed::System::Collections::Generic::List_T_* markerDistances, ModdingAPI::Exposed::System::Collections::Generic::List_T_* markers, int32_t startMarker, int32_t endMarker, ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftIndents, ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightIndents, ModdingAPI::Exposed::System::Collections::Generic::List_T_* leftSurrounding, ModdingAPI::Exposed::System::Collections::Generic::List_T_* rightSurrounding, float minRequiredIndent) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t, int32_t, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x691B30))(this, tValues, markerDistances, markers, startMarker, endMarker, leftIndents, rightIndents, leftSurrounding, rightSurrounding, minRequiredIndent);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* OQCQDOODCO(bool flag) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x693280))(this, flag);
  }
  void ODOOCDDOOD() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6937D0))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* ODQQQCDCOQ(ModdingAPI::Exposed::UnityEngine::Vector3_array* tr) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::UnityEngine::Vector3_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x6939E0))(this, tr);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 OQCQQOCQQO(float offset) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x694160))(this, offset);
  }
  ModdingAPI::Exposed::EasyRoads3Dv3::ERRoadType* GetRoadType(ModdingAPI::Exposed::EasyRoads3Dv3::ERRoadType_array* roadTypes) {
    return reinterpret_cast<ModdingAPI::Exposed::EasyRoads3Dv3::ERRoadType*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::EasyRoads3Dv3::ERRoadType_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x694710))(this, roadTypes);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x694780))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<int32_t> OQDCDQDDOQ = __CppStaticProperty<int32_t>(
   []() { return &GetSingletonInstance()->__pClassInstance->pStaticFields->OQDCDQDDOQ; }
  );
  static inline __CppStaticProperty<int32_t> OCDQODQQOQ = __CppStaticProperty<int32_t>(
   []() { return &GetSingletonInstance()->__pClassInstance->pStaticFields->OCDQODQQOQ; }
  );
  static inline __CppStaticProperty<int32_t> OQQDDDQODC = __CppStaticProperty<int32_t>(
   []() { return &GetSingletonInstance()->__pClassInstance->pStaticFields->OQQDDDQODC; }
  );
  static inline __CppStaticProperty<int32_t> ODQQQCCDDO = __CppStaticProperty<int32_t>(
   []() { return &GetSingletonInstance()->__pClassInstance->pStaticFields->ODQQQCCDDO; }
  );
  static inline __CppStaticProperty<int32_t> ODQQOCOQDD = __CppStaticProperty<int32_t>(
   []() { return &GetSingletonInstance()->__pClassInstance->pStaticFields->ODQQOCOQDD; }
  );
  static inline __CppStaticProperty<int32_t> ODODDDOCDC = __CppStaticProperty<int32_t>(
   []() { return &GetSingletonInstance()->__pClassInstance->pStaticFields->ODODDDOCDC; }
  );

  // Static methods:
  static inline ModdingAPI::Exposed::UnityEngine::Vector3 OQODDDCOQD(ModdingAPI::Exposed::UnityEngine::Vector3 P0, ModdingAPI::Exposed::UnityEngine::Vector3 P1, ModdingAPI::Exposed::UnityEngine::Vector3 P2, ModdingAPI::Exposed::UnityEngine::Vector3 P3, float t, float tension) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x694440))(P0, P1, P2, P3, t, tension);
  }
};
}