// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System {
struct __MonoCustomAttrs_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Reflection::Assembly* corlib;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* usage_cache;
  ModdingAPI::Exposed::System::AttributeUsageAttribute* DefaultAttributeUsage;
};

struct __MonoCustomAttrs_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __MonoCustomAttrs_Il2CppClass {
  Il2CppClass_1 _1;
  __MonoCustomAttrs_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __MonoCustomAttrs_Il2CppVtbl vtbl;
};

class MonoCustomAttrs {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C2D9D0;
  static inline    MonoCustomAttrs* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C865D0;
  static inline    __MonoCustomAttrs_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline MonoCustomAttrs* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (MonoCustomAttrs**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __MonoCustomAttrs_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__MonoCustomAttrs_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __MonoCustomAttrs_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Reflection::Assembly*> corlib = __CppStaticProperty<ModdingAPI::Exposed::System::Reflection::Assembly*>(
   []() { return &GetStaticClassInstance()->pStaticFields->corlib; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_*> usage_cache = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->usage_cache; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::AttributeUsageAttribute*> DefaultAttributeUsage = __CppStaticProperty<ModdingAPI::Exposed::System::AttributeUsageAttribute*>(
   []() { return &GetStaticClassInstance()->pStaticFields->DefaultAttributeUsage; }
  );

  // Static methods:
  static inline bool IsUserCattrProvider(Il2CppObject* obj) {
    return reinterpret_cast<bool(__fastcall*)(Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCDB100))(obj);
  }
  static inline ModdingAPI::Exposed::System::Object_array* GetCustomAttributesInternal(ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider* obj, ModdingAPI::Exposed::System::Type* attributeType, bool pseudoAttrs) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Object_array*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider*, ModdingAPI::Exposed::System::Type*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCDB380))(obj, attributeType, pseudoAttrs);
  }
  static inline ModdingAPI::Exposed::System::Object_array* GetPseudoCustomAttributes(ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider* obj, ModdingAPI::Exposed::System::Type* attributeType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Object_array*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCDB4D0))(obj, attributeType);
  }
  static inline ModdingAPI::Exposed::System::Object_array* GetPseudoCustomAttributes(ModdingAPI::Exposed::System::Type* type) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Object_array*(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCDB8F0))(type);
  }
  static inline ModdingAPI::Exposed::System::Object_array* GetCustomAttributesBase(ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider* obj, ModdingAPI::Exposed::System::Type* attributeType, bool inheritedOnly) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Object_array*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider*, ModdingAPI::Exposed::System::Type*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCDBC10))(obj, attributeType, inheritedOnly);
  }
  static inline ModdingAPI::Exposed::System::Object_array* GetCustomAttributes(ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider* obj, ModdingAPI::Exposed::System::Type* attributeType, bool inherit) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Object_array*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider*, ModdingAPI::Exposed::System::Type*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCDBEF0))(obj, attributeType, inherit);
  }
  static inline ModdingAPI::Exposed::System::Object_array* GetCustomAttributes(ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider* obj, bool inherit) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Object_array*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCDCCA0))(obj, inherit);
  }
  static inline ModdingAPI::Exposed::System::Reflection::CustomAttributeData_array* GetCustomAttributesDataInternal(ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider* obj) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Reflection::CustomAttributeData_array*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCDCEC0))(obj);
  }
  static inline ModdingAPI::Exposed::System::Collections::Generic::IList_T_* GetCustomAttributesData(ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider* obj) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IList_T_*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCDCED0))(obj);
  }
  static inline bool IsDefined(ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider* obj, ModdingAPI::Exposed::System::Type* attributeType, bool inherit) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider*, ModdingAPI::Exposed::System::Type*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCDCFB0))(obj, attributeType, inherit);
  }
  static inline bool IsDefinedInternal(ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider* obj, ModdingAPI::Exposed::System::Type* AttributeType) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCDD2D0))(obj, AttributeType);
  }
  static inline ModdingAPI::Exposed::System::Reflection::PropertyInfo* GetBasePropertyDefinition(ModdingAPI::Exposed::System::Reflection::MonoProperty* property) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Reflection::PropertyInfo*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::MonoProperty*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCDD300))(property);
  }
  static inline ModdingAPI::Exposed::System::Reflection::EventInfo* GetBaseEventDefinition(ModdingAPI::Exposed::System::Reflection::MonoEvent* evt) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Reflection::EventInfo*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::MonoEvent*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCDD8A0))(evt);
  }
  static inline ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider* GetBase(ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider* obj) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider*(__fastcall*)(ModdingAPI::Exposed::System::Reflection::ICustomAttributeProvider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCDDBA0))(obj);
  }
  static inline ModdingAPI::Exposed::System::AttributeUsageAttribute* RetrieveAttributeUsageNoCache(ModdingAPI::Exposed::System::Type* attributeType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::AttributeUsageAttribute*(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCDDEB0))(attributeType);
  }
  static inline ModdingAPI::Exposed::System::AttributeUsageAttribute* RetrieveAttributeUsage(ModdingAPI::Exposed::System::Type* attributeType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::AttributeUsageAttribute*(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCDE200))(attributeType);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xCDE5B0))();
  }
};
}