// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::Pathfinding {
struct __AstarData_Il2CppStaticFields {
};

struct __AstarData_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __AstarData_Il2CppClass {
  Il2CppClass_1 _1;
  __AstarData_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __AstarData_Il2CppVtbl vtbl;
};

class AstarData {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C33D08;
  static inline    __AstarData_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __AstarData_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__AstarData_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __AstarData_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::Pathfinding::NavMeshGraph* _navmesh_k__BackingField;
  ModdingAPI::Exposed::Pathfinding::GridGraph* _gridGraph_k__BackingField;
  ModdingAPI::Exposed::Pathfinding::LayerGridGraph* _layerGridGraph_k__BackingField;
  ModdingAPI::Exposed::Pathfinding::PointGraph* _pointGraph_k__BackingField;
  ModdingAPI::Exposed::Pathfinding::RecastGraph* _recastGraph_k__BackingField;
  ModdingAPI::Exposed::System::Type_array* _graphTypes_k__BackingField;
  ModdingAPI::Exposed::Pathfinding::NavGraph_array* graphs;
  System_String* dataString;
  ModdingAPI::Exposed::System::Byte_array* upgradeData;
  int32_t deserializeRunningCount;
  ModdingAPI::Exposed::System::Byte_array* data_backup;
  ModdingAPI::Exposed::UnityEngine::TextAsset* file_cachedStartup;
  ModdingAPI::Exposed::System::Byte_array* data_cachedStartup;
  bool cacheStartup;

  // Member methods:
  ModdingAPI::Exposed::Pathfinding::NavMeshGraph* get_navmesh() {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::NavMeshGraph*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311320))(this);
  }
  void set_navmesh(ModdingAPI::Exposed::Pathfinding::NavMeshGraph* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::Pathfinding::NavMeshGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x30D060))(this, value);
  }
  ModdingAPI::Exposed::Pathfinding::GridGraph* get_gridGraph() {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::GridGraph*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335360))(this);
  }
  void set_gridGraph(ModdingAPI::Exposed::Pathfinding::GridGraph* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::Pathfinding::GridGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A3E0))(this, value);
  }
  ModdingAPI::Exposed::Pathfinding::LayerGridGraph* get_layerGridGraph() {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::LayerGridGraph*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110A0))(this);
  }
  void set_layerGridGraph(ModdingAPI::Exposed::Pathfinding::LayerGridGraph* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::Pathfinding::LayerGridGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x310F00))(this, value);
  }
  ModdingAPI::Exposed::Pathfinding::PointGraph* get_pointGraph() {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::PointGraph*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110B0))(this);
  }
  void set_pointGraph(ModdingAPI::Exposed::Pathfinding::PointGraph* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::Pathfinding::PointGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110C0))(this, value);
  }
  ModdingAPI::Exposed::Pathfinding::RecastGraph* get_recastGraph() {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::RecastGraph*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335370))(this);
  }
  void set_recastGraph(ModdingAPI::Exposed::Pathfinding::RecastGraph* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::Pathfinding::RecastGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A410))(this, value);
  }
  ModdingAPI::Exposed::System::Type_array* get_graphTypes() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type_array*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319970))(this);
  }
  void set_graphTypes(ModdingAPI::Exposed::System::Type_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::System::Type_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A420))(this, value);
  }
  ModdingAPI::Exposed::System::Byte_array* get_data() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Byte_array*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A6940))(this);
  }
  void set_data(ModdingAPI::Exposed::System::Byte_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::System::Byte_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A6A20))(this, value);
  }
  ModdingAPI::Exposed::System::Byte_array* GetData() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Byte_array*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A6AF0))(this);
  }
  void SetData(ModdingAPI::Exposed::System::Byte_array* data) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::System::Byte_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A6B00))(this, data);
  }
  void Awake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A6B10))(this);
  }
  void UpdateShortcuts() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A6BA0))(this);
  }
  void LoadFromCache() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A6E90))(this);
  }
  ModdingAPI::Exposed::System::Byte_array* SerializeGraphs() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Byte_array*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A7030))(this);
  }
  ModdingAPI::Exposed::System::Byte_array* SerializeGraphs(ModdingAPI::Exposed::Pathfinding::Serialization::SerializeSettings* settings) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Byte_array*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::Pathfinding::Serialization::SerializeSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A7070))(this, settings);
  }
  ModdingAPI::Exposed::System::Byte_array* SerializeGraphs(ModdingAPI::Exposed::Pathfinding::Serialization::SerializeSettings* settings, uint32_t checksum) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Byte_array*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::Pathfinding::Serialization::SerializeSettings*, uint32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A7090))(this, settings, checksum);
  }
  void SerializeGraphsPart(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer* sr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A7270))(this, sr);
  }
  void DeserializeGraphs() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A72B0))(this);
  }
  void DeserializeGraphsNonBlocking() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A72F0))(this);
  }
  void ClearGraphs() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A73A0))(this);
  }
  void OnDestroy() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A7440))(this);
  }
  void DeserializeGraphsNonBlocking(ModdingAPI::Exposed::System::Byte_array* bytes) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::System::Byte_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A7450))(this, bytes);
  }
  void DeserializeGraphs(ModdingAPI::Exposed::System::Byte_array* bytes, bool blocking) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::System::Byte_array*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A7710))(this, bytes, blocking);
  }
  void DeserializeGraphsAdditive(ModdingAPI::Exposed::System::Byte_array* bytes) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::System::Byte_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A77F0))(this, bytes);
  }
  void DeserializeGraphsPart(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer* sr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A7AD0))(this, sr);
  }
  void DeserializeGraphsPartAdditive(ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer* sr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::Pathfinding::Serialization::AstarSerializer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A7DF0))(this, sr);
  }
  void WorkerThread_DeSerializeGraphsRun(Il2CppObject* _threadInfo) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A84B0))(this, _threadInfo);
  }
  void DeSerializeGraphsAsync_Init() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A86C0))(this);
  }
  bool DeSerializeGraphsAsync_Update(bool force) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A8A60))(this, force);
  }
  bool IsLoadingGraphsPending() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A8A90))(this);
  }
  void LoadGraphsAsync() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A8AA0))(this);
  }
  void LoadGraphs() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A8E20))(this);
  }
  bool UnloadGraphs() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A8FD0))(this);
  }
  void FindGraphTypes() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A9100))(this);
  }
  ModdingAPI::Exposed::System::Type* GetGraphType(System_String* type) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A9400))(this, type);
  }
  ModdingAPI::Exposed::Pathfinding::NavGraph* CreateGraph(System_String* type) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::NavGraph*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A9510))(this, type);
  }
  ModdingAPI::Exposed::Pathfinding::NavGraph* CreateGraph(ModdingAPI::Exposed::System::Type* type) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::NavGraph*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A9720))(this, type);
  }
  ModdingAPI::Exposed::Pathfinding::NavGraph* AddGraph(System_String* type) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::NavGraph*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A9800))(this, type);
  }
  ModdingAPI::Exposed::Pathfinding::NavGraph* AddGraph(ModdingAPI::Exposed::System::Type* type) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::NavGraph*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A9A50))(this, type);
  }
  void AddGraph(ModdingAPI::Exposed::Pathfinding::NavGraph* graph) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::Pathfinding::NavGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A9E10))(this, graph);
  }
  bool RemoveGraph(ModdingAPI::Exposed::Pathfinding::NavGraph* graph) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::Pathfinding::NavGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20AA160))(this, graph);
  }
  ModdingAPI::Exposed::Pathfinding::NavGraph* FindGraphOfType(ModdingAPI::Exposed::System::Type* type) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::NavGraph*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20AA400))(this, type);
  }
  ModdingAPI::Exposed::System::Collections::IEnumerable* FindGraphsOfType(ModdingAPI::Exposed::System::Type* type) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IEnumerable*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20AA500))(this, type);
  }
  ModdingAPI::Exposed::System::Collections::IEnumerable* GetUpdateableGraphs() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IEnumerable*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20AA6A0))(this);
  }
  ModdingAPI::Exposed::System::Collections::IEnumerable* GetRaycastableGraphs() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IEnumerable*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20AA830))(this);
  }
  int32_t GetGraphIndex(ModdingAPI::Exposed::Pathfinding::NavGraph* graph) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*, ModdingAPI::Exposed::Pathfinding::NavGraph*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20AA9C0))(this, graph);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Pathfinding::AstarData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20AAB00))(this);
  }

  // Static methods:
  static inline ModdingAPI::Exposed::AstarPath* get_active() {
    return reinterpret_cast<ModdingAPI::Exposed::AstarPath*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x20A68A0))();
  }
  static inline ModdingAPI::Exposed::Pathfinding::NavGraph* GetGraph(ModdingAPI::Exposed::Pathfinding::GraphNode* node) {
    return reinterpret_cast<ModdingAPI::Exposed::Pathfinding::NavGraph*(__fastcall*)(ModdingAPI::Exposed::Pathfinding::GraphNode*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20AA2C0))(node);
  }
};
}