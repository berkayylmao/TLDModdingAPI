// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System::Xml::Schema {
struct __XmlSchemaSet_Il2CppStaticFields {
};

struct __XmlSchemaSet_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __XmlSchemaSet_Il2CppClass {
  Il2CppClass_1 _1;
  __XmlSchemaSet_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __XmlSchemaSet_Il2CppVtbl vtbl;
};

class XmlSchemaSet {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C89910;
  static inline    __XmlSchemaSet_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __XmlSchemaSet_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__XmlSchemaSet_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __XmlSchemaSet_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::System::Xml::XmlNameTable* nameTable;
  ModdingAPI::Exposed::System::Xml::Schema::SchemaNames* schemaNames;
  ModdingAPI::Exposed::System::Collections::SortedList* schemas;
  ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler* internalEventHandler;
  ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler* eventHandler;
  bool isCompiled;
  ModdingAPI::Exposed::System::Collections::Hashtable* schemaLocations;
  ModdingAPI::Exposed::System::Collections::Hashtable* chameleonSchemas;
  ModdingAPI::Exposed::System::Collections::Hashtable* targetNamespaces;
  bool compileAll;
  ModdingAPI::Exposed::System::Xml::Schema::SchemaInfo* cachedCompiledInfo;
  ModdingAPI::Exposed::System::Xml::XmlReaderSettings* readerSettings;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchema* schemaForSchema;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaCompilationSettings* compilationSettings;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* elements;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* attributes;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* schemaTypes;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* substitutionGroups;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* typeExtensions;
  Il2CppObject* internalSyncObject;

  // Member methods:
  Il2CppObject* get_InternalSyncObject() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F5AD0))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F5C30))(this);
  }
  void ::ctor(ModdingAPI::Exposed::System::Xml::XmlNameTable* nameTable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Xml::XmlNameTable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F5D80))(this, nameTable);
  }
  void add_ValidationEventHandler(ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F6640))(this, value);
  }
  void remove_ValidationEventHandler(ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F6740))(this, value);
  }
  bool get_IsCompiled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F6810))(this);
  }
  void set_XmlResolver(ModdingAPI::Exposed::System::Xml::XmlResolver* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Xml::XmlResolver*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F6820))(this, value);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaCompilationSettings* get_CompilationSettings() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaCompilationSettings*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319950))(this);
  }
  void set_CompilationSettings(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaCompilationSettings* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaCompilationSettings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383A40))(this, value);
  }
  int32_t get_Count() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F6840))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* get_GlobalElements() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F6870))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* get_GlobalAttributes() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F69D0))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* get_GlobalTypes() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F6B30))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* get_SubstitutionGroups() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F6C90))(this);
  }
  ModdingAPI::Exposed::System::Collections::Hashtable* get_SchemaLocations() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Hashtable*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319960))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* get_TypeExtensions() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F6DF0))(this);
  }
  void Add(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet* schemas) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F6F50))(this, schemas);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchema* Add(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema* schema) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F7610))(this, schema);
  }
  bool RemoveRecursive(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema* schemaToRemove) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F7850))(this, schemaToRemove);
  }
  void Compile() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F8340))(this);
  }
  void CopyTo(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema_array* schemas, int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchema_array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F8C90))(this, schemas, index);
  }
  ModdingAPI::Exposed::System::Collections::ICollection* Schemas(System_String* targetNamespace) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::ICollection*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F8DD0))(this, targetNamespace);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchema* Add(System_String* targetNamespace, ModdingAPI::Exposed::System::Xml::Schema::XmlSchema* schema) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, System_String*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F90C0))(this, targetNamespace, schema);
  }
  void Add(System_String* targetNamespace, ModdingAPI::Exposed::System::Xml::XmlReader* reader, ModdingAPI::Exposed::System::Collections::Hashtable* validatedNamespaces) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, System_String*, ModdingAPI::Exposed::System::Xml::XmlReader*, ModdingAPI::Exposed::System::Collections::Hashtable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F9120))(this, targetNamespace, reader, validatedNamespaces);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchema* FindSchemaByNSAndUrl(ModdingAPI::Exposed::System::Uri* schemaUri, System_String* ns, ModdingAPI::Exposed::System::Collections::DictionaryEntry_array* locationsTable) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Uri*, System_String*, ModdingAPI::Exposed::System::Collections::DictionaryEntry_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F9670))(this, schemaUri, ns, locationsTable);
  }
  void AddSchemaToSet(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema* schema) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F99B0))(this, schema);
  }
  void ProcessNewSubstitutionGroups(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* substitutionGroupsTable, bool resolve) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F9E10))(this, substitutionGroupsTable, resolve);
  }
  void ResolveSubstitutionGroup(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSubstitutionGroup* substitutionGroup, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* substTable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSubstitutionGroup*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5FA190))(this, substitutionGroup, substTable);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchema* Remove(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema* schema, bool forceCompile) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5FA5D0))(this, schema, forceCompile);
  }
  void ClearTables() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5FA920))(this);
  }
  bool PreprocessSchema(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema* schema, System_String* targetNamespace) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5FAB20))(this, schema, targetNamespace);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchema* ParseSchema(System_String* targetNamespace, ModdingAPI::Exposed::System::Xml::XmlReader* reader) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, System_String*, ModdingAPI::Exposed::System::Xml::XmlReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5FAD30))(this, targetNamespace, reader);
  }
  void CopyFromCompiledSet(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet* otherSet) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5FAFB0))(this, otherSet);
  }
  ModdingAPI::Exposed::System::Xml::Schema::SchemaInfo* get_CompiledInfo() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::SchemaInfo*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3199C0))(this);
  }
  ModdingAPI::Exposed::System::Xml::XmlReaderSettings* get_ReaderSettings() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlReaderSettings*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319930))(this);
  }
  ModdingAPI::Exposed::System::Xml::XmlResolver* GetResolver() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlResolver*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5FC4A0))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler* GetEventHandler() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::ValidationEventHandler*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335370))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::SchemaNames* GetSchemaNames(ModdingAPI::Exposed::System::Xml::XmlNameTable* nt) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::SchemaNames*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Xml::XmlNameTable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5FC4C0))(this, nt);
  }
  bool IsSchemaLoaded(ModdingAPI::Exposed::System::Uri* schemaUri, System_String* targetNamespace, ModdingAPI::Exposed::System::Xml::Schema::XmlSchema* schema) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Uri*, System_String*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5FC700))(this, schemaUri, targetNamespace, schema);
  }
  bool GetSchemaByUri(ModdingAPI::Exposed::System::Uri* schemaUri, ModdingAPI::Exposed::System::Xml::Schema::XmlSchema* schema) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Uri*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5FCC00))(this, schemaUri, schema);
  }
  System_String* GetTargetNamespace(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema* schema) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5FCD30))(this, schema);
  }
  ModdingAPI::Exposed::System::Collections::SortedList* get_SortedSchemas() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::SortedList*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110A0))(this);
  }
  void RemoveSchemaFromCaches(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema* schema) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5FCDD0))(this, schema);
  }
  void RemoveSchemaFromGlobalTables(ModdingAPI::Exposed::System::Xml::Schema::XmlSchema* schema) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchema*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5FD410))(this, schema);
  }
  bool AddToTable(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* table, ModdingAPI::Exposed::System::Xml::XmlQualifiedName* qname, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject* item) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable*, ModdingAPI::Exposed::System::Xml::XmlQualifiedName*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5FDDC0))(this, table, qname, item);
  }
  void VerifyTables() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5FE120))(this);
  }
  void InternalValidationCallback(Il2CppObject* sender, ModdingAPI::Exposed::System::Xml::Schema::ValidationEventArgs* e) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, Il2CppObject*, ModdingAPI::Exposed::System::Xml::Schema::ValidationEventArgs*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5FE500))(this, sender, e);
  }
  void SendValidationEvent(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaException* e, int32_t severity) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSet*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaException*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5FE5B0))(this, e, severity);
  }
};
}