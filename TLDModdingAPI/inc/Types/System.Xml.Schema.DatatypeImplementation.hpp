// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System::Xml::Schema {
struct __DatatypeImplementation_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Collections::Hashtable* builtinTypes;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType_array* enumToTypeCode;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType* anySimpleType;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType* anyAtomicType;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType* untypedAtomicType;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType* yearMonthDurationType;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType* dayTimeDurationType;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType* normalizedStringTypeV1Compat;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType* tokenTypeV1Compat;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnAnySimpleType;
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* QnAnyType;
  ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker* stringFacetsChecker;
  ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker* miscFacetsChecker;
  ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker* numeric2FacetsChecker;
  ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker* binaryFacetsChecker;
  ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker* dateTimeFacetsChecker;
  ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker* durationFacetsChecker;
  ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker* listFacetsChecker;
  ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker* qnameFacetsChecker;
  ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker* unionFacetsChecker;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_anySimpleType;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_anyURI;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_base64Binary;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_boolean;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_byte;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_char;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_date;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_dateTime;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_dateTimeNoTz;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_dateTimeTz;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_day;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_decimal;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_double;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_doubleXdr;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_duration;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_ENTITY;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_ENTITIES;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_ENUMERATION;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_fixed;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_float;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_floatXdr;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_hexBinary;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_ID;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_IDREF;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_IDREFS;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_int;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_integer;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_language;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_long;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_month;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_monthDay;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_Name;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_NCName;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_negativeInteger;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_NMTOKEN;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_NMTOKENS;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_nonNegativeInteger;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_nonPositiveInteger;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_normalizedString;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_NOTATION;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_positiveInteger;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_QName;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_QNameXdr;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_short;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_string;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_time;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_timeNoTz;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_timeTz;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_token;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_unsignedByte;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_unsignedInt;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_unsignedLong;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_unsignedShort;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_uuid;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_year;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_yearMonth;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_normalizedStringV1Compat;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_tokenV1Compat;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_anyAtomicType;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_dayTimeDuration;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_untypedAtomicType;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* c_yearMonthDuration;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation_array* c_tokenizedTypes;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation_array* c_tokenizedTypesXsd;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap_array* c_XdrTypes;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap_array* c_XsdTypes;
};

struct __DatatypeImplementation_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_get_ValueType;
  VirtualInvokeData _5_get_TokenizedType;
  VirtualInvokeData _6_ParseValue;
  VirtualInvokeData _7_get_Variety;
  VirtualInvokeData _8_get_TypeCode;
  VirtualInvokeData _9_IsDerivedFrom;
  VirtualInvokeData _10_get_HasLexicalFacets;
  VirtualInvokeData _11_get_HasValueFacets;
  VirtualInvokeData _12_get_ValueConverter;
  VirtualInvokeData _13_get_Restriction;
  VirtualInvokeData _15_ParseValue;
  VirtualInvokeData _17_TryParseValue;
  VirtualInvokeData _18_get_FacetsChecker;
  VirtualInvokeData _19_get_BuiltInWhitespaceFacet;
  VirtualInvokeData _20_DeriveByRestriction;
  VirtualInvokeData _21_DeriveByList;
  VirtualInvokeData _22_VerifySchemaValid;
  VirtualInvokeData _23_IsEqual;
  VirtualInvokeData _24_IsComparable;
  VirtualInvokeData _25_CreateValueConverter;
  VirtualInvokeData _65535__ctor;
};

struct __DatatypeImplementation_Il2CppClass {
  Il2CppClass_1 _1;
  __DatatypeImplementation_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __DatatypeImplementation_Il2CppVtbl vtbl;
};

class DatatypeImplementation {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C3DE90;
  static inline    __DatatypeImplementation_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __DatatypeImplementation_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__DatatypeImplementation_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __DatatypeImplementation_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  int32_t variety;
  ModdingAPI::Exposed::System::Xml::Schema::RestrictionFacets* restriction;
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* baseType;
  ModdingAPI::Exposed::System::Xml::Schema::XmlValueConverter* valueConverter;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaType* parentSchemaType;

  // Member methods:
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaDatatype* DeriveByRestriction(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectCollection* facets, ModdingAPI::Exposed::System::Xml::XmlNameTable* nameTable, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaType* schemaType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaDatatype*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectCollection*, ModdingAPI::Exposed::System::Xml::XmlNameTable*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD681A0))(this, facets, nameTable, schemaType);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaDatatype* DeriveByList(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaType* schemaType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaDatatype*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD68370))(this, schemaType);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaDatatype* DeriveByList(int32_t minSize, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaType* schemaType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaDatatype*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*, int32_t, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD68380))(this, minSize, schemaType);
  }
  void VerifySchemaValid(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable* notations, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject* caller) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObjectTable*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, notations, caller);
  }
  bool IsDerivedFrom(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaDatatype* datatype) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaDatatype*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD68950))(this, datatype);
  }
  bool IsEqual(Il2CppObject* o1, Il2CppObject* o2) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*, Il2CppObject*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD68C60))(this, o1, o2);
  }
  bool IsComparable(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaDatatype* dtype) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaDatatype*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD68C80))(this, dtype);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlValueConverter* CreateValueConverter(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaType* schemaType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlValueConverter*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, schemaType);
  }
  ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker* get_FacetsChecker() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD68DC0))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlValueConverter* get_ValueConverter() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlValueConverter*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD68E60))(this);
  }
  int32_t get_TokenizedType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xBF0250))(this);
  }
  ModdingAPI::Exposed::System::Type* get_ValueType() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD68E90))(this);
  }
  int32_t get_Variety() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311060))(this);
  }
  int32_t get_TypeCode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::RestrictionFacets* get_Restriction() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::RestrictionFacets*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335360))(this);
  }
  bool get_HasLexicalFacets() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD68F30))(this);
  }
  bool get_HasValueFacets() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD68F50))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* get_Base() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3110A0))(this);
  }
  int32_t get_BuiltInWhitespaceFacet() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this);
  }
  Il2CppObject* ParseValue(System_String* s, ModdingAPI::Exposed::System::Xml::XmlNameTable* nameTable, ModdingAPI::Exposed::System::Xml::IXmlNamespaceResolver* nsmgr) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*, System_String*, ModdingAPI::Exposed::System::Xml::XmlNameTable*, ModdingAPI::Exposed::System::Xml::IXmlNamespaceResolver*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD68F70))(this, s, nameTable, nsmgr);
  }
  Il2CppObject* ParseValue(System_String* s, ModdingAPI::Exposed::System::Xml::XmlNameTable* nameTable, ModdingAPI::Exposed::System::Xml::IXmlNamespaceResolver* nsmgr, bool createAtomicValue) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*, System_String*, ModdingAPI::Exposed::System::Xml::XmlNameTable*, ModdingAPI::Exposed::System::Xml::IXmlNamespaceResolver*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD691E0))(this, s, nameTable, nsmgr, createAtomicValue);
  }
  ModdingAPI::Exposed::System::Exception* TryParseValue(Il2CppObject* value, ModdingAPI::Exposed::System::Xml::XmlNameTable* nameTable, ModdingAPI::Exposed::System::Xml::IXmlNamespaceResolver* namespaceResolver, Il2CppObject* typedValue) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*, Il2CppObject*, ModdingAPI::Exposed::System::Xml::XmlNameTable*, ModdingAPI::Exposed::System::Xml::IXmlNamespaceResolver*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD693D0))(this, value, nameTable, namespaceResolver, typedValue);
  }
  System_String* GetTypeName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD697D0))(this);
  }
  int32_t Compare(ModdingAPI::Exposed::System::Byte_array* value1, ModdingAPI::Exposed::System::Byte_array* value2) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*, ModdingAPI::Exposed::System::Byte_array*, ModdingAPI::Exposed::System::Byte_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD69860))(this, value1, value2);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Hashtable*> builtinTypes = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Hashtable*>(
   []() { return &GetStaticClassInstance()->pStaticFields->builtinTypes; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType_array*> enumToTypeCode = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->enumToTypeCode; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*> anySimpleType = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*>(
   []() { return &GetStaticClassInstance()->pStaticFields->anySimpleType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*> anyAtomicType = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*>(
   []() { return &GetStaticClassInstance()->pStaticFields->anyAtomicType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*> untypedAtomicType = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*>(
   []() { return &GetStaticClassInstance()->pStaticFields->untypedAtomicType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*> yearMonthDurationType = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*>(
   []() { return &GetStaticClassInstance()->pStaticFields->yearMonthDurationType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*> dayTimeDurationType = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*>(
   []() { return &GetStaticClassInstance()->pStaticFields->dayTimeDurationType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*> normalizedStringTypeV1Compat = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*>(
   []() { return &GetStaticClassInstance()->pStaticFields->normalizedStringTypeV1Compat; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*> tokenTypeV1Compat = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*>(
   []() { return &GetStaticClassInstance()->pStaticFields->tokenTypeV1Compat; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::XmlQualifiedName*> QnAnySimpleType = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::XmlQualifiedName*>(
   []() { return &GetStaticClassInstance()->pStaticFields->QnAnySimpleType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::XmlQualifiedName*> QnAnyType = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::XmlQualifiedName*>(
   []() { return &GetStaticClassInstance()->pStaticFields->QnAnyType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker*> stringFacetsChecker = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker*>(
   []() { return &GetStaticClassInstance()->pStaticFields->stringFacetsChecker; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker*> miscFacetsChecker = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker*>(
   []() { return &GetStaticClassInstance()->pStaticFields->miscFacetsChecker; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker*> numeric2FacetsChecker = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker*>(
   []() { return &GetStaticClassInstance()->pStaticFields->numeric2FacetsChecker; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker*> binaryFacetsChecker = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker*>(
   []() { return &GetStaticClassInstance()->pStaticFields->binaryFacetsChecker; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker*> dateTimeFacetsChecker = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker*>(
   []() { return &GetStaticClassInstance()->pStaticFields->dateTimeFacetsChecker; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker*> durationFacetsChecker = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker*>(
   []() { return &GetStaticClassInstance()->pStaticFields->durationFacetsChecker; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker*> listFacetsChecker = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker*>(
   []() { return &GetStaticClassInstance()->pStaticFields->listFacetsChecker; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker*> qnameFacetsChecker = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker*>(
   []() { return &GetStaticClassInstance()->pStaticFields->qnameFacetsChecker; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker*> unionFacetsChecker = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::FacetsChecker*>(
   []() { return &GetStaticClassInstance()->pStaticFields->unionFacetsChecker; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_anySimpleType = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_anySimpleType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_anyURI = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_anyURI; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_base64Binary = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_base64Binary; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_boolean = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_boolean; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_byte = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_byte; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_char = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_char; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_date = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_date; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_dateTime = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_dateTime; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_dateTimeNoTz = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_dateTimeNoTz; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_dateTimeTz = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_dateTimeTz; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_day = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_day; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_decimal = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_decimal; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_double = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_double; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_doubleXdr = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_doubleXdr; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_duration = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_duration; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_ENTITY = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_ENTITY; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_ENTITIES = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_ENTITIES; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_ENUMERATION = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_ENUMERATION; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_fixed = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_fixed; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_float = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_float; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_floatXdr = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_floatXdr; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_hexBinary = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_hexBinary; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_ID = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_ID; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_IDREF = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_IDREF; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_IDREFS = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_IDREFS; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_int = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_int; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_integer = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_integer; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_language = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_language; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_long = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_long; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_month = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_month; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_monthDay = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_monthDay; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_Name = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_Name; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_NCName = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_NCName; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_negativeInteger = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_negativeInteger; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_NMTOKEN = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_NMTOKEN; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_NMTOKENS = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_NMTOKENS; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_nonNegativeInteger = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_nonNegativeInteger; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_nonPositiveInteger = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_nonPositiveInteger; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_normalizedString = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_normalizedString; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_NOTATION = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_NOTATION; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_positiveInteger = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_positiveInteger; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_QName = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_QName; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_QNameXdr = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_QNameXdr; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_short = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_short; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_string = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_string; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_time = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_time; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_timeNoTz = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_timeNoTz; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_timeTz = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_timeTz; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_token = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_token; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_unsignedByte = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_unsignedByte; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_unsignedInt = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_unsignedInt; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_unsignedLong = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_unsignedLong; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_unsignedShort = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_unsignedShort; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_uuid = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_uuid; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_year = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_year; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_yearMonth = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_yearMonth; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_normalizedStringV1Compat = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_normalizedStringV1Compat; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_tokenV1Compat = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_tokenV1Compat; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_anyAtomicType = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_anyAtomicType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_dayTimeDuration = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_dayTimeDuration; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_untypedAtomicType = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_untypedAtomicType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*> c_yearMonthDuration = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_yearMonthDuration; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation_array*> c_tokenizedTypes = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_tokenizedTypes; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation_array*> c_tokenizedTypesXsd = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_tokenizedTypesXsd; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap_array*> c_XdrTypes = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_XdrTypes; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap_array*> c_XsdTypes = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation::SchemaDatatypeMap_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_XsdTypes; }
  );

  // Static methods:
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xD61EE0))();
  }
  static inline ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType* get_AnySimpleType() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xD65AE0))();
  }
  static inline ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType* get_UntypedAtomicType() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xD65B80))();
  }
  static inline ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* FromXmlTokenizedType(int32_t token) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD65C20))(token);
  }
  static inline ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* FromXmlTokenizedTypeXsd(int32_t token) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD65CF0))(token);
  }
  static inline ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* FromXdrName(System_String* name) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD65DC0))(name);
  }
  static inline ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* FromTypeName(System_String* name) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD65EF0))(name);
  }
  static inline ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType* StartBuiltinType(ModdingAPI::Exposed::System::Xml::XmlQualifiedName* qname, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaDatatype* dataType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlQualifiedName*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaDatatype*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD66020))(qname, dataType);
  }
  static inline void FinishBuiltinType(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType* derivedType, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType* baseType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD66270))(derivedType, baseType);
  }
  static inline void CreateBuiltinTypes() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xD666D0))();
  }
  static inline ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType* GetSimpleTypeFromTypeCode(int32_t typeCode) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD67810))(typeCode);
  }
  static inline ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType* GetSimpleTypeFromXsdType(ModdingAPI::Exposed::System::Xml::XmlQualifiedName* qname) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*(__fastcall*)(ModdingAPI::Exposed::System::Xml::XmlQualifiedName*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD678E0))(qname);
  }
  static inline ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType* GetNormalizedStringTypeV1Compat() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xD67A00))();
  }
  static inline ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType* GetTokenTypeV1Compat() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xD67CC0))();
  }
  static inline ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType_array* GetBuiltInTypes() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType_array*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xD67F80))();
  }
  static inline int32_t GetPrimitiveTypeCode(int32_t typeCode) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD68020))(typeCode);
  }
  static inline ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation* DeriveByUnion(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType_array* types, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaType* schemaType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::DatatypeImplementation*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaSimpleType_array*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaType*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD68730))(types, schemaType);
  }
};
}