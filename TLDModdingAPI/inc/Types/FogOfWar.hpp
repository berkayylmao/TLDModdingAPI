// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Rendering.RenderTargetIdentifier.hpp"


namespace ModdingAPI::Exposed {
struct __FogOfWar_Il2CppStaticFields {
};

struct __FogOfWar_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __FogOfWar_Il2CppClass {
  Il2CppClass_1 _1;
  __FogOfWar_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __FogOfWar_Il2CppVtbl vtbl;
};

class FogOfWar {
public:
  // Il2Cpp fields:
  __FogOfWar_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::UITexture* m_ZoomDetailsUITexture;
  ModdingAPI::Exposed::UnityEngine::Shader* m_Shader;
  System_String* m_AssetBundleFilename;
  System_String* m_MapBackgroundFilename;
  System_String* m_MapDetailsFilename;
  System_String* m_HeightmapFilename;
  ModdingAPI::Exposed::UnityEngine::Vector2 m_DetailScale;
  int32_t m_FadeDistance;
  ModdingAPI::Exposed::UnityEngine::Vector2 m_HeightmapOffset;
  ModdingAPI::Exposed::UnityEngine::Vector2 m_HeightmapScale;
  float m_TerrainPositionY;
  float m_TerrainMaxHeight;
  float m_VisibleHeightScalar;
  bool m_RedrawEveryFrame;
  bool m_ViewHeightmap;
  ModdingAPI::Exposed::UnityEngine::Material* m_Material;
  ModdingAPI::Exposed::UnityEngine::RenderTexture* m_RevealedMapTex;
  ModdingAPI::Exposed::UnityEngine::Rendering::RenderTargetIdentifier m_RevealedMapTargetId;
  ModdingAPI::Exposed::UnityEngine::RenderTexture* m_RevealedMapZoomDetailsTex;
  ModdingAPI::Exposed::UnityEngine::Rendering::RenderTargetIdentifier m_RevealedMapZoomDetailsTargetId;
  ModdingAPI::Exposed::AssetBundleRef* m_AssetBundle;
  ModdingAPI::Exposed::UnityEngine::Texture2D* m_MapBackground;
  ModdingAPI::Exposed::UnityEngine::Texture2D* m_MapDetails;
  ModdingAPI::Exposed::UnityEngine::Texture2D* m_Heightmap;
  ModdingAPI::Exposed::UnityEngine::Camera* m_Camera;
  ModdingAPI::Exposed::UnityEngine::Rendering::CommandBuffer* m_CommandBuffer;
  ModdingAPI::Exposed::UnityEngine::Rendering::CommandBuffer* m_CommandBufferZoomDetails;
  int32_t m_FrameIdForLastPositionAdded;
  int32_t m_FrameId;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_LastKnownSurveyPositions;
  float m_SceneRadius;
  float m_MapRadius;

  // Member methods:
  void OnEnable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FogOfWar*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x185EB40))(this);
  }
  void OnDisable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FogOfWar*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x185F640))(this);
  }
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FogOfWar*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x185FAE0))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FogOfWar*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x185FBD0))(this);
  }
  void LateUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FogOfWar*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1860030))(this);
  }
  void ClearLastKnownPositionsList() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FogOfWar*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1860150))(this);
  }
  void ProcessList(ModdingAPI::Exposed::System::Collections::Generic::List_T_* dsps, float sceneRadius, float mapRadius) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FogOfWar*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1860200))(this, dsps, sceneRadius, mapRadius);
  }
  void RefreshCommandBuffer(ModdingAPI::Exposed::UnityEngine::Rendering::CommandBuffer* commandBuffer, ModdingAPI::Exposed::UnityEngine::Rendering::RenderTargetIdentifier renderTargetId, ModdingAPI::Exposed::UnityEngine::Texture2D* map) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FogOfWar*, ModdingAPI::Exposed::UnityEngine::Rendering::CommandBuffer*, ModdingAPI::Exposed::UnityEngine::Rendering::RenderTargetIdentifier, ModdingAPI::Exposed::UnityEngine::Texture2D*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18603D0))(this, commandBuffer, renderTargetId, map);
  }
  void UpdateShaderConstants() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FogOfWar*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1860860))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::FogOfWar*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18609E0))(this);
  }
};
}