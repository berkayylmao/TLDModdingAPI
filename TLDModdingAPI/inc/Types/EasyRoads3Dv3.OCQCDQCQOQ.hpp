// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Vector3.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Quaternion.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Bounds.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Vector2.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Ray.hpp"


namespace ModdingAPI::Exposed::EasyRoads3Dv3 {
struct __OCQCDQCQOQ_Il2CppStaticFields {
};

struct __OCQCDQCQOQ_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __OCQCDQCQOQ_Il2CppClass {
  Il2CppClass_1 _1;
  __OCQCDQCQOQ_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __OCQCDQCQOQ_Il2CppVtbl vtbl;
};

class OCQCDQCQOQ {
public:
  // Il2Cpp fields:
  __OCQCDQCQOQ_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;

  // Member methods:
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* OCODCDDCQC(ModdingAPI::Exposed::System::Collections::Generic::List_T_* vecs, float x) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::OCQCDQCQOQ*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x398D90))(this, vecs, x);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::OCQCDQCQOQ*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x389390))(this);
  }

  // Static methods:
  static inline ModdingAPI::Exposed::UnityEngine::Vector3 OCDCDCDCQD(ModdingAPI::Exposed::UnityEngine::Vector3 p1, ModdingAPI::Exposed::UnityEngine::Vector3 p2, ModdingAPI::Exposed::UnityEngine::Vector3 p3, ModdingAPI::Exposed::UnityEngine::Vector3 p4) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x38DCE0))(p1, p2, p3, p4);
  }
  static inline float OQOQQQQCQD(ModdingAPI::Exposed::UnityEngine::Vector3 p1, ModdingAPI::Exposed::UnityEngine::Vector3 p2, ModdingAPI::Exposed::UnityEngine::Vector3 p3, ModdingAPI::Exposed::UnityEngine::Vector3 p) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x38DE80))(p1, p2, p3, p);
  }
  static inline bool OOOOCDQQOC(ModdingAPI::Exposed::UnityEngine::Vector3 pTarget, ModdingAPI::Exposed::UnityEngine::Vector3 pSource, ModdingAPI::Exposed::UnityEngine::Vector3 pCheck) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x38DF60))(pTarget, pSource, pCheck);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Vector3 OQQQDCODQD(ModdingAPI::Exposed::UnityEngine::Vector3 vA, ModdingAPI::Exposed::UnityEngine::Vector3 vB, ModdingAPI::Exposed::UnityEngine::Vector3 vPoint) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x38E220))(vA, vB, vPoint);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Vector3 OCQDOQQQOD(ModdingAPI::Exposed::UnityEngine::Vector3 point, ModdingAPI::Exposed::UnityEngine::Vector3 pivot, ModdingAPI::Exposed::UnityEngine::Quaternion angle) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Quaternion)>(Helpers::Memory::GetInstance().MakeAbsolute(0x38E530))(point, pivot, angle);
  }
  static inline int32_t OQOQDQCODD(ModdingAPI::Exposed::System::Collections::Generic::List_T_* mats, ModdingAPI::Exposed::UnityEngine::Material* mat) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::UnityEngine::Material*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x38E6E0))(mats, mat);
  }
  static inline float OCQDCQCOQQ(ModdingAPI::Exposed::UnityEngine::Vector3 fwd, ModdingAPI::Exposed::UnityEngine::Vector3 targetDir, ModdingAPI::Exposed::UnityEngine::Vector3 up) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x38E7F0))(fwd, targetDir, up);
  }
  static inline bool OQCOCOCOQO(ModdingAPI::Exposed::UnityEngine::GameObject* go, ModdingAPI::Exposed::UnityEngine::Bounds bounds) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GameObject*, ModdingAPI::Exposed::UnityEngine::Bounds)>(Helpers::Memory::GetInstance().MakeAbsolute(0x38E980))(go, bounds);
  }
  static inline float OOOQQOODDD(ModdingAPI::Exposed::UnityEngine::Vector3 pos, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularBase* scr) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularBase*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x38ED40))(pos, scr);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Vector3 OCCQQCOQCD(ModdingAPI::Exposed::UnityEngine::Vector3 pos, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x38F000))(pos, scr);
  }
  static inline int32_t ODOQDCOOOQ(int32_t segmentCount, ModdingAPI::Exposed::EasyRoads3Dv3::SideObject* so, bool newSegment, ModdingAPI::Exposed::EasyRoads3Dv3::ERMesh* mobject, bool lastSegment, bool skipStartBlend, bool skipEndBlend) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t, ModdingAPI::Exposed::EasyRoads3Dv3::SideObject*, bool, ModdingAPI::Exposed::EasyRoads3Dv3::ERMesh*, bool, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x38F340))(segmentCount, so, newSegment, mobject, lastSegment, skipStartBlend, skipEndBlend);
  }
  static inline void OQOCCODDQQ(ModdingAPI::Exposed::UnityEngine::Vector3 v2, ModdingAPI::Exposed::UnityEngine::Vector3 v, ModdingAPI::Exposed::UnityEngine::Vector3 dir, ModdingAPI::Exposed::UnityEngine::Vector2 vec, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* roadScr, ModdingAPI::Exposed::UnityEngine::Vector3 randomRotation) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector2, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x38F3D0))(v2, v, dir, vec, roadScr, randomRotation);
  }
  static inline void OQQCCQCQQC(ModdingAPI::Exposed::UnityEngine::Vector3 v2, ModdingAPI::Exposed::UnityEngine::Vector3 v, ModdingAPI::Exposed::UnityEngine::Vector3 dir, ModdingAPI::Exposed::UnityEngine::Vector2 vec, float angle, ModdingAPI::Exposed::UnityEngine::Vector3 randomRotation) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector2, float, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x38F830))(v2, v, dir, vec, angle, randomRotation);
  }
  static inline void RandomAlignment(ModdingAPI::Exposed::UnityEngine::Vector3 v2, ModdingAPI::Exposed::UnityEngine::Vector3 v, ModdingAPI::Exposed::UnityEngine::Vector3 dir, ModdingAPI::Exposed::UnityEngine::Vector2 vec, ModdingAPI::Exposed::UnityEngine::Vector3 randomRotation) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector2, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x38F9B0))(v2, v, dir, vec, randomRotation);
  }
  static inline void OQOCDQCDCQ(ModdingAPI::Exposed::UnityEngine::GameObject* go, ModdingAPI::Exposed::UnityEngine::Vector3 v, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* roadScr, ModdingAPI::Exposed::UnityEngine::Vector3 randomRotation) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GameObject*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x38FBC0))(go, v, roadScr, randomRotation);
  }
  static inline void OODCQODDQQ(ModdingAPI::Exposed::UnityEngine::GameObject* go, ModdingAPI::Exposed::UnityEngine::Vector3 v1, ModdingAPI::Exposed::UnityEngine::Vector3 v3, ModdingAPI::Exposed::UnityEngine::Vector3 dir, ModdingAPI::Exposed::UnityEngine::Vector3 randomRotation) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GameObject*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3900D0))(go, v1, v3, dir, randomRotation);
  }
  static inline void ODQOQDCQDC(ModdingAPI::Exposed::UnityEngine::GameObject* go, ModdingAPI::Exposed::UnityEngine::Vector3 v1, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* roadScr, ModdingAPI::Exposed::UnityEngine::Vector3 randomRotation) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GameObject*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x390790))(go, v1, roadScr, randomRotation);
  }
  static inline void InstantiatedRandomRotation(ModdingAPI::Exposed::UnityEngine::GameObject* go, ModdingAPI::Exposed::UnityEngine::Vector3 v1, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* roadScr, ModdingAPI::Exposed::UnityEngine::Vector3 randomRotation) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GameObject*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x390C80))(go, v1, roadScr, randomRotation);
  }
  static inline bool RayTriangleOCDCDCDCQD(ModdingAPI::Exposed::UnityEngine::Vector3 p1, ModdingAPI::Exposed::UnityEngine::Vector3 p2, ModdingAPI::Exposed::UnityEngine::Vector3 p3, ModdingAPI::Exposed::UnityEngine::Ray ray) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Ray)>(Helpers::Memory::GetInstance().MakeAbsolute(0x390D50))(p1, p2, p3, ray);
  }
  static inline void ODOCDDQCQQ(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularBase* scr, ModdingAPI::Exposed::UnityEngine::Vector3 v1, ModdingAPI::Exposed::UnityEngine::Vector3 v2, float minY, float maxY) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularBase*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x391230))(scr, v1, v2, minY, maxY);
  }
  static inline ModdingAPI::Exposed::System::Collections::Generic::List_T_* GetSoSplinePoints(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr, ModdingAPI::Exposed::System::Collections::Generic::List_T_* sidewaysList, ModdingAPI::Exposed::System::Collections::Generic::List_T_* markerInts, ModdingAPI::Exposed::System::Collections::Generic::List_T_* tValues, ModdingAPI::Exposed::System::Collections::Generic::List_T_* markerDistances, ModdingAPI::Exposed::System::Collections::Generic::List_T_* tmpMarkers) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x391410))(scr, sidewaysList, markerInts, tValues, markerDistances, tmpMarkers);
  }
  static inline ModdingAPI::Exposed::System::Collections::Generic::List_T_* GetRoadShapeValues(ModdingAPI::Exposed::System::Collections::Generic::List_T_* tValues, ModdingAPI::Exposed::System::Collections::Generic::List_T_* markerDistances, ModdingAPI::Exposed::System::Collections::Generic::List_T_* nodeListValues, int32_t startMarker, int32_t endMarker, ModdingAPI::Exposed::System::Collections::Generic::List_T_* roadShape, ModdingAPI::Exposed::System::Collections::Generic::List_T_* shapeTransitionTypes, bool closedTrack) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t, int32_t, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x392C10))(tValues, markerDistances, nodeListValues, startMarker, endMarker, roadShape, shapeTransitionTypes, closedTrack);
  }
  static inline ModdingAPI::Exposed::System::Collections::Generic::List_T_* GetSoMarkerPositionVecs(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr, ModdingAPI::Exposed::System::Collections::Generic::List_T_* sidewaysList, ModdingAPI::Exposed::System::Collections::Generic::List_T_* soMarkerDir, ModdingAPI::Exposed::System::Collections::Generic::List_T_* soMarkerInt) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x394780))(scr, sidewaysList, soMarkerDir, soMarkerInt);
  }
  static inline void CheckGetSoMarkerPositionVecs(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* scr, int32_t marker, ModdingAPI::Exposed::System::Collections::Generic::List_T_* soMarkerVecs, ModdingAPI::Exposed::System::Collections::Generic::List_T_* soMarkerDir, ModdingAPI::Exposed::System::Collections::Generic::List_T_* soMarkerInt) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, int32_t, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3951F0))(scr, marker, soMarkerVecs, soMarkerDir, soMarkerInt);
  }
  static inline void TerrainSmooth(ModdingAPI::Exposed::UnityEngine::Terrain* terrain, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad* road, float size, int32_t type, int32_t smoothStep) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Terrain*, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularRoad*, float, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x395B70))(terrain, road, size, type, smoothStep);
  }
  static inline bool CheckSmoothPoint(int32_t x, int32_t z, float sampleWidth, float sampleHeight, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularBase* scr) {
    return reinterpret_cast<bool(__fastcall*)(int32_t, int32_t, float, float, ModdingAPI::Exposed::EasyRoads3Dv3::ERModularBase*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x396FE0))(x, z, sampleWidth, sampleHeight, scr);
  }
  static inline float Smooth(int32_t x, int32_t y, ModdingAPI::Exposed::UnityEngine::TerrainData* terrainInfo) {
    return reinterpret_cast<float(__fastcall*)(int32_t, int32_t, ModdingAPI::Exposed::UnityEngine::TerrainData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3974F0))(x, y, terrainInfo);
  }
  static inline float Smooth1(float indent, float surrounding, float posY) {
    return reinterpret_cast<float(__fastcall*)(float, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x397930))(indent, surrounding, posY);
  }
  static inline bool CompareVector2List(ModdingAPI::Exposed::System::Collections::Generic::List_T_* list1, ModdingAPI::Exposed::System::Collections::Generic::List_T_* list2) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x397A30))(list1, list2);
  }
  static inline System_String* CheckMesh(ModdingAPI::Exposed::UnityEngine::GameObject* go) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x397BA0))(go);
  }
  static inline void ODCQQDODDC(ModdingAPI::Exposed::UnityEngine::Mesh* m, ModdingAPI::Exposed::UnityEngine::MeshRenderer* ren) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Mesh*, ModdingAPI::Exposed::UnityEngine::MeshRenderer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x397D30))(m, ren);
  }
  static inline ModdingAPI::Exposed::System::Collections::Generic::List_T_* ODQCODDDDC(ModdingAPI::Exposed::System::Collections::Generic::List_T_* nodes) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x398770))(nodes);
  }
  static inline void OODCCQCQCC(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularBase* scr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERModularBase*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3991B0))(scr);
  }
};
}