// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Playables.Playable.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Playables.PlayableGraph.hpp"


namespace ModdingAPI::Exposed::UnityEngine::Timeline {
struct __TimelineAsset_Il2CppStaticFields {
};

struct __TimelineAsset_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _6_CreatePlayable;
  VirtualInvokeData _7_get_duration;
  VirtualInvokeData _8_get_outputs;
  VirtualInvokeData _9_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize;
  VirtualInvokeData _10_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize;
  VirtualInvokeData _11_get_clipCaps;
  VirtualInvokeData _12_GatherProperties;
};

struct __TimelineAsset_Il2CppClass {
  Il2CppClass_1 _1;
  __TimelineAsset_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __TimelineAsset_Il2CppVtbl vtbl;
};

class TimelineAsset {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C73EB0;
  static inline    __TimelineAsset_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __TimelineAsset_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__TimelineAsset_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __TimelineAsset_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  int32_t m_NextId;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_Tracks;
  double m_FixedDuration;
  ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset_array* m_CacheOutputTracks;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_CacheRootTracks;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_CacheFlattenedTracks;
  ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset::EditorSettings* m_EditorSettings;
  int32_t m_DurationMode;
  int32_t m_Version;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB5410))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset::EditorSettings* get_editorSettings() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset::EditorSettings*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xE4BE40))(this);
  }
  double get_duration() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB55F0))(this);
  }
  double get_fixedDuration() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB5610))(this);
  }
  void set_fixedDuration(double value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB5730))(this, value);
  }
  int32_t get_durationMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB57E0))(this);
  }
  void set_durationMode(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383940))(this, value);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* get_outputs() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB57F0))(this);
  }
  int32_t get_clipCaps() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB5950))(this);
  }
  int32_t get_outputTrackCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB5B40))(this);
  }
  int32_t get_rootTrackCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB5B70))(this);
  }
  void OnValidate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB5C00))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset* GetRootTrack(int32_t index) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB5D40))(this, index);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* GetRootTracks() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB5DF0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset* GetOutputTrack(int32_t index) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB5E10))(this, index);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* GetOutputTracks() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB5E60))(this);
  }
  void UpdateRootTrackCache() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB5E80))(this);
  }
  void UpdateOutputTrackCache() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB6190))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_* get_flattenedTracks() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IEnumerable_T_*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB64D0))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* get_trackObjects() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xAD4220))(this);
  }
  void AddTrackInternal(ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset* track) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*, ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB6700))(this, track);
  }
  void RemoveTrack(ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset* track) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*, ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB67C0))(this, track);
  }
  int32_t GenerateNewId() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB69A0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Playables::Playable CreatePlayable(ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph graph, ModdingAPI::Exposed::UnityEngine::GameObject* go) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Playables::Playable(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*, ModdingAPI::Exposed::UnityEngine::Playables::PlayableGraph, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB69E0))(this, graph, go);
  }
  void UnityEngine::ISerializationCallbackReceiver::OnBeforeSerialize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB6BC0))(this);
  }
  void UnityEngine::ISerializationCallbackReceiver::OnAfterDeserialize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB6BD0))(this);
  }
  void __internalAwake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB6BE0))(this);
  }
  void GatherProperties(ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector* director, ModdingAPI::Exposed::UnityEngine::Timeline::IPropertyCollector* driver) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*, ModdingAPI::Exposed::UnityEngine::Playables::PlayableDirector*, ModdingAPI::Exposed::UnityEngine::Timeline::IPropertyCollector*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB6E30))(this, director, driver);
  }
  void Invalidate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB6BD0))(this);
  }
  double CalculateDuration() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB7040))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset* CreateTrack(ModdingAPI::Exposed::System::Type* type, ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset* parent, System_String* name) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*, ModdingAPI::Exposed::System::Type*, ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB7530))(this, type, parent, name);
  }
  bool DeleteClip(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip* clip) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*, ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB7920))(this, clip);
  }
  bool DeleteTrack(ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset* track) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*, ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB7B70))(this, track);
  }
  ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset* AllocateTrack(ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset* trackAssetParent, System_String* trackName, ModdingAPI::Exposed::System::Type* trackType) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*, ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset*, System_String*, ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB8150))(this, trackAssetParent, trackName, trackType);
  }
  void DeleteRecordingClip(ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset* track) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*, ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB8530))(this, track);
  }
  void DeleteRecordedAnimation(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip* clip) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*, ModdingAPI::Exposed::UnityEngine::Timeline::TimelineClip*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB86A0))(this, clip);
  }
  void UpgradeToLatestVersion() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TimelineAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }

  // Static methods:
  static inline float GetValidFramerate(float framerate) {
    return reinterpret_cast<float(__fastcall*)(float)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB5C40))(framerate);
  }
  static inline void AddSubTracksRecursive(ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset* track, ModdingAPI::Exposed::System::Collections::Generic::List_T_* allTracks) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Timeline::TrackAsset*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xFB72D0))(track, allTracks);
  }
};
}