// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Runtime.Serialization.StreamingContext.hpp"


namespace ModdingAPI::Exposed::System::Runtime::Remoting::Messaging {
struct __MethodResponse_Il2CppStaticFields {
};

struct __MethodResponse_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_get_Exception;
  VirtualInvokeData _5_get_OutArgs;
  VirtualInvokeData _6_get_ReturnValue;
  VirtualInvokeData _7_get_ArgCount;
  VirtualInvokeData _8_get_Args;
  VirtualInvokeData _9_get_LogicalCallContext;
  VirtualInvokeData _10_get_MethodBase;
  VirtualInvokeData _11_get_MethodName;
  VirtualInvokeData _12_get_MethodSignature;
  VirtualInvokeData _13_get_TypeName;
  VirtualInvokeData _14_get_Uri;
  VirtualInvokeData _15_GetArg;
  VirtualInvokeData _18_System_Runtime_Remoting_Messaging_IInternalMessage_get_TargetIdentity;
  VirtualInvokeData _19_System_Runtime_Remoting_Messaging_IInternalMessage_set_TargetIdentity;
  VirtualInvokeData _20_System_Runtime_Remoting_Messaging_IInternalMessage_get_Uri;
  VirtualInvokeData _21_System_Runtime_Remoting_Messaging_IInternalMessage_set_Uri;
  VirtualInvokeData _22_get_Properties;
  VirtualInvokeData _23_GetObjectData;
};

struct __MethodResponse_Il2CppClass {
  Il2CppClass_1 _1;
  __MethodResponse_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __MethodResponse_Il2CppVtbl vtbl;
};

class MethodResponse {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C54558;
  static inline    __MethodResponse_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __MethodResponse_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__MethodResponse_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __MethodResponse_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  System_String* _methodName;
  System_String* _uri;
  System_String* _typeName;
  ModdingAPI::Exposed::System::Reflection::MethodBase* _methodBase;
  Il2CppObject* _returnValue;
  ModdingAPI::Exposed::System::Exception* _exception;
  ModdingAPI::Exposed::System::Type_array* _methodSignature;
  ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::ArgInfo* _inArgInfo;
  ModdingAPI::Exposed::System::Object_array* _args;
  ModdingAPI::Exposed::System::Object_array* _outArgs;
  ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::IMethodCallMessage* _callMsg;
  ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::LogicalCallContext* _callContext;
  ModdingAPI::Exposed::System::Runtime::Remoting::Identity* _targetIdentity;
  ModdingAPI::Exposed::System::Collections::IDictionary* ExternalProperties;
  ModdingAPI::Exposed::System::Collections::IDictionary* InternalProperties;

  // Member methods:
  void ::ctor(ModdingAPI::Exposed::System::Exception* e, ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::IMethodCallMessage* msg) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*, ModdingAPI::Exposed::System::Exception*, ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::IMethodCallMessage*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF6A1E0))(this, e, msg);
  }
  void ::ctor(Il2CppObject* returnValue, ModdingAPI::Exposed::System::Object_array* outArgs, ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::LogicalCallContext* callCtx, ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::IMethodCallMessage* msg) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*, Il2CppObject*, ModdingAPI::Exposed::System::Object_array*, ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::LogicalCallContext*, ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::IMethodCallMessage*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF6A2C0))(this, returnValue, outArgs, callCtx, msg);
  }
  void ::ctor(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::IMethodCallMessage* msg, ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::CADMethodReturnMessage* retmsg) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*, ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::IMethodCallMessage*, ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::CADMethodReturnMessage*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF6A390))(this, msg, retmsg);
  }
  void ::ctor(ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo* info, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF63D40))(this, info, context);
  }
  void InitMethodProperty(System_String* key, Il2CppObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*, System_String*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF6A6A0))(this, key, value);
  }
  int32_t get_ArgCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x895BD0))(this);
  }
  ModdingAPI::Exposed::System::Object_array* get_Args() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Object_array*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A440))(this);
  }
  ModdingAPI::Exposed::System::Exception* get_Exception() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319970))(this);
  }
  ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::LogicalCallContext* get_LogicalCallContext() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::LogicalCallContext*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF6AAC0))(this);
  }
  ModdingAPI::Exposed::System::Reflection::MethodBase* get_MethodBase() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Reflection::MethodBase*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF6AC10))(this);
  }
  System_String* get_MethodName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF6AE40))(this);
  }
  Il2CppObject* get_MethodSignature() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF6AEF0))(this);
  }
  ModdingAPI::Exposed::System::Object_array* get_OutArgs() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Object_array*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF6AFD0))(this);
  }
  ModdingAPI::Exposed::System::Collections::IDictionary* get_Properties() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IDictionary*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF6B180))(this);
  }
  Il2CppObject* get_ReturnValue() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335370))(this);
  }
  System_String* get_TypeName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF6B310))(this);
  }
  System_String* get_Uri() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF6B3C0))(this);
  }
  void set_Uri(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A3E0))(this, value);
  }
  System_String* System::Runtime::Remoting::Messaging::IInternalMessage::get_Uri() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF6B3C0))(this);
  }
  void System::Runtime::Remoting::Messaging::IInternalMessage::set_Uri(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A3E0))(this, value);
  }
  Il2CppObject* GetArg(int32_t argNum) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF6B470))(this, argNum);
  }
  void GetObjectData(ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo* info, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext context) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*, ModdingAPI::Exposed::System::Runtime::Serialization::SerializationInfo*, ModdingAPI::Exposed::System::Runtime::Serialization::StreamingContext)>(Helpers::Memory::GetInstance().MakeAbsolute(0xF6B4B0))(this, info, context);
  }
  ModdingAPI::Exposed::System::Runtime::Remoting::Identity* System::Runtime::Remoting::Messaging::IInternalMessage::get_TargetIdentity() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Runtime::Remoting::Identity*(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319940))(this);
  }
  void System::Runtime::Remoting::Messaging::IInternalMessage::set_TargetIdentity(ModdingAPI::Exposed::System::Runtime::Remoting::Identity* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Runtime::Remoting::Messaging::MethodResponse*, ModdingAPI::Exposed::System::Runtime::Remoting::Identity*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x477710))(this, value);
  }
};
}