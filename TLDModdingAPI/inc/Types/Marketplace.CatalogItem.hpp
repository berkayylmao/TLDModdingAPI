// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.DateTime.hpp"


namespace ModdingAPI::Exposed::Marketplace {
struct __CatalogItem_Il2CppStaticFields {
};

struct __CatalogItem_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_SetNativePtr;
  VirtualInvokeData _5_GetNativePtr;
  VirtualInvokeData _6_Dispose;
};

struct __CatalogItem_Il2CppClass {
  Il2CppClass_1 _1;
  __CatalogItem_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __CatalogItem_Il2CppVtbl vtbl;
};

class CatalogItem {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C92368;
  static inline    __CatalogItem_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __CatalogItem_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__CatalogItem_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __CatalogItem_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t m_Self;
  System_String* m_Id;
  System_String* m_Name;
  System_String* m_ReducedName;
  System_String* m_ProductId;
  System_String* m_SandboxId;
  ModdingAPI::Exposed::System::DateTime m_ReleaseDate;
  ModdingAPI::Exposed::Marketplace::AvailabilityContentIdsList* m_AvailabilityContentIds;
  ModdingAPI::Exposed::Marketplace::CatalogItemImageList* m_Images;

  // Member methods:
  System_String* get_Id() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21C08C0))(this);
  }
  int32_t get_GetMediaItemType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21C0A30))(this);
  }
  System_String* get_Name() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21C0AD0))(this);
  }
  System_String* get_ReducedName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21C0C40))(this);
  }
  uint32_t get_TitleId() {
    return reinterpret_cast<uint32_t(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21C0DB0))(this);
  }
  System_String* get_ProductId() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21C0E50))(this);
  }
  System_String* get_SandboxId() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21C0FC0))(this);
  }
  bool get_IsBundle() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21C1130))(this);
  }
  bool get_IsPartOfAnyBundle() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21C11D0))(this);
  }
  ModdingAPI::Exposed::System::DateTime get_ReleaseDate() {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21C1270))(this);
  }
  ModdingAPI::Exposed::Marketplace::AvailabilityContentIdsList* get_AvailabilityContentIds() {
    return reinterpret_cast<ModdingAPI::Exposed::Marketplace::AvailabilityContentIdsList*(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21C13D0))(this);
  }
  ModdingAPI::Exposed::Marketplace::CatalogItemImageList* get_Images() {
    return reinterpret_cast<ModdingAPI::Exposed::Marketplace::CatalogItemImageList*(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21C1640))(this);
  }
  void ::ctor(intptr_t self) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*, intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x30D060))(this, self);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21C1830))(this);
  }
  void SetNativePtr(intptr_t self) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*, intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x30D060))(this, self);
  }
  intptr_t GetNativePtr() {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311320))(this);
  }
  void Dispose() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21C18C0))(this);
  }
  intptr_t _get_Id_b__1_0() {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21C19D0))(this);
  }
  intptr_t _get_Name_b__5_0() {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21C1A70))(this);
  }
  intptr_t _get_ReducedName_b__7_0() {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21C1B10))(this);
  }
  intptr_t _get_ProductId_b__11_0() {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21C1BB0))(this);
  }
  intptr_t _get_SandboxId_b__13_0() {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21C1C50))(this);
  }
  uint64_t _get_ReleaseDate_b__19_0() {
    return reinterpret_cast<uint64_t(__fastcall*)(ModdingAPI::Exposed::Marketplace::CatalogItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21C1CF0))(this);
  }
};
}