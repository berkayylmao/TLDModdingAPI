// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Color.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"


namespace ModdingAPI::Exposed {
struct __Panel_Container_Il2CppStaticFields {
};

struct __Panel_Container_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __Panel_Container_Il2CppClass {
  Il2CppClass_1 _1;
  __Panel_Container_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Panel_Container_Il2CppVtbl vtbl;
};

class Panel_Container {
public:
  // Il2Cpp fields:
  __Panel_Container_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::Panel_Container::ContainerUIConfig* m_StandardConfig;
  ModdingAPI::Exposed::Panel_Container::ContainerUIConfig* m_MissionConfig;
  ModdingAPI::Exposed::ButtonLegendContainer* m_ButtonLegendContainer;
  ModdingAPI::Exposed::UILabel* m_Label_CarryCapacity;
  ModdingAPI::Exposed::UISprite* m_CapacityBarSprite;
  ModdingAPI::Exposed::UISprite* m_CapacityBarOutline;
  ModdingAPI::Exposed::UILabel* m_Label_ContainerCapacity;
  ModdingAPI::Exposed::UIButton* m_DefaultFilterButton;
  ModdingAPI::Exposed::UIButton* m_DefaultSortButton;
  ModdingAPI::Exposed::UIButton_array* m_SortButtons;
  ModdingAPI::Exposed::UIButton_array* m_FilterButtons;
  ModdingAPI::Exposed::UILabel* m_CategoryLabel;
  ModdingAPI::Exposed::ItemDescriptionPage* m_ItemDescriptionPage;
  ModdingAPI::Exposed::UILabel* m_NameplateLabel;
  float m_AlphaUnselectedSide;
  ModdingAPI::Exposed::UISprite* m_FilterLeftGamepadButtonSprite;
  ModdingAPI::Exposed::UISprite* m_FilterRightGamepadButtonSprite;
  bool m_EnablePauseMenuOnExit;
  ModdingAPI::Exposed::Container* m_Container;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_FilteredInventoryList;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_FilteredContainerList;
  ModdingAPI::Exposed::UnityEngine::Color m_FilterLockedDisabledColor;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SortLabel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SortButtonsObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SelectedSpriteObj;
  ModdingAPI::Exposed::TweenScale* m_SelectedSpriteTweenScale;
  ModdingAPI::Exposed::UIButton* m_SelectedFilterButton;
  ModdingAPI::Exposed::UIButton* m_SelectedSortButton;
  System_String* m_SelectedSortOldSprite;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* m_SortFlipDictionary;
  int32_t m_ContainerMode;
  System_String* m_ContainerDisplayName;
  int32_t m_SelectedTableVal;
  System_String* m_InventoryFilterName;
  System_String* m_InventorySortName;
  int32_t m_SelectedSortIndex;
  ModdingAPI::Exposed::MissionUI* m_MissionUIComponent;
  ModdingAPI::Exposed::ContainerUI* m_ContainerUIComponent;
  int32_t m_InventorySelectedItemIndexVal;
  int32_t m_InventoryNumItemsDisplayed;
  int32_t m_InventoryFirstItemDisplayedIndexVal;
  int32_t m_ContainerSelectedItemIndexVal;
  int32_t m_ContainerNumItemsDisplayed;
  int32_t m_ContainerFirstItemDisplayedIndexVal;
  bool m_EnablePending;
  float m_EnableDelaySeconds;
  float m_EnableDelayElapsed;
  bool m_ShouldResetSelectedItem;
  int32_t m_NumFramesPanelActive;
  bool m_ForceRefreshRequested;
  ModdingAPI::Exposed::UnityEngine::Transform* m_SectionNavSelectedSprite;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SectionNavArrowPrompts;
  int32_t m_SectionNavIndex;
  bool m_IsInSectionNav;
  ModdingAPI::Exposed::StoryMissionObjective* m_ObjectiveToShow;
  int32_t m_HasRequestedObjectiveUpdate;

  // Member methods:
  int32_t get_m_SelectedTable() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x400FD0))(this);
  }
  void set_m_SelectedTable(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E7930))(this, value);
  }
  int32_t get_m_InventorySelectedItemIndex() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E79E0))(this);
  }
  void set_m_InventorySelectedItemIndex(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E79F0))(this, value);
  }
  int32_t get_m_InventoryFirstItemDisplayedIndex() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7AA930))(this);
  }
  void set_m_InventoryFirstItemDisplayedIndex(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E7B90))(this, value);
  }
  int32_t get_m_ContainerSelectedItemIndex() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E7BF0))(this);
  }
  void set_m_ContainerSelectedItemIndex(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E7C00))(this, value);
  }
  int32_t get_m_ContainerFirstItemDisplayedIndex() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x931E60))(this);
  }
  void set_m_ContainerFirstItemDisplayedIndex(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E7DA0))(this, value);
  }
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E7E00))(this);
  }
  void UpdateSortNavigation() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E8C70))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E8E60))(this);
  }
  void UpdateAlpha() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E95A0))(this);
  }
  void UpdateButtonLegend() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E9750))(this);
  }
  void RefreshWeight() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E9B10))(this);
  }
  int32_t RefreshInventoryTable() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E9EC0))(this);
  }
  int32_t RefreshContainerTable() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EA380))(this);
  }
  void RefreshTables() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EABC0))(this);
  }
  void HoverItem(ModdingAPI::Exposed::InventoryGridItem* gridItem, System_String* displayName, bool isOver, bool isContainerItem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, ModdingAPI::Exposed::InventoryGridItem*, System_String*, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EAED0))(this, gridItem, displayName, isOver, isContainerItem);
  }
  void EnableAfterDelay(float delaySeconds) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EB460))(this, delaySeconds);
  }
  void Enable(bool enable, bool resetFilter) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EB890))(this, enable, resetFilter);
  }
  void SetContainer(ModdingAPI::Exposed::Container* c, System_String* displayName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, ModdingAPI::Exposed::Container*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EC240))(this, c, displayName);
  }
  bool IsEnabled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EC280))(this);
  }
  bool IsEnablePending() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EC350))(this);
  }
  void OnInventoryScrollbarChange() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EC360))(this);
  }
  void OnContainerScrollbarChange() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EC580))(this);
  }
  void OnControllerScheme(bool isController) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EC7A0))(this, isController);
  }
  void OnPopupClicked() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EC930))(this);
  }
  void OnFilterInventoryChange(ModdingAPI::Exposed::UIButton* filterButtonClicked) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, ModdingAPI::Exposed::UIButton*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EC9C0))(this, filterButtonClicked);
  }
  void OnSortInventoryChange(ModdingAPI::Exposed::UIButton* sortButtonClicked) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, ModdingAPI::Exposed::UIButton*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17ECD30))(this, sortButtonClicked);
  }
  void OnMoveItem() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17ED1E0))(this);
  }
  void DragInventoryToContainer() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17ED200))(this);
  }
  void DragContainerToInventory() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17ED390))(this);
  }
  void OnInventoryToContainer(bool cameFromDrag) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17ED520))(this, cameFromDrag);
  }
  void OnContainerToInventory(bool cameFromDrag) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EE070))(this, cameFromDrag);
  }
  void ShiftFocusToInventoryItem(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EE7B0))(this, gi);
  }
  void ShiftFocusToContainerItem(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EEAE0))(this, gi);
  }
  void SelectGridItem(ModdingAPI::Exposed::InventoryGridItem* gridItem, bool isInContainer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, ModdingAPI::Exposed::InventoryGridItem*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EEE10))(this, gridItem, isInContainer);
  }
  void ForceRefresh() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EEFD0))(this);
  }
  int32_t GetNumFramesInPanel() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC11860))(this);
  }
  void MoveSelectedSpriteAndTween(ModdingAPI::Exposed::UnityEngine::Vector3 pos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EEFE0))(this, pos);
  }
  bool IgnoreWaterSupplyItem(ModdingAPI::Exposed::WaterSupply* ws) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, ModdingAPI::Exposed::WaterSupply*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EF200))(this, ws);
  }
  bool ItemPassesFilter(ModdingAPI::Exposed::GearItem* pi, System_String* filterName) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, ModdingAPI::Exposed::GearItem*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EF2F0))(this, pi, filterName);
  }
  void OnDone() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EF6F0))(this);
  }
  ModdingAPI::Exposed::GearItem* GetCurrentlySelectedGearItem() {
    return reinterpret_cast<ModdingAPI::Exposed::GearItem*(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EF8A0))(this);
  }
  void UpdateFilteredInventoryList() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17EF9F0))(this);
  }
  void UpdateFilteredContainerList() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F0030))(this);
  }
  void RefreshFilterIconColors() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F0670))(this);
  }
  bool FilterHasNoItemsInventory(System_String* filterName) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F0F50))(this, filterName);
  }
  bool FilterHasNoItemsContainer(System_String* filterName) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F1100))(this, filterName);
  }
  void RefreshNoItemsLabel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F12C0))(this);
  }
  void UpdateSortLabels() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F15D0))(this);
  }
  void UpdateDragDrop() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F1960))(this);
  }
  void RefreshScrollBars() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F2080))(this);
  }
  ModdingAPI::Exposed::UIButton* GetDefaultButtonFilter() {
    return reinterpret_cast<ModdingAPI::Exposed::UIButton*(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F20D0))(this);
  }
  ModdingAPI::Exposed::UIButton* GetFilterButtonFromFilterType(int32_t filter) {
    return reinterpret_cast<ModdingAPI::Exposed::UIButton*(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F21B0))(this, filter);
  }
  void DoSectionNavUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F2490))(this);
  }
  void DoSectionNavControls() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F25C0))(this);
  }
  bool ShouldEnterSectionNav() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F2CE0))(this);
  }
  void MoveSectionNavToButton(ModdingAPI::Exposed::UIButton* button) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, ModdingAPI::Exposed::UIButton*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F2D90))(this, button);
  }
  void EnterSectionNav() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F2EE0))(this);
  }
  void DeselectAllItems() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F30E0))(this);
  }
  bool CanEnterContainerMissionMode() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F3670))(this);
  }
  void UpdateObjectives() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F37C0))(this);
  }
  void RefreshContainerMode() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F3900))(this);
  }
  void ApplyStandardConfig() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F3AE0))(this);
  }
  void ApplyMissionConfig() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F3B00))(this);
  }
  void ApplyUIConfig(ModdingAPI::Exposed::Panel_Container::ContainerUIConfig* containerUI) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*, ModdingAPI::Exposed::Panel_Container::ContainerUIConfig*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F3B20))(this, containerUI);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Container*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F3B90))(this);
  }
};
}