// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::Rewired {
struct __InputBehavior_Il2CppStaticFields {
};

struct __InputBehavior_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __InputBehavior_Il2CppClass {
  Il2CppClass_1 _1;
  __InputBehavior_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __InputBehavior_Il2CppVtbl vtbl;
};

class InputBehavior {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C786B8;
  static inline    __InputBehavior_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __InputBehavior_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__InputBehavior_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __InputBehavior_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  int32_t _id;
  System_String* _name;
  float _joystickAxisSensitivity;
  bool _digitalAxisSimulation;
  bool _digitalAxisSnap;
  bool _digitalAxisInstantReverse;
  float _digitalAxisGravity;
  float _digitalAxisSensitivity;
  int32_t _mouseXYAxisMode;
  int32_t _mouseOtherAxisMode;
  float _mouseXYAxisSensitivity;
  int32_t _mouseXYAxisDeltaCalc;
  float _mouseOtherAxisSensitivity;
  float _customControllerAxisSensitivity;
  float _buttonDoublePressSpeed;
  float _buttonShortPressTime;
  float _buttonShortPressExpiresIn;
  float _buttonLongPressTime;
  float _buttonLongPressExpiresIn;
  float _buttonDeadZone;
  float _buttonDownBuffer;
  float _buttonRepeatRate;
  float _buttonRepeatDelay;

  // Member methods:
  int32_t get_id() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311060))(this);
  }
  void set_id(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311070))(this, value);
  }
  System_String* get_name() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335360))(this);
  }
  void set_name(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A3E0))(this, value);
  }
  float get_joystickAxisSensitivity() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56ECC0))(this);
  }
  void set_joystickAxisSensitivity(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56ECD0))(this, value);
  }
  bool get_digitalAxisSimulation() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56ED00))(this);
  }
  void set_digitalAxisSimulation(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56ED10))(this, value);
  }
  bool get_digitalAxisSnap() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56ED20))(this);
  }
  void set_digitalAxisSnap(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56ED30))(this, value);
  }
  bool get_digitalAxisInstantReverse() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56ED40))(this);
  }
  void set_digitalAxisInstantReverse(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56ED50))(this, value);
  }
  float get_digitalAxisGravity() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56ED60))(this);
  }
  void set_digitalAxisGravity(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56ED70))(this, value);
  }
  float get_digitalAxisSensitivity() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56EDA0))(this);
  }
  void set_digitalAxisSensitivity(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56EDB0))(this, value);
  }
  int32_t get_mouseXYAxisMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D870))(this);
  }
  void set_mouseXYAxisMode(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x31DD70))(this, value);
  }
  int32_t get_mouseOtherAxisMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D880))(this);
  }
  void set_mouseOtherAxisMode(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D890))(this, value);
  }
  float get_mouseXYAxisSensitivity() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56EDE0))(this);
  }
  void set_mouseXYAxisSensitivity(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56EDF0))(this, value);
  }
  int32_t get_mouseXYAxisDeltaCalc() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8C0))(this);
  }
  void set_mouseXYAxisDeltaCalc(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D8D0))(this, value);
  }
  float get_mouseOtherAxisSensitivity() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56EE20))(this);
  }
  void set_mouseOtherAxisSensitivity(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56EE30))(this, value);
  }
  float get_customControllerAxisSensitivity() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56EE60))(this);
  }
  void set_customControllerAxisSensitivity(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56EE70))(this, value);
  }
  float get_buttonDoublePressSpeed() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56EEC0))(this);
  }
  void set_buttonDoublePressSpeed(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56EED0))(this, value);
  }
  float get_buttonShortPressTime() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4EFF50))(this);
  }
  void set_buttonShortPressTime(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56EF20))(this, value);
  }
  float get_buttonShortPressExpiresIn() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56EF50))(this);
  }
  void set_buttonShortPressExpiresIn(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56EF60))(this, value);
  }
  float get_buttonLongPressTime() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56EF90))(this);
  }
  void set_buttonLongPressTime(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56EFA0))(this, value);
  }
  float get_buttonLongPressExpiresIn() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56EFD0))(this);
  }
  void set_buttonLongPressExpiresIn(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56EFE0))(this, value);
  }
  float get_buttonDeadZone() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56F010))(this);
  }
  void set_buttonDeadZone(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56F020))(this, value);
  }
  float get_buttonDownBuffer() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56F070))(this);
  }
  void set_buttonDownBuffer(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56F080))(this, value);
  }
  float get_buttonRepeatRate() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56F0B0))(this);
  }
  void set_buttonRepeatRate(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56F0C0))(this, value);
  }
  float get_buttonRepeatDelay() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56F0E0))(this);
  }
  void set_buttonRepeatDelay(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56F0F0))(this, value);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56F100))(this);
  }
  void ::ctor(ModdingAPI::Exposed::Rewired::InputBehavior* source) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56F130))(this, source);
  }
  System_String* ToXmlString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56F170))(this);
  }
  bool ImportXmlString(System_String* xmlString) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56F270))(this, xmlString);
  }
  System_String* ToJsonString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56F3A0))(this);
  }
  bool ImportJsonString(System_String* jsonString) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56F4A0))(this, jsonString);
  }
  bool ImportData(ModdingAPI::Exposed::Rewired::InputBehavior* inputBehavior) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56F5D0))(this, inputBehavior);
  }
  ModdingAPI::Exposed::Rewired::InputBehavior* Clone() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::InputBehavior*(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56F600))(this);
  }
  void Reset() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56F780))(this);
  }
  ModdingAPI::Exposed::Rewired::Utils::Classes::Data::SerializedObject* mtrEQsGjmYbOCvenrkuSjmJMXYJ() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Utils::Classes::Data::SerializedObject*(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x56F880))(this);
  }
  void BeZEDoYXwBgaCCovsVlHfoaQlnK(ModdingAPI::Exposed::Rewired::Utils::Classes::Data::SerializedObject* ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, ModdingAPI::Exposed::Rewired::Utils::Classes::Data::SerializedObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x571240))(this, );
  }

  // Static methods:
  static inline void imtjhfQfDRrxVmUIbgWToOfJwB(ModdingAPI::Exposed::Rewired::InputBehavior* , ModdingAPI::Exposed::Rewired::InputBehavior* , bool ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::InputBehavior*, ModdingAPI::Exposed::Rewired::InputBehavior*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5716E0))(, , );
  }
};
}