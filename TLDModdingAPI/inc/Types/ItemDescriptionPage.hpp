// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Color.hpp"


namespace ModdingAPI::Exposed {
struct __ItemDescriptionPage_Il2CppStaticFields {
};

struct __ItemDescriptionPage_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __ItemDescriptionPage_Il2CppClass {
  Il2CppClass_1 _1;
  __ItemDescriptionPage_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __ItemDescriptionPage_Il2CppVtbl vtbl;
};

class ItemDescriptionPage {
public:
  // Il2Cpp fields:
  __ItemDescriptionPage_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::UILabel* m_ItemNameLabel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_BGNormal;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_BGClothing;
  ModdingAPI::Exposed::UISprite* m_ItemNotesIcon;
  ModdingAPI::Exposed::UISprite* m_ItemNotesIconShadow;
  ModdingAPI::Exposed::UILabel* m_ItemNotesLabel;
  System_String* m_WearingIcon;
  System_String* m_InProgressIcon;
  ModdingAPI::Exposed::UISprite* m_ClothingNotesIcon;
  ModdingAPI::Exposed::UISprite* m_ClothingNotesIconShadow;
  ModdingAPI::Exposed::UILabel* m_ClothingNotesLabel;
  ModdingAPI::Exposed::UISprite* m_TopRightStatusIcon;
  ModdingAPI::Exposed::UISprite* m_TopRightStatusIconShadow;
  ModdingAPI::Exposed::UILabel* m_TopRightStatusLabel;
  ModdingAPI::Exposed::UISprite* m_TopLeftStatusIcon;
  ModdingAPI::Exposed::UISprite* m_TopLeftStatusIconShadow;
  ModdingAPI::Exposed::UILabel* m_TopLeftStatusLabel;
  ModdingAPI::Exposed::UISprite* m_StackStatusIcon;
  ModdingAPI::Exposed::UISprite* m_StackStatusIconShadow;
  ModdingAPI::Exposed::UILabel* m_StackStatusLabel;
  ModdingAPI::Exposed::UnityEngine::Color m_StackStatusColor;
  System_String* m_LiquidIcon;
  System_String* m_LampFuelIcon;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_FavoriteObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_FavoriteCheckmark;
  ModdingAPI::Exposed::UILabel* m_FavoriteLabel;
  ModdingAPI::Exposed::UnityEngine::Color m_FavoriteLabelColorChecked;
  ModdingAPI::Exposed::UnityEngine::Color m_FavoriteLabelColorUnchecked;
  System_String* m_FoodHotStatusIcon;
  ModdingAPI::Exposed::UnityEngine::Color m_FoodHotStatusColor;
  System_String* m_FoodColdStatusIcon;
  ModdingAPI::Exposed::UnityEngine::Color m_FoodColdStatusColor;
  System_String* m_FrozenStatusIcon;
  ModdingAPI::Exposed::UnityEngine::Color m_FrozenStatusColor;
  System_String* m_WetStatusIcon;
  ModdingAPI::Exposed::UnityEngine::Color m_WetStatusColor;
  ModdingAPI::Exposed::UISprite* m_ClothingLayerStatusIcon;
  ModdingAPI::Exposed::UISprite* m_ClothingLayerStatusIconShadow;
  ModdingAPI::Exposed::UILabel* m_ClothingLayerStatusLabel;
  System_String* m_ClothingOuterLayerIcon;
  System_String* m_ClothingInnerLayerIcon;
  ModdingAPI::Exposed::UILabel* m_ItemDescLabel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ClothingStatsObject;
  ModdingAPI::Exposed::UISprite* m_ItemConditionSprite;
  ModdingAPI::Exposed::UILabel* m_ItemConditionLabel;
  ModdingAPI::Exposed::UISprite* m_ItemConditionArrow;
  ModdingAPI::Exposed::UILabel* m_ItemMobilityLabel;
  ModdingAPI::Exposed::UISprite* m_ItemMobilityArrow;
  ModdingAPI::Exposed::UILabel* m_ItemToughnessLabel;
  ModdingAPI::Exposed::UISlider* m_ItemToughnessSlider;
  ModdingAPI::Exposed::UISprite* m_ItemToughnessArrow;
  float m_ItemToughnessMaxValue;
  ModdingAPI::Exposed::UISprite* m_ItemToughnessFillSprite;
  ModdingAPI::Exposed::UILabel* m_ItemWaterproofnessLabel;
  ModdingAPI::Exposed::UISlider* m_ItemWaterproofnessSlider;
  ModdingAPI::Exposed::UISprite* m_ItemWaterproofnessArrow;
  ModdingAPI::Exposed::UISprite* m_ItemWaterproofFillSprite;
  ModdingAPI::Exposed::UILabel* m_ItemWarmthLabel;
  ModdingAPI::Exposed::UISprite* m_ItemWarmthArrow;
  ModdingAPI::Exposed::UILabel* m_ItemWeightLabel;
  ModdingAPI::Exposed::UISprite* m_ItemWeightArrow;
  ModdingAPI::Exposed::UILabel* m_ItemWindproofLabel;
  ModdingAPI::Exposed::UISprite* m_ItemWindproofArrow;
  ModdingAPI::Exposed::UnityEngine::Color m_CompareColorBetter;
  ModdingAPI::Exposed::UnityEngine::Color m_CompareColorWorse;
  ModdingAPI::Exposed::UnityEngine::Color m_BlueGreenColor;
  ModdingAPI::Exposed::UnityEngine::Color m_WhiteColor;
  ModdingAPI::Exposed::UnityEngine::Color m_RedColor;
  ModdingAPI::Exposed::UIButton* m_UIButton_ButtonEquip;
  ModdingAPI::Exposed::UIButton* m_UIButton_ButtonDrop;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_MouseButtonEquip;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_MouseButtonExamine;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_MouseButtonDrop;
  ModdingAPI::Exposed::UILabel* m_Label_MouseButtonEquip;
  ModdingAPI::Exposed::UILabel* m_Label_MouseButtonExamine;
  ModdingAPI::Exposed::OnButtonDelegate* m_OnDropDelegate;
  ModdingAPI::Exposed::OnButtonDelegate* m_OnActionsDelegate;
  ModdingAPI::Exposed::OnButtonDelegate* m_OnEquipDelegate;

  // Member methods:
  void OnEnable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x186F250))(this);
  }
  void UpdateGearItemDescription(ModdingAPI::Exposed::GearItem* gi, ModdingAPI::Exposed::GearItem* compareItem, ModdingAPI::Exposed::OnButtonDelegate* onDrop, ModdingAPI::Exposed::OnButtonDelegate* onActions, ModdingAPI::Exposed::OnButtonDelegate* onEquip) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*, ModdingAPI::Exposed::GearItem*, ModdingAPI::Exposed::OnButtonDelegate*, ModdingAPI::Exposed::OnButtonDelegate*, ModdingAPI::Exposed::OnButtonDelegate*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x186F810))(this, gi, compareItem, onDrop, onActions, onEquip);
  }
  bool CanExamine(ModdingAPI::Exposed::GearItem* gi) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1870E00))(this, gi);
  }
  bool CanDrop(ModdingAPI::Exposed::GearItem* gi) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1871130))(this, gi);
  }
  void OnDrop() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1871D70))(this);
  }
  void OnActions() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1871DA0))(this);
  }
  void OnEquip() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1871DD0))(this);
  }
  void OnFavorite() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1871E00))(this);
  }
  System_String* BuildItemDescription(ModdingAPI::Exposed::GearItem* gi) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1871EC0))(this, gi);
  }
  void UpdateConditionDisplay(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1872080))(this, gi);
  }
  void UpdateAndEnableTopRightStatus(System_String* text, System_String* spriteName, ModdingAPI::Exposed::UnityEngine::Color c) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, System_String*, System_String*, ModdingAPI::Exposed::UnityEngine::Color)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1872550))(this, text, spriteName, c);
  }
  void UpdateAndEnableTopLeftStatus(System_String* text, System_String* spriteName, ModdingAPI::Exposed::UnityEngine::Color c) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, System_String*, System_String*, ModdingAPI::Exposed::UnityEngine::Color)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1872930))(this, text, spriteName, c);
  }
  void UpdateAndEnableStackStatus(System_String* text, System_String* spriteName, ModdingAPI::Exposed::UnityEngine::Color c) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, System_String*, System_String*, ModdingAPI::Exposed::UnityEngine::Color)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1872D20))(this, text, spriteName, c);
  }
  void UpdateAndEnableClothingLayerStatus(System_String* text, System_String* spriteName, ModdingAPI::Exposed::UnityEngine::Color c) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, System_String*, System_String*, ModdingAPI::Exposed::UnityEngine::Color)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18731A0))(this, text, spriteName, c);
  }
  void UpdateTopRightStatus(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1873590))(this, gi);
  }
  void UpdateTopLeftStatus(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1873DC0))(this, gi);
  }
  void UpdateStackStatus(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1874140))(this, gi);
  }
  void UpdateClothingLayerStatus(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18748A0))(this, gi);
  }
  void UpdateFavoriteStatus(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1874BB0))(this, gi);
  }
  System_String* StripBraces(System_String* text) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1874E10))(this, text);
  }
  void UpdateWeightDisplay(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1874F90))(this, gi);
  }
  void UpdateWindproofDisplay(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18750E0))(this, gi);
  }
  void UpdateWarmthDisplay(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1875200))(this, gi);
  }
  void UpdateMobilityDisplay(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1875320))(this, gi);
  }
  void UpdateWaterproofnessDisplay(ModdingAPI::Exposed::GearItem* gi, ModdingAPI::Exposed::GearItem* compareItem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1875470))(this, gi, compareItem);
  }
  void UpdateToughnessDisplay(ModdingAPI::Exposed::GearItem* gi, ModdingAPI::Exposed::GearItem* compareItem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18758A0))(this, gi, compareItem);
  }
  void UpdateButtons(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1875CE0))(this, gi);
  }
  System_String* GetItemInfoString(ModdingAPI::Exposed::GearItem* gi) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1876370))(this, gi);
  }
  ModdingAPI::Exposed::UnityEngine::Color GetColorForInfoString(ModdingAPI::Exposed::GearItem* gi) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Color(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1876820))(this, gi);
  }
  void UpdateComparisonArrows(ModdingAPI::Exposed::GearItem* gi, ModdingAPI::Exposed::GearItem* compareItem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1876B30))(this, gi, compareItem);
  }
  void UpdateItemConditionArrow(ModdingAPI::Exposed::GearItem* gi, ModdingAPI::Exposed::GearItem* compareItem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18771C0))(this, gi, compareItem);
  }
  void UpdateItemMobilityArrow(ModdingAPI::Exposed::GearItem* gi, ModdingAPI::Exposed::GearItem* compareItem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1877240))(this, gi, compareItem);
  }
  void UpdateItemToughnessArrow(ModdingAPI::Exposed::GearItem* gi, ModdingAPI::Exposed::GearItem* compareItem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1877380))(this, gi, compareItem);
  }
  void UpdateItemWaterproofnessArrow(ModdingAPI::Exposed::GearItem* gi, ModdingAPI::Exposed::GearItem* compareItem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18774C0))(this, gi, compareItem);
  }
  void UpdateItemWarmthArrow(ModdingAPI::Exposed::GearItem* gi, ModdingAPI::Exposed::GearItem* compareItem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1877610))(this, gi, compareItem);
  }
  void UpdateItemWeightArrow(ModdingAPI::Exposed::GearItem* gi, ModdingAPI::Exposed::GearItem* compareItem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1877760))(this, gi, compareItem);
  }
  void UpdateItemWindproofArrow(ModdingAPI::Exposed::GearItem* gi, ModdingAPI::Exposed::GearItem* compareItem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::GearItem*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1877890))(this, gi, compareItem);
  }
  void UpdateArrow(ModdingAPI::Exposed::UISprite* sprite, int32_t baseValue, int32_t compareValue) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*, ModdingAPI::Exposed::UISprite*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18779E0))(this, sprite, baseValue, compareValue);
  }
  void DisableAllComparisonArrows() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1877CD0))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::ItemDescriptionPage*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x389390))(this);
  }

  // Static methods:
  static inline System_String* GetEquipButtonLocalizationId(ModdingAPI::Exposed::GearItem* gi) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18712D0))(gi);
  }
  static inline System_String* GetExamineButtonLocalizationID(ModdingAPI::Exposed::GearItem* gi) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1876270))(gi);
  }
};
}