// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.EventSystems.RaycastResult.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"


namespace ModdingAPI::Exposed::Rewired::Integration::UnityUI {
struct __PlayerPointerEventData_Il2CppStaticFields {
};

struct __PlayerPointerEventData_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_Reset;
  VirtualInvokeData _5_Use;
  VirtualInvokeData _6_get_used;
};

struct __PlayerPointerEventData_Il2CppClass {
  Il2CppClass_1 _1;
  __PlayerPointerEventData_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __PlayerPointerEventData_Il2CppVtbl vtbl;
};

class PlayerPointerEventData {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C63BB8;
  static inline    __PlayerPointerEventData_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __PlayerPointerEventData_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__PlayerPointerEventData_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __PlayerPointerEventData_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  bool m_Used;
  ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem* BaseEventData_m_EventSystem;
  ModdingAPI::Exposed::UnityEngine::GameObject* PointerEventData__pointerEnter_k__BackingField;
  ModdingAPI::Exposed::UnityEngine::GameObject* PointerEventData_m_PointerPress;
  ModdingAPI::Exposed::UnityEngine::GameObject* PointerEventData__lastPress_k__BackingField;
  ModdingAPI::Exposed::UnityEngine::GameObject* PointerEventData__rawPointerPress_k__BackingField;
  ModdingAPI::Exposed::UnityEngine::GameObject* PointerEventData__pointerDrag_k__BackingField;
  ModdingAPI::Exposed::UnityEngine::EventSystems::RaycastResult PointerEventData__pointerCurrentRaycast_k__BackingField;
  ModdingAPI::Exposed::UnityEngine::EventSystems::RaycastResult PointerEventData__pointerPressRaycast_k__BackingField;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* hovered;
  bool PointerEventData__eligibleForClick_k__BackingField;
  int32_t PointerEventData__pointerId_k__BackingField;
  ModdingAPI::Exposed::UnityEngine::Vector2 PointerEventData__position_k__BackingField;
  ModdingAPI::Exposed::UnityEngine::Vector2 PointerEventData__delta_k__BackingField;
  ModdingAPI::Exposed::UnityEngine::Vector2 PointerEventData__pressPosition_k__BackingField;
  ModdingAPI::Exposed::UnityEngine::Vector3 PointerEventData__worldPosition_k__BackingField;
  ModdingAPI::Exposed::UnityEngine::Vector3 PointerEventData__worldNormal_k__BackingField;
  float PointerEventData__clickTime_k__BackingField;
  int32_t PointerEventData__clickCount_k__BackingField;
  ModdingAPI::Exposed::UnityEngine::Vector2 PointerEventData__scrollDelta_k__BackingField;
  bool PointerEventData__useDragThreshold_k__BackingField;
  bool PointerEventData__dragging_k__BackingField;
  int32_t PointerEventData__button_k__BackingField;
  int32_t _playerId_k__BackingField;
  int32_t _inputSourceIndex_k__BackingField;
  ModdingAPI::Exposed::Rewired::UI::IMouseInputSource* _mouseSource_k__BackingField;
  ModdingAPI::Exposed::Rewired::UI::ITouchInputSource* _touchSource_k__BackingField;
  int32_t _sourceType_k__BackingField;
  int32_t _buttonIndex_k__BackingField;

  // Member methods:
  int32_t get_playerId() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x79C620))(this);
  }
  void set_playerId(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21735C0))(this, value);
  }
  int32_t get_inputSourceIndex() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x401150))(this);
  }
  void set_inputSourceIndex(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21735D0))(this, value);
  }
  ModdingAPI::Exposed::Rewired::UI::IMouseInputSource* get_mouseSource() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::UI::IMouseInputSource*(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33E180))(this);
  }
  void set_mouseSource(ModdingAPI::Exposed::Rewired::UI::IMouseInputSource* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData*, ModdingAPI::Exposed::Rewired::UI::IMouseInputSource*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33E190))(this, value);
  }
  ModdingAPI::Exposed::Rewired::UI::ITouchInputSource* get_touchSource() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::UI::ITouchInputSource*(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33E1A0))(this);
  }
  void set_touchSource(ModdingAPI::Exposed::Rewired::UI::ITouchInputSource* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData*, ModdingAPI::Exposed::Rewired::UI::ITouchInputSource*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33E1B0))(this, value);
  }
  int32_t get_sourceType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x79C830))(this);
  }
  void set_sourceType(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21735E0))(this, value);
  }
  int32_t get_buttonIndex() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7AA7E0))(this);
  }
  void set_buttonIndex(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x21735F0))(this, value);
  }
  void ::ctor(ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem* eventSystem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData*, ModdingAPI::Exposed::UnityEngine::EventSystems::EventSystem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2173600))(this, eventSystem);
  }
  System_String* ToString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::Rewired::Integration::UnityUI::PlayerPointerEventData*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2173630))(this);
  }
};
}