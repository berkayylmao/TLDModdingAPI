// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::DigitalOpus::MB::Core {
struct __MB3_MultiMeshCombiner_Il2CppStaticFields {
  ModdingAPI::Exposed::UnityEngine::GameObject_array* empty;
  ModdingAPI::Exposed::System::Int32_array* emptyIDs;
};

struct __MB3_MultiMeshCombiner_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_get_LOG_LEVEL;
  VirtualInvokeData _5_set_LOG_LEVEL;
  VirtualInvokeData _6_get_validationLevel;
  VirtualInvokeData _7_set_validationLevel;
  VirtualInvokeData _8_get_textureBakeResults;
  VirtualInvokeData _9_set_textureBakeResults;
  VirtualInvokeData _10_get_resultSceneObject;
  VirtualInvokeData _11_set_resultSceneObject;
  VirtualInvokeData _12_get_targetRenderer;
  VirtualInvokeData _13_set_targetRenderer;
  VirtualInvokeData _14_get_renderType;
  VirtualInvokeData _15_set_renderType;
  VirtualInvokeData _16_get_outputOption;
  VirtualInvokeData _17_set_outputOption;
  VirtualInvokeData _18_get_lightmapOption;
  VirtualInvokeData _19_set_lightmapOption;
  VirtualInvokeData _20_get_doNorm;
  VirtualInvokeData _21_set_doNorm;
  VirtualInvokeData _22_get_doTan;
  VirtualInvokeData _23_set_doTan;
  VirtualInvokeData _24_get_doCol;
  VirtualInvokeData _25_set_doCol;
  VirtualInvokeData _26_get_doUV;
  VirtualInvokeData _27_set_doUV;
  VirtualInvokeData _28_get_doUV1;
  VirtualInvokeData _29_set_doUV1;
  VirtualInvokeData _30_doUV2;
  VirtualInvokeData _31_get_doUV3;
  VirtualInvokeData _32_set_doUV3;
  VirtualInvokeData _33_get_doUV4;
  VirtualInvokeData _34_set_doUV4;
  VirtualInvokeData _35_get_doBlendShapes;
  VirtualInvokeData _36_set_doBlendShapes;
  VirtualInvokeData _37_get_recenterVertsToBoundsCenter;
  VirtualInvokeData _38_set_recenterVertsToBoundsCenter;
  VirtualInvokeData _39_GetLightmapIndex;
  VirtualInvokeData _40_ClearBuffers;
  VirtualInvokeData _41_ClearMesh;
  VirtualInvokeData _42_DestroyMesh;
  VirtualInvokeData _43_DestroyMeshEditor;
  VirtualInvokeData _44_GetObjectsInCombined;
  VirtualInvokeData _45_GetNumObjectsInCombined;
  VirtualInvokeData _46_GetNumVerticesFor;
  VirtualInvokeData _47_GetNumVerticesFor;
  VirtualInvokeData _48_BuildSourceBlendShapeToCombinedIndexMap;
  VirtualInvokeData _49_Apply;
  VirtualInvokeData _50_Apply;
  VirtualInvokeData _51_Apply;
  VirtualInvokeData _52_UpdateGameObjects;
  VirtualInvokeData _53_AddDeleteGameObjects;
  VirtualInvokeData _54_AddDeleteGameObjectsByID;
  VirtualInvokeData _55_CombinedMeshContains;
  VirtualInvokeData _56_UpdateSkinnedMeshApproximateBounds;
  VirtualInvokeData _57_UpdateSkinnedMeshApproximateBoundsFromBones;
  VirtualInvokeData _58_CheckIntegrity;
  VirtualInvokeData _59_UpdateSkinnedMeshApproximateBoundsFromBounds;
  VirtualInvokeData _60__CreateTemporaryTextrueBakeResult;
  VirtualInvokeData _61_GetMaterialsOnTargetRenderer;
};

struct __MB3_MultiMeshCombiner_Il2CppClass {
  Il2CppClass_1 _1;
  __MB3_MultiMeshCombiner_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __MB3_MultiMeshCombiner_Il2CppVtbl vtbl;
};

class MB3_MultiMeshCombiner {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C45D60;
  static inline    __MB3_MultiMeshCombiner_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __MB3_MultiMeshCombiner_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__MB3_MultiMeshCombiner_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __MB3_MultiMeshCombiner_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  int32_t _LOG_LEVEL;
  int32_t _validationLevel;
  System_String* _name;
  ModdingAPI::Exposed::MB2_TextureBakeResults* _textureBakeResults;
  ModdingAPI::Exposed::UnityEngine::GameObject* _resultSceneObject;
  ModdingAPI::Exposed::UnityEngine::Renderer* _targetRenderer;
  int32_t _renderType;
  int32_t _outputOption;
  int32_t _lightmapOption;
  bool _doNorm;
  bool _doTan;
  bool _doCol;
  bool _doUV;
  bool _doUV3;
  bool _doUV4;
  bool _doBlendShapes;
  bool _recenterVertsToBoundsCenter;
  bool _optimizeAfterBake;
  float uv2UnwrappingParamsHardAngle;
  float uv2UnwrappingParamsPackMargin;
  bool _usingTemporaryTextureBakeResult;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* obj2MeshCombinerMap;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* meshCombiners;
  int32_t _maxVertsInMesh;

  // Member methods:
  int32_t get_LOG_LEVEL() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311060))(this);
  }
  void set_LOG_LEVEL(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2613580))(this, value);
  }
  void set_validationLevel(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26136A0))(this, value);
  }
  int32_t get_validationLevel() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311080))(this);
  }
  int32_t get_maxVertsInMesh() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383A00))(this);
  }
  void set_maxVertsInMesh(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26137B0))(this, value);
  }
  int32_t GetNumObjectsInCombined() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2613910))(this);
  }
  int32_t GetNumVerticesFor(ModdingAPI::Exposed::UnityEngine::GameObject* go) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26139A0))(this, go);
  }
  int32_t GetNumVerticesFor(int32_t gameObjectID) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2613AE0))(this, gameObjectID);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* GetObjectsInCombined() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2613C10))(this);
  }
  int32_t GetLightmapIndex() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2613E20))(this);
  }
  bool CombinedMeshContains(ModdingAPI::Exposed::UnityEngine::GameObject* go) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2613F00))(this, go);
  }
  bool _validateTextureBakeResults() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2613FD0))(this);
  }
  void Apply(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner::GenerateUV2Delegate* uv2GenerationMethod) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*, ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner::GenerateUV2Delegate*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2614150))(this, uv2GenerationMethod);
  }
  void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones, bool blendShapesFlag, ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner::GenerateUV2Delegate* uv2GenerationMethod) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombiner::GenerateUV2Delegate*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26142C0))(this, triangles, vertices, normals, tangents, uvs, uv2, uv3, uv4, colors, bones, blendShapesFlag, uv2GenerationMethod);
  }
  void UpdateSkinnedMeshApproximateBounds() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26144C0))(this);
  }
  void UpdateSkinnedMeshApproximateBoundsFromBones() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26145C0))(this);
  }
  void UpdateSkinnedMeshApproximateBoundsFromBounds() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26146C0))(this);
  }
  bool UpdateGameObjects(ModdingAPI::Exposed::UnityEngine::GameObject_array* gos, bool recalcBounds, bool updateVertices, bool updateNormals, bool updateTangents, bool updateUV, bool updateUV2, bool updateUV3, bool updateUV4, bool updateColors, bool updateSkinningInfo) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*, ModdingAPI::Exposed::UnityEngine::GameObject_array*, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26147C0))(this, gos, recalcBounds, updateVertices, updateNormals, updateTangents, updateUV, updateUV2, updateUV3, updateUV4, updateColors, updateSkinningInfo);
  }
  bool AddDeleteGameObjects(ModdingAPI::Exposed::UnityEngine::GameObject_array* gos, ModdingAPI::Exposed::UnityEngine::GameObject_array* deleteGOs, bool disableRendererInSource) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*, ModdingAPI::Exposed::UnityEngine::GameObject_array*, ModdingAPI::Exposed::UnityEngine::GameObject_array*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2614C90))(this, gos, deleteGOs, disableRendererInSource);
  }
  bool AddDeleteGameObjectsByID(ModdingAPI::Exposed::UnityEngine::GameObject_array* gos, ModdingAPI::Exposed::System::Int32_array* deleteGOinstanceIDs, bool disableRendererInSource) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*, ModdingAPI::Exposed::UnityEngine::GameObject_array*, ModdingAPI::Exposed::System::Int32_array*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2614EB0))(this, gos, deleteGOinstanceIDs, disableRendererInSource);
  }
  bool _validate(ModdingAPI::Exposed::UnityEngine::GameObject_array* gos, ModdingAPI::Exposed::System::Int32_array* deleteGOinstanceIDs) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*, ModdingAPI::Exposed::UnityEngine::GameObject_array*, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26154B0))(this, gos, deleteGOinstanceIDs);
  }
  void _distributeAmongBakers(ModdingAPI::Exposed::UnityEngine::GameObject_array* gos, ModdingAPI::Exposed::System::Int32_array* deleteGOinstanceIDs) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*, ModdingAPI::Exposed::UnityEngine::GameObject_array*, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2615B70))(this, gos, deleteGOinstanceIDs);
  }
  bool _bakeStep1(ModdingAPI::Exposed::UnityEngine::GameObject_array* gos, ModdingAPI::Exposed::System::Int32_array* deleteGOinstanceIDs, bool disableRendererInSource) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*, ModdingAPI::Exposed::UnityEngine::GameObject_array*, ModdingAPI::Exposed::System::Int32_array*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26167B0))(this, gos, deleteGOinstanceIDs, disableRendererInSource);
  }
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* BuildSourceBlendShapeToCombinedIndexMap() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26178B0))(this);
  }
  void ClearBuffers() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2617DB0))(this);
  }
  void ClearMesh() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2617ED0))(this);
  }
  void DestroyMesh() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2617EF0))(this);
  }
  void DestroyMeshEditor(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB2_EditorMethodsInterface* editorMethods) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*, ModdingAPI::Exposed::DigitalOpus::MB::Core::MB2_EditorMethodsInterface*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26181A0))(this, editorMethods);
  }
  void _setMBValues(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle* targ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*, ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MeshCombinerSingle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2618450))(this, targ);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* GetMaterialsOnTargetRenderer() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2618690))(this);
  }
  void CheckIntegrity() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x26189E0))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DigitalOpus::MB::Core::MB3_MultiMeshCombiner*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2618B10))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::GameObject_array*> empty = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::GameObject_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->empty; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Int32_array*> emptyIDs = __CppStaticProperty<ModdingAPI::Exposed::System::Int32_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->emptyIDs; }
  );

  // Static methods:
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x2618D90))();
  }
};
}