// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Xml.XmlCharType.hpp"
#include "ModdingAPI.Exposed.System.Xml.LineInfo.hpp"


namespace ModdingAPI::Exposed::System::Xml {
struct __DtdParser_Il2CppStaticFields {
};

struct __DtdParser_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_System_Xml_IDtdParser_ParseInternalDtd;
  VirtualInvokeData _5_System_Xml_IDtdParser_ParseFreeFloatingDtd;
};

struct __DtdParser_Il2CppClass {
  Il2CppClass_1 _1;
  __DtdParser_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __DtdParser_Il2CppVtbl vtbl;
};

class DtdParser {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C80090;
  static inline    __DtdParser_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __DtdParser_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__DtdParser_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __DtdParser_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::System::Xml::IDtdParserAdapter* readerAdapter;
  ModdingAPI::Exposed::System::Xml::IDtdParserAdapterWithValidation* readerAdapterWithValidation;
  ModdingAPI::Exposed::System::Xml::XmlNameTable* nameTable;
  ModdingAPI::Exposed::System::Xml::Schema::SchemaInfo* schemaInfo;
  ModdingAPI::Exposed::System::Xml::XmlCharType xmlCharType;
  System_String* systemId;
  System_String* publicId;
  bool normalize;
  bool validate;
  bool supportNamespaces;
  bool v1Compat;
  ModdingAPI::Exposed::System::Char_array* chars;
  int32_t charsUsed;
  int32_t curPos;
  int32_t scanningFunction;
  int32_t nextScaningFunction;
  int32_t savedScanningFunction;
  bool whitespaceSeen;
  int32_t tokenStartPos;
  int32_t colonPos;
  ModdingAPI::Exposed::System::Text::StringBuilder* internalSubsetValueSb;
  int32_t externalEntitiesDepth;
  int32_t currentEntityId;
  bool freeFloatingDtd;
  bool hasFreeFloatingInternalSubset;
  ModdingAPI::Exposed::System::Text::StringBuilder* stringBuilder;
  int32_t condSectionDepth;
  ModdingAPI::Exposed::System::Xml::LineInfo literalLineInfo;
  wchar_t literalQuoteChar;
  System_String* documentBaseUri;
  System_String* externalDtdBaseUri;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* undeclaredNotations;
  ModdingAPI::Exposed::System::Int32_array* condSectionEntityIds;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2BCC0))(this);
  }
  void Initialize(ModdingAPI::Exposed::System::Xml::IDtdParserAdapter* readerAdapter) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, ModdingAPI::Exposed::System::Xml::IDtdParserAdapter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2BFF0))(this, readerAdapter);
  }
  void InitializeFreeFloatingDtd(System_String* baseUri, System_String* docTypeName, System_String* publicId, System_String* systemId, System_String* internalSubset, ModdingAPI::Exposed::System::Xml::IDtdParserAdapter* adapter) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, System_String*, System_String*, System_String*, System_String*, System_String*, ModdingAPI::Exposed::System::Xml::IDtdParserAdapter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2C320))(this, baseUri, docTypeName, publicId, systemId, internalSubset, adapter);
  }
  ModdingAPI::Exposed::System::Xml::IDtdInfo* System::Xml::IDtdParser::ParseInternalDtd(ModdingAPI::Exposed::System::Xml::IDtdParserAdapter* adapter, bool saveInternalSubset) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::IDtdInfo*(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, ModdingAPI::Exposed::System::Xml::IDtdParserAdapter*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2C810))(this, adapter, saveInternalSubset);
  }
  ModdingAPI::Exposed::System::Xml::IDtdInfo* System::Xml::IDtdParser::ParseFreeFloatingDtd(System_String* baseUri, System_String* docTypeName, System_String* publicId, System_String* systemId, System_String* internalSubset, ModdingAPI::Exposed::System::Xml::IDtdParserAdapter* adapter) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::IDtdInfo*(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, System_String*, System_String*, System_String*, System_String*, System_String*, ModdingAPI::Exposed::System::Xml::IDtdParserAdapter*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2C850))(this, baseUri, docTypeName, publicId, systemId, internalSubset, adapter);
  }
  bool get_ParsingInternalSubset() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2C8A0))(this);
  }
  bool get_IgnoreEntityReferences() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2C8B0))(this);
  }
  bool get_SaveInternalSubsetValue() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2C8C0))(this);
  }
  bool get_ParsingTopLevelMarkup() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2C970))(this);
  }
  bool get_SupportNamespaces() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x931B20))(this);
  }
  bool get_Normalize() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4EFF30))(this);
  }
  void Parse(bool saveInternalSubset) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2C990))(this, saveInternalSubset);
  }
  void ParseInDocumentDtd(bool saveInternalSubset) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2CCE0))(this, saveInternalSubset);
  }
  void ParseFreeFloatingDtd() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2CF40))(this);
  }
  void ParseInternalSubset() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2CFA0))(this);
  }
  void ParseExternalSubset() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2CFB0))(this);
  }
  void ParseSubset() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2D0D0))(this);
  }
  void ParseAttlistDecl() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2D550))(this);
  }
  void ParseAttlistType(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef* attrDef, ModdingAPI::Exposed::System::Xml::Schema::SchemaElementDecl* elementDecl, bool ignoreErrors) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*, ModdingAPI::Exposed::System::Xml::Schema::SchemaElementDecl*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2DD70))(this, attrDef, elementDecl, ignoreErrors);
  }
  void ParseAttlistDefault(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef* attrDef, bool ignoreErrors) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2E500))(this, attrDef, ignoreErrors);
  }
  void ParseElementDecl() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2E800))(this);
  }
  void ParseElementOnlyContent(ModdingAPI::Exposed::System::Xml::Schema::ParticleContentValidator* pcv, int32_t startParenEntityId) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, ModdingAPI::Exposed::System::Xml::Schema::ParticleContentValidator*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2EF20))(this, pcv, startParenEntityId);
  }
  void ParseHowMany(ModdingAPI::Exposed::System::Xml::Schema::ParticleContentValidator* pcv) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, ModdingAPI::Exposed::System::Xml::Schema::ParticleContentValidator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2F590))(this, pcv);
  }
  void ParseElementMixedContent(ModdingAPI::Exposed::System::Xml::Schema::ParticleContentValidator* pcv, int32_t startParenEntityId) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, ModdingAPI::Exposed::System::Xml::Schema::ParticleContentValidator*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2F610))(this, pcv, startParenEntityId);
  }
  void ParseEntityDecl() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2F970))(this);
  }
  void ParseNotationDecl() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2FE50))(this);
  }
  void AddUndeclaredNotation(System_String* notationName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD30180))(this, notationName);
  }
  void ParseComment() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD304E0))(this);
  }
  void ParsePI() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD30680))(this);
  }
  void ParseCondSection() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD30780))(this);
  }
  void ParseExternalId(int32_t idTokenType, int32_t declType, System_String* publicId, System_String* systemId) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, int32_t, int32_t, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD30A00))(this, idTokenType, declType, publicId, systemId);
  }
  int32_t GetToken(bool needWhiteSpace) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD30F20))(this, needWhiteSpace);
  }
  int32_t ScanSubsetContent() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD325D0))(this);
  }
  int32_t ScanNameExpected() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD32EC0))(this);
  }
  int32_t ScanQNameExpected() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD32EF0))(this);
  }
  int32_t ScanNmtokenExpected() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD32F20))(this);
  }
  int32_t ScanDoctype1() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD32F50))(this);
  }
  int32_t ScanDoctype2() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD330F0))(this);
  }
  int32_t ScanClosingTag() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD33200))(this);
  }
  int32_t ScanElement1() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD332E0))(this);
  }
  int32_t ScanElement2() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD33570))(this);
  }
  int32_t ScanElement3() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD337A0))(this);
  }
  int32_t ScanElement4() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD33830))(this);
  }
  int32_t ScanElement5() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD33950))(this);
  }
  int32_t ScanElement6() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD33AB0))(this);
  }
  int32_t ScanElement7() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD33BD0))(this);
  }
  int32_t ScanAttlist1() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD33C30))(this);
  }
  int32_t ScanAttlist2() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD33D50))(this);
  }
  int32_t ScanAttlist3() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD34680))(this);
  }
  int32_t ScanAttlist4() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD34770))(this);
  }
  int32_t ScanAttlist5() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD34890))(this);
  }
  int32_t ScanAttlist6() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD349B0))(this);
  }
  int32_t ScanAttlist7() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD34E90))(this);
  }
  int32_t ScanLiteral(int32_t literalType) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD34F90))(this, literalType);
  }
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* ScanEntityName() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlQualifiedName*(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD35FC0))(this);
  }
  int32_t ScanNotation1() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD36110))(this);
  }
  int32_t ScanSystemId() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD36250))(this);
  }
  int32_t ScanEntity1() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD36350))(this);
  }
  int32_t ScanEntity2() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD363D0))(this);
  }
  int32_t ScanEntity3() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD36550))(this);
  }
  int32_t ScanPublicId1() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD366B0))(this);
  }
  int32_t ScanPublicId2() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD367B0))(this);
  }
  int32_t ScanCondSection1() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD36830))(this);
  }
  int32_t ScanCondSection2() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD36C60))(this);
  }
  int32_t ScanCondSection3() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD36D40))(this);
  }
  void ScanName() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD37360))(this);
  }
  void ScanQName() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD37370))(this);
  }
  void ScanQName(bool isQName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD37380))(this, isQName);
  }
  bool ReadDataInName() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD376A0))(this);
  }
  void ScanNmtoken() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD376F0))(this);
  }
  bool EatPublicKeyword() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD378D0))(this);
  }
  bool EatSystemKeyword() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD37A30))(this);
  }
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* GetNameQualified(bool canHavePrefix) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::XmlQualifiedName*(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD37B90))(this, canHavePrefix);
  }
  System_String* GetNameString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD37EC0))(this);
  }
  System_String* GetNmtokenString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD37EC0))(this);
  }
  System_String* GetValue() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD37EF0))(this);
  }
  System_String* GetValueWithStrippedSpaces() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD37F60))(this);
  }
  int32_t ReadData() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD38060))(this);
  }
  void LoadParsingBuffer() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD38120))(this);
  }
  void SaveParsingBuffer() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD38270))(this);
  }
  void SaveParsingBuffer(int32_t internalSubsetValueEndPos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD38280))(this, internalSubsetValueEndPos);
  }
  bool HandleEntityReference(bool paramEntity, bool inLiteral, bool inAttribute) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, bool, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD38380))(this, paramEntity, inLiteral, inAttribute);
  }
  bool HandleEntityReference(ModdingAPI::Exposed::System::Xml::XmlQualifiedName* entityName, bool paramEntity, bool inLiteral, bool inAttribute) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, ModdingAPI::Exposed::System::Xml::XmlQualifiedName*, bool, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD383F0))(this, entityName, paramEntity, inLiteral, inAttribute);
  }
  bool HandleEntityEnd(bool inLiteral) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD38640))(this, inLiteral);
  }
  ModdingAPI::Exposed::System::Xml::Schema::SchemaEntity* VerifyEntityReference(ModdingAPI::Exposed::System::Xml::XmlQualifiedName* entityName, bool paramEntity, bool mustBeDeclared, bool inAttribute) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::SchemaEntity*(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, ModdingAPI::Exposed::System::Xml::XmlQualifiedName*, bool, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD387D0))(this, entityName, paramEntity, mustBeDeclared, inAttribute);
  }
  void SendValidationEvent(int32_t pos, int32_t severity, System_String* code, System_String* arg) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, int32_t, int32_t, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD38B80))(this, pos, severity, code, arg);
  }
  void SendValidationEvent(int32_t severity, System_String* code, System_String* arg) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, int32_t, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD38D50))(this, severity, code, arg);
  }
  void SendValidationEvent(int32_t severity, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaException* e) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, int32_t, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaException*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD38F10))(this, severity, e);
  }
  bool IsAttributeValueType(int32_t token) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD38FD0))(this, token);
  }
  int32_t get_LineNo() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD38FE0))(this);
  }
  int32_t get_LinePos() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD39070))(this);
  }
  System_String* get_BaseUriStr() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD39120))(this);
  }
  void OnUnexpectedError() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD39200))(this);
  }
  void Throw(int32_t curPos, System_String* res) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD39290))(this, curPos, res);
  }
  void Throw(int32_t curPos, System_String* res, System_String* arg) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, int32_t, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD39350))(this, curPos, res, arg);
  }
  void Throw(int32_t curPos, System_String* res, ModdingAPI::Exposed::System::String_array* args) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, int32_t, System_String*, ModdingAPI::Exposed::System::String_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD395E0))(this, curPos, res, args);
  }
  void Throw(System_String* res, System_String* arg, int32_t lineNo, int32_t linePos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, System_String*, System_String*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD39880))(this, res, arg, lineNo, linePos);
  }
  void ThrowInvalidChar(int32_t pos, System_String* data, int32_t invCharPos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, int32_t, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD39A90))(this, pos, data, invCharPos);
  }
  void ThrowInvalidChar(ModdingAPI::Exposed::System::Char_array* data, int32_t length, int32_t invCharPos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, ModdingAPI::Exposed::System::Char_array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD39B90))(this, data, length, invCharPos);
  }
  void ThrowUnexpectedToken(int32_t pos, System_String* expectedToken) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD39C60))(this, pos, expectedToken);
  }
  void ThrowUnexpectedToken(int32_t pos, System_String* expectedToken1, System_String* expectedToken2) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, int32_t, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD39C80))(this, pos, expectedToken1, expectedToken2);
  }
  System_String* ParseUnexpectedToken(int32_t startPos) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::DtdParser*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD39F30))(this, startPos);
  }

  // Static methods:
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))();
  }
  static inline ModdingAPI::Exposed::System::Xml::IDtdParser* Create() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::IDtdParser*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xD2BDD0))();
  }
  static inline System_String* StripSpaces(System_String* value) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xD3A050))(value);
  }
};
}