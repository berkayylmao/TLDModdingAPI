// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Guid.hpp"


namespace ModdingAPI::Exposed {
struct __GWfkftncwQHEfmCBFCMeHGbWrDL_Il2CppStaticFields {
};

struct __GWfkftncwQHEfmCBFCMeHGbWrDL_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_Dispose;
  VirtualInvokeData _5_get_HidDevice;
  VirtualInvokeData _6_get_ProductName;
  VirtualInvokeData _7_get_VendorId;
  VirtualInvokeData _8_get_ProductId;
  VirtualInvokeData _9_get_ProductGuid;
  VirtualInvokeData _10_get_InstanceGuid;
  VirtualInvokeData _11_get_DeviceType;
  VirtualInvokeData _12_get_IsBluetoothDevice;
  VirtualInvokeData _13_get_BluetoothDeviceName;
  VirtualInvokeData _14_get_HWDefinitionMatchTag;
  VirtualInvokeData _15_get_Driver;
  VirtualInvokeData _16_get_ControllerExtension;
  VirtualInvokeData _22_get_IsValid;
  VirtualInvokeData _23_Update;
  VirtualInvokeData _24_UpdateFinished;
  VirtualInvokeData _25_Dispose;
  VirtualInvokeData _26_Acquire;
  VirtualInvokeData _27_Unacquire;
  VirtualInvokeData _65535__ctor;
};

struct __GWfkftncwQHEfmCBFCMeHGbWrDL_Il2CppClass {
  Il2CppClass_1 _1;
  __GWfkftncwQHEfmCBFCMeHGbWrDL_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __GWfkftncwQHEfmCBFCMeHGbWrDL_Il2CppVtbl vtbl;
};

class GWfkftncwQHEfmCBFCMeHGbWrDL {
public:
  // Il2Cpp fields:
  __GWfkftncwQHEfmCBFCMeHGbWrDL_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::mCAMdxhJaeECmAhyzYhXQVVmSyIq* axssNNNbGdVrRfdaWBqgCCHSyNo;
  System_String* JQTVMKeYcXhEpkVfiLKRjmlhiym;
  System_String* XjWjgrPmKAhuhbRkjFodhgFDRCLZ;
  int32_t FnUlbhUQqdlJLDbLyfnOIeMsNry;
  int32_t IFrJmuNrPwaCodZCUDQrEeIfRBe;
  ModdingAPI::Exposed::System::Guid kuBetGEBRTFJqIbJJhpOJOZJvmdL;
  ModdingAPI::Exposed::System::Guid jntwhUDZgkSQBbIeGtLkGHwlehl;
  int32_t DrGVTMOVrhUtgmIOMsliEhUxmCN;
  System_String* cHZvZtNvrGAqVmlCXykNHCWkQuW;
  ModdingAPI::Exposed::Rewired::HID::Drivers::HIDDeviceDriver* hQcyTjFGnaVqrREfYzFlxqUPeDy;
  ModdingAPI::Exposed::Rewired::Controller::Extension* FCvvDWivkrjEZStDONtpxTYPeJH;
  System_String* XnWircNorQerbgQIVqjYXuooAeWs;
  bool aStwDHfMTTrjGocQNajmbHbmhvJ;

  // Member methods:
  ModdingAPI::Exposed::mCAMdxhJaeECmAhyzYhXQVVmSyIq* get_HidDevice() {
    return reinterpret_cast<ModdingAPI::Exposed::mCAMdxhJaeECmAhyzYhXQVVmSyIq*(__fastcall*)(ModdingAPI::Exposed::GWfkftncwQHEfmCBFCMeHGbWrDL*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x311320))(this);
  }
  System_String* get_ProductName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::GWfkftncwQHEfmCBFCMeHGbWrDL*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x335360))(this);
  }
  int32_t get_VendorId() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::GWfkftncwQHEfmCBFCMeHGbWrDL*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36F810))(this);
  }
  int32_t get_ProductId() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::GWfkftncwQHEfmCBFCMeHGbWrDL*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36F820))(this);
  }
  ModdingAPI::Exposed::System::Guid get_ProductGuid() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Guid(__fastcall*)(ModdingAPI::Exposed::GWfkftncwQHEfmCBFCMeHGbWrDL*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36F990))(this);
  }
  ModdingAPI::Exposed::System::Guid get_InstanceGuid() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Guid(__fastcall*)(ModdingAPI::Exposed::GWfkftncwQHEfmCBFCMeHGbWrDL*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36F9A0))(this);
  }
  int32_t get_DeviceType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::GWfkftncwQHEfmCBFCMeHGbWrDL*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319990))(this);
  }
  bool get_IsBluetoothDevice() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::GWfkftncwQHEfmCBFCMeHGbWrDL*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36F9B0))(this);
  }
  System_String* get_BluetoothDeviceName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::GWfkftncwQHEfmCBFCMeHGbWrDL*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36F9D0))(this);
  }
  System_String* get_HWDefinitionMatchTag() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::GWfkftncwQHEfmCBFCMeHGbWrDL*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319940))(this);
  }
  ModdingAPI::Exposed::Rewired::HID::Drivers::HIDDeviceDriver* get_Driver() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::HID::Drivers::HIDDeviceDriver*(__fastcall*)(ModdingAPI::Exposed::GWfkftncwQHEfmCBFCMeHGbWrDL*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3199C0))(this);
  }
  ModdingAPI::Exposed::Rewired::Controller::Extension* get_ControllerExtension() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Controller::Extension*(__fastcall*)(ModdingAPI::Exposed::GWfkftncwQHEfmCBFCMeHGbWrDL*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319930))(this);
  }
  bool get_IsValid() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::GWfkftncwQHEfmCBFCMeHGbWrDL*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36F9F0))(this);
  }
  void ::ctor(ModdingAPI::Exposed::mCAMdxhJaeECmAhyzYhXQVVmSyIq* hidDevice) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::GWfkftncwQHEfmCBFCMeHGbWrDL*, ModdingAPI::Exposed::mCAMdxhJaeECmAhyzYhXQVVmSyIq*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36FA00))(this, hidDevice);
  }
  void Update(int32_t ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::GWfkftncwQHEfmCBFCMeHGbWrDL*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36FD00))(this, );
  }
  void Dispose() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::GWfkftncwQHEfmCBFCMeHGbWrDL*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36FD20))(this);
  }
  void Finalize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::GWfkftncwQHEfmCBFCMeHGbWrDL*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36FDD0))(this);
  }
  void Dispose(bool ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::GWfkftncwQHEfmCBFCMeHGbWrDL*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36FE50))(this, );
  }

  // Static methods:
  static inline int32_t vuDBlkEQdmWEXRrRlosKQBulJRW(uint16_t , uint16_t ) {
    return reinterpret_cast<int32_t(__fastcall*)(uint16_t, uint16_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36FF30))(, );
  }
};
}