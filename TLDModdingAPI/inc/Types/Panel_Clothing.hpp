// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Color.hpp"


namespace ModdingAPI::Exposed {
struct __Panel_Clothing_Il2CppStaticFields {
};

struct __Panel_Clothing_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __Panel_Clothing_Il2CppClass {
  Il2CppClass_1 _1;
  __Panel_Clothing_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Panel_Clothing_Il2CppVtbl vtbl;
};

class Panel_Clothing {
public:
  // Il2Cpp fields:
  __Panel_Clothing_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SurvivalTabs;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_StoryTabs;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ItemDescriptionPageDummy;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ItemDescriptionPagePrefab;
  ModdingAPI::Exposed::UILabel* m_FeelsLikeLabel;
  ModdingAPI::Exposed::UILabel* m_AirTempLabel;
  ModdingAPI::Exposed::UILabel* m_WindchillLabel;
  System_String* m_OpenClothingAudio;
  System_String* m_CloseClothingAudio;
  ModdingAPI::Exposed::ButtonLegendContainer* m_ButtonLegendContainer;
  ModdingAPI::Exposed::ScrollList* m_ScrollList;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ButtonLeft;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ButtonLeftGamepad;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ButtonRight;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ButtonRightGamepad;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_NonPaperDollObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_PaperDollMale;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_PaperDollFemale;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_CoverflowSection;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_NoItemsOfTypeSection;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_EmptySlotSection;
  ModdingAPI::Exposed::UILabel* m_UseClothingItemLabel;
  ModdingAPI::Exposed::GenericClothingSlotSpawner_array* m_BodyLayers;
  ModdingAPI::Exposed::GenericClothingSlotSpawner_array* m_LegLayers;
  ModdingAPI::Exposed::GenericClothingSlotSpawner_array* m_HandLayers;
  ModdingAPI::Exposed::GenericClothingSlotSpawner_array* m_FeetLayers;
  ModdingAPI::Exposed::UITexture_array* m_PaperDollHandsTextures;
  ModdingAPI::Exposed::UITexture_array* m_PaperDollFeetTextures;
  ModdingAPI::Exposed::UILabel* m_TotalWarmthLabel;
  ModdingAPI::Exposed::UILabel* m_TotalWindproofLabel;
  ModdingAPI::Exposed::UILabel* m_TotalToughnessLabel;
  ModdingAPI::Exposed::UILabel* m_TotalMobilityLabel;
  ModdingAPI::Exposed::UISlider* m_TotalMobilitySlider;
  ModdingAPI::Exposed::UILabel* m_NumItemsLabel;
  ModdingAPI::Exposed::UISprite* m_FullHypothermiaSprite;
  ModdingAPI::Exposed::UISprite* m_HypothermiaRiskSprite;
  ModdingAPI::Exposed::UISprite* m_HypothermiaRiskFillSprite;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ClothingStatLegend;
  ModdingAPI::Exposed::ClothingRegion_array* m_DefaultSelectRegionOrder;
  ModdingAPI::Exposed::ClothingLayer_array* m_DefaultSelectLayerOrder;
  int32_t m_HandsNormalLayer;
  int32_t m_HandsRaisedLayer;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_HandItemsToRaiseLayer;
  int32_t m_FeetNormalLayer;
  int32_t m_FeetRaisedLayer;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_FeetItemsToRaiseLayer;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_ToquesThatCannotLayerTogether;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_HeadItemsThatAltersBaseballCapLayer;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_HeadItemsThatAltersToqueLayer;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_HeadItemsThatAltersEarMuffsLayer;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_HeadItemsThatAltersImprovisedHatLayer;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_HeadItemsThatAltersRabbitskinHatLayer;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_HeadItemsThatAltersWoolWrapLayer;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_HeadItemsThatAltersWoolWrapCapLayer;
  System_String* m_EmptySlotTextureName;
  ModdingAPI::Exposed::AssetBundleRef* m_PaperDollBundleFemale;
  ModdingAPI::Exposed::AssetBundleRef* m_PaperDollBundleMale;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_ClothingSlots;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_CoverflowItems;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_ClothingItemsForSelectedSlot;
  int32_t m_SelectedRegion;
  int32_t m_SelectedLayer;
  ModdingAPI::Exposed::ItemDescriptionPage* m_ItemDescriptionPage;
  ModdingAPI::Exposed::System::Text::StringBuilder* m_StringBuilder;
  bool m_ShowPaperDollOnly;
  int32_t m_SlotNavCameFromColumn;
  uint32_t m_OpenCloseAudioID;
  bool m_IsDirty;
  ModdingAPI::Exposed::GamepadButtonSprite_array* m_GamepadButtonSprites;
  bool m_MovementPressedOnEnable;

  // Member methods:
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DC090))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DC330))(this);
  }
  void Enable(bool enable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DCE90))(this, enable);
  }
  void SetDefaultSelection() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DD4E0))(this);
  }
  bool IsEnabled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x165DF10))(this);
  }
  void ShowPaperDollOnly() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DD650))(this);
  }
  void OnCancel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DD710))(this);
  }
  void MaybeFlagMovmentPressedOnEnable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DD890))(this);
  }
  bool ShouldIgnoreNavigationInput() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DD940))(this);
  }
  void Navigate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DDA00))(this);
  }
  void OnInventoryNav() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DDBE0))(this);
  }
  void OnFirstAidNav() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DDCE0))(this);
  }
  void OnJournalNav() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DDDD0))(this);
  }
  void OnMissionsNav() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DDEC0))(this);
  }
  void OnCraftingNav() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DDFB0))(this);
  }
  void OnMapNav() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DE0A0))(this);
  }
  void OnUseClothingItem() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DE230))(this);
  }
  void OnDropItem() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DE4A0))(this);
  }
  void OnActionsButton() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DE5F0))(this);
  }
  void NextTool() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DE760))(this);
  }
  void PrevTool() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DE8E0))(this);
  }
  void SelectItemByIndex(int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DEA60))(this, index);
  }
  bool SelectClothingSlot(int32_t col, int32_t row, bool skipAudio) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*, int32_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DEB60))(this, col, row, skipAudio);
  }
  void SelectItemIfEquipped(ModdingAPI::Exposed::GearItem* gearItem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DEDF0))(this, gearItem);
  }
  void MoveCursorUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DF140))(this);
  }
  void MoveCursorDown() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DF150))(this);
  }
  void MoveCursorLeft() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DF160))(this);
  }
  void MoveCursorRight() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DF170))(this);
  }
  void UnequipItemInSelectedSlot() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DF180))(this);
  }
  void SetupScrollList() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DF390))(this);
  }
  void RefreshVisuals() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17DFCB0))(this);
  }
  void UpdateGearStatsBlock() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E02D0))(this);
  }
  void UpdateGlobalStatBars() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E09E0))(this);
  }
  void UpdateTemperatureLabels() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E1100))(this);
  }
  void UpdateButtonLegend() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E1430))(this);
  }
  void ActivateTopLayerOnly(ModdingAPI::Exposed::GenericClothingSlotSpawner_array* layeredTextures) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*, ModdingAPI::Exposed::GenericClothingSlotSpawner_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E18D0))(this, layeredTextures);
  }
  void SelectDefaultSlot() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E1B10))(this);
  }
  void SetSpriteAndLabelColor(ModdingAPI::Exposed::UISprite* sprite, ModdingAPI::Exposed::UILabel* label, ModdingAPI::Exposed::UnityEngine::Color color) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*, ModdingAPI::Exposed::UISprite*, ModdingAPI::Exposed::UILabel*, ModdingAPI::Exposed::UnityEngine::Color)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E1E40))(this, sprite, label, color);
  }
  void ToggleTexturesActive(ModdingAPI::Exposed::UITexture_array* textures, bool toggle) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*, ModdingAPI::Exposed::UITexture_array*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E2040))(this, textures, toggle);
  }
  void MoveCursorUntilFindMatch(int32_t horizontal, int32_t vertical) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E2100))(this, horizontal, vertical);
  }
  void InstantiateItemDescriptionPage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E2560))(this);
  }
  ModdingAPI::Exposed::GearItem* GetCurrentlySelectedGearItem() {
    return reinterpret_cast<ModdingAPI::Exposed::GearItem*(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E2900))(this);
  }
  void DeselectItems() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E29D0))(this);
  }
  void EnableNavigationTabs(bool enable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E2B00))(this, enable);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_Clothing*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17E2C10))(this);
  }
};
}