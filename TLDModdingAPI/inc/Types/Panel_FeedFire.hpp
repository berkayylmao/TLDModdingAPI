// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Color.hpp"


namespace ModdingAPI::Exposed {
struct __Panel_FeedFire_Il2CppStaticFields {
};

struct __Panel_FeedFire_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __Panel_FeedFire_Il2CppClass {
  Il2CppClass_1 _1;
  __Panel_FeedFire_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Panel_FeedFire_Il2CppVtbl vtbl;
};

class Panel_FeedFire {
public:
  // Il2Cpp fields:
  __Panel_FeedFire_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::UIWidget* m_MainWidget;
  float m_MinutesToBoilWaterPerLiter;
  float m_MinutesToMeltSnowPerLiter;
  float m_MinutesToPurifyPerLiter;
  int32_t m_MaxMeltSnowLiters;
  float m_CookProgressBarSeconds;
  float m_BoilProgressBarSeconds;
  System_String* m_BoilAudio;
  System_String* m_MeltAudio;
  System_String* m_PurifyAudio;
  System_String* m_FeedFireAudio;
  float m_HoursRemainingFullFireSprite;
  ModdingAPI::Exposed::UnityEngine::Color m_ScrollListSelectedColor;
  ModdingAPI::Exposed::UnityEngine::Color m_ScrollListUnselectedColor;
  ModdingAPI::Exposed::UIButton_array* m_TabFuelButtons;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_TabFuel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_TabFood;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_TabWater;
  ModdingAPI::Exposed::ScrollList* m_FuelScrollList;
  ModdingAPI::Exposed::ScrollList* m_FoodScrollList;
  ModdingAPI::Exposed::ScrollList* m_WaterScrollList;
  ModdingAPI::Exposed::UILabel* m_Label_EstimatedFireDuration;
  ModdingAPI::Exposed::UILabel* m_Label_FireTemperature;
  ModdingAPI::Exposed::UILabel* m_Label_Water;
  ModdingAPI::Exposed::UITexture* m_Texture_GearItem;
  ModdingAPI::Exposed::UITexture* m_Texture_InspectItem;
  ModdingAPI::Exposed::ButtonLegendContainer* m_ButtonLegendContainer;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_MouseButtonParent;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ActionButtonObject;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ActionSecondaryButtonObject;
  ModdingAPI::Exposed::UISprite* m_Sprite_FireFill;
  ModdingAPI::Exposed::UILabel* m_Label_PotableSupply;
  ModdingAPI::Exposed::UILabel* m_Label_NonpotableSupply;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_DefaultSelectedButton;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_Label_ProgressBar;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ProgressBar;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ButtonIncreaseWater;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ButtonDecreaseWater;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ButtonIncreaseSnow;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ButtonDecreaseSnow;
  float m_InspectModeSizeModifier;
  ModdingAPI::Exposed::UILabel* m_Label_ButtonAction;
  ModdingAPI::Exposed::UILabel* m_Label_ButtonSecondaryAction;
  float m_ElapsedProgressBarTimeSeconds;
  float m_ProgressBarTimeSeconds;
  float m_DayLengthScaleBeforeAcceleration;
  int32_t m_ProgressBarMode;
  float m_BoilWaterLiters;
  float m_MeltSnowLiters;
  float m_PurifyLiters;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_FireContainer;
  ModdingAPI::Exposed::Fire* m_Fire;
  ModdingAPI::Exposed::GearItem* m_PrevSelectedGearItem;
  ModdingAPI::Exposed::GearItem* m_ResearchItemToBurn;
  int32_t m_SelectedFuelSourceIndexVal;
  int32_t m_SelectedFoodIndexVal;
  int32_t m_SelectedWaterSourceIndexVal;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_FuelSourcesList;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_FoodList;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_WaterSourcesList;
  bool m_EnablePending;
  float m_EnableDelaySeconds;
  float m_EnableDelayElapsed;
  uint32_t m_ProgressAudioID;
  ModdingAPI::Exposed::FireManager* m_FireManager;
  bool m_TimeOfDayAccelerated;
  int32_t m_NumFramesInPanel;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_FoodBeingCooked;
  bool m_DoingAction;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_SelectedTab;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* m_TabDictionary;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_DoWaterDelegates;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_OnWaterUpDelegates;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_OnWaterDownDelegates;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_RefreshWaterDelegates;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_WaterButtonStrings;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ButtonWaterDecrease;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_ButtonWaterIncrease;
  ModdingAPI::Exposed::UILabel* m_WaterAmountLabel;
  System_String* m_MeltSnowIcon;
  System_String* m_BoilWaterIcon;
  System_String* m_PurifyWaterIcon;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_WaterIcons;
  int32_t m_MaxPurifyLiters;
  ModdingAPI::Exposed::UISprite* m_FuelNavigateLeftGamepadButtonSprite;
  ModdingAPI::Exposed::UISprite* m_FuelNavigateRightGamepadButtonSprite;
  ModdingAPI::Exposed::UISprite* m_FoodNavigateLeftGamepadButtonSprite;
  ModdingAPI::Exposed::UISprite* m_FoodNavigateRightGamepadButtonSprite;
  ModdingAPI::Exposed::UISprite* m_WaterNavigateLeftGamepadButtonSprite;
  ModdingAPI::Exposed::UISprite* m_WaterNavigateRightGamepadButtonSprite;
  bool m_FuelTabDisabled;

  // Member methods:
  int32_t get_m_SelectedFuelSourceIndex() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C1D130))(this);
  }
  void set_m_SelectedFuelSourceIndex(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C1D140))(this, value);
  }
  int32_t get_m_SelectedFoodIndex() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17F3E90))(this);
  }
  void set_m_SelectedFoodIndex(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C1D2E0))(this, value);
  }
  int32_t get_m_SelectedWaterSourceIndex() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C1D480))(this);
  }
  void set_m_SelectedWaterSourceIndex(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C1D490))(this, value);
  }
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C1D5F0))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C1DA20))(this);
  }
  void Refresh() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C1E2C0))(this);
  }
  void EnableAfterDelay(float delaySeconds) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C1EA60))(this, delaySeconds);
  }
  void Enable(bool enable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C1F180))(this, enable);
  }
  bool IsEnabled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x165DF10))(this);
  }
  void RefreshFireDurationLabel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C1F880))(this);
  }
  void OnScrollItemSelect(int32_t itemIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C1FB60))(this, itemIndex);
  }
  void OnFuelTab() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C1FD00))(this);
  }
  void OnFoodTab() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C1FDC0))(this);
  }
  void OnWaterTab() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C1FE80))(this);
  }
  void OnDoAction() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C1FF40))(this);
  }
  void OnDoActionSecondary() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C201D0))(this);
  }
  void OnFeedFire() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C202E0))(this);
  }
  void ForceBurnResearchItem() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C20AE0))(this);
  }
  void OnTakeTorch() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C20C90))(this);
  }
  void OnCook() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C21130))(this);
  }
  void OnBoil() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C21290))(this);
  }
  void OnBoilUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C21460))(this);
  }
  void OnBoilDown() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C21820))(this);
  }
  void OnMeltSnow() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C21A60))(this);
  }
  void OnMeltSnowUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C21B90))(this);
  }
  void OnMeltSnowDown() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C21DA0))(this);
  }
  void OnPurify() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C21F90))(this);
  }
  void OnPurifyUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C220C0))(this);
  }
  void OnPurifyDown() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C22410))(this);
  }
  void OnDoWater() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C22640))(this);
  }
  void OnWaterDown() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C22700))(this);
  }
  void OnWaterUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C227C0))(this);
  }
  void OnDone() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C22880))(this);
  }
  void OnCancel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C22930))(this);
  }
  void PlayButtonClick() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C22BF0))(this);
  }
  bool IsDoingAction() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F46E0))(this);
  }
  int32_t GetCurrentAction() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C22C80))(this);
  }
  void SetFireContainer(ModdingAPI::Exposed::UnityEngine::GameObject* go) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C22C90))(this, go);
  }
  void InspectPrevGearItem() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C22D90))(this);
  }
  void ExitFeedFireInterface() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C22FF0))(this);
  }
  void UpdateScrollLists() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C231E0))(this);
  }
  void ScrollDown() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C23390))(this);
  }
  void ScrollUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C23600))(this);
  }
  bool FilterItemFuelSource(ModdingAPI::Exposed::UnityEngine::GameObject* go) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C23820))(this, go);
  }
  ModdingAPI::Exposed::GearItem* GetSelectedFuelSource() {
    return reinterpret_cast<ModdingAPI::Exposed::GearItem*(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C23900))(this);
  }
  ModdingAPI::Exposed::GearItem* GetSelectedFood() {
    return reinterpret_cast<ModdingAPI::Exposed::GearItem*(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C239C0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::GameObject* GetBoilableWaterSupply() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::GameObject*(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C23A80))(this);
  }
  void RefreshFuelSources() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C23C10))(this);
  }
  void RefreshFood() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C24790))(this);
  }
  void RefreshWaterSources() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C24F40))(this);
  }
  void RefreshWater() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C26540))(this);
  }
  void RefreshSnow() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C26960))(this);
  }
  void RefreshPurify() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C26B80))(this);
  }
  void MakeDefaultSelections() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C26E30))(this);
  }
  void RefreshProgressLabel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C26E70))(this);
  }
  void DisableProgressBar() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C27080))(this);
  }
  void EnableProgressBar() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C27150))(this);
  }
  void RestoreTimeOfDay() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C27220))(this);
  }
  void AccelerateTimeOfDay(float realtimeSeconds, int32_t TODminutes) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C272F0))(this, realtimeSeconds, TODminutes);
  }
  void StartCooking(int32_t durationMinutes, System_String* cookingAudio, int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*, int32_t, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C27400))(this, durationMinutes, cookingAudio, mode);
  }
  void StartBoil(int32_t durationMinutes, System_String* boilAudio, int32_t type) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*, int32_t, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C27580))(this, durationMinutes, boilAudio, type);
  }
  void UpdateProgressBar() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C27750))(this);
  }
  void CookingCompleted() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C27A50))(this);
  }
  void SetCookedGearProperties(ModdingAPI::Exposed::GearItem* rawItem, ModdingAPI::Exposed::GearItem* cookedItem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*, ModdingAPI::Exposed::GearItem*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C283F0))(this, rawItem, cookedItem);
  }
  void BoilingWaterCompleted() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C288D0))(this);
  }
  void PurifyingWaterCompleted() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C28BE0))(this);
  }
  void MeltingSnowCompleted() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C28F30))(this);
  }
  void StopProgressBarAudio() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C291D0))(this);
  }
  bool ProgressBarIsActive() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C292D0))(this);
  }
  void ClampWaterBoilAmount() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C292E0))(this);
  }
  void ClampWaterPurifyAmount() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C29460))(this);
  }
  void AwardPartialAmount() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C295F0))(this);
  }
  bool PlayerHasEnoughPotableWaterForCookingItem(ModdingAPI::Exposed::Cookable* cookable) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*, ModdingAPI::Exposed::Cookable*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C29910))(this, cookable);
  }
  void ExecuteCook(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C29AA0))(this, gi);
  }
  bool HaveEnoughUnitsToStartCooking(ModdingAPI::Exposed::GearItem* gi) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C2A320))(this, gi);
  }
  void ShowTab(ModdingAPI::Exposed::UnityEngine::GameObject* tab) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C2A440))(this, tab);
  }
  void UpdateGearItem(ModdingAPI::Exposed::GearItem* gi) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C2A5F0))(this, gi);
  }
  void EnableActionButton(bool enabled) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C2AB20))(this, enabled);
  }
  void UpdateButtonLegend() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C2ACB0))(this);
  }
  void UpdateListItemColors(ModdingAPI::Exposed::ScrollList* scrollList, int32_t selectedIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*, ModdingAPI::Exposed::ScrollList*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C2BA50))(this, scrollList, selectedIndex);
  }
  bool CanTakeTorch() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C2BC70))(this);
  }
  bool FireInForge() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C2BD50))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Panel_FeedFire*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1C2C000))(this);
  }
};
}