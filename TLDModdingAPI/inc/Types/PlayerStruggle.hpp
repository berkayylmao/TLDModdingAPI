// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Quaternion.hpp"
#include "ModdingAPI.Exposed.UnityEngine.AnimatorStateInfo.hpp"


namespace ModdingAPI::Exposed {
struct __PlayerStruggle_Il2CppStaticFields {
};

struct __PlayerStruggle_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __PlayerStruggle_Il2CppClass {
  Il2CppClass_1 _1;
  __PlayerStruggle_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __PlayerStruggle_Il2CppVtbl vtbl;
};

class PlayerStruggle {
public:
  // Il2Cpp fields:
  __PlayerStruggle_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  float m_NearClip;
  float m_MaxBlurSize;
  float m_TapIncrement;
  float m_TapIncrementThatScalesWithFatigue;
  float m_TapDecreasePerSecond;
  float m_AccessibleStruggleTapsPerSecond;
  float m_PlayerConditionLossPercentAfterBearAttack;
  float m_PlayerConditionLossPercentAfterMooseAttack;
  float m_WolfConditionLossPercentTap;
  float m_FleeAtConditionThreshold;
  float m_LayStunnedAfterBearAttackSeconds;
  float m_LayStunnedAfterWolfAttackSeconds;
  float m_ReturnCameraToStartTimeSeconds;
  float m_BlendToAnimatedCameraTimeSeconds;
  float m_StartDamageAfterSecondsWolf;
  System_String* m_StruggleWithWolfAudio;
  System_String* m_StruggleWithBearAudio;
  System_String* m_StruggleWithMooseAudio;
  System_String* m_BodyFallAudio;
  System_String* m_AtlasIconUnarmed;
  float m_WolfDamagePerSecondToPlayer;
  float m_WolfClothingDamagePerSecondMin;
  float m_WolfClothingDamagePerSecondMax;
  float m_BearClothingDamagePerSecondMin;
  float m_BearClothingDamagePerSecondMax;
  float m_FleeChanceOnHit;
  float m_FleeChanceOnRevolverShot;
  float m_GracePeriodAfterStruggleInSeconds;
  float m_DegradeOnUseFrequencySeconds;
  System_String* m_PlayMauledMuffleAudioId;
  System_String* m_StopMauledMuffleAudioId;
  bool m_ShowDebugText;
  float m_SecondsSinceLastStruggle;
  int32_t m_AnimParameter_Dead;
  int32_t m_AnimParameter_KnockedOut;
  int32_t m_AnimParameter_GetUp;
  int32_t m_AnimParameter_SkipGetUp;
  int32_t m_AnimParameter_IsDragging;
  int32_t m_AnimParameter_StruggleHeight;
  int32_t m_AnimParameter_SpearExhaustedGetUp;
  ModdingAPI::Exposed::BaseAi* m_PartnerBaseAi;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_PartnerCameraBone;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_PartnerEffectsBone;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_OverrideOrigin;
  ModdingAPI::Exposed::UnityEngine::Animator* m_OverrideAnimator;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_OverrideGameCamera;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_OverrideEffectsBone;
  bool m_KnockedOut;
  bool m_Active;
  bool m_SystemEnabled;
  float m_AttachTimeSeconds;
  float m_DetatchTimeSeconds;
  float m_LayingStunnedSeconds;
  float m_StartCameraFOV;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_StartCameraPos;
  ModdingAPI::Exposed::UnityEngine::Quaternion m_StartCameraRotation;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_OriginalCameraPos;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_OriginalPlayerPos;
  ModdingAPI::Exposed::UnityEngine::Quaternion m_OriginalPlayerRotation;
  ModdingAPI::Exposed::UnityEngine::Quaternion m_OriginalCameraRotation;
  float m_StruggleEndCameraFOV;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_StruggleEndCameraPos;
  ModdingAPI::Exposed::UnityEngine::Quaternion m_StruggleEndCameraRotation;
  int32_t m_StruggleCameraMode;
  uint32_t m_StrugglePredatorAudioId;
  float m_StruggleTimeSeconds;
  float m_DegradeTimeSeconds;
  bool m_PartnerWillFightUntilDead;
  float m_SavedNearClip;
  ModdingAPI::Exposed::GearItem* m_WeaponUsed;
  float m_WolfClothingDamagePerSecond;
  float m_BearClothingDamagePerSecond;
  uint32_t m_ClothesTearingAudioId;
  float m_VoiceVolumeToRestore;
  float m_HPBeforeStruggle;
  float m_TapBarNormalized;
  ModdingAPI::Exposed::UILabel* m_DebugTextLabel;
  float m_SecondsPerAttackMin;
  float m_SecondsPerAttackMax;
  float m_NextAttackTime;
  int32_t m_DazedDropItemsMin;
  int32_t m_DazedDropItemsMax;
  float m_DazedDropItemsRadiusMin;
  float m_DazedDropItemsRadiusMax;
  int32_t m_NormalizedPlayerConditionForDeathOnFirstAttack;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_WolfStruggleSynchronizedAnimationInfoList;
  float m_HPNormalizedBeforeStruggle;
  int32_t m_Struggle_Button_Key_Sprite_OriginalWidth;
  int32_t m_Struggle_Button_Key_Feedback_OriginalWidth;
  float m_WolfStruggleLengthMax;
  float m_WolfBleedoutMinutes;
  bool m_PlayerDied;
  int32_t m_TapCount;
  ModdingAPI::Exposed::GearItem* m_ItemInHandsAtStruggleStart;
  ModdingAPI::Exposed::DamageEventTable* m_DamageEvents;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_DamageEventOverrides;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_StruggleAudioIds;
  bool m_CrouchDisabled;
  int32_t m_CameraLayerBeforeStruggle;
  ModdingAPI::Exposed::BearSpearItem* m_BearSpearItem;
  bool m_IsInSpearStruggle;
  bool m_HasStartedAcceleratingTimeWhileStunned;
  int32_t m_BearSpearStruggleOutcome;
  bool m_HasDisengagedSpearStruggle;
  ModdingAPI::Exposed::BearHuntReduxSettings* m_BearHuntReduxSettings;
  bool m_CanDropItems;
  float m_PressHoldStoredTimeSeconds;
  float m_RevolverEquippedFirePercent;
  float m_RevolverWeaponSwitchFirePercent;
  float m_AllowedToFirePercent;
  bool m_AllowedToFire;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_RevolverMuzzleFlash;
  bool m_IsHunted2Dragging;
  bool m_SynchronizeAnimationRequested;
  ModdingAPI::Exposed::PlayerStruggle::WeaponPicker* m_WeaponPicker;
  float m_ShowPickerTimer;
  float m_PreviousTimeScaleFactor;
  float m_TimeScalingFadingTimer;
  float m_TimeScaledDownTimer;
  float m_StruggleTimeScaleFactor;
  uint32_t m_WeaponSelectionSlowdownAudioId;
  bool m_ShowPickerRequested;
  bool m_ChangeWeaponRequested;
  bool m_TimeScalingFadeOutRequested;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_ListItems;
  ModdingAPI::Exposed::GearItem* m_WeaponPicked;

  // Member methods:
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B0D60))(this);
  }
  void DegradeToolOnUse() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B1430))(this);
  }
  void OnMooseButtHeadAttackComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B1530))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B15B0))(this);
  }
  void LateUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B1BB0))(this);
  }
  void SetCanDropItems(bool canDropItems) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x400B60))(this, canDropItems);
  }
  void OnBearSpearDisengage() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B1BF0))(this);
  }
  void UpdateSpear() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B1D40))(this);
  }
  void UpdateTapInput(ModdingAPI::Exposed::System::Action* tapAction) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*, ModdingAPI::Exposed::System::Action*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B20B0))(this, tapAction);
  }
  void OnPlayerDeath() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B22A0))(this);
  }
  void UpdateKeyBindingLabels() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B2530))(this);
  }
  void UpdateWolf() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B2D60))(this);
  }
  void UpdateBear() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B2F70))(this);
  }
  void WolfStruggleTimedOut() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B30B0))(this);
  }
  void BearSpearStruggleTimedOut() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B32E0))(this);
  }
  void BearSpearStruggleSuccess() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B33B0))(this);
  }
  int32_t GetBearSpearStruggleOutcome() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B34A0))(this);
  }
  void EnableSystem(bool enable) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B34B0))(this, enable);
  }
  bool IsSystemEnabled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B34C0))(this);
  }
  bool CanStruggle() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B34D0))(this);
  }
  void Begin(ModdingAPI::Exposed::UnityEngine::GameObject* partner) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B35C0))(this, partner);
  }
  void InitializeStruggle(ModdingAPI::Exposed::UnityEngine::GameObject* partner) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B4390))(this, partner);
  }
  void InitStruggleForPartner(ModdingAPI::Exposed::UnityEngine::GameObject* partner) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B4BC0))(this, partner);
  }
  void PrepareStruggle(ModdingAPI::Exposed::UnityEngine::GameObject* partner) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B53C0))(this, partner);
  }
  void BeginSpearStruggle(ModdingAPI::Exposed::UnityEngine::GameObject* partner, bool isFatal) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*, ModdingAPI::Exposed::UnityEngine::GameObject*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B5AF0))(this, partner, isFatal);
  }
  bool IsControllingCamera() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B6050))(this);
  }
  void DoTap() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B6060))(this);
  }
  bool WaitingToRecover() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B66B0))(this);
  }
  void WolfTap() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B66C0))(this);
  }
  void SpearTap() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B6970))(this);
  }
  void OnTweenComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B6A60))(this);
  }
  bool InStruggle() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B6C40))(this);
  }
  bool IsInBearSpearStruggle() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B6D00))(this);
  }
  bool InStruggleWithMoose() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B6D20))(this);
  }
  bool InStruggleWIthBear() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B6E30))(this);
  }
  bool InFinalAmbushStruggleWIthBear() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B6F40))(this);
  }
  bool InStruggleWIthWolf() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B70C0))(this);
  }
  void MakePartnerFlee() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B71D0))(this);
  }
  void OnPlayerDazed() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B74A0))(this);
  }
  void LogEvent(System_String* eventString) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, eventString);
  }
  void PlayStruggleAudio(System_String* audioEventName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B7650))(this, audioEventName);
  }
  void PlayStruggleAudioOneShot(System_String* audioEventName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B7800))(this, audioEventName);
  }
  bool IsBlackedOutAfterStruggle() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B78D0))(this);
  }
  void GetUpAnimationComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B79A0))(this);
  }
  float GetStunnedDurationFromParter() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B8020))(this);
  }
  void PlayMauledMuffle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B8220))(this);
  }
  void StopMauledMuffle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B8380))(this);
  }
  void StopAllAudio() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B84E0))(this);
  }
  void UpdateVoiceVolume() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B8830))(this);
  }
  void UpdateFadeAndBlur(ModdingAPI::Exposed::UnityEngine::GameObject* EffectsBone) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B8A90))(this, EffectsBone);
  }
  float GetAttachBlendTime() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B8CF0))(this);
  }
  bool IsAttachedToPartner() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B8DC0))(this);
  }
  void BashCameraInterpolateToPartner() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B8DF0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetOverrideGameCameraPosition() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B9750))(this);
  }
  bool ShouldUseSpearExhaustedGetUp() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B9BA0))(this);
  }
  void BeginReturnToStart(ModdingAPI::Exposed::BaseAi* bai) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*, ModdingAPI::Exposed::BaseAi*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17B9CE0))(this, bai);
  }
  void UpdatePlayerTransformForHunted2Dragging() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BA290))(this);
  }
  bool CanBeStunned() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BA830))(this);
  }
  void BashGetupDelayCamera() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BA960))(this);
  }
  void BashCameraReturnToStart() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BB0B0))(this);
  }
  void BashCamera() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BBAD0))(this);
  }
  void UpdateTapBar() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BBB50))(this);
  }
  bool HasFilledStruggleTapBar() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BBDC0))(this);
  }
  bool ShouldBreakStruggle() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BBE80))(this);
  }
  void MaybeBreakStruggle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BC020))(this);
  }
  bool GetCustomFireInput() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BC1D0))(this);
  }
  void MaybeShootRevolver() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BC2C0))(this);
  }
  void OnRevolverFired() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BC8B0))(this);
  }
  void OnRevolverFiredComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BCB20))(this);
  }
  void SetStartCameraRotationToLookAtPartner() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BCB30))(this);
  }
  float GetHeightOffset() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BCD20))(this);
  }
  void BreakStruggle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BCEF0))(this);
  }
  void SpearDisengageReady() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BDD60))(this);
  }
  void WinHunted2Challenge() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BDED0))(this);
  }
  void BearFadeFinish() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void SetWeaponIcon() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BE0A0))(this);
  }
  void ApplyPlayerDamagePerSecond(float damagePerSecond, int32_t damageCause) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BE520))(this, damagePerSecond, damageCause);
  }
  void ApplyClothingDamagePerSecond(float damagePerSecond) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BE780))(this, damagePerSecond);
  }
  void ApplyDamageAfterMooseAttack(System_String* causeLocId) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BE9C0))(this, causeLocId);
  }
  void ApplyMooseDamageAfterStruggleEnds() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BECA0))(this);
  }
  void ApplyBearDamageAfterStruggleEnds() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BED30))(this);
  }
  void ResetGameSettingsToNormal() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BF4B0))(this);
  }
  void UpdateDebugText() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BF750))(this);
  }
  float GetNextAttackTime() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BF910))(this);
  }
  void MaybeReceiveAIAttack() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17BFD10))(this);
  }
  void ResetDamageEvents() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C0030))(this);
  }
  void DamageEventsInitialize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C0240))(this);
  }
  ModdingAPI::Exposed::DamageEventTable* GetActiveDamageEventTable() {
    return reinterpret_cast<ModdingAPI::Exposed::DamageEventTable*(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C03B0))(this);
  }
  bool ReceiveAIAttack() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C0670))(this);
  }
  bool ShouldPlayDraggingAnimation(ModdingAPI::Exposed::BaseAi* bai, ModdingAPI::Exposed::UnityEngine::Quaternion overrideRotation) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*, ModdingAPI::Exposed::BaseAi*, ModdingAPI::Exposed::UnityEngine::Quaternion)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C0780))(this, bai, overrideRotation);
  }
  bool IsHuntedBear2ChallengeEnd() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C0980))(this);
  }
  float GetFleeChanceOnHitPercent() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C0A70))(this);
  }
  float GetFleeChanceOnRevolverShotPercent() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C0CE0))(this);
  }
  bool IsBearSpearOutcomeSuccess() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C0E90))(this);
  }
  ModdingAPI::Exposed::BearHuntReduxSettings* RetrieveBearHuntReduxSettings() {
    return reinterpret_cast<ModdingAPI::Exposed::BearHuntReduxSettings*(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C0EB0))(this);
  }
  void OnDestroy() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C1040))(this);
  }
  void MaybeApplyStaminaCost(float staminaCost) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C1060))(this, staminaCost);
  }
  void MaybeDisableStaminaRecharge() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C1160))(this);
  }
  void MaybeEnableStaminaRecharge() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C1240))(this);
  }
  void SynchronizePartnerAnimation() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C1320))(this);
  }
  void SynchronizeAnimationState(ModdingAPI::Exposed::UnityEngine::AnimatorStateInfo partnerAnimatorStateInfo, ModdingAPI::Exposed::UnityEngine::AnimatorStateInfo fpAnimatorStateInfo, int32_t partnerHash, int32_t fpHash) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*, ModdingAPI::Exposed::UnityEngine::AnimatorStateInfo, ModdingAPI::Exposed::UnityEngine::AnimatorStateInfo, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C16D0))(this, partnerAnimatorStateInfo, fpAnimatorStateInfo, partnerHash, fpHash);
  }
  void OnWeaponPicked(ModdingAPI::Exposed::GearItem* gearItem) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*, ModdingAPI::Exposed::GearItem*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C17D0))(this, gearItem);
  }
  void InitWeaponPicker() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C17E0))(this);
  }
  void ResetWeaponPicker() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C17F0))(this);
  }
  void UpdateWeaponSelection() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C18B0))(this);
  }
  void WeaponPickerBegin() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C18F0))(this);
  }
  void HandleShowPickerRequested() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C1DC0))(this);
  }
  void PlayPickerExitAudio() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C20C0))(this);
  }
  void OnShowPickerEnded(bool isPickerEnabled) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C2290))(this, isPickerEnabled);
  }
  void HandleTimeSlowdownFadeout() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C2460))(this);
  }
  void HandleChangeWeaponFadein() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C26D0))(this);
  }
  void MaybeInterruptPicker() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C28A0))(this);
  }
  void DoChangeWeapon() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C2AC0))(this);
  }
  void ShowPicker() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C2F80))(this);
  }
  bool IsWeaponPickerSelectionPending() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C3120))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::PlayerStruggle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x17C3150))(this);
  }
};
}