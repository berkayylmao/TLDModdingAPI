// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System::Net::Sockets {
struct __Socket_Il2CppStaticFields {
  Il2CppObject* s_InternalSyncObject;
  bool s_SupportsIPv4;
  bool s_SupportsIPv6;
  bool s_OSSupportsIPv6;
  bool s_Initialized;
  bool s_LoggingEnabled;
  ModdingAPI::Exposed::System::AsyncCallback* AcceptAsyncCallback;
  ModdingAPI::Exposed::System::IOAsyncCallback* BeginAcceptCallback;
  ModdingAPI::Exposed::System::IOAsyncCallback* BeginAcceptReceiveCallback;
  ModdingAPI::Exposed::System::AsyncCallback* ConnectAsyncCallback;
  ModdingAPI::Exposed::System::IOAsyncCallback* BeginConnectCallback;
  ModdingAPI::Exposed::System::AsyncCallback* DisconnectAsyncCallback;
  ModdingAPI::Exposed::System::IOAsyncCallback* BeginDisconnectCallback;
  ModdingAPI::Exposed::System::AsyncCallback* ReceiveAsyncCallback;
  ModdingAPI::Exposed::System::IOAsyncCallback* BeginReceiveCallback;
  ModdingAPI::Exposed::System::IOAsyncCallback* BeginReceiveGenericCallback;
  ModdingAPI::Exposed::System::AsyncCallback* ReceiveFromAsyncCallback;
  ModdingAPI::Exposed::System::IOAsyncCallback* BeginReceiveFromCallback;
  ModdingAPI::Exposed::System::AsyncCallback* SendAsyncCallback;
  ModdingAPI::Exposed::System::IOAsyncCallback* BeginSendGenericCallback;
  ModdingAPI::Exposed::System::AsyncCallback* SendToAsyncCallback;
};

struct __Socket_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_Dispose;
  VirtualInvokeData _5_Dispose;
};

struct __Socket_Il2CppClass {
  Il2CppClass_1 _1;
  __Socket_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Socket_Il2CppVtbl vtbl;
};

class Socket {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C3DDF0;
  static inline    __Socket_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __Socket_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__Socket_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __Socket_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  bool is_closed;
  bool is_listening;
  bool useOverlappedIO;
  int32_t linger_timeout;
  int32_t addressFamily;
  int32_t socketType;
  int32_t protocolType;
  ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle* m_Handle;
  ModdingAPI::Exposed::System::Net::EndPoint* seed_endpoint;
  ModdingAPI::Exposed::System::Threading::SemaphoreSlim* ReadSem;
  ModdingAPI::Exposed::System::Threading::SemaphoreSlim* WriteSem;
  bool is_blocking;
  bool is_bound;
  bool is_connected;
  int32_t m_IntCleanedUp;
  bool connect_in_progress;

  // Member methods:
  void ::ctor(int32_t addressFamily, int32_t socketType, int32_t protocolType) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2C020))(this, addressFamily, socketType, protocolType);
  }
  intptr_t get_Handle() {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x81D630))(this);
  }
  int32_t get_AddressFamily() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FED20))(this);
  }
  int32_t get_SocketType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36E9C0))(this);
  }
  int32_t get_ProtocolType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x37AAE0))(this);
  }
  void set_DontFragment(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2C880))(this, value);
  }
  bool get_DualMode() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2C960))(this);
  }
  void set_DualMode(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2CA70))(this, value);
  }
  bool get_IsDualMode() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2CB60))(this);
  }
  int32_t Send(ModdingAPI::Exposed::System::Collections::Generic::IList_T_* buffers, int32_t socketFlags) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::Collections::Generic::IList_T_*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2CC80))(this, buffers, socketFlags);
  }
  int32_t Send(ModdingAPI::Exposed::System::Byte_array* buffer, int32_t offset, int32_t size, int32_t socketFlags) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2CD60))(this, buffer, offset, size, socketFlags);
  }
  int32_t Receive(ModdingAPI::Exposed::System::Byte_array* buffer, int32_t offset, int32_t size, int32_t socketFlags) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2CE60))(this, buffer, offset, size, socketFlags);
  }
  int32_t Receive(ModdingAPI::Exposed::System::Collections::Generic::IList_T_* buffers, int32_t socketFlags) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::Collections::Generic::IList_T_*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2CF60))(this, buffers, socketFlags);
  }
  int32_t IOControl(int64_t ioControlCode, ModdingAPI::Exposed::System::Byte_array* optionInValue, ModdingAPI::Exposed::System::Byte_array* optionOutValue) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, int64_t, ModdingAPI::Exposed::System::Byte_array*, ModdingAPI::Exposed::System::Byte_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2D040))(this, ioControlCode, optionInValue, optionOutValue);
  }
  void SetIPProtectionLevel(int32_t level) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2D1E0))(this, level);
  }
  ModdingAPI::Exposed::System::IAsyncResult* BeginSend(ModdingAPI::Exposed::System::Byte_array* buffer, int32_t offset, int32_t size, int32_t socketFlags, ModdingAPI::Exposed::System::AsyncCallback* callback, Il2CppObject* state) {
    return reinterpret_cast<ModdingAPI::Exposed::System::IAsyncResult*(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t, int32_t, ModdingAPI::Exposed::System::AsyncCallback*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2D330))(this, buffer, offset, size, socketFlags, callback, state);
  }
  int32_t EndSend(ModdingAPI::Exposed::System::IAsyncResult* asyncResult) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::IAsyncResult*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2D460))(this, asyncResult);
  }
  ModdingAPI::Exposed::System::IAsyncResult* BeginReceive(ModdingAPI::Exposed::System::Byte_array* buffer, int32_t offset, int32_t size, int32_t socketFlags, ModdingAPI::Exposed::System::AsyncCallback* callback, Il2CppObject* state) {
    return reinterpret_cast<ModdingAPI::Exposed::System::IAsyncResult*(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t, int32_t, ModdingAPI::Exposed::System::AsyncCallback*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2D600))(this, buffer, offset, size, socketFlags, callback, state);
  }
  int32_t EndReceive(ModdingAPI::Exposed::System::IAsyncResult* asyncResult) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::IAsyncResult*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2D730))(this, asyncResult);
  }
  bool get_CleanedUp() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2DAB0))(this);
  }
  void Dispose() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2DDA0))(this);
  }
  void Finalize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2DE50))(this);
  }
  void InternalShutdown(int32_t how) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2DED0))(this, how);
  }
  void ::ctor(int32_t family, int32_t type, int32_t proto, ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle* safe_handle) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, int32_t, int32_t, int32_t, ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2DFA0))(this, family, type, proto, safe_handle);
  }
  void SocketDefaults() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2E230))(this);
  }
  intptr_t Socket_internal(int32_t family, int32_t type, int32_t proto, int32_t error) {
    return reinterpret_cast<intptr_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2E450))(this, family, type, proto, error);
  }
  ModdingAPI::Exposed::System::Net::EndPoint* get_LocalEndPoint() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Net::EndPoint*(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2E5F0))(this);
  }
  bool get_Blocking() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4EFF30))(this);
  }
  void set_Blocking(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2E9E0))(this, value);
  }
  bool get_Connected() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x931B20))(this);
  }
  void set_NoDelay(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2ED20))(this, value);
  }
  bool Poll(int32_t microSeconds, int32_t mode) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2EE00))(this, microSeconds, mode);
  }
  ModdingAPI::Exposed::System::Net::Sockets::Socket* Accept() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Net::Sockets::Socket*(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2F170))(this);
  }
  void Accept(ModdingAPI::Exposed::System::Net::Sockets::Socket* acceptSocket) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::Net::Sockets::Socket*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2F3A0))(this, acceptSocket);
  }
  ModdingAPI::Exposed::System::Net::Sockets::Socket* EndAccept(ModdingAPI::Exposed::System::IAsyncResult* asyncResult) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Net::Sockets::Socket*(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::IAsyncResult*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2F4F0))(this, asyncResult);
  }
  ModdingAPI::Exposed::System::Net::Sockets::Socket* EndAccept(ModdingAPI::Exposed::System::Byte_array* buffer, int32_t bytesTransferred, ModdingAPI::Exposed::System::IAsyncResult* asyncResult) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Net::Sockets::Socket*(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::Byte_array*, int32_t, ModdingAPI::Exposed::System::IAsyncResult*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2F5F0))(this, buffer, bytesTransferred, asyncResult);
  }
  void Bind(ModdingAPI::Exposed::System::Net::EndPoint* localEP) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::Net::EndPoint*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2FBB0))(this, localEP);
  }
  void Listen(int32_t backlog) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2FEF0))(this, backlog);
  }
  void Connect(ModdingAPI::Exposed::System::Net::EndPoint* remoteEP) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::Net::EndPoint*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB30260))(this, remoteEP);
  }
  void EndConnect(ModdingAPI::Exposed::System::IAsyncResult* asyncResult) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::IAsyncResult*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB310E0))(this, asyncResult);
  }
  void Disconnect(bool reuseSocket) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB31350))(this, reuseSocket);
  }
  void EndDisconnect(ModdingAPI::Exposed::System::IAsyncResult* asyncResult) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::IAsyncResult*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB31480))(this, asyncResult);
  }
  int32_t Receive(ModdingAPI::Exposed::System::Byte_array* buffer, int32_t offset, int32_t size, int32_t socketFlags, int32_t errorCode) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB317A0))(this, buffer, offset, size, socketFlags, errorCode);
  }
  int32_t Receive(ModdingAPI::Exposed::System::Collections::Generic::IList_T_* buffers, int32_t socketFlags, int32_t errorCode) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::Collections::Generic::IList_T_*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB31910))(this, buffers, socketFlags, errorCode);
  }
  ModdingAPI::Exposed::System::IAsyncResult* BeginReceive(ModdingAPI::Exposed::System::Byte_array* buffer, int32_t offset, int32_t size, int32_t socketFlags, int32_t errorCode, ModdingAPI::Exposed::System::AsyncCallback* callback, Il2CppObject* state) {
    return reinterpret_cast<ModdingAPI::Exposed::System::IAsyncResult*(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t, int32_t, int32_t, ModdingAPI::Exposed::System::AsyncCallback*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB31DF0))(this, buffer, offset, size, socketFlags, errorCode, callback, state);
  }
  int32_t EndReceive(ModdingAPI::Exposed::System::IAsyncResult* asyncResult, int32_t errorCode) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::IAsyncResult*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB320F0))(this, asyncResult, errorCode);
  }
  int32_t ReceiveFrom(ModdingAPI::Exposed::System::Byte_array* buffer, int32_t offset, int32_t size, int32_t socketFlags, ModdingAPI::Exposed::System::Net::EndPoint* remoteEP, int32_t errorCode) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t, int32_t, ModdingAPI::Exposed::System::Net::EndPoint*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB327F0))(this, buffer, offset, size, socketFlags, remoteEP, errorCode);
  }
  int32_t EndReceiveFrom(ModdingAPI::Exposed::System::IAsyncResult* asyncResult, ModdingAPI::Exposed::System::Net::EndPoint* endPoint) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::IAsyncResult*, ModdingAPI::Exposed::System::Net::EndPoint*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB329C0))(this, asyncResult, endPoint);
  }
  int32_t Send(ModdingAPI::Exposed::System::Byte_array* buffer, int32_t offset, int32_t size, int32_t socketFlags, int32_t errorCode) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB32CC0))(this, buffer, offset, size, socketFlags, errorCode);
  }
  int32_t Send(ModdingAPI::Exposed::System::Collections::Generic::IList_T_* buffers, int32_t socketFlags, int32_t errorCode) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::Collections::Generic::IList_T_*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB32E60))(this, buffers, socketFlags, errorCode);
  }
  ModdingAPI::Exposed::System::IAsyncResult* BeginSend(ModdingAPI::Exposed::System::Byte_array* buffer, int32_t offset, int32_t size, int32_t socketFlags, int32_t errorCode, ModdingAPI::Exposed::System::AsyncCallback* callback, Il2CppObject* state) {
    return reinterpret_cast<ModdingAPI::Exposed::System::IAsyncResult*(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t, int32_t, int32_t, ModdingAPI::Exposed::System::AsyncCallback*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB33370))(this, buffer, offset, size, socketFlags, errorCode, callback, state);
  }
  int32_t EndSend(ModdingAPI::Exposed::System::IAsyncResult* asyncResult, int32_t errorCode) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::IAsyncResult*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB33C20))(this, asyncResult, errorCode);
  }
  int32_t EndSendTo(ModdingAPI::Exposed::System::IAsyncResult* asyncResult) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::IAsyncResult*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB34280))(this, asyncResult);
  }
  Il2CppObject* GetSocketOption(int32_t optionLevel, int32_t optionName) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB34380))(this, optionLevel, optionName);
  }
  void SetSocketOption(int32_t optionLevel, int32_t optionName, int32_t optionValue) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB346D0))(this, optionLevel, optionName, optionValue);
  }
  int32_t IOControl(int32_t ioControlCode, ModdingAPI::Exposed::System::Byte_array* optionInValue, ModdingAPI::Exposed::System::Byte_array* optionOutValue) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, int32_t, ModdingAPI::Exposed::System::Byte_array*, ModdingAPI::Exposed::System::Byte_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB349F0))(this, ioControlCode, optionInValue, optionOutValue);
  }
  void Close() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB34F10))(this);
  }
  void Close(int32_t timeout) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB34F20))(this, timeout);
  }
  void Dispose(bool disposing) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB35220))(this, disposing);
  }
  void Linger(intptr_t handle) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, intptr_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB35290))(this, handle);
  }
  void ThrowIfDisposedAndClosed() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB355D0))(this);
  }
  void ThrowIfBufferNull(ModdingAPI::Exposed::System::Byte_array* buffer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::Byte_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB356B0))(this, buffer);
  }
  void ThrowIfBufferOutOfRange(ModdingAPI::Exposed::System::Byte_array* buffer, int32_t offset, int32_t size) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB35760))(this, buffer, offset, size);
  }
  void ThrowIfUdp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB35900))(this);
  }
  ModdingAPI::Exposed::System::Net::Sockets::SocketAsyncResult* ValidateEndIAsyncResult(ModdingAPI::Exposed::System::IAsyncResult* ares, System_String* methodName, System_String* argName) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Net::Sockets::SocketAsyncResult*(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::IAsyncResult*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB359B0))(this, ares, methodName, argName);
  }
  void QueueIOSelectorJob(ModdingAPI::Exposed::System::Threading::SemaphoreSlim* sem, intptr_t handle, ModdingAPI::Exposed::System::IOSelectorJob* job) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::Threading::SemaphoreSlim*, intptr_t, ModdingAPI::Exposed::System::IOSelectorJob*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB35B10))(this, sem, handle, job);
  }
  ModdingAPI::Exposed::System::Net::IPEndPoint* RemapIPEndPoint(ModdingAPI::Exposed::System::Net::IPEndPoint* input) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Net::IPEndPoint*(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::Socket*, ModdingAPI::Exposed::System::Net::IPEndPoint*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB35DF0))(this, input);
  }

  // Static fields:
  static inline __CppStaticProperty<Il2CppObject*> s_InternalSyncObject = __CppStaticProperty<Il2CppObject*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_InternalSyncObject; }
  );
  static inline __CppStaticProperty<bool> s_SupportsIPv4 = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_SupportsIPv4; }
  );
  static inline __CppStaticProperty<bool> s_SupportsIPv6 = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_SupportsIPv6; }
  );
  static inline __CppStaticProperty<bool> s_OSSupportsIPv6 = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_OSSupportsIPv6; }
  );
  static inline __CppStaticProperty<bool> s_Initialized = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_Initialized; }
  );
  static inline __CppStaticProperty<bool> s_LoggingEnabled = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_LoggingEnabled; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::AsyncCallback*> AcceptAsyncCallback = __CppStaticProperty<ModdingAPI::Exposed::System::AsyncCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->AcceptAsyncCallback; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::IOAsyncCallback*> BeginAcceptCallback = __CppStaticProperty<ModdingAPI::Exposed::System::IOAsyncCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->BeginAcceptCallback; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::IOAsyncCallback*> BeginAcceptReceiveCallback = __CppStaticProperty<ModdingAPI::Exposed::System::IOAsyncCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->BeginAcceptReceiveCallback; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::AsyncCallback*> ConnectAsyncCallback = __CppStaticProperty<ModdingAPI::Exposed::System::AsyncCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->ConnectAsyncCallback; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::IOAsyncCallback*> BeginConnectCallback = __CppStaticProperty<ModdingAPI::Exposed::System::IOAsyncCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->BeginConnectCallback; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::AsyncCallback*> DisconnectAsyncCallback = __CppStaticProperty<ModdingAPI::Exposed::System::AsyncCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->DisconnectAsyncCallback; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::IOAsyncCallback*> BeginDisconnectCallback = __CppStaticProperty<ModdingAPI::Exposed::System::IOAsyncCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->BeginDisconnectCallback; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::AsyncCallback*> ReceiveAsyncCallback = __CppStaticProperty<ModdingAPI::Exposed::System::AsyncCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->ReceiveAsyncCallback; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::IOAsyncCallback*> BeginReceiveCallback = __CppStaticProperty<ModdingAPI::Exposed::System::IOAsyncCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->BeginReceiveCallback; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::IOAsyncCallback*> BeginReceiveGenericCallback = __CppStaticProperty<ModdingAPI::Exposed::System::IOAsyncCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->BeginReceiveGenericCallback; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::AsyncCallback*> ReceiveFromAsyncCallback = __CppStaticProperty<ModdingAPI::Exposed::System::AsyncCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->ReceiveFromAsyncCallback; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::IOAsyncCallback*> BeginReceiveFromCallback = __CppStaticProperty<ModdingAPI::Exposed::System::IOAsyncCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->BeginReceiveFromCallback; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::AsyncCallback*> SendAsyncCallback = __CppStaticProperty<ModdingAPI::Exposed::System::AsyncCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->SendAsyncCallback; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::IOAsyncCallback*> BeginSendGenericCallback = __CppStaticProperty<ModdingAPI::Exposed::System::IOAsyncCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->BeginSendGenericCallback; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::AsyncCallback*> SendToAsyncCallback = __CppStaticProperty<ModdingAPI::Exposed::System::AsyncCallback*>(
   []() { return &GetStaticClassInstance()->pStaticFields->SendToAsyncCallback; }
  );

  // Static methods:
  static inline bool get_SupportsIPv4() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2C5C0))();
  }
  static inline bool get_OSSupportsIPv4() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2C670))();
  }
  static inline bool get_SupportsIPv6() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2C720))();
  }
  static inline bool get_OSSupportsIPv6() {
    return reinterpret_cast<bool(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2C7D0))();
  }
  static inline Il2CppObject* get_InternalSyncObject() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2D8D0))();
  }
  static inline void InitializeSockets() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2DAC0))();
  }
  static inline ModdingAPI::Exposed::System::Net::SocketAddress* LocalEndPoint_internal(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle* safeHandle, int32_t family, int32_t error) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Net::SocketAddress*(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2E730))(safeHandle, family, error);
  }
  static inline ModdingAPI::Exposed::System::Net::SocketAddress* LocalEndPoint_internal(intptr_t socket, int32_t family, int32_t error) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Net::SocketAddress*(__fastcall*)(intptr_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2E930))(socket, family, error);
  }
  static inline void Blocking_internal(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle* safeHandle, bool block, int32_t error) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle*, bool, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2EAE0))(safeHandle, block, error);
  }
  static inline void Blocking_internal(intptr_t socket, bool block, int32_t error) {
    reinterpret_cast<void(__fastcall*)(intptr_t, bool, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2EC90))(socket, block, error);
  }
  static inline bool Poll_internal(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle* safeHandle, int32_t mode, int32_t timeout, int32_t error) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2EFC0))(safeHandle, mode, timeout, error);
  }
  static inline bool Poll_internal(intptr_t socket, int32_t mode, int32_t timeout, int32_t error) {
    return reinterpret_cast<bool(__fastcall*)(intptr_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2F160))(socket, mode, timeout, error);
  }
  static inline ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle* Accept_internal(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle* safeHandle, int32_t error, bool blocking) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle*(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2F720))(safeHandle, error, blocking);
  }
  static inline intptr_t Accept_internal(intptr_t sock, int32_t error, bool blocking) {
    return reinterpret_cast<intptr_t(__fastcall*)(intptr_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2FA70))(sock, error, blocking);
  }
  static inline void Bind_internal(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle* safeHandle, ModdingAPI::Exposed::System::Net::SocketAddress* sa, int32_t error) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle*, ModdingAPI::Exposed::System::Net::SocketAddress*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2FD70))(safeHandle, sa, error);
  }
  static inline void Bind_internal(intptr_t sock, ModdingAPI::Exposed::System::Net::SocketAddress* sa, int32_t error) {
    reinterpret_cast<void(__fastcall*)(intptr_t, ModdingAPI::Exposed::System::Net::SocketAddress*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB2FEE0))(sock, sa, error);
  }
  static inline void Listen_internal(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle* safeHandle, int32_t backlog, int32_t error) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB30030))(safeHandle, backlog, error);
  }
  static inline void Listen_internal(intptr_t sock, int32_t backlog, int32_t error) {
    reinterpret_cast<void(__fastcall*)(intptr_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB301E0))(sock, backlog, error);
  }
  static inline void BeginMConnect(ModdingAPI::Exposed::System::Net::Sockets::SocketAsyncResult* sockares) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::SocketAsyncResult*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB30670))(sockares);
  }
  static inline void BeginSConnect(ModdingAPI::Exposed::System::Net::Sockets::SocketAsyncResult* sockares) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::SocketAsyncResult*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB308B0))(sockares);
  }
  static inline void Connect_internal(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle* safeHandle, ModdingAPI::Exposed::System::Net::SocketAddress* sa, int32_t error, bool blocking) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle*, ModdingAPI::Exposed::System::Net::SocketAddress*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB311E0))(safeHandle, sa, error, blocking);
  }
  static inline void Connect_internal(intptr_t sock, ModdingAPI::Exposed::System::Net::SocketAddress* sa, int32_t error, bool blocking) {
    reinterpret_cast<void(__fastcall*)(intptr_t, ModdingAPI::Exposed::System::Net::SocketAddress*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB31340))(sock, sa, error, blocking);
  }
  static inline void Disconnect_internal(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle* safeHandle, bool reuse, int32_t error) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle*, bool, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB31580))(safeHandle, reuse, error);
  }
  static inline void Disconnect_internal(intptr_t sock, bool reuse, int32_t error) {
    reinterpret_cast<void(__fastcall*)(intptr_t, bool, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB31720))(sock, reuse, error);
  }
  static inline int32_t Receive_internal(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle* safeHandle, ModdingAPI::Exposed::System::Net::Sockets::Socket::WSABUF* bufarray, int32_t count, int32_t flags, int32_t error, bool blocking) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle*, ModdingAPI::Exposed::System::Net::Sockets::Socket::WSABUF*, int32_t, int32_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB32220))(safeHandle, bufarray, count, flags, error, blocking);
  }
  static inline int32_t Receive_internal(intptr_t sock, ModdingAPI::Exposed::System::Net::Sockets::Socket::WSABUF* bufarray, int32_t count, int32_t flags, int32_t error, bool blocking) {
    return reinterpret_cast<int32_t(__fastcall*)(intptr_t, ModdingAPI::Exposed::System::Net::Sockets::Socket::WSABUF*, int32_t, int32_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB32400))(sock, bufarray, count, flags, error, blocking);
  }
  static inline int32_t Receive_internal(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle* safeHandle, uint8_t* buffer, int32_t count, int32_t flags, int32_t error, bool blocking) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle*, uint8_t*, int32_t, int32_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB324C0))(safeHandle, buffer, count, flags, error, blocking);
  }
  static inline int32_t Receive_internal(intptr_t sock, uint8_t* buffer, int32_t count, int32_t flags, int32_t error, bool blocking) {
    return reinterpret_cast<int32_t(__fastcall*)(intptr_t, uint8_t*, int32_t, int32_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB326E0))(sock, buffer, count, flags, error, blocking);
  }
  static inline int32_t ReceiveFrom_internal(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle* safeHandle, uint8_t* buffer, int32_t count, int32_t flags, ModdingAPI::Exposed::System::Net::SocketAddress* sockaddr, int32_t error, bool blocking) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle*, uint8_t*, int32_t, int32_t, ModdingAPI::Exposed::System::Net::SocketAddress*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB32B10))(safeHandle, buffer, count, flags, sockaddr, error, blocking);
  }
  static inline int32_t ReceiveFrom_internal(intptr_t sock, uint8_t* buffer, int32_t count, int32_t flags, ModdingAPI::Exposed::System::Net::SocketAddress* sockaddr, int32_t error, bool blocking) {
    return reinterpret_cast<int32_t(__fastcall*)(intptr_t, uint8_t*, int32_t, int32_t, ModdingAPI::Exposed::System::Net::SocketAddress*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB32CB0))(sock, buffer, count, flags, sockaddr, error, blocking);
  }
  static inline void BeginSendCallback(ModdingAPI::Exposed::System::Net::Sockets::SocketAsyncResult* sockares, int32_t sent_so_far) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::SocketAsyncResult*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB33790))(sockares, sent_so_far);
  }
  static inline int32_t Send_internal(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle* safeHandle, ModdingAPI::Exposed::System::Net::Sockets::Socket::WSABUF* bufarray, int32_t count, int32_t flags, int32_t error, bool blocking) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle*, ModdingAPI::Exposed::System::Net::Sockets::Socket::WSABUF*, int32_t, int32_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB33D50))(safeHandle, bufarray, count, flags, error, blocking);
  }
  static inline int32_t Send_internal(intptr_t sock, ModdingAPI::Exposed::System::Net::Sockets::Socket::WSABUF* bufarray, int32_t count, int32_t flags, int32_t error, bool blocking) {
    return reinterpret_cast<int32_t(__fastcall*)(intptr_t, ModdingAPI::Exposed::System::Net::Sockets::Socket::WSABUF*, int32_t, int32_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB33F30))(sock, bufarray, count, flags, error, blocking);
  }
  static inline int32_t Send_internal(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle* safeHandle, uint8_t* buffer, int32_t count, int32_t flags, int32_t error, bool blocking) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle*, uint8_t*, int32_t, int32_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB33FF0))(safeHandle, buffer, count, flags, error, blocking);
  }
  static inline int32_t Send_internal(intptr_t sock, uint8_t* buffer, int32_t count, int32_t flags, int32_t error, bool blocking) {
    return reinterpret_cast<int32_t(__fastcall*)(intptr_t, uint8_t*, int32_t, int32_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB341C0))(sock, buffer, count, flags, error, blocking);
  }
  static inline void GetSocketOption_obj_internal(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle* safeHandle, int32_t level, int32_t name, Il2CppObject* obj_val, int32_t error) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle*, int32_t, int32_t, Il2CppObject*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB34530))(safeHandle, level, name, obj_val, error);
  }
  static inline void GetSocketOption_obj_internal(intptr_t socket, int32_t level, int32_t name, Il2CppObject* obj_val, int32_t error) {
    reinterpret_cast<void(__fastcall*)(intptr_t, int32_t, int32_t, Il2CppObject*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB346C0))(socket, level, name, obj_val, error);
  }
  static inline void SetSocketOption_internal(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle* safeHandle, int32_t level, int32_t name, Il2CppObject* obj_val, ModdingAPI::Exposed::System::Byte_array* byte_val, int32_t int_val, int32_t error) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle*, int32_t, int32_t, Il2CppObject*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB34830))(safeHandle, level, name, obj_val, byte_val, int_val, error);
  }
  static inline void SetSocketOption_internal(intptr_t socket, int32_t level, int32_t name, Il2CppObject* obj_val, ModdingAPI::Exposed::System::Byte_array* byte_val, int32_t int_val, int32_t error) {
    reinterpret_cast<void(__fastcall*)(intptr_t, int32_t, int32_t, Il2CppObject*, ModdingAPI::Exposed::System::Byte_array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB349E0))(socket, level, name, obj_val, byte_val, int_val, error);
  }
  static inline int32_t IOControl_internal(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle* safeHandle, int32_t ioctl_code, ModdingAPI::Exposed::System::Byte_array* input, ModdingAPI::Exposed::System::Byte_array* output, int32_t error) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle*, int32_t, ModdingAPI::Exposed::System::Byte_array*, ModdingAPI::Exposed::System::Byte_array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB34B90))(safeHandle, ioctl_code, input, output, error);
  }
  static inline int32_t IOControl_internal(intptr_t sock, int32_t ioctl_code, ModdingAPI::Exposed::System::Byte_array* input, ModdingAPI::Exposed::System::Byte_array* output, int32_t error) {
    return reinterpret_cast<int32_t(__fastcall*)(intptr_t, int32_t, ModdingAPI::Exposed::System::Byte_array*, ModdingAPI::Exposed::System::Byte_array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB34DE0))(sock, ioctl_code, input, output, error);
  }
  static inline void Close_internal(intptr_t socket, int32_t error) {
    reinterpret_cast<void(__fastcall*)(intptr_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB34F30))(socket, error);
  }
  static inline void Shutdown_internal(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle* safeHandle, int32_t how, int32_t error) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Net::Sockets::SafeSocketHandle*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB34FF0))(safeHandle, how, error);
  }
  static inline void Shutdown_internal(intptr_t socket, int32_t how, int32_t error) {
    reinterpret_cast<void(__fastcall*)(intptr_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB351A0))(socket, how, error);
  }
  static inline void cancel_blocking_socket_operation(ModdingAPI::Exposed::System::Threading::Thread* thread) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Threading::Thread*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB360A0))(thread);
  }
  static inline int32_t get_FamilyHint() {
    return reinterpret_cast<int32_t(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xB360C0))();
  }
  static inline bool IsProtocolSupported_internal(int32_t networkInterface) {
    return reinterpret_cast<bool(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x403F70))(networkInterface);
  }
  static inline bool IsProtocolSupported(int32_t networkInterface) {
    return reinterpret_cast<bool(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xB362E0))(networkInterface);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xB36370))();
  }
};
}