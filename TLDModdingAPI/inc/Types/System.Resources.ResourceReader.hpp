// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System::Resources {
struct __ResourceReader_Il2CppStaticFields {
};

struct __ResourceReader_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_Close;
  VirtualInvokeData _5_GetEnumerator;
  VirtualInvokeData _6_System_Collections_IEnumerable_GetEnumerator;
  VirtualInvokeData _7_Dispose;
};

struct __ResourceReader_Il2CppClass {
  Il2CppClass_1 _1;
  __ResourceReader_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __ResourceReader_Il2CppVtbl vtbl;
};

class ResourceReader {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C56BD0;
  static inline    ResourceReader* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C55388;
  static inline    __ResourceReader_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline ResourceReader* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (ResourceReader**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __ResourceReader_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__ResourceReader_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __ResourceReader_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::System::IO::BinaryReader* _store;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* _resCache;
  int64_t _nameSectionOffset;
  int64_t _dataSectionOffset;
  ModdingAPI::Exposed::System::Int32_array* _nameHashes;
  int32_t* _nameHashesPtr;
  ModdingAPI::Exposed::System::Int32_array* _namePositions;
  int32_t* _namePositionsPtr;
  ModdingAPI::Exposed::System::RuntimeType_array* _typeTable;
  ModdingAPI::Exposed::System::Int32_array* _typeNamePositions;
  ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::BinaryFormatter* _objFormatter;
  int32_t _numResources;
  ModdingAPI::Exposed::System::IO::UnmanagedMemoryStream* _ums;
  int32_t _version;

  // Member methods:
  void ::ctor(ModdingAPI::Exposed::System::IO::Stream* stream, ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* resCache) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*, ModdingAPI::Exposed::System::IO::Stream*, ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72C720))(this, stream, resCache);
  }
  void Close() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72C8E0))(this);
  }
  void Dispose() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72C8E0))(this);
  }
  void Dispose(bool disposing) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72C940))(this, disposing);
  }
  void SkipString() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72C9C0))(this);
  }
  int32_t GetNameHash(int32_t index) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72CAF0))(this, index);
  }
  int32_t GetNamePosition(int32_t index) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72CB70))(this, index);
  }
  ModdingAPI::Exposed::System::Collections::IEnumerator* System::Collections::IEnumerable::GetEnumerator() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IEnumerator*(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72CD00))(this);
  }
  ModdingAPI::Exposed::System::Collections::IDictionaryEnumerator* GetEnumerator() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IDictionaryEnumerator*(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72CD10))(this);
  }
  ModdingAPI::Exposed::System::Resources::ResourceReader::ResourceEnumerator* GetEnumeratorInternal() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Resources::ResourceReader::ResourceEnumerator*(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72CEB0))(this);
  }
  int32_t FindPosForResource(System_String* name) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72D000))(this, name);
  }
  bool CompareStringEqualsName(System_String* name) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72D490))(this, name);
  }
  System_String* AllocateStringForNameIndex(int32_t index, int32_t dataOffset) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72D7E0))(this, index, dataOffset);
  }
  Il2CppObject* GetValueForNameIndex(int32_t index) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72DFE0))(this, index);
  }
  System_String* LoadString(int32_t pos) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72E2E0))(this, pos);
  }
  Il2CppObject* LoadObject(int32_t pos) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72E610))(this, pos);
  }
  Il2CppObject* LoadObject(int32_t pos, int32_t typeCode) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72E640))(this, pos, typeCode);
  }
  Il2CppObject* LoadObjectV1(int32_t pos) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72E720))(this, pos);
  }
  Il2CppObject* _LoadObjectV1(int32_t pos) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72E840))(this, pos);
  }
  Il2CppObject* LoadObjectV2(int32_t pos, int32_t typeCode) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72F000))(this, pos, typeCode);
  }
  Il2CppObject* _LoadObjectV2(int32_t pos, int32_t typeCode) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72F130))(this, pos, typeCode);
  }
  Il2CppObject* DeserializeObject(int32_t typeIndex) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72FDA0))(this, typeIndex);
  }
  void ReadResources() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72FFB0))(this);
  }
  void _ReadResources() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7301B0))(this);
  }
  ModdingAPI::Exposed::System::RuntimeType* FindType(int32_t typeIndex) {
    return reinterpret_cast<ModdingAPI::Exposed::System::RuntimeType*(__fastcall*)(ModdingAPI::Exposed::System::Resources::ResourceReader*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x730C70))(this, typeIndex);
  }

  // Static methods:
  static inline int32_t ReadUnalignedI4(int32_t* p) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x72C9A0))(p);
  }
};
}