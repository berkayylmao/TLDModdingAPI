// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed {
struct __LoadScene_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_LoadScenesList;
  ModdingAPI::Exposed::LoadSceneSaveDataProxy* m_LoadSceneSaveDataProxy;
};

struct __LoadScene_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __LoadScene_Il2CppClass {
  Il2CppClass_1 _1;
  __LoadScene_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __LoadScene_Il2CppVtbl vtbl;
};

class LoadScene {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C39F88;
  static inline    __LoadScene_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __LoadScene_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__LoadScene_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __LoadScene_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  System_String* m_SceneToLoad;
  System_String* m_ExitPointName;
  bool m_SceneCanBeInstanced;
  System_String* m_SoundDuringFadeOut;
  System_String* m_SoundDuringFadeIn;
  ModdingAPI::Exposed::LocalizedString* m_LocalizedTransitionType;
  bool m_TransitionOnContact;
  ModdingAPI::Exposed::LoadingZone* m_PartnerLoadingZone;
  ModdingAPI::Exposed::LoadSceneParent* m_LoadSceneParent;
  ModdingAPI::Exposed::AnimatedInteraction* m_AnimatedInteraction;
  ModdingAPI::Exposed::UnityEngine::Animator* m_AnimatedObjectAnimator;
  System_String* m_AnimatedObjectTrackName;
  System_String* m_SceneLocationLocIDToShow;
  bool m_FadeOutStarted;
  bool m_Explored;
  ModdingAPI::Exposed::Lock* m_Lock;
  System_String* m_GUID;
  bool m_StartHasBeenCalled;
  bool m_IsBeingInteractedWith;
  float m_InteractTimer;
  int32_t m_previousControlMode;
  bool m_ActivateWhenPlayerTouchGround;

  // Member methods:
  System_String* get_m_TransitionType() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1634400))(this);
  }
  void Awake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18F68E0))(this);
  }
  void AssignBindingOverrides() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18F6A00))(this);
  }
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18F6C20))(this);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18F7050))(this);
  }
  System_String* Serialize() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18F72C0))(this);
  }
  void Deserialize(System_String* text) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::LoadScene*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18F7610))(this, text);
  }
  void Activate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18F8770))(this);
  }
  System_String* GetGUID() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3BC530))(this);
  }
  void MarkExplored() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18F8EA0))(this);
  }
  System_String* GetHoverText() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18F8F90))(this);
  }
  void ForceLock() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18F9150))(this);
  }
  bool IsLocked() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18F9300))(this);
  }
  System_String* GetSceneToLoad() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18F93E0))(this);
  }
  void StartInteract() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18F94E0))(this);
  }
  void StartInteractInternal() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18F96A0))(this);
  }
  void Cancel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18F9970))(this);
  }
  void ProgressBarStarted() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void LoadLevelWhenFadeOutComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18F9B10))(this);
  }
  void HolsterItemInHands() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18FA1E0))(this);
  }
  void OnTriggerEnter(ModdingAPI::Exposed::UnityEngine::Collider* other) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::LoadScene*, ModdingAPI::Exposed::UnityEngine::Collider*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18FA290))(this, other);
  }
  void MarkBrothersExplored() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18FA3F0))(this);
  }
  void OnLockBroken() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18FA640))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::LoadScene*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x389390))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*> m_LoadScenesList = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_LoadScenesList; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::LoadSceneSaveDataProxy*> m_LoadSceneSaveDataProxy = __CppStaticProperty<ModdingAPI::Exposed::LoadSceneSaveDataProxy*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_LoadSceneSaveDataProxy; }
  );

  // Static methods:
  static inline void Reset() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x18F7750))();
  }
  static inline void MaybeAddGUIDToPrevSceneSave() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x18F7830))();
  }
  static inline System_String* SerializeAll() {
    return reinterpret_cast<System_String*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x18F7C00))();
  }
  static inline void DeserializeAll(System_String* text) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18F7FB0))(text);
  }
  static inline ModdingAPI::Exposed::LoadScene* FindLoadSceneByGuid(System_String* guid) {
    return reinterpret_cast<ModdingAPI::Exposed::LoadScene*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18FA650))(guid);
  }
  static inline ModdingAPI::Exposed::LoadScene* FindLoadSceneByPosition(ModdingAPI::Exposed::LoadSceneSaveDataProxy* proxy) {
    return reinterpret_cast<ModdingAPI::Exposed::LoadScene*(__fastcall*)(ModdingAPI::Exposed::LoadSceneSaveDataProxy*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x18FA740))(proxy);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x18FAA90))();
  }
};
}