// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System::ComponentModel {
struct __EventDescriptorCollection_Il2CppStaticFields {
  ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection* Empty;
};

struct __EventDescriptorCollection_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_System_Collections_ICollection_CopyTo;
  VirtualInvokeData _5_System_Collections_ICollection_get_Count;
  VirtualInvokeData _6_System_Collections_ICollection_get_SyncRoot;
  VirtualInvokeData _7_System_Collections_ICollection_get_IsSynchronized;
  VirtualInvokeData _8_System_Collections_IEnumerable_GetEnumerator;
  VirtualInvokeData _9_System_Collections_IList_get_Item;
  VirtualInvokeData _10_System_Collections_IList_set_Item;
  VirtualInvokeData _11_System_Collections_IList_Add;
  VirtualInvokeData _12_System_Collections_IList_Contains;
  VirtualInvokeData _13_System_Collections_IList_Clear;
  VirtualInvokeData _14_System_Collections_IList_get_IsReadOnly;
  VirtualInvokeData _15_System_Collections_IList_get_IsFixedSize;
  VirtualInvokeData _16_System_Collections_IList_IndexOf;
  VirtualInvokeData _17_System_Collections_IList_Insert;
  VirtualInvokeData _18_System_Collections_IList_Remove;
  VirtualInvokeData _19_System_Collections_IList_RemoveAt;
  VirtualInvokeData _20_get_Item;
  VirtualInvokeData _21_get_Item;
  VirtualInvokeData _22_Find;
};

struct __EventDescriptorCollection_Il2CppClass {
  Il2CppClass_1 _1;
  __EventDescriptorCollection_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __EventDescriptorCollection_Il2CppVtbl vtbl;
};

class EventDescriptorCollection {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C37318;
  static inline    __EventDescriptorCollection_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __EventDescriptorCollection_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__EventDescriptorCollection_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __EventDescriptorCollection_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::System::ComponentModel::EventDescriptor_array* events;
  ModdingAPI::Exposed::System::String_array* namedSort;
  ModdingAPI::Exposed::System::Collections::IComparer* comparer;
  bool eventsOwned;
  bool needSort;
  int32_t eventCount;
  bool readOnly;

  // Member methods:
  void ::ctor(ModdingAPI::Exposed::System::ComponentModel::EventDescriptor_array* events) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, ModdingAPI::Exposed::System::ComponentModel::EventDescriptor_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEB9830))(this, events);
  }
  void ::ctor(ModdingAPI::Exposed::System::ComponentModel::EventDescriptor_array* events, bool readOnly) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, ModdingAPI::Exposed::System::ComponentModel::EventDescriptor_array*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEB98F0))(this, events, readOnly);
  }
  int32_t get_Count() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36F820))(this);
  }
  ModdingAPI::Exposed::System::ComponentModel::EventDescriptor* get_Item(int32_t index) {
    return reinterpret_cast<ModdingAPI::Exposed::System::ComponentModel::EventDescriptor*(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEB99C0))(this, index);
  }
  ModdingAPI::Exposed::System::ComponentModel::EventDescriptor* get_Item(System_String* name) {
    return reinterpret_cast<ModdingAPI::Exposed::System::ComponentModel::EventDescriptor*(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEB9AB0))(this, name);
  }
  int32_t Add(ModdingAPI::Exposed::System::ComponentModel::EventDescriptor* value) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, ModdingAPI::Exposed::System::ComponentModel::EventDescriptor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEB9AD0))(this, value);
  }
  void Clear() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEB9C00))(this);
  }
  bool Contains(ModdingAPI::Exposed::System::ComponentModel::EventDescriptor* value) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, ModdingAPI::Exposed::System::ComponentModel::EventDescriptor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEB9CB0))(this, value);
  }
  void System::Collections::ICollection::CopyTo(ModdingAPI::Exposed::System::Array* array, int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, ModdingAPI::Exposed::System::Array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEB9CD0))(this, array, index);
  }
  void EnsureEventsOwned() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEB9D20))(this);
  }
  void EnsureSize(int32_t sizeNeeded) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEB9E00))(this, sizeNeeded);
  }
  ModdingAPI::Exposed::System::ComponentModel::EventDescriptor* Find(System_String* name, bool ignoreCase) {
    return reinterpret_cast<ModdingAPI::Exposed::System::ComponentModel::EventDescriptor*(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, System_String*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEB9F50))(this, name, ignoreCase);
  }
  int32_t IndexOf(ModdingAPI::Exposed::System::ComponentModel::EventDescriptor* value) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, ModdingAPI::Exposed::System::ComponentModel::EventDescriptor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEBA260))(this, value);
  }
  void Insert(int32_t index, ModdingAPI::Exposed::System::ComponentModel::EventDescriptor* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, int32_t, ModdingAPI::Exposed::System::ComponentModel::EventDescriptor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEBA300))(this, index, value);
  }
  void Remove(ModdingAPI::Exposed::System::ComponentModel::EventDescriptor* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, ModdingAPI::Exposed::System::ComponentModel::EventDescriptor*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEBA450))(this, value);
  }
  void RemoveAt(int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEBA520))(this, index);
  }
  ModdingAPI::Exposed::System::Collections::IEnumerator* GetEnumerator() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IEnumerator*(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEBA640))(this);
  }
  void InternalSort(ModdingAPI::Exposed::System::String_array* names) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, ModdingAPI::Exposed::System::String_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEBA7D0))(this, names);
  }
  void InternalSort(ModdingAPI::Exposed::System::Collections::IComparer* sorter) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, ModdingAPI::Exposed::System::Collections::IComparer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEBAC20))(this, sorter);
  }
  int32_t System::Collections::ICollection::get_Count() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36F820))(this);
  }
  bool System::Collections::ICollection::get_IsSynchronized() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077A0))(this);
  }
  Il2CppObject* System::Collections::ICollection::get_SyncRoot() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this);
  }
  ModdingAPI::Exposed::System::Collections::IEnumerator* System::Collections::IEnumerable::GetEnumerator() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IEnumerator*(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEBACF0))(this);
  }
  Il2CppObject* System::Collections::IList::get_Item(int32_t index) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x8D58C0))(this, index);
  }
  void System::Collections::IList::set_Item(int32_t index, Il2CppObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, int32_t, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEBAD00))(this, index, value);
  }
  int32_t System::Collections::IList::Add(Il2CppObject* value) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEBAE70))(this, value);
  }
  void System::Collections::IList::Clear() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEB9C00))(this);
  }
  bool System::Collections::IList::Contains(Il2CppObject* value) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEBB050))(this, value);
  }
  int32_t System::Collections::IList::IndexOf(Il2CppObject* value) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEBB130))(this, value);
  }
  void System::Collections::IList::Insert(int32_t index, Il2CppObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, int32_t, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEBB210))(this, index, value);
  }
  void System::Collections::IList::Remove(Il2CppObject* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEBB420))(this, value);
  }
  void System::Collections::IList::RemoveAt(int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xEBB5B0))(this, index);
  }
  bool System::Collections::IList::get_IsReadOnly() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x57C620))(this);
  }
  bool System::Collections::IList::get_IsFixedSize() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x57C620))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*> Empty = __CppStaticProperty<ModdingAPI::Exposed::System::ComponentModel::EventDescriptorCollection*>(
   []() { return &GetStaticClassInstance()->pStaticFields->Empty; }
  );

  // Static methods:
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0xEBB5C0))();
  }
};
}