// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Quaternion.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Vector3.hpp"
#include "ModdingAPI::Exposed::UnityEngine::Quaternion.hpp"


namespace ModdingAPI::Exposed {
struct __DialogueModeRigFP_Il2CppStaticFields {
  ModdingAPI::Exposed::DialogueModeRigFP* m_Current;
  bool s_DebugDialogue;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* s_DialogueModeRigFPs;
};

struct __DialogueModeRigFP_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __DialogueModeRigFP_Il2CppClass {
  Il2CppClass_1 _1;
  __DialogueModeRigFP_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __DialogueModeRigFP_Il2CppVtbl vtbl;
};

class DialogueModeRigFP {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C5A1B0;
  static inline    __DialogueModeRigFP_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __DialogueModeRigFP_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__DialogueModeRigFP_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __DialogueModeRigFP_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::DialogueCategoriesConfiguration* m_DialogueCategoriesConfigurations;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_DialogueOptionsAnimationTreePrefab;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_DialogueOptionsAnimationTreeParent;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_LabelDialogPrefab;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_CameraFramingInfoList;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_CharacterPlayerDummy;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_CameraPlayerDummy;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_AudioEmitterNode;
  ModdingAPI::Exposed::NodeCanvas::DialogueTrees::DialogueTreeController* m_DefaultDialogueTree;
  ModdingAPI::Exposed::UnityEngine::Animator* m_CurrentNPCAnimator;
  System_String* m_KnowledgeDescLocID;
  System_String* m_DisplayName;
  System_String* m_OptionalUnknownDisplayName;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_PermanentProps;
  ModdingAPI::Exposed::UnityEngine::CharacterController* m_CurrentNPCCharacterController;
  bool m_IndividualLineAnimationRequired;
  float m_Fov;
  float m_TransitionDurationSeconds;
  ModdingAPI::Exposed::UnityEngine::Vector2 m_PitchLimitDegrees;
  ModdingAPI::Exposed::UnityEngine::Vector2 m_YawLimitDegrees;
  float m_NPCInteractionConeAngleDegrees;
  float m_StrafingDistanceLimitMeters;
  bool m_SkipPlayerInTransition;
  bool m_SkipPlayerOutTransition;
  bool m_UseTimelineForSpeech;
  System_String* m_DefaultFramingNonStory;
  System_String* m_DefaultAnimationStateNonStory;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_DialogueSequenceListParent;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_DialogueSequenceList;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_DialogueChoiceInfo;
  float m_TransitionElapsedTimeSeconds;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_OriginalPlayerPos;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_OriginalCameraLocalPos;
  ModdingAPI::Exposed::UnityEngine::Quaternion m_OriginalCameraPlayerRotation;
  ModdingAPI::Exposed::UnityEngine::Vector2 m_TransitionStartCameraPlayerAngle;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_TransitionStartPlayerPosition;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_TransitionStartLocalCameraPosition;
  float m_OriginalCameraFov;
  int32_t m_RestorePlayerControlMode;
  ModdingAPI::Exposed::UnityEngine::Vector2 m_StartPitchLimit;
  ModdingAPI::Exposed::UnityEngine::Vector2 m_StartYawLimit;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_EndDialoguePlayerPos;
  ModdingAPI::Exposed::UnityEngine::Vector3 m_EndDialogueCameraLocalPos;
  ModdingAPI::Exposed::UnityEngine::Quaternion m_EndDialoguePlayerRotation;
  int32_t m_DialogueModeState;
  ModdingAPI::Exposed::UnityEngine::Animator* m_LoadedNPCAnimator;
  ModdingAPI::Exposed::UnityEngine::Animator* m_LoadedFPHAnimator;
  ModdingAPI::Exposed::PlayEventMonitor* m_PlayEventMonitor;
  ModdingAPI::Exposed::UnityEngine::Animator* m_CurrentFPHAnimator;
  ModdingAPI::Exposed::DialogueModeRigFP::DialogueStatement* m_DialogueStatement;
  System_String* m_CameraFramingIn;
  float m_CameraFramingInTransitionDurationSeconds;
  System_String* m_CameraFramingOut;
  float m_CameraFramingOutTransitionDurationSeconds;
  int32_t m_DesiredTimelineControlMode;
  System_String* m_DialogueExitPoint;
  ModdingAPI::Exposed::NodeCanvas::DialogueTrees::DialogueTreeController* m_DialogueTreeController;
  ModdingAPI::Exposed::UnityEngine::RuntimeAnimatorController* m_OriginalNPCRuntimeAnimatorController;
  ModdingAPI::Exposed::UnityEngine::RuntimeAnimatorController* m_OriginalFPHRuntimeAnimatorController;
  ModdingAPI::Exposed::System::Action* m_OnStatementFinish;
  ModdingAPI::Exposed::System::Action* m_OnCinematicFinish;
  bool m_LoadingRequested;
  System_String* m_LoadedAssetBundleFilename;
  System_String* m_LoadedPrefabPath;
  System_String* m_AnimState_Idle;
  int32_t m_PendingDialogueModeState;
  ModdingAPI::Exposed::DialogueOptionsAnimationTree* m_DialogueOptionsAnimationTree;
  int32_t m_DialogueControllerMode;
  bool m_AnimationsLoadingComplete;
  ModdingAPI::Exposed::AssetBundleRef* m_AssetBundle;
  ModdingAPI::Exposed::UnityEngine::GameObject* m_AnimationsAsset;
  int32_t m_NPCBaseLayerIndex;
  int32_t m_NPCHeadLayerIndex;
  int32_t m_NPCFaceLayerIndex;
  ModdingAPI::Exposed::CinematicAssets* m_DialogueAssets;
  float m_CurrentTime;
  float m_CurrentAnimationTime;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_CurrentFilter;
  bool m_FilterHasChanged;
  int32_t m_DialogueStartedCount;
  int32_t m_CameraLayerBeforeDialogue;
  int32_t m_OnGoingAnimationState;
  System_String* m_OnGoingAnimationStateName;
  System_String* m_OnGoingAnimationStateKey;
  bool m_AnimationRequested;
  bool m_NextDialogueRequested;
  float m_OnGoingAnimationDuration;
  uint32_t m_AudioID;
  System_String* m_AudioEventStop;
  System_String* m_AudioEventStart;
  ModdingAPI::Exposed::System::Action* m_OnExitRequestedAction;
  int32_t m_AnimParameter_Is_InDialogue;
  System_String* m_NPC_MissionId;
  bool m_RecenterCameraRequested;
  System_String* m_CurrentCameraFramingName;
  ModdingAPI::Exposed::NPC_Animation* m_NPC_AnimationComponent;
  ModdingAPI::Exposed::DialogueModeRigFP::CinematicMoment* m_CinematicMoment;
  bool m_CurrentFPHAnimatorPlaying;
  bool m_ShowDialogueUI;
  int32_t m_PendingIdleHash;
  int32_t m_PendingIdleLayer;
  bool m_IsIdlePending;
  System_String* m_OnGoingAnimationTrigger;
  bool m_IsCinematicOnGoing;
  float m_AudioDurationRealtimeSeconds;
  float m_AfterDurationTimer;
  bool m_PlaySequenceCompleteReady;
  bool m_LerpCameraValuesInitialized;
  System_String* m_OnGoingFaceAnimationTrigger;
  System_String* m_OnGoingFaceAnimationStateKey;
  bool m_FadedOutOnExit;
  bool m_EnableExitUI;
  bool m_ExitDialoguePending;
  ModdingAPI::Exposed::System::Action* m_OnDialogueEndsAction;
  ModdingAPI::Exposed::DialogueModeRigFP::AssignedChoiceCategoryInfo_array* m_CurrentAssignedChoiceCategoryInfo;
  bool m_CanApplyCameraMotionToJoint;
  float m_CurrentTransitionDurationSeconds;
  ModdingAPI::Exposed::TimelineRef* m_TimelineRef;
  ModdingAPI::Exposed::TimelineRef* m_RequestedTimelineRef;
  bool m_LoadTimelineCompleted;
  bool m_LoadTimelineFailed;
  bool m_LerpCameraOffset;
  bool m_ResetAimingModeRequested;
  bool m_DisableBreathFXForTimeline;
  int32_t m_RestoreHudDisplayMode;
  bool m_DelaySubtitles;
  bool m_IsTimelinePlaying;
  bool m_StopRequested;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* m_TimelineBindingOverrides;
  bool m_HandsReady;

  // Member methods:
  void Awake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F41500))(this);
  }
  void Start() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F41D50))(this);
  }
  void SetAnimationParameter_IsInDialogue(bool isInDialogue) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F41E10))(this, isInDialogue);
  }
  void Update() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F42030))(this);
  }
  void LateUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F42680))(this);
  }
  void OnDestroy() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F42B30))(this);
  }
  void OnPlayerEndedDialogue() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F42CC0))(this);
  }
  void SetExitRequestedAction(ModdingAPI::Exposed::System::Action* onExitRequested) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, ModdingAPI::Exposed::System::Action*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F42F30))(this, onExitRequested);
  }
  void OnPlayerStartedDialogue() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F42F40))(this);
  }
  void SetDialogueController(ModdingAPI::Exposed::NodeCanvas::DialogueTrees::DialogueTreeController* dialogTreeController) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, ModdingAPI::Exposed::NodeCanvas::DialogueTrees::DialogueTreeController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xC11740))(this, dialogTreeController);
  }
  System_String* GetHoverText() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F431B0))(this);
  }
  void ResetDialogueController() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F432E0))(this);
  }
  bool ProcessInteraction() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F433D0))(this);
  }
  void RequestExitDialogue() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F435F0))(this);
  }
  bool IsInTransition() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F43610))(this);
  }
  bool IsInIdle() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F43630))(this);
  }
  bool CanShowDialogueUI() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F43640))(this);
  }
  bool RespectContrainsts() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F43650))(this);
  }
  void SetFilter(ModdingAPI::Exposed::System::Collections::Generic::List_T_* filter, bool clearFilter) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F438F0))(this, filter, clearFilter);
  }
  void OnChoiceSelected(int32_t choiceIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F439F0))(this, choiceIndex);
  }
  void SetOnDialogueEndsAction(ModdingAPI::Exposed::System::Action* onDialogueEnds) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, ModdingAPI::Exposed::System::Action*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F43B30))(this, onDialogueEnds);
  }
  System_String* GetDebugDialogueText() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F43B40))(this);
  }
  void ShowDialogueUI(bool showDialogueUI) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F447B0))(this, showDialogueUI);
  }
  void EnableExitUI(bool enableExitUI) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F447C0))(this, enableExitUI);
  }
  bool IsExitUIEnabled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F447D0))(this);
  }
  bool MaybeGetAssignedChoiceCategory(int32_t choiceIndex, System_String* locId, int32_t category) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, int32_t, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F447E0))(this, choiceIndex, locId, category);
  }
  bool AssignCategory(int32_t choiceIndex, int32_t category) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F448E0))(this, choiceIndex, category);
  }
  void LogChoices() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F44AA0))(this);
  }
  void ReplacePlayerExit(ModdingAPI::Exposed::UnityEngine::Vector3 playerPosition, ModdingAPI::Exposed::UnityEngine::Quaternion cameraRotation, ModdingAPI::Exposed::UnityEngine::Vector3 originalCameraLocalPos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Quaternion, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F44FC0))(this, playerPosition, cameraRotation, originalCameraLocalPos);
  }
  void OnCategoryAssigned(int32_t choiceIndex, int32_t category) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F45000))(this, choiceIndex, category);
  }
  ModdingAPI::Exposed::DialogueSequenceFP* GetAssignedSlot(int32_t choiceIndex) {
    return reinterpret_cast<ModdingAPI::Exposed::DialogueSequenceFP*(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F451C0))(this, choiceIndex);
  }
  ModdingAPI::Exposed::DialogueModeRigFP::DialogueChoiceInfo* GetChoiceInfo(int32_t choiceIndex) {
    return reinterpret_cast<ModdingAPI::Exposed::DialogueModeRigFP::DialogueChoiceInfo*(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F45360))(this, choiceIndex);
  }
  bool IsNPCStatePlaying(int32_t hashState, int32_t layer) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F454F0))(this, hashState, layer);
  }
  void ExtractNPCMissionId() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F45590))(this);
  }
  void OnDialogueTreeFinished(ModdingAPI::Exposed::NodeCanvas::DialogueTrees::DialogueTree* obj) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, ModdingAPI::Exposed::NodeCanvas::DialogueTrees::DialogueTree*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F456A0))(this, obj);
  }
  void OnDialogueTreeStarted(ModdingAPI::Exposed::NodeCanvas::DialogueTrees::DialogueTree* obj) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, ModdingAPI::Exposed::NodeCanvas::DialogueTrees::DialogueTree*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F456C0))(this, obj);
  }
  void EnableDialogueSequenceFP(bool enabled) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F456D0))(this, enabled);
  }
  void LimitCameraRotation() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F458F0))(this);
  }
  void UnloadAnimations() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F45A50))(this);
  }
  ModdingAPI::Exposed::DialogueSequenceFP* AssignChoiceToCategorySlot(int32_t category, System_String* dialogueChoiceText, int32_t choiceIndex, float textSize) {
    return reinterpret_cast<ModdingAPI::Exposed::DialogueSequenceFP*(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, int32_t, System_String*, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F45BF0))(this, category, dialogueChoiceText, choiceIndex, textSize);
  }
  ModdingAPI::Exposed::DialogueSequenceFP* GetAvailableSlotForCategory(int32_t category) {
    return reinterpret_cast<ModdingAPI::Exposed::DialogueSequenceFP*(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F46090))(this, category);
  }
  int32_t GetFallbackSlotCategory(int32_t category) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F46230))(this, category);
  }
  ModdingAPI::Exposed::DialogueModeRigFP::DialogueChoiceCategoryConfiguration* GetCategoryConfiguration(int32_t choiceCategory) {
    return reinterpret_cast<ModdingAPI::Exposed::DialogueModeRigFP::DialogueChoiceCategoryConfiguration*(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F46240))(this, choiceCategory);
  }
  void AssignHiddenChoiceToCategorySlot(int32_t category, System_String* dialogueChoiceText, int32_t choiceIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, int32_t, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F46420))(this, category, dialogueChoiceText, choiceIndex);
  }
  void UpdateChoiceAssignment() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F46550))(this);
  }
  void SetDialogueTreeChoices(ModdingAPI::Exposed::System::Collections::Generic::List_T_* dialogueChoices, int32_t loopBackIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F469D0))(this, dialogueChoices, loopBackIndex);
  }
  bool IsChoiceAcceptedByFilter(int32_t topic) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F46D20))(this, topic);
  }
  uint32_t PostAudioEvent(System_String* soundID, ModdingAPI::Exposed::UnityEngine::GameObject* go) {
    return reinterpret_cast<uint32_t(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, System_String*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F46DF0))(this, soundID, go);
  }
  void StopPreviousAudio() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F46F00))(this);
  }
  void SetDialogueModeState(int32_t dialogueModeState) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F470F0))(this, dialogueModeState);
  }
  ModdingAPI::Exposed::UnityEngine::Animator* GetNPCAnimator() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Animator*(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F471E0))(this);
  }
  void ReplaceFPController(int32_t dialogueControllerMode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F47350))(this, dialogueControllerMode);
  }
  void ReplaceAnimControllerAndResumeState(int32_t dialogueControllerMode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F47510))(this, dialogueControllerMode);
  }
  void CheckLastAnimationRestore() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F47860))(this);
  }
  void SetCameraFov() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F47A30))(this);
  }
  bool IsStatePlaying(int32_t stateHash) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F47B30))(this, stateHash);
  }
  void ReturnToIdleAnimation() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F47C80))(this);
  }
  void OnEnter_DialogueModeStateEnd() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F48240))(this);
  }
  void ExitDialogueMode() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F48250))(this);
  }
  void OnEnter_DialogueModeStateStart() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F48630))(this);
  }
  void DisableDialogue() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F489A0))(this);
  }
  void Update_DialogueModeStateEnd() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F48B00))(this);
  }
  void OnEnter_DialogueModeStateNone() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F48C50))(this);
  }
  void Update_DialogueModeStateNone() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F48C50))(this);
  }
  void Update_DialogueModeStateStart() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F48C60))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetCharacterDesiredPosition() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F48CA0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Quaternion GetCameraDesiredRotation() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Quaternion(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F48F30))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetReferenceCameraForward() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F49010))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetReferenceCameraRight() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F490B0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetCameraDesiredLocalPosition() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F49150))(this);
  }
  int32_t GetCurrentNPCIdleStateHash() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F49240))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* GetCurrentIdlePropInfos() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F492E0))(this);
  }
  void RestoreCurrentPermamentPropIdle(ModdingAPI::Exposed::CinematicAssets::PermanentPropInfo* permanentProp, ModdingAPI::Exposed::System::Collections::Generic::List_T_* currentIdlePropInfos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, ModdingAPI::Exposed::CinematicAssets::PermanentPropInfo*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F496D0))(this, permanentProp, currentIdlePropInfos);
  }
  void RestoreCurrentIdleDialogueModeRigFp(int32_t currentNpcIdleStateHash, ModdingAPI::Exposed::System::Collections::Generic::List_T_* currentIdlePropInfos) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, int32_t, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F498E0))(this, currentNpcIdleStateHash, currentIdlePropInfos);
  }
  void RequestCameraTransition(float transitionDurationSeconds) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F49B00))(this, transitionDurationSeconds);
  }
  void UpdateChoicesAfterFilterChange() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4A850))(this);
  }
  void UpdateFromUnderCrosshair() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4A880))(this);
  }
  void UpdateClosestToCenter() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4AB40))(this);
  }
  void ProcessSelectionConfirm() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4AC10))(this);
  }
  void OnEnter_DialogueModeStateIdle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4AE10))(this);
  }
  void Update_DialogueModeStateIdle() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4B0C0))(this);
  }
  void Update_DialogueModeStateIdleUI() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4B1E0))(this);
  }
  void OnSpeech(System_String* meta, ModdingAPI::Exposed::System::Action* onStatementFinish, System_String* subtitlesText, ModdingAPI::Exposed::NodeCanvas::DialogueTrees::IDialogueActor* dialogueActor, float duration, float afterDuration, System_String* localizationId) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, System_String*, ModdingAPI::Exposed::System::Action*, System_String*, ModdingAPI::Exposed::NodeCanvas::DialogueTrees::IDialogueActor*, float, float, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4B2C0))(this, meta, onStatementFinish, subtitlesText, dialogueActor, duration, afterDuration, localizationId);
  }
  void MaybeAutoAssignDialogueAnimationAndAudio(ModdingAPI::Exposed::DialogueModeRigFP::DialogueStatement* dialogueStatement, System_String* locId) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, ModdingAPI::Exposed::DialogueModeRigFP::DialogueStatement*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4B600))(this, dialogueStatement, locId);
  }
  void OnCinematicPlay(ModdingAPI::Exposed::DialogueAnimationState* dialogueAnimationState, System_String* audioStart, System_String* audioEnd, ModdingAPI::Exposed::System::Action* onCinematicFinish, ModdingAPI::Exposed::UnityEngine::TextAsset* subtitleAsset) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, ModdingAPI::Exposed::DialogueAnimationState*, System_String*, System_String*, ModdingAPI::Exposed::System::Action*, ModdingAPI::Exposed::UnityEngine::TextAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4BAF0))(this, dialogueAnimationState, audioStart, audioEnd, onCinematicFinish, subtitleAsset);
  }
  void OnTimelinePlay(ModdingAPI::Exposed::DialogueTimelineScript* dialogueTimelineScript, ModdingAPI::Exposed::System::Action* onCinematicFinish) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, ModdingAPI::Exposed::DialogueTimelineScript*, ModdingAPI::Exposed::System::Action*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4C140))(this, dialogueTimelineScript, onCinematicFinish);
  }
  bool CanApplyCameraMotionToJoint() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4C3D0))(this);
  }
  void ReplaceCameraFraming(System_String* cameraFraming) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4C3E0))(this, cameraFraming);
  }
  void ReplaceSavedPosition(System_String* cameraFraming) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4C590))(this, cameraFraming);
  }
  float ComputeSubtitleDurationInSeconds(System_String* text) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4C7B0))(this, text);
  }
  System_String* GetBundleFilename(System_String* stateKey) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4C8D0))(this, stateKey);
  }
  System_String* GePrefabPath(System_String* stateKey) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4C9B0))(this, stateKey);
  }
  bool IsAnimationAlreadyLoaded(System_String* stateKey) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4CA90))(this, stateKey);
  }
  bool IsAnimationLoadingRequired() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4CB50))(this);
  }
  void AbortLoad() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4CCA0))(this);
  }
  ModdingAPI::Exposed::System::Collections::IEnumerator* LoadAnimations(System_String* stateKey) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::IEnumerator*(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4CCF0))(this, stateKey);
  }
  bool AreAssetsReady() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4CE50))(this);
  }
  void RetrieveLoadedAnimators(System_String* errorPath) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4CFA0))(this, errorPath);
  }
  void OnEnter_DialogueModeStateLoadSequence() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4D2E0))(this);
  }
  void Update_DialogueModeStateLoadSequence() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4D8D0))(this);
  }
  void OnLoadTimelineCompleted() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4DB60))(this);
  }
  void OnLoadTimelineFailed() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4DB70))(this);
  }
  bool IsTimelineRequested() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4DB80))(this);
  }
  bool ShouldSupressBreathFXForTimeline() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4DB90))(this);
  }
  void PlayCinematic() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4E180))(this);
  }
  void OnEnter_DialogueModeStatePlayCinematic() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4E4B0))(this);
  }
  void SetHudModeForCinematic() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4E7F0))(this);
  }
  void Update_DialogueModeStatePlayCinematic() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4E9C0))(this);
  }
  void OnCinematicDone() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4F2F0))(this);
  }
  void OnEnter_DialogueModeStatePlayCinematicComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4F440))(this);
  }
  void Update_DialogueModeStatePlayCinematicComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4F780))(this);
  }
  void DialogueNext() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4F8E0))(this);
  }
  void SetAudioDurationRealtimeSeconds(float duration) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4F900))(this, duration);
  }
  System_String* GetTriggeredByName(System_String* stateKey) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4F910))(this, stateKey);
  }
  System_String* GetTriggerIdle(System_String* stateKey) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4F9E0))(this, stateKey);
  }
  System_String* GetStateIdle(System_String* stateKey) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4FAB0))(this, stateKey);
  }
  int32_t GetLayerIndex(System_String* stateKey) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4FB80))(this, stateKey);
  }
  bool IsAnimationRequested() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4FC50))(this);
  }
  void PlayAudio(System_String* audioEventStart, System_String* audioEventStop) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4FD30))(this, audioEventStart, audioEventStop);
  }
  void LerpCameraFramingToDesired(float normalizedProgress) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4FFA0))(this, normalizedProgress);
  }
  void RecenterCameraToDesired() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F50770))(this);
  }
  bool IsCameraCentered() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F508F0))(this);
  }
  void PlayDialogueAnimation() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F50DB0))(this);
  }
  bool IsFPHPlayingIdle() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F51160))(this);
  }
  bool IsTransitionDone() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F51280))(this);
  }
  void Update_CameraControl() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F512B0))(this);
  }
  float GetOnGoingStateDuration() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F513B0))(this);
  }
  void LateSynchronizeAnimators(float currentTime, int32_t stateHash) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F51520))(this, currentTime, stateHash);
  }
  void OnCurrentFPHAnimatorStoppedPlaying() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F51940))(this);
  }
  bool IsCinematicOrNotAnimatedStatement() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F51960))(this);
  }
  void OnEnter_DialogueModeStatePlayLine() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F519A0))(this);
  }
  void DoNextStatement() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F51CA0))(this);
  }
  void OnNextDialogueRequested() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F51E10))(this);
  }
  void ProcessAfterDuration() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F51F60))(this);
  }
  float GetCinematicDuration() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F52090))(this);
  }
  void MaybeUpdateIndividualLineDuration() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F520A0))(this);
  }
  void Update_DialogueModeStatePlayLine() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F52220))(this);
  }
  void OnEnter_DialogueModeStatePlayLineComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F529D0))(this);
  }
  void Update_DialogueModeStatePlayLineComplete() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F529E0))(this);
  }
  void AssignTimelineOverride(System_String* trackName, ModdingAPI::Exposed::UnityEngine::GameObject* target) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*, System_String*, ModdingAPI::Exposed::UnityEngine::GameObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F52C30))(this, trackName, target);
  }
  void OnEnter_DialogueModeStateTimeline() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F52DC0))(this);
  }
  void Update_DialogueModeStateTimeline() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F53090))(this);
  }
  void TimelineIndividualLineCompleted() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F533A0))(this);
  }
  void OnTimelineStopped() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F533F0))(this);
  }
  void OnEnter_DialogueModeStateTransitionIn() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F53400))(this);
  }
  void MaybeStowItemInHand() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F54240))(this);
  }
  bool IsNPCReady() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F54480))(this);
  }
  bool AreHandsReady() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F54590))(this);
  }
  void OnItemInHandStowed() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F54690))(this);
  }
  void Update_DialogueModeStateTransitionIn() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F546A0))(this);
  }
  void OnEnter_DialogueModeStateTransitionOut() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F55440))(this);
  }
  void Update_DialogueModeStateTransitionOut() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F55920))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::DialogueModeRigFP*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F55D40))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::DialogueModeRigFP*> m_Current = __CppStaticProperty<ModdingAPI::Exposed::DialogueModeRigFP*>(
   []() { return &GetStaticClassInstance()->pStaticFields->m_Current; }
  );
  static inline __CppStaticProperty<bool> s_DebugDialogue = __CppStaticProperty<bool>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_DebugDialogue; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*> s_DialogueModeRigFPs = __CppStaticProperty<ModdingAPI::Exposed::System::Collections::Generic::List_T_*>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_DialogueModeRigFPs; }
  );

  // Static methods:
  static inline ModdingAPI::Exposed::DialogueModeRigFP* GetCurrent() {
    return reinterpret_cast<ModdingAPI::Exposed::DialogueModeRigFP*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F49B30))();
  }
  static inline System_String* SerializeAll() {
    return reinterpret_cast<System_String*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F49BD0))();
  }
  static inline void DeserializeAll(System_String* text) {
    reinterpret_cast<void(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4A190))(text);
  }
  static inline void Reset() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4A440))();
  }
  static inline void QuitGame() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4A520))();
  }
  static inline ModdingAPI::Exposed::DialogueModeRigFP* FindDialogueModeRigFp(System_String* NPC_MissionId) {
    return reinterpret_cast<ModdingAPI::Exposed::DialogueModeRigFP*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4A5E0))(NPC_MissionId);
  }
  static inline System_String* GetDefaultStateNameForDialogueLineFromLocId(System_String* localizationId) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4DBB0))(localizationId);
  }
  static inline System_String* GetDefaultTimelineNameForDialogueLineFromLocId(System_String* localizationId) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4DD50))(localizationId);
  }
  static inline System_String* GetDefaultLocIdForDialogueLineFromTimeline(System_String* timelineName) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4DEF0))(timelineName);
  }
  static inline System_String* GetDefaultAudioStartForDialogueLineFromLocId(System_String* localizationId) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F4E040))(localizationId);
  }
  static inline void AudioCallback(Il2CppObject* in_cookie, int32_t in_type, Il2CppObject* in_info) {
    reinterpret_cast<void(__fastcall*)(Il2CppObject*, int32_t, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F52AA0))(in_cookie, in_type, in_info);
  }
  static inline void LerpPlayer(float progress, ModdingAPI::Exposed::UnityEngine::Vector3 originalPlayerPosition, ModdingAPI::Exposed::UnityEngine::Quaternion originalCameraRotation, ModdingAPI::Exposed::UnityEngine::Vector3 originalLocalCameraPosition, float originalFov, ModdingAPI::Exposed::UnityEngine::Vector3 desiredPlayerPosition, ModdingAPI::Exposed::UnityEngine::Quaternion desiredCameraRotation, ModdingAPI::Exposed::UnityEngine::Vector3 desireedLocalCameraPosition, float desiredFov) {
    reinterpret_cast<void(__fastcall*)(float, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Quaternion, ModdingAPI::Exposed::UnityEngine::Vector3, float, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Quaternion, ModdingAPI::Exposed::UnityEngine::Vector3, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F54D60))(progress, originalPlayerPosition, originalCameraRotation, originalLocalCameraPosition, originalFov, desiredPlayerPosition, desiredCameraRotation, desireedLocalCameraPosition, desiredFov);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x1F56210))();
  }
};
}