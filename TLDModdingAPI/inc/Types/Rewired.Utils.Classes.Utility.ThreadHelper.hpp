// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::Rewired::Utils::Classes::Utility {
struct __ThreadHelper_Il2CppStaticFields {
};

struct __ThreadHelper_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_Dispose;
};

struct __ThreadHelper_Il2CppClass {
  Il2CppClass_1 _1;
  __ThreadHelper_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __ThreadHelper_Il2CppVtbl vtbl;
};

class ThreadHelper {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C27C30;
  static inline    __ThreadHelper_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __ThreadHelper_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__ThreadHelper_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __ThreadHelper_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::Stopwatch* waodDgbTMgDBFvxwJbGUefdXWOSx;
  ModdingAPI::Exposed::System::Threading::Thread* MOvgbbUBRIZdLolWqlkesrIEfkd;
  ModdingAPI::Exposed::System::Threading::ManualResetEvent* mCqftsWmFvyqojWrWsauREsZMmY;
  ModdingAPI::Exposed::System::Threading::ManualResetEvent* nnQNQvbqarsakauLDROVvOOVINp;
  ModdingAPI::Exposed::System::Threading::AutoResetEvent* uFHTXbRGzNlrXCSUJLEUgEKajIr;
  bool EYqTmTFMdlNLyTXQfOPReTcVMQn;
  bool XqjpatMRoRyFwTFlbCyzQXNPlku;
  int32_t dbtiLYhVjqKnRwrxRplgIpyPWAbf;
  bool DHAjvdGYyWcatFRuDCftMDpnOJD;
  int32_t SzVFVSfgTRAgrtCPFqdpcoekqDiD;
  int64_t lvpvqnzoaSCyiJvymzQabbmVLUP;
  bool PlMjSQwMsFetSkpjAjSgqUyMGTNA;
  int32_t YyxfnzDljnNDKgWtrOnSPIysxZKl;
  int64_t NRPPCXUEkICcqlExPbJIPBtCMpv;
  uint32_t vvICOVibcYQLylGztLPvFPofidd;
  Il2CppObject* qSFvBsGIOKaJpjnfjCnINLogHXoL;
  ModdingAPI::Exposed::System::Collections::Generic::Queue_T_* ibLIOPMOEuMWHqarxPQiHlIBiaa;
  ModdingAPI::Exposed::System::Collections::Generic::Queue_T_* PGVMHcAxjtDzwPMSYnBEyHMradAA;
  bool dAjDkWGJqgwgMbnKgmAlSisyyBB;
  ModdingAPI::Exposed::System::Action* MVTdRECQxyLqwWkBXKwLrxnrJln;
  ModdingAPI::Exposed::System::Action* ftlgjIAWDkGvFwSvlOneYkhXhxtu;
  ModdingAPI::Exposed::System::Action* bQStXMnanoMBmfiaAKoOHcLuiLv;
  bool IPjKDfWEXfJCxnkfIfovlZZlcJe;

  // Member methods:
  bool get_isRunning() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x921400))(this);
  }
  bool get_isStopped() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBCA40))(this);
  }
  bool get_useHighPrecitionTimer() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBCA80))(this);
  }
  void set_useHighPrecitionTimer(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBCAA0))(this, value);
  }
  bool get_useFixedTimeStep() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x766C20))(this);
  }
  int32_t get_fixedTimeStepFPS() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x36D900))(this);
  }
  void set_fixedTimeStepFPS(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBCB00))(this, value);
  }
  int32_t get_timeoutMS() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3199A0))(this);
  }
  void set_timeoutMS(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBCB30))(this, value);
  }
  uint32_t get_tick() {
    return reinterpret_cast<uint32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383980))(this);
  }
  void add_ThreadUpdateEvent(ModdingAPI::Exposed::System::Action* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*, ModdingAPI::Exposed::System::Action*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBCB60))(this, value);
  }
  void remove_ThreadUpdateEvent(ModdingAPI::Exposed::System::Action* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*, ModdingAPI::Exposed::System::Action*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBCC20))(this, value);
  }
  void JdXCSgszgceFFdHtZIKOJwXESrw(ModdingAPI::Exposed::System::Action* ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*, ModdingAPI::Exposed::System::Action*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBCCE0))(this, );
  }
  void GCVmiVahqAHUANjkvFGDcnbqhMT(ModdingAPI::Exposed::System::Action* ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*, ModdingAPI::Exposed::System::Action*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBCDD0))(this, );
  }
  void add_ThreadStartedEvent(ModdingAPI::Exposed::System::Action* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*, ModdingAPI::Exposed::System::Action*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBCCE0))(this, value);
  }
  void remove_ThreadStartedEvent(ModdingAPI::Exposed::System::Action* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*, ModdingAPI::Exposed::System::Action*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBCDD0))(this, value);
  }
  void mygbgrBblTdcneaHCoTqSUUPgUbw(ModdingAPI::Exposed::System::Action* ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*, ModdingAPI::Exposed::System::Action*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBCEE0))(this, );
  }
  void aaMdpeqYbOSmkPhvNdZjFaZLFDtl(ModdingAPI::Exposed::System::Action* ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*, ModdingAPI::Exposed::System::Action*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBD000))(this, );
  }
  void add_ThreadPreStopEvent(ModdingAPI::Exposed::System::Action* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*, ModdingAPI::Exposed::System::Action*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBCEE0))(this, value);
  }
  void remove_ThreadPreStopEvent(ModdingAPI::Exposed::System::Action* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*, ModdingAPI::Exposed::System::Action*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBD000))(this, value);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBD120))(this);
  }
  void ::ctor(int32_t timeoutMS) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBD140))(this, timeoutMS);
  }
  void ::ctor(int32_t fixedTimeStepFPS, bool useHighPrecisionTimer, int32_t timeoutMS) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*, int32_t, bool, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBD160))(this, fixedTimeStepFPS, useHighPrecisionTimer, timeoutMS);
  }
  bool Start(bool wait) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBD760))(this, wait);
  }
  void Stop(bool wait) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBDB00))(this, wait);
  }
  bool EnqueueAction(ModdingAPI::Exposed::System::Action* action) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*, ModdingAPI::Exposed::System::Action*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBDBE0))(this, action);
  }
  bool InvokeActionSync(ModdingAPI::Exposed::System::Action* action) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*, ModdingAPI::Exposed::System::Action*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBDDC0))(this, action);
  }
  void WaitForActionQueueToFinish() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBDE00))(this);
  }
  void ResetTimeout() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBE040))(this);
  }
  void RxAwgmGCipbEkDzaBRNyVoIJJtE() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBE090))(this);
  }
  void vOJqVhxvauLulgfUUKvtIATmWQx() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBE890))(this);
  }
  void SBpBKVbKXenATQMDeRXEOubtnkIo() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBEA90))(this);
  }
  void NDYiAPDthgLWcmTlejKQQsfeeAB() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBEBC0))(this);
  }
  void Dispose() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBED70))(this);
  }
  void Finalize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBEE20))(this);
  }
  void Dispose(bool disposing) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBEED0))(this, disposing);
  }

  // Static methods:
  static inline ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper* Create(bool fixedTimeStep, int32_t fixedTimeStepFPS, bool useHighPrecisionTimer, int32_t timeoutMS) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*(__fastcall*)(bool, int32_t, bool, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBC640))(fixedTimeStep, fixedTimeStepFPS, useHighPrecisionTimer, timeoutMS);
  }
  static inline ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper* CreateFixedTimeStep(int32_t timeStepFPS, int32_t timeoutMS) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*(__fastcall*)(int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBC8C0))(timeStepFPS, timeoutMS);
  }
  static inline ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper* CreateFixedTimeStep(int32_t timeStepFPS, bool useHighPrecisionTimer, int32_t timeoutMS) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::Utils::Classes::Utility::ThreadHelper*(__fastcall*)(int32_t, bool, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBC8D0))(timeStepFPS, useHighPrecisionTimer, timeoutMS);
  }
  static inline void UCcpIveQHSvUcVjVZgEqvreWBFf(Il2CppObject* ) {
    reinterpret_cast<void(__fastcall*)(Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0xCBF010))();
  }
};
}