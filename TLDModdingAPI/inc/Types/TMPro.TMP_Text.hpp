// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Color32.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Color.hpp"
#include "ModdingAPI.Exposed.TMPro.TMP_RichTextTagStack_T_.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector4.hpp"
#include "ModdingAPI.Exposed.TMPro.VertexGradient.hpp"
#include "ModdingAPI.Exposed.TMPro.TMP_FontStyleStack.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Matrix4x4.hpp"
#include "ModdingAPI.Exposed.TMPro.WordWrapState.hpp"
#include "ModdingAPI.Exposed.TMPro.Extents.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Bounds.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"


namespace ModdingAPI::Exposed::TMPro {
struct __TMP_Text_Il2CppStaticFields {
  ModdingAPI::Exposed::UnityEngine::Color32 s_colorWhite;
  ModdingAPI::Exposed::UnityEngine::Vector2 k_LargePositiveVector2;
  ModdingAPI::Exposed::UnityEngine::Vector2 k_LargeNegativeVector2;
  float k_LargePositiveFloat;
  float k_LargeNegativeFloat;
  int32_t k_LargePositiveInt;
  int32_t k_LargeNegativeInt;
};

struct __TMP_Text_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_Awake;
  VirtualInvokeData _5_OnEnable;
  VirtualInvokeData _6_Start;
  VirtualInvokeData _7_OnDisable;
  VirtualInvokeData _8_OnDestroy;
  VirtualInvokeData _9_IsActive;
  VirtualInvokeData _10_OnRectTransformDimensionsChange;
  VirtualInvokeData _11_OnBeforeTransformParentChanged;
  VirtualInvokeData _12_OnTransformParentChanged;
  VirtualInvokeData _13_OnDidApplyAnimationProperties;
  VirtualInvokeData _14_OnCanvasGroupChanged;
  VirtualInvokeData _15_OnCanvasHierarchyChanged;
  VirtualInvokeData _16_IsDestroyed;
  VirtualInvokeData _18_UnityEngine_UI_ICanvasElement_get_transform;
  VirtualInvokeData _22_get_color;
  VirtualInvokeData _23_set_color;
  VirtualInvokeData _24_get_raycastTarget;
  VirtualInvokeData _25_set_raycastTarget;
  VirtualInvokeData _26_SetAllDirty;
  VirtualInvokeData _27_SetLayoutDirty;
  VirtualInvokeData _28_SetVerticesDirty;
  VirtualInvokeData _29_SetMaterialDirty;
  VirtualInvokeData _30_get_rectTransform;
  VirtualInvokeData _31_get_defaultMaterial;
  VirtualInvokeData _32_get_material;
  VirtualInvokeData _33_set_material;
  VirtualInvokeData _34_get_materialForRendering;
  VirtualInvokeData _35_get_mainTexture;
  VirtualInvokeData _36_OnCullingChanged;
  VirtualInvokeData _37_Rebuild;
  VirtualInvokeData _38_LayoutComplete;
  VirtualInvokeData _39_GraphicUpdateComplete;
  VirtualInvokeData _40_UpdateMaterial;
  VirtualInvokeData _41_UpdateGeometry;
  VirtualInvokeData _42_OnFillVBO;
  VirtualInvokeData _43_OnPopulateMesh;
  VirtualInvokeData _44_OnPopulateMesh;
  VirtualInvokeData _45_SetNativeSize;
  VirtualInvokeData _46_Raycast;
  VirtualInvokeData _47_CrossFadeColor;
  VirtualInvokeData _48_CrossFadeColor;
  VirtualInvokeData _49_CrossFadeAlpha;
  VirtualInvokeData _50_UnityEngine_UI_IClippable_get_gameObject;
  VirtualInvokeData _57_GetModifiedMaterial;
  VirtualInvokeData _58_Cull;
  VirtualInvokeData _59_SetClipRect;
  VirtualInvokeData _60_ParentMaskStateChanged;
  VirtualInvokeData _61_RecalculateClipping;
  VirtualInvokeData _62_RecalculateMasking;
  VirtualInvokeData _63_get_fontSharedMaterial;
  VirtualInvokeData _64_set_fontSharedMaterial;
  VirtualInvokeData _65_get_fontSharedMaterials;
  VirtualInvokeData _66_set_fontSharedMaterials;
  VirtualInvokeData _67_get_fontMaterials;
  VirtualInvokeData _68_set_fontMaterials;
  VirtualInvokeData _69_get_margin;
  VirtualInvokeData _70_set_margin;
  VirtualInvokeData _71_get_autoSizeTextContainer;
  VirtualInvokeData _72_set_autoSizeTextContainer;
  VirtualInvokeData _73_get_mesh;
  VirtualInvokeData _74_get_flexibleHeight;
  VirtualInvokeData _75_get_flexibleWidth;
  VirtualInvokeData _76_get_minWidth;
  VirtualInvokeData _77_get_minHeight;
  VirtualInvokeData _78_get_preferredWidth;
  VirtualInvokeData _79_get_preferredHeight;
  VirtualInvokeData _80_get_renderedWidth;
  VirtualInvokeData _81_get_renderedHeight;
  VirtualInvokeData _82_get_layoutPriority;
  VirtualInvokeData _83_LoadFontAsset;
  VirtualInvokeData _84_SetSharedMaterial;
  VirtualInvokeData _85_GetMaterial;
  VirtualInvokeData _86_SetFontBaseMaterial;
  VirtualInvokeData _87_GetSharedMaterials;
  VirtualInvokeData _88_SetSharedMaterials;
  VirtualInvokeData _89_GetMaterials;
  VirtualInvokeData _90_CreateMaterialInstance;
  VirtualInvokeData _91_SetFaceColor;
  VirtualInvokeData _92_SetOutlineColor;
  VirtualInvokeData _93_SetOutlineThickness;
  VirtualInvokeData _94_SetShaderDepth;
  VirtualInvokeData _95_SetCulling;
  VirtualInvokeData _96_GetPaddingForMaterial;
  VirtualInvokeData _97_GetPaddingForMaterial;
  VirtualInvokeData _98_GetTextContainerLocalCorners;
  VirtualInvokeData _99_ForceMeshUpdate;
  VirtualInvokeData _100_ForceMeshUpdate;
  VirtualInvokeData _101_UpdateGeometry;
  VirtualInvokeData _102_UpdateVertexData;
  VirtualInvokeData _103_UpdateVertexData;
  VirtualInvokeData _104_SetVertices;
  VirtualInvokeData _105_UpdateMeshPadding;
  VirtualInvokeData _106_InternalCrossFadeColor;
  VirtualInvokeData _107_InternalCrossFadeAlpha;
  VirtualInvokeData _108_SetArraySizes;
  VirtualInvokeData _109_GenerateTextMesh;
  VirtualInvokeData _110_CalculatePreferredValues;
  VirtualInvokeData _111_GetCompoundBounds;
  VirtualInvokeData _112_AdjustLineOffset;
  VirtualInvokeData _113_GetTextInfo;
  VirtualInvokeData _114_ComputeMarginSize;
  VirtualInvokeData _115_SaveGlyphVertexInfo;
  VirtualInvokeData _116_SaveSpriteVertexInfo;
  VirtualInvokeData _117_FillCharacterVertexBuffers;
  VirtualInvokeData _118_FillCharacterVertexBuffers;
  VirtualInvokeData _119_FillSpriteVertexBuffers;
  VirtualInvokeData _120_DrawUnderlineMesh;
  VirtualInvokeData _121_DrawTextHighlight;
  VirtualInvokeData _122_SetActiveSubMeshes;
  VirtualInvokeData _123_ClearSubMeshObjects;
  VirtualInvokeData _124_ClearMesh;
  VirtualInvokeData _125_ClearMesh;
  VirtualInvokeData _126_GetParsedText;
  VirtualInvokeData _127_InternalUpdate;
};

struct __TMP_Text_Il2CppClass {
  Il2CppClass_1 _1;
  __TMP_Text_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __TMP_Text_Il2CppVtbl vtbl;
};

class TMP_Text {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C24E50;
  static inline    __TMP_Text_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __TMP_Text_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__TMP_Text_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __TMP_Text_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::UnityEngine::Material* m_Material;
  ModdingAPI::Exposed::UnityEngine::Color Graphic_m_Color;
  bool Graphic_m_RaycastTarget;
  ModdingAPI::Exposed::UnityEngine::RectTransform* Graphic_m_RectTransform;
  ModdingAPI::Exposed::UnityEngine::CanvasRenderer* Graphic_m_CanvasRenderer;
  ModdingAPI::Exposed::UnityEngine::Canvas* Graphic_m_Canvas;
  bool Graphic_m_VertsDirty;
  bool Graphic_m_MaterialDirty;
  ModdingAPI::Exposed::UnityEngine::Events::UnityAction* m_OnDirtyLayoutCallback;
  ModdingAPI::Exposed::UnityEngine::Events::UnityAction* m_OnDirtyVertsCallback;
  ModdingAPI::Exposed::UnityEngine::Events::UnityAction* m_OnDirtyMaterialCallback;
  ModdingAPI::Exposed::UnityEngine::UI::CoroutineTween::TweenRunner_T_* Graphic_m_ColorTweenRunner;
  bool Graphic__useLegacyMeshGeneration_k__BackingField;
  bool m_ShouldRecalculateStencil;
  ModdingAPI::Exposed::UnityEngine::Material* m_MaskMaterial;
  ModdingAPI::Exposed::UnityEngine::UI::RectMask2D* MaskableGraphic_m_ParentMask;
  bool MaskableGraphic_m_Maskable;
  bool m_IncludeForMasking;
  ModdingAPI::Exposed::UnityEngine::UI::MaskableGraphic::CullStateChangedEvent* MaskableGraphic_m_OnCullStateChanged;
  bool m_ShouldRecalculate;
  int32_t m_StencilValue;
  ModdingAPI::Exposed::UnityEngine::Vector3_array* MaskableGraphic_m_Corners;
  System_String* m_text;
  bool m_isRightToLeft;
  ModdingAPI::Exposed::TMPro::TMP_FontAsset* m_fontAsset;
  ModdingAPI::Exposed::TMPro::TMP_FontAsset* m_currentFontAsset;
  bool m_isSDFShader;
  ModdingAPI::Exposed::UnityEngine::Material* m_sharedMaterial;
  ModdingAPI::Exposed::UnityEngine::Material* m_currentMaterial;
  ModdingAPI::Exposed::TMPro::MaterialReference_array* m_materialReferences;
  ModdingAPI::Exposed::System::Collections::Generic::Dictionary_TKey__TValue_* m_materialReferenceIndexLookup;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ m_materialReferenceStack;
  int32_t m_currentMaterialIndex;
  ModdingAPI::Exposed::UnityEngine::Material_array* m_fontSharedMaterials;
  ModdingAPI::Exposed::UnityEngine::Material* m_fontMaterial;
  ModdingAPI::Exposed::UnityEngine::Material_array* m_fontMaterials;
  bool m_isMaterialDirty;
  ModdingAPI::Exposed::UnityEngine::Color32 m_fontColor32;
  ModdingAPI::Exposed::UnityEngine::Color m_fontColor;
  ModdingAPI::Exposed::UnityEngine::Color32 m_underlineColor;
  ModdingAPI::Exposed::UnityEngine::Color32 m_strikethroughColor;
  ModdingAPI::Exposed::UnityEngine::Color32 m_highlightColor;
  ModdingAPI::Exposed::UnityEngine::Vector4 m_highlightPadding;
  bool m_enableVertexGradient;
  int32_t m_colorMode;
  ModdingAPI::Exposed::TMPro::VertexGradient m_fontColorGradient;
  ModdingAPI::Exposed::TMPro::TMP_ColorGradient* m_fontColorGradientPreset;
  ModdingAPI::Exposed::TMPro::TMP_SpriteAsset* m_spriteAsset;
  bool m_tintAllSprites;
  bool m_tintSprite;
  ModdingAPI::Exposed::UnityEngine::Color32 m_spriteColor;
  bool m_overrideHtmlColors;
  ModdingAPI::Exposed::UnityEngine::Color32 m_faceColor;
  ModdingAPI::Exposed::UnityEngine::Color32 m_outlineColor;
  float m_outlineWidth;
  float m_fontSize;
  float m_currentFontSize;
  float m_fontSizeBase;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ m_sizeStack;
  int32_t m_fontWeight;
  int32_t m_FontWeightInternal;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ m_FontWeightStack;
  bool m_enableAutoSizing;
  float m_maxFontSize;
  float m_minFontSize;
  float m_fontSizeMin;
  float m_fontSizeMax;
  int32_t m_fontStyle;
  int32_t m_FontStyleInternal;
  ModdingAPI::Exposed::TMPro::TMP_FontStyleStack m_fontStyleStack;
  bool m_isUsingBold;
  int32_t m_textAlignment;
  int32_t m_lineJustification;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ m_lineJustificationStack;
  ModdingAPI::Exposed::UnityEngine::Vector3_array* m_textContainerLocalCorners;
  float m_characterSpacing;
  float m_cSpacing;
  float m_monoSpacing;
  float m_wordSpacing;
  float m_lineSpacing;
  float m_lineSpacingDelta;
  float m_lineHeight;
  float m_lineSpacingMax;
  float m_paragraphSpacing;
  float m_charWidthMaxAdj;
  float m_charWidthAdjDelta;
  bool m_enableWordWrapping;
  bool m_isCharacterWrappingEnabled;
  bool m_isNonBreakingSpace;
  bool m_isIgnoringAlignment;
  float m_wordWrappingRatios;
  int32_t m_overflowMode;
  int32_t m_firstOverflowCharacterIndex;
  ModdingAPI::Exposed::TMPro::TMP_Text* m_linkedTextComponent;
  bool m_isLinkedTextComponent;
  bool m_isTextTruncated;
  bool m_enableKerning;
  bool m_enableExtraPadding;
  bool checkPaddingRequired;
  bool m_isRichText;
  bool m_parseCtrlCharacters;
  bool m_isOverlay;
  bool m_isOrthographic;
  bool m_isCullingEnabled;
  bool m_ignoreRectMaskCulling;
  bool m_ignoreCulling;
  int32_t m_horizontalMapping;
  int32_t m_verticalMapping;
  float m_uvLineOffset;
  int32_t m_renderMode;
  int32_t m_geometrySortingOrder;
  bool m_VertexBufferAutoSizeReduction;
  int32_t m_firstVisibleCharacter;
  int32_t m_maxVisibleCharacters;
  int32_t m_maxVisibleWords;
  int32_t m_maxVisibleLines;
  bool m_useMaxVisibleDescender;
  int32_t m_pageToDisplay;
  bool m_isNewPage;
  ModdingAPI::Exposed::UnityEngine::Vector4 m_margin;
  float m_marginLeft;
  float m_marginRight;
  float m_marginWidth;
  float m_marginHeight;
  float m_width;
  ModdingAPI::Exposed::TMPro::TMP_TextInfo* m_textInfo;
  bool m_havePropertiesChanged;
  bool m_isUsingLegacyAnimationComponent;
  ModdingAPI::Exposed::UnityEngine::Transform* m_transform;
  ModdingAPI::Exposed::UnityEngine::RectTransform* m_rectTransform;
  bool _autoSizeTextContainer_k__BackingField;
  bool m_autoSizeTextContainer;
  ModdingAPI::Exposed::UnityEngine::Mesh* m_mesh;
  bool m_isVolumetricText;
  ModdingAPI::Exposed::TMPro::TMP_SpriteAnimator* m_spriteAnimator;
  float m_flexibleHeight;
  float m_flexibleWidth;
  float m_minWidth;
  float m_minHeight;
  float m_maxWidth;
  float m_maxHeight;
  ModdingAPI::Exposed::UnityEngine::UI::LayoutElement* m_LayoutElement;
  float m_preferredWidth;
  float m_renderedWidth;
  bool m_isPreferredWidthDirty;
  float m_preferredHeight;
  float m_renderedHeight;
  bool m_isPreferredHeightDirty;
  bool m_isCalculatingPreferredValues;
  int32_t m_recursiveCount;
  int32_t m_layoutPriority;
  bool m_isCalculateSizeRequired;
  bool m_isLayoutDirty;
  bool m_verticesAlreadyDirty;
  bool m_layoutAlreadyDirty;
  bool m_isAwake;
  bool m_isWaitingOnResourceLoad;
  bool m_isInputParsingRequired;
  int32_t m_inputSource;
  System_String* old_text;
  float m_fontScale;
  float m_fontScaleMultiplier;
  ModdingAPI::Exposed::System::Char_array* m_htmlTag;
  ModdingAPI::Exposed::TMPro::RichTextTagAttribute_array* m_xmlAttribute;
  ModdingAPI::Exposed::System::Single_array* m_attributeParameterValues;
  float tag_LineIndent;
  float tag_Indent;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ m_indentStack;
  bool tag_NoParsing;
  bool m_isParsingText;
  ModdingAPI::Exposed::UnityEngine::Matrix4x4 m_FXMatrix;
  bool m_isFXMatrixSet;
  ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array* m_TextParsingBuffer;
  ModdingAPI::Exposed::TMPro::TMP_CharacterInfo_array* m_internalCharacterInfo;
  ModdingAPI::Exposed::System::Char_array* m_input_CharArray;
  int32_t m_charArray_Length;
  int32_t m_totalCharacterCount;
  ModdingAPI::Exposed::TMPro::WordWrapState m_SavedWordWrapState;
  ModdingAPI::Exposed::TMPro::WordWrapState m_SavedLineState;
  int32_t m_characterCount;
  int32_t m_firstCharacterOfLine;
  int32_t m_firstVisibleCharacterOfLine;
  int32_t m_lastCharacterOfLine;
  int32_t m_lastVisibleCharacterOfLine;
  int32_t m_lineNumber;
  int32_t m_lineVisibleCharacterCount;
  int32_t m_pageNumber;
  float m_maxAscender;
  float m_maxCapHeight;
  float m_maxDescender;
  float m_maxLineAscender;
  float m_maxLineDescender;
  float m_startOfLineAscender;
  float m_lineOffset;
  ModdingAPI::Exposed::TMPro::Extents m_meshExtents;
  ModdingAPI::Exposed::UnityEngine::Color32 m_htmlColor;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ m_colorStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ m_underlineColorStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ m_strikethroughColorStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ m_highlightColorStack;
  ModdingAPI::Exposed::TMPro::TMP_ColorGradient* m_colorGradientPreset;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ m_colorGradientStack;
  float m_tabSpacing;
  float m_spacing;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ m_styleStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ m_actionStack;
  float m_padding;
  float m_baselineOffset;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ m_baselineOffsetStack;
  float m_xAdvance;
  int32_t m_textElementType;
  ModdingAPI::Exposed::TMPro::TMP_TextElement* m_cached_TextElement;
  ModdingAPI::Exposed::TMPro::TMP_Character* m_cached_Underline_Character;
  ModdingAPI::Exposed::TMPro::TMP_Character* m_cached_Ellipsis_Character;
  ModdingAPI::Exposed::TMPro::TMP_SpriteAsset* m_defaultSpriteAsset;
  ModdingAPI::Exposed::TMPro::TMP_SpriteAsset* m_currentSpriteAsset;
  int32_t m_spriteCount;
  int32_t m_spriteIndex;
  int32_t m_spriteAnimationID;
  bool m_ignoreActiveState;
  ModdingAPI::Exposed::System::Single_array* k_Power;

  // Member methods:
  System_String* get_text() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3F1090))(this);
  }
  void set_text(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F3F80))(this, value);
  }
  bool get_isRightToLeftText() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4020))(this);
  }
  void set_isRightToLeftText(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4030))(this, value);
  }
  ModdingAPI::Exposed::TMPro::TMP_FontAsset* get_font() {
    return reinterpret_cast<ModdingAPI::Exposed::TMPro::TMP_FontAsset*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4090))(this);
  }
  void set_font(ModdingAPI::Exposed::TMPro::TMP_FontAsset* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::TMPro::TMP_FontAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F40A0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Material* get_fontSharedMaterial() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Material*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3EBFF0))(this);
  }
  void set_fontSharedMaterial(ModdingAPI::Exposed::UnityEngine::Material* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Material*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F41B0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Material_array* get_fontSharedMaterials() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Material_array*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F42C0))(this);
  }
  void set_fontSharedMaterials(ModdingAPI::Exposed::UnityEngine::Material_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Material_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F42E0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Material* get_fontMaterial() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Material*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4340))(this);
  }
  void set_fontMaterial(ModdingAPI::Exposed::UnityEngine::Material* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Material*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4360))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Material_array* get_fontMaterials() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Material_array*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F44B0))(this);
  }
  void set_fontMaterials(ModdingAPI::Exposed::UnityEngine::Material_array* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Material_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F42E0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Color get_color() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Color(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F44D0))(this);
  }
  void set_color(ModdingAPI::Exposed::UnityEngine::Color value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Color)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F44E0))(this, value);
  }
  float get_alpha() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4550))(this);
  }
  void set_alpha(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4560))(this, value);
  }
  bool get_enableVertexGradient() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4590))(this);
  }
  void set_enableVertexGradient(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F45A0))(this, value);
  }
  ModdingAPI::Exposed::TMPro::VertexGradient get_colorGradient() {
    return reinterpret_cast<ModdingAPI::Exposed::TMPro::VertexGradient(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F45D0))(this);
  }
  void set_colorGradient(ModdingAPI::Exposed::TMPro::VertexGradient value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::TMPro::VertexGradient)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4600))(this, value);
  }
  ModdingAPI::Exposed::TMPro::TMP_ColorGradient* get_colorGradientPreset() {
    return reinterpret_cast<ModdingAPI::Exposed::TMPro::TMP_ColorGradient*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4650))(this);
  }
  void set_colorGradientPreset(ModdingAPI::Exposed::TMPro::TMP_ColorGradient* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::TMPro::TMP_ColorGradient*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4660))(this, value);
  }
  ModdingAPI::Exposed::TMPro::TMP_SpriteAsset* get_spriteAsset() {
    return reinterpret_cast<ModdingAPI::Exposed::TMPro::TMP_SpriteAsset*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4680))(this);
  }
  void set_spriteAsset(ModdingAPI::Exposed::TMPro::TMP_SpriteAsset* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::TMPro::TMP_SpriteAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4690))(this, value);
  }
  bool get_tintAllSprites() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F46E0))(this);
  }
  void set_tintAllSprites(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F46F0))(this, value);
  }
  bool get_overrideColorTags() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4720))(this);
  }
  void set_overrideColorTags(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4730))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Color32 get_faceColor() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Color32(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4760))(this);
  }
  void set_faceColor(ModdingAPI::Exposed::UnityEngine::Color32 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Color32)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F48F0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Color32 get_outlineColor() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Color32(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4990))(this);
  }
  void set_outlineColor(ModdingAPI::Exposed::UnityEngine::Color32 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Color32)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4B20))(this, value);
  }
  float get_outlineWidth() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4BB0))(this);
  }
  void set_outlineWidth(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4D20))(this, value);
  }
  float get_fontSize() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4D80))(this);
  }
  void set_fontSize(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4D90))(this, value);
  }
  float get_fontScale() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4E00))(this);
  }
  int32_t get_fontWeight() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4E10))(this);
  }
  void set_fontWeight(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4E20))(this, value);
  }
  float get_pixelsPerUnit() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F4E80))(this);
  }
  bool get_enableAutoSizing() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5050))(this);
  }
  void set_enableAutoSizing(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5060))(this, value);
  }
  float get_fontSizeMin() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F50B0))(this);
  }
  void set_fontSizeMin(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F50C0))(this, value);
  }
  float get_fontSizeMax() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5110))(this);
  }
  void set_fontSizeMax(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5120))(this, value);
  }
  int32_t get_fontStyle() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5170))(this);
  }
  void set_fontStyle(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5180))(this, value);
  }
  bool get_isUsingBold() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F51E0))(this);
  }
  int32_t get_alignment() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F51F0))(this);
  }
  void set_alignment(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5200))(this, value);
  }
  float get_characterSpacing() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5230))(this);
  }
  void set_characterSpacing(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5240))(this, value);
  }
  float get_wordSpacing() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F52A0))(this);
  }
  void set_wordSpacing(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F52B0))(this, value);
  }
  float get_lineSpacing() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5310))(this);
  }
  void set_lineSpacing(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5320))(this, value);
  }
  float get_lineSpacingAdjustment() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5380))(this);
  }
  void set_lineSpacingAdjustment(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5390))(this, value);
  }
  float get_paragraphSpacing() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F53F0))(this);
  }
  void set_paragraphSpacing(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5400))(this, value);
  }
  float get_characterWidthAdjustment() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5460))(this);
  }
  void set_characterWidthAdjustment(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5470))(this, value);
  }
  bool get_enableWordWrapping() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F54D0))(this);
  }
  void set_enableWordWrapping(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F54E0))(this, value);
  }
  float get_wordWrappingRatios() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5540))(this);
  }
  void set_wordWrappingRatios(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5550))(this, value);
  }
  int32_t get_overflowMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F55B0))(this);
  }
  void set_overflowMode(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F55C0))(this, value);
  }
  bool get_isTextOverflowing() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5620))(this);
  }
  int32_t get_firstOverflowCharacterIndex() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5630))(this);
  }
  ModdingAPI::Exposed::TMPro::TMP_Text* get_linkedTextComponent() {
    return reinterpret_cast<ModdingAPI::Exposed::TMPro::TMP_Text*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5640))(this);
  }
  void set_linkedTextComponent(ModdingAPI::Exposed::TMPro::TMP_Text* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5650))(this, value);
  }
  bool get_isLinkedTextComponent() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F58E0))(this);
  }
  void set_isLinkedTextComponent(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F58F0))(this, value);
  }
  bool get_isTextTruncated() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5950))(this);
  }
  bool get_enableKerning() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5960))(this);
  }
  void set_enableKerning(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5970))(this, value);
  }
  bool get_extraPadding() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F59D0))(this);
  }
  void set_extraPadding(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F59E0))(this, value);
  }
  bool get_richText() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5A30))(this);
  }
  void set_richText(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5A40))(this, value);
  }
  bool get_parseCtrlCharacters() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5AA0))(this);
  }
  void set_parseCtrlCharacters(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5AB0))(this, value);
  }
  bool get_isOverlay() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5B10))(this);
  }
  void set_isOverlay(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5B20))(this, value);
  }
  bool get_isOrthographic() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5B70))(this);
  }
  void set_isOrthographic(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5B80))(this, value);
  }
  bool get_enableCulling() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5BB0))(this);
  }
  void set_enableCulling(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5BC0))(this, value);
  }
  bool get_ignoreRectMaskCulling() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5C00))(this);
  }
  void set_ignoreRectMaskCulling(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5C10))(this, value);
  }
  bool get_ignoreVisibility() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5C30))(this);
  }
  void set_ignoreVisibility(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5C40))(this, value);
  }
  int32_t get_horizontalMapping() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5C60))(this);
  }
  void set_horizontalMapping(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5C70))(this, value);
  }
  int32_t get_verticalMapping() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5CA0))(this);
  }
  void set_verticalMapping(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5CB0))(this, value);
  }
  float get_mappingUvLineOffset() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5CE0))(this);
  }
  void set_mappingUvLineOffset(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5CF0))(this, value);
  }
  int32_t get_renderMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5D20))(this);
  }
  void set_renderMode(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5D30))(this, value);
  }
  int32_t get_geometrySortingOrder() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5D50))(this);
  }
  void set_geometrySortingOrder(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5D60))(this, value);
  }
  bool get_vertexBufferAutoSizeReduction() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5D80))(this);
  }
  void set_vertexBufferAutoSizeReduction(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5D90))(this, value);
  }
  int32_t get_firstVisibleCharacter() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5DB0))(this);
  }
  void set_firstVisibleCharacter(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5DC0))(this, value);
  }
  int32_t get_maxVisibleCharacters() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5DF0))(this);
  }
  void set_maxVisibleCharacters(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5E00))(this, value);
  }
  int32_t get_maxVisibleWords() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5E30))(this);
  }
  void set_maxVisibleWords(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5E40))(this, value);
  }
  int32_t get_maxVisibleLines() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5E70))(this);
  }
  void set_maxVisibleLines(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5E80))(this, value);
  }
  bool get_useMaxVisibleDescender() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5EB0))(this);
  }
  void set_useMaxVisibleDescender(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5EC0))(this, value);
  }
  int32_t get_pageToDisplay() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5EF0))(this);
  }
  void set_pageToDisplay(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5F00))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector4 get_margin() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector4(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5F30))(this);
  }
  void set_margin(ModdingAPI::Exposed::UnityEngine::Vector4 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Vector4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F5F40))(this, value);
  }
  ModdingAPI::Exposed::TMPro::TMP_TextInfo* get_textInfo() {
    return reinterpret_cast<ModdingAPI::Exposed::TMPro::TMP_TextInfo*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6050))(this);
  }
  bool get_havePropertiesChanged() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6060))(this);
  }
  void set_havePropertiesChanged(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6070))(this, value);
  }
  bool get_isUsingLegacyAnimationComponent() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F60A0))(this);
  }
  void set_isUsingLegacyAnimationComponent(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F60B0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Transform* get_transform() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Transform*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F60C0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::RectTransform* get_rectTransform() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::RectTransform*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6190))(this);
  }
  bool get_autoSizeTextContainer() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6260))(this);
  }
  void set_autoSizeTextContainer(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6270))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Mesh* get_mesh() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Mesh*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6280))(this);
  }
  bool get_isVolumetricText() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6290))(this);
  }
  void set_isVolumetricText(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F62A0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Bounds get_bounds() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Bounds(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F63A0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Bounds get_textBounds() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Bounds(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F64B0))(this);
  }
  ModdingAPI::Exposed::TMPro::TMP_SpriteAnimator* get_spriteAnimator() {
    return reinterpret_cast<ModdingAPI::Exposed::TMPro::TMP_SpriteAnimator*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6520))(this);
  }
  float get_flexibleHeight() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6690))(this);
  }
  float get_flexibleWidth() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F66A0))(this);
  }
  float get_minWidth() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F66B0))(this);
  }
  float get_minHeight() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F66C0))(this);
  }
  float get_maxWidth() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F66D0))(this);
  }
  float get_maxHeight() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F66E0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::UI::LayoutElement* get_layoutElement() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::UI::LayoutElement*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F66F0))(this);
  }
  float get_preferredWidth() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F67C0))(this);
  }
  float get_preferredHeight() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6800))(this);
  }
  float get_renderedWidth() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6840))(this);
  }
  float get_renderedHeight() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6860))(this);
  }
  int32_t get_layoutPriority() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6880))(this);
  }
  void LoadFontAsset() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void SetSharedMaterial(ModdingAPI::Exposed::UnityEngine::Material* mat) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Material*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, mat);
  }
  ModdingAPI::Exposed::UnityEngine::Material* GetMaterial(ModdingAPI::Exposed::UnityEngine::Material* mat) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Material*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Material*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, mat);
  }
  void SetFontBaseMaterial(ModdingAPI::Exposed::UnityEngine::Material* mat) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Material*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, mat);
  }
  ModdingAPI::Exposed::UnityEngine::Material_array* GetSharedMaterials() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Material_array*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this);
  }
  void SetSharedMaterials(ModdingAPI::Exposed::UnityEngine::Material_array* materials) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Material_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, materials);
  }
  ModdingAPI::Exposed::UnityEngine::Material_array* GetMaterials(ModdingAPI::Exposed::UnityEngine::Material_array* mats) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Material_array*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Material_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, mats);
  }
  ModdingAPI::Exposed::UnityEngine::Material* CreateMaterialInstance(ModdingAPI::Exposed::UnityEngine::Material* source) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Material*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Material*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6890))(this, source);
  }
  void SetVertexColorGradient(ModdingAPI::Exposed::TMPro::TMP_ColorGradient* gradient) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::TMPro::TMP_ColorGradient*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6AB0))(this, gradient);
  }
  void SetTextSortingOrder(int32_t order) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, order);
  }
  void SetTextSortingOrder(ModdingAPI::Exposed::System::Int32_array* order) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Int32_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, order);
  }
  void SetFaceColor(ModdingAPI::Exposed::UnityEngine::Color32 color) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Color32)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, color);
  }
  void SetOutlineColor(ModdingAPI::Exposed::UnityEngine::Color32 color) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Color32)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, color);
  }
  void SetOutlineThickness(float thickness) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, thickness);
  }
  void SetShaderDepth() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void SetCulling() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  float GetPaddingForMaterial() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4112A0))(this);
  }
  float GetPaddingForMaterial(ModdingAPI::Exposed::UnityEngine::Material* mat) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Material*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4112A0))(this, mat);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3_array* GetTextContainerLocalCorners() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3_array*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this);
  }
  void ForceMeshUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void ForceMeshUpdate(bool ignoreActiveState) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, ignoreActiveState);
  }
  void SetTextInternal(System_String* text) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6BB0))(this, text);
  }
  void UpdateGeometry(ModdingAPI::Exposed::UnityEngine::Mesh* mesh, int32_t index) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Mesh*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, mesh, index);
  }
  void UpdateVertexData(int32_t flags) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, flags);
  }
  void UpdateVertexData() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void SetVertices(ModdingAPI::Exposed::UnityEngine::Vector3_array* vertices) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Vector3_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, vertices);
  }
  void UpdateMeshPadding() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void CrossFadeColor(ModdingAPI::Exposed::UnityEngine::Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Color, float, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6C00))(this, targetColor, duration, ignoreTimeScale, useAlpha);
  }
  void CrossFadeAlpha(float alpha, float duration, bool ignoreTimeScale) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, float, float, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6CB0))(this, alpha, duration, ignoreTimeScale);
  }
  void InternalCrossFadeColor(ModdingAPI::Exposed::UnityEngine::Color targetColor, float duration, bool ignoreTimeScale, bool useAlpha) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Color, float, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, targetColor, duration, ignoreTimeScale, useAlpha);
  }
  void InternalCrossFadeAlpha(float alpha, float duration, bool ignoreTimeScale) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, float, float, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, alpha, duration, ignoreTimeScale);
  }
  void ParseInputText() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6DF0))(this);
  }
  void SetText(System_String* text) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6E70))(this, text);
  }
  void SetText(System_String* text, bool syncTextInputBox) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, System_String*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6E70))(this, text, syncTextInputBox);
  }
  void SetText(System_String* text, float arg0) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, System_String*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6EE0))(this, text, arg0);
  }
  void SetText(System_String* text, float arg0, float arg1) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, System_String*, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6F10))(this, text, arg0, arg1);
  }
  void SetText(System_String* text, float arg0, float arg1, float arg2) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, System_String*, float, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6F40))(this, text, arg0, arg1, arg2);
  }
  void SetText(ModdingAPI::Exposed::System::Text::StringBuilder* text) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Text::StringBuilder*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F7160))(this, text);
  }
  void SetCharArray(ModdingAPI::Exposed::System::Char_array* sourceText) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Char_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F71D0))(this, sourceText);
  }
  void SetCharArray(ModdingAPI::Exposed::System::Char_array* sourceText, int32_t start, int32_t length) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Char_array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F7C80))(this, sourceText, start, length);
  }
  void SetCharArray(ModdingAPI::Exposed::System::Int32_array* sourceText, int32_t start, int32_t length) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Int32_array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F8700))(this, sourceText, start, length);
  }
  void SetTextArrayToCharArray(ModdingAPI::Exposed::System::Char_array* sourceText, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array* charBuffer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Char_array*, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F9180))(this, sourceText, charBuffer);
  }
  void StringToCharArray(System_String* sourceText, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array* charBuffer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, System_String*, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F9A10))(this, sourceText, charBuffer);
  }
  void StringBuilderToIntArray(ModdingAPI::Exposed::System::Text::StringBuilder* sourceText, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array* charBuffer) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Text::StringBuilder*, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FAF30))(this, sourceText, charBuffer);
  }
  bool ReplaceOpeningStyleTag(System_String* sourceText, int32_t srcIndex, int32_t srcOffset, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array* charBuffer, int32_t writeIndex) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, System_String*, int32_t, int32_t, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FC080))(this, sourceText, srcIndex, srcOffset, charBuffer, writeIndex);
  }
  bool ReplaceOpeningStyleTag(ModdingAPI::Exposed::System::Int32_array* sourceText, int32_t srcIndex, int32_t srcOffset, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array* charBuffer, int32_t writeIndex) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Int32_array*, int32_t, int32_t, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FC600))(this, sourceText, srcIndex, srcOffset, charBuffer, writeIndex);
  }
  bool ReplaceOpeningStyleTag(ModdingAPI::Exposed::System::Char_array* sourceText, int32_t srcIndex, int32_t srcOffset, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array* charBuffer, int32_t writeIndex) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Char_array*, int32_t, int32_t, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FCB60))(this, sourceText, srcIndex, srcOffset, charBuffer, writeIndex);
  }
  bool ReplaceOpeningStyleTag(ModdingAPI::Exposed::System::Text::StringBuilder* sourceText, int32_t srcIndex, int32_t srcOffset, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array* charBuffer, int32_t writeIndex) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Text::StringBuilder*, int32_t, int32_t, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FD0C0))(this, sourceText, srcIndex, srcOffset, charBuffer, writeIndex);
  }
  bool ReplaceClosingStyleTag(System_String* sourceText, int32_t srcIndex, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array* charBuffer, int32_t writeIndex) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, System_String*, int32_t, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FD650))(this, sourceText, srcIndex, charBuffer, writeIndex);
  }
  bool ReplaceClosingStyleTag(ModdingAPI::Exposed::System::Int32_array* sourceText, int32_t srcIndex, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array* charBuffer, int32_t writeIndex) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Int32_array*, int32_t, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FDBC0))(this, sourceText, srcIndex, charBuffer, writeIndex);
  }
  bool ReplaceClosingStyleTag(ModdingAPI::Exposed::System::Char_array* sourceText, int32_t srcIndex, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array* charBuffer, int32_t writeIndex) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Char_array*, int32_t, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FE140))(this, sourceText, srcIndex, charBuffer, writeIndex);
  }
  bool ReplaceClosingStyleTag(ModdingAPI::Exposed::System::Text::StringBuilder* sourceText, int32_t srcIndex, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array* charBuffer, int32_t writeIndex) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Text::StringBuilder*, int32_t, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FE6B0))(this, sourceText, srcIndex, charBuffer, writeIndex);
  }
  bool IsTagName(System_String* text, System_String* tag, int32_t index) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, System_String*, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FEC20))(this, text, tag, index);
  }
  bool IsTagName(ModdingAPI::Exposed::System::Char_array* text, System_String* tag, int32_t index) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Char_array*, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FED60))(this, text, tag, index);
  }
  bool IsTagName(ModdingAPI::Exposed::System::Int32_array* text, System_String* tag, int32_t index) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Int32_array*, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FEEB0))(this, text, tag, index);
  }
  bool IsTagName(ModdingAPI::Exposed::System::Text::StringBuilder* text, System_String* tag, int32_t index) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Text::StringBuilder*, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FF000))(this, text, tag, index);
  }
  int32_t GetTagHashCode(System_String* text, int32_t index, int32_t closeIndex) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, System_String*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FF140))(this, text, index, closeIndex);
  }
  int32_t GetTagHashCode(ModdingAPI::Exposed::System::Char_array* text, int32_t index, int32_t closeIndex) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Char_array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FF210))(this, text, index, closeIndex);
  }
  int32_t GetTagHashCode(ModdingAPI::Exposed::System::Int32_array* text, int32_t index, int32_t closeIndex) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Int32_array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FF2A0))(this, text, index, closeIndex);
  }
  int32_t GetTagHashCode(ModdingAPI::Exposed::System::Text::StringBuilder* text, int32_t index, int32_t closeIndex) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Text::StringBuilder*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FF330))(this, text, index, closeIndex);
  }
  void AddFloatToCharArray(double number, int32_t index, int32_t precision) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, double, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FF410))(this, number, index, precision);
  }
  void AddIntToCharArray(double number, int32_t index, int32_t precision) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, double, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FF780))(this, number, index, precision);
  }
  int32_t SetArraySizes(ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array* chars) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, chars);
  }
  void GenerateTextMesh() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 GetPreferredValues() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FF9A0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 GetPreferredValues(float width, float height) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FFA00))(this, width, height);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 GetPreferredValues(System_String* text) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FFA80))(this, text);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 GetPreferredValues(System_String* text, float width, float height) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, System_String*, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FFBC0))(this, text, width, height);
  }
  float GetPreferredWidth() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FFC60))(this);
  }
  float GetPreferredWidth(ModdingAPI::Exposed::UnityEngine::Vector2 margin) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FFE20))(this, margin);
  }
  float GetPreferredHeight() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4FFEA0))(this);
  }
  float GetPreferredHeight(ModdingAPI::Exposed::UnityEngine::Vector2 margin) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Vector2)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5000B0))(this, margin);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 GetRenderedValues() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x500130))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 GetRenderedValues(bool onlyVisibleCharacters) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x500210))(this, onlyVisibleCharacters);
  }
  float GetRenderedWidth() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6840))(this);
  }
  float GetRenderedWidth(bool onlyVisibleCharacters) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x500310))(this, onlyVisibleCharacters);
  }
  float GetRenderedHeight() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F6860))(this);
  }
  float GetRenderedHeight(bool onlyVisibleCharacters) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x500330))(this, onlyVisibleCharacters);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 CalculatePreferredValues(float defaultFontSize, ModdingAPI::Exposed::UnityEngine::Vector2 marginSize, bool ignoreTextAutoSizing) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, float, ModdingAPI::Exposed::UnityEngine::Vector2, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x500350))(this, defaultFontSize, marginSize, ignoreTextAutoSizing);
  }
  ModdingAPI::Exposed::UnityEngine::Bounds GetCompoundBounds() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Bounds(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x503530))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Bounds GetTextBounds() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Bounds(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x503560))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Bounds GetTextBounds(bool onlyVisibleCharacters) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Bounds(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5039C0))(this, onlyVisibleCharacters);
  }
  void AdjustLineOffset(int32_t startIndex, int32_t endIndex, float offset) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, int32_t, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, startIndex, endIndex, offset);
  }
  void ResizeLineExtents(int32_t size) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x503E70))(this, size);
  }
  ModdingAPI::Exposed::TMPro::TMP_TextInfo* GetTextInfo(System_String* text) {
    return reinterpret_cast<ModdingAPI::Exposed::TMPro::TMP_TextInfo*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this, text);
  }
  void ComputeMarginSize() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void SaveWordWrappingState(ModdingAPI::Exposed::TMPro::WordWrapState state, int32_t index, int32_t count) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::TMPro::WordWrapState, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5041B0))(this, state, index, count);
  }
  int32_t RestoreWordWrappingState(ModdingAPI::Exposed::TMPro::WordWrapState state) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::TMPro::WordWrapState)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5045C0))(this, state);
  }
  void SaveGlyphVertexInfo(float padding, float style_padding, ModdingAPI::Exposed::UnityEngine::Color32 vertexColor) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, float, float, ModdingAPI::Exposed::UnityEngine::Color32)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5049E0))(this, padding, style_padding, vertexColor);
  }
  void SaveSpriteVertexInfo(ModdingAPI::Exposed::UnityEngine::Color32 vertexColor) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Color32)>(Helpers::Memory::GetInstance().MakeAbsolute(0x505E10))(this, vertexColor);
  }
  void FillCharacterVertexBuffers(int32_t i, int32_t index_X4) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x506A30))(this, i, index_X4);
  }
  void FillCharacterVertexBuffers(int32_t i, int32_t index_X4, bool isVolumetric) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, int32_t, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x507610))(this, i, index_X4, isVolumetric);
  }
  void FillSpriteVertexBuffers(int32_t i, int32_t index_X4) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x506A30))(this, i, index_X4);
  }
  void DrawUnderlineMesh(ModdingAPI::Exposed::UnityEngine::Vector3 start, ModdingAPI::Exposed::UnityEngine::Vector3 end, int32_t index, float startScale, float endScale, float maxScale, float sdfScale, ModdingAPI::Exposed::UnityEngine::Color32 underlineColor) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t, float, float, float, float, ModdingAPI::Exposed::UnityEngine::Color32)>(Helpers::Memory::GetInstance().MakeAbsolute(0x508DD0))(this, start, end, index, startScale, endScale, maxScale, sdfScale, underlineColor);
  }
  void DrawTextHighlight(ModdingAPI::Exposed::UnityEngine::Vector3 start, ModdingAPI::Exposed::UnityEngine::Vector3 end, int32_t index, ModdingAPI::Exposed::UnityEngine::Color32 highlightColor) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t, ModdingAPI::Exposed::UnityEngine::Color32)>(Helpers::Memory::GetInstance().MakeAbsolute(0x50A430))(this, start, end, index, highlightColor);
  }
  void LoadDefaultSettings() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x50AB50))(this);
  }
  void GetSpecialCharacters(ModdingAPI::Exposed::TMPro::TMP_FontAsset* fontAsset) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::TMPro::TMP_FontAsset*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x50AE60))(this, fontAsset);
  }
  void ReplaceTagWithCharacter(ModdingAPI::Exposed::System::Int32_array* chars, int32_t insertionIndex, int32_t tagLength, wchar_t c) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Int32_array*, int32_t, int32_t, wchar_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x50B250))(this, chars, insertionIndex, tagLength, c);
  }
  ModdingAPI::Exposed::TMPro::TMP_FontAsset* GetFontAssetForWeight(int32_t fontWeight) {
    return reinterpret_cast<ModdingAPI::Exposed::TMPro::TMP_FontAsset*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x50B2E0))(this, fontWeight);
  }
  void SetActiveSubMeshes(bool state) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, state);
  }
  void ClearSubMeshObjects() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void ClearMesh() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  void ClearMesh(bool uploadGeometry) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, uploadGeometry);
  }
  System_String* GetParsedText() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x50B3B0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 PackUV(float x, float y, float scale) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, float, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x50B530))(this, x, y, scale);
  }
  float PackUV(float x, float y) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x50B570))(this, x, y);
  }
  void InternalUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  int32_t HexToInt(wchar_t hex) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, wchar_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x50B5B0))(this, hex);
  }
  int32_t GetUTF16(System_String* text, int32_t i) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x50B6C0))(this, text, i);
  }
  int32_t GetUTF16(ModdingAPI::Exposed::System::Text::StringBuilder* text, int32_t i) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Text::StringBuilder*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x50B7A0))(this, text, i);
  }
  int32_t GetUTF32(System_String* text, int32_t i) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x50B880))(this, text, i);
  }
  int32_t GetUTF32(ModdingAPI::Exposed::System::Text::StringBuilder* text, int32_t i) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Text::StringBuilder*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x50BA10))(this, text, i);
  }
  ModdingAPI::Exposed::UnityEngine::Color32 HexCharsToColor(ModdingAPI::Exposed::System::Char_array* hexChars, int32_t tagCount) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Color32(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Char_array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x50BBA0))(this, hexChars, tagCount);
  }
  ModdingAPI::Exposed::UnityEngine::Color32 HexCharsToColor(ModdingAPI::Exposed::System::Char_array* hexChars, int32_t startIndex, int32_t length) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Color32(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Char_array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x50C4D0))(this, hexChars, startIndex, length);
  }
  int32_t GetAttributeParameters(ModdingAPI::Exposed::System::Char_array* chars, int32_t startIndex, int32_t length, ModdingAPI::Exposed::System::Single_array* parameters) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Char_array*, int32_t, int32_t, ModdingAPI::Exposed::System::Single_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x50C900))(this, chars, startIndex, length, parameters);
  }
  float ConvertToFloat(ModdingAPI::Exposed::System::Char_array* chars, int32_t startIndex, int32_t length) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Char_array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x50C9E0))(this, chars, startIndex, length);
  }
  float ConvertToFloat(ModdingAPI::Exposed::System::Char_array* chars, int32_t startIndex, int32_t length, int32_t lastIndex) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::System::Char_array*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x50CA10))(this, chars, startIndex, length, lastIndex);
  }
  bool ValidateHtmlTag(ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array* chars, int32_t startIndex, int32_t endIndex) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*, ModdingAPI::Exposed::TMPro::TMP_Text::UnicodeChar_array*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x50CBC0))(this, chars, startIndex, endIndex);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::TMPro::TMP_Text*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x514870))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Color32> s_colorWhite = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Color32>(
   []() { return &GetStaticClassInstance()->pStaticFields->s_colorWhite; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Vector2> k_LargePositiveVector2 = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Vector2>(
   []() { return &GetStaticClassInstance()->pStaticFields->k_LargePositiveVector2; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Vector2> k_LargeNegativeVector2 = __CppStaticProperty<ModdingAPI::Exposed::UnityEngine::Vector2>(
   []() { return &GetStaticClassInstance()->pStaticFields->k_LargeNegativeVector2; }
  );
  static inline __CppStaticProperty<float> k_LargePositiveFloat = __CppStaticProperty<float>(
   []() { return &GetStaticClassInstance()->pStaticFields->k_LargePositiveFloat; }
  );
  static inline __CppStaticProperty<float> k_LargeNegativeFloat = __CppStaticProperty<float>(
   []() { return &GetStaticClassInstance()->pStaticFields->k_LargeNegativeFloat; }
  );
  static inline __CppStaticProperty<int32_t> k_LargePositiveInt = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->k_LargePositiveInt; }
  );
  static inline __CppStaticProperty<int32_t> k_LargeNegativeInt = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->k_LargeNegativeInt; }
  );

  // Static methods:
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x515150))();
  }
};
}