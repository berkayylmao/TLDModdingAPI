// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Matrix4x4.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector4.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Quaternion.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.FrustumPlanes.hpp"

namespace ModdingAPI::Exposed::UnityEngine {
struct __Matrix4x4_Il2CppObject {
  float m00;
  float m10;
  float m20;
  float m30;
  float m01;
  float m11;
  float m21;
  float m31;
  float m02;
  float m12;
  float m22;
  float m32;
  float m03;
  float m13;
  float m23;
  float m33;
};
struct __Matrix4x4_Il2CppStaticFields {
  ModdingAPI::Exposed::UnityEngine::Matrix4x4 zeroMatrix;
  ModdingAPI::Exposed::UnityEngine::Matrix4x4 identityMatrix;
};

struct __Matrix4x4_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_Equals;
};

struct __Matrix4x4_Il2CppClass {
  Il2CppClass_1 _1;
  __Matrix4x4_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Matrix4x4_Il2CppVtbl vtbl;
};

class Matrix4x4 {
  static constexpr uint64_t _rvaClassInstance     = 0x3C2E0E0;
  static inline    __Matrix4x4_Il2CppClass* _pStaticClassInstance = nullptr;

public:
  // Static class getter:
  static inline __Matrix4x4_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__Matrix4x4_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Member fields:
  float m00;
  float m10;
  float m20;
  float m30;
  float m01;
  float m11;
  float m21;
  float m31;
  float m02;
  float m12;
  float m22;
  float m32;
  float m03;
  float m13;
  float m23;
  float m33;

  // Member methods:
  void ::ctor(ModdingAPI::Exposed::UnityEngine::Vector4 column0, ModdingAPI::Exposed::UnityEngine::Vector4 column1, ModdingAPI::Exposed::UnityEngine::Vector4 column2, ModdingAPI::Exposed::UnityEngine::Vector4 column3) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*, ModdingAPI::Exposed::UnityEngine::Vector4, ModdingAPI::Exposed::UnityEngine::Vector4, ModdingAPI::Exposed::UnityEngine::Vector4, ModdingAPI::Exposed::UnityEngine::Vector4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x43430))(this, column0, column1, column2, column3);
  }
  ModdingAPI::Exposed::UnityEngine::Quaternion GetRotation() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Quaternion(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x434E0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetLossyScale() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x43510))(this);
  }
  bool IsIdentity() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x43540))(this);
  }
  float GetDeterminant() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x43550))(this);
  }
  ModdingAPI::Exposed::UnityEngine::FrustumPlanes DecomposeProjection() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::FrustumPlanes(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x43560))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Quaternion get_rotation() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Quaternion(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x434E0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 get_lossyScale() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x43510))(this);
  }
  bool get_isIdentity() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x43590))(this);
  }
  float get_determinant() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x435A0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::FrustumPlanes get_decomposeProjection() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::FrustumPlanes(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x43560))(this);
  }
  bool ValidTRS() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x435B0))(this);
  }
  void SetTRS(ModdingAPI::Exposed::UnityEngine::Vector3 pos, ModdingAPI::Exposed::UnityEngine::Quaternion q, ModdingAPI::Exposed::UnityEngine::Vector3 s) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Quaternion, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x43680))(this, pos, q, s);
  }
  ModdingAPI::Exposed::UnityEngine::Matrix4x4 get_inverse() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Matrix4x4(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x436D0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Matrix4x4 get_transpose() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Matrix4x4(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x43710))(this);
  }
  float get_Item(int32_t row, int32_t column) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x43750))(this, row, column);
  }
  void set_Item(int32_t row, int32_t column, float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*, int32_t, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x43760))(this, row, column, value);
  }
  float get_Item(int32_t index) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x43770))(this, index);
  }
  void set_Item(int32_t index, float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x43780))(this, index, value);
  }
  int32_t GetHashCode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x43790))(this);
  }
  bool Equals(Il2CppObject* other) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x437A0))(this, other);
  }
  bool Equals(ModdingAPI::Exposed::UnityEngine::Matrix4x4 other) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*, ModdingAPI::Exposed::UnityEngine::Matrix4x4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x437B0))(this, other);
  }
  ModdingAPI::Exposed::UnityEngine::Vector4 GetColumn(int32_t index) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector4(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x437F0))(this, index);
  }
  ModdingAPI::Exposed::UnityEngine::Vector4 GetRow(int32_t index) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector4(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x43820))(this, index);
  }
  void SetColumn(int32_t index, ModdingAPI::Exposed::UnityEngine::Vector4 column) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*, int32_t, ModdingAPI::Exposed::UnityEngine::Vector4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x43850))(this, index, column);
  }
  void SetRow(int32_t index, ModdingAPI::Exposed::UnityEngine::Vector4 row) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*, int32_t, ModdingAPI::Exposed::UnityEngine::Vector4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x438C0))(this, index, row);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 MultiplyPoint(ModdingAPI::Exposed::UnityEngine::Vector3 point) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x43930))(this, point);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 MultiplyPoint3x4(ModdingAPI::Exposed::UnityEngine::Vector3 point) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x43A30))(this, point);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 MultiplyVector(ModdingAPI::Exposed::UnityEngine::Vector3 vector) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x43AF0))(this, vector);
  }
  System_String* ToString() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x43BA0))(this);
  }

  // Static methods:
  static inline ModdingAPI::Exposed::UnityEngine::Matrix4x4 TRS(ModdingAPI::Exposed::UnityEngine::Vector3 pos, ModdingAPI::Exposed::UnityEngine::Quaternion q, ModdingAPI::Exposed::UnityEngine::Vector3 s) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Matrix4x4(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Quaternion, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106B1F0))(pos, q, s);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Matrix4x4 Inverse(ModdingAPI::Exposed::UnityEngine::Matrix4x4 m) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Matrix4x4(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106B570))(m);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Matrix4x4 Transpose(ModdingAPI::Exposed::UnityEngine::Matrix4x4 m) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Matrix4x4(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106B7F0))(m);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Matrix4x4 Ortho(float left, float right, float bottom, float top, float zNear, float zFar) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Matrix4x4(__fastcall*)(float, float, float, float, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106BB30))(left, right, bottom, top, zNear, zFar);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Matrix4x4 Frustum(float left, float right, float bottom, float top, float zNear, float zFar) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Matrix4x4(__fastcall*)(float, float, float, float, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106BCD0))(left, right, bottom, top, zNear, zFar);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Matrix4x4 Frustum(ModdingAPI::Exposed::UnityEngine::FrustumPlanes fp) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Matrix4x4(__fastcall*)(ModdingAPI::Exposed::UnityEngine::FrustumPlanes)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106BE70))(fp);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Matrix4x4 Scale(ModdingAPI::Exposed::UnityEngine::Vector3 vector) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Matrix4x4(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106D760))(vector);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Matrix4x4 get_zero() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Matrix4x4(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x106D810))();
  }
  static inline ModdingAPI::Exposed::UnityEngine::Matrix4x4 get_identity() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Matrix4x4(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x106D8E0))();
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x106E120))();
  }
  static inline void GetRotation_Injected(ModdingAPI::Exposed::UnityEngine::Matrix4x4 _unity_self, ModdingAPI::Exposed::UnityEngine::Quaternion ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4, ModdingAPI::Exposed::UnityEngine::Quaternion)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106E280))(_unity_self, ret);
  }
  static inline void GetLossyScale_Injected(ModdingAPI::Exposed::UnityEngine::Matrix4x4 _unity_self, ModdingAPI::Exposed::UnityEngine::Vector3 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106E2E0))(_unity_self, ret);
  }
  static inline bool IsIdentity_Injected(ModdingAPI::Exposed::UnityEngine::Matrix4x4 _unity_self) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106E340))(_unity_self);
  }
  static inline float GetDeterminant_Injected(ModdingAPI::Exposed::UnityEngine::Matrix4x4 _unity_self) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106E390))(_unity_self);
  }
  static inline void DecomposeProjection_Injected(ModdingAPI::Exposed::UnityEngine::Matrix4x4 _unity_self, ModdingAPI::Exposed::UnityEngine::FrustumPlanes ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4, ModdingAPI::Exposed::UnityEngine::FrustumPlanes)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106E3E0))(_unity_self, ret);
  }
  static inline bool ValidTRS_Injected(ModdingAPI::Exposed::UnityEngine::Matrix4x4 _unity_self) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106E440))(_unity_self);
  }
  static inline void TRS_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 pos, ModdingAPI::Exposed::UnityEngine::Quaternion q, ModdingAPI::Exposed::UnityEngine::Vector3 s, ModdingAPI::Exposed::UnityEngine::Matrix4x4 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Quaternion, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Matrix4x4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106E490))(pos, q, s, ret);
  }
  static inline void Inverse_Injected(ModdingAPI::Exposed::UnityEngine::Matrix4x4 m, ModdingAPI::Exposed::UnityEngine::Matrix4x4 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4, ModdingAPI::Exposed::UnityEngine::Matrix4x4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106E510))(m, ret);
  }
  static inline void Transpose_Injected(ModdingAPI::Exposed::UnityEngine::Matrix4x4 m, ModdingAPI::Exposed::UnityEngine::Matrix4x4 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Matrix4x4, ModdingAPI::Exposed::UnityEngine::Matrix4x4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106E570))(m, ret);
  }
  static inline void Ortho_Injected(float left, float right, float bottom, float top, float zNear, float zFar, ModdingAPI::Exposed::UnityEngine::Matrix4x4 ret) {
    reinterpret_cast<void(__fastcall*)(float, float, float, float, float, float, ModdingAPI::Exposed::UnityEngine::Matrix4x4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106E5D0))(left, right, bottom, top, zNear, zFar, ret);
  }
  static inline void Frustum_Injected(float left, float right, float bottom, float top, float zNear, float zFar, ModdingAPI::Exposed::UnityEngine::Matrix4x4 ret) {
    reinterpret_cast<void(__fastcall*)(float, float, float, float, float, float, ModdingAPI::Exposed::UnityEngine::Matrix4x4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x106E670))(left, right, bottom, top, zNear, zFar, ret);
  }

};
}