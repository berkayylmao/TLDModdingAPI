// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::UnityEngine::Video {
struct __VideoPlayer_Il2CppStaticFields {
};

struct __VideoPlayer_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __VideoPlayer_Il2CppClass {
  Il2CppClass_1 _1;
  __VideoPlayer_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __VideoPlayer_Il2CppVtbl vtbl;
};

class VideoPlayer {
public:
  // Il2Cpp fields:
  __VideoPlayer_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer::EventHandler* prepareCompleted;
  ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer::EventHandler* loopPointReached;
  ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer::EventHandler* started;
  ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer::EventHandler* frameDropped;
  ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer::ErrorEventHandler* errorReceived;
  ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer::EventHandler* seekCompleted;
  ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer::TimeEventHandler* clockResyncOccurred;
  ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer::FrameReadyEventHandler* frameReady;

  // Member methods:
  void set_source(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A1D0))(this, value);
  }
  void set_url(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A230))(this, value);
  }
  void set_renderMode(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A290))(this, value);
  }
  void set_targetCamera(ModdingAPI::Exposed::UnityEngine::Camera* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, ModdingAPI::Exposed::UnityEngine::Camera*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A2F0))(this, value);
  }
  void set_aspectRatio(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A350))(this, value);
  }
  void set_targetCameraAlpha(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A3B0))(this, value);
  }
  void Prepare() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A410))(this);
  }
  bool get_isPrepared() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A460))(this);
  }
  void set_waitForFirstFrame(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A4B0))(this, value);
  }
  void set_playOnAwake(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A510))(this, value);
  }
  void Play() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A570))(this);
  }
  void Pause() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A5C0))(this);
  }
  void Stop() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A610))(this);
  }
  int64_t get_frame() {
    return reinterpret_cast<int64_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A660))(this);
  }
  void set_frame(int64_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A6B0))(this, value);
  }
  void set_playbackSpeed(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A710))(this, value);
  }
  void set_isLooping(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A770))(this, value);
  }
  void set_timeReference(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A7D0))(this, value);
  }
  void set_externalReferenceTime(double value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A830))(this, value);
  }
  void set_skipOnDrop(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A890))(this, value);
  }
  float get_frameRate() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A8F0))(this);
  }
  double get_length() {
    return reinterpret_cast<double(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A940))(this);
  }
  void set_audioOutputMode(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A990))(this, value);
  }
  void add_loopPointReached(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer::EventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer::EventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158A9F0))(this, value);
  }
  void remove_loopPointReached(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer::EventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer::EventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158AAE0))(this, value);
  }
  void add_errorReceived(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer::ErrorEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer::ErrorEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158ABD0))(this, value);
  }
  void remove_errorReceived(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer::ErrorEventHandler* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer::ErrorEventHandler*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158ACC0))(this, value);
  }

  // Static methods:
  static inline void InvokePrepareCompletedCallback_Internal(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer* source) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158ADB0))(source);
  }
  static inline void InvokeFrameReadyCallback_Internal(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer* source, int64_t frameIdx) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158ADE0))(source, frameIdx);
  }
  static inline void InvokeLoopPointReachedCallback_Internal(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer* source) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158AE20))(source);
  }
  static inline void InvokeStartedCallback_Internal(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer* source) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158AE50))(source);
  }
  static inline void InvokeFrameDroppedCallback_Internal(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer* source) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158AE80))(source);
  }
  static inline void InvokeErrorReceivedCallback_Internal(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer* source, System_String* errorStr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158AEB0))(source, errorStr);
  }
  static inline void InvokeSeekCompletedCallback_Internal(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer* source) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158AEF0))(source);
  }
  static inline void InvokeClockResyncOccurredCallback_Internal(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer* source, double seconds) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Video::VideoPlayer*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0x158AF20))(source, seconds);
  }
};
}