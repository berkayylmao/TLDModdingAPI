// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::UnityEngine {
struct __MonoBehaviour_Il2CppStaticFields {
};

struct __MonoBehaviour_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __MonoBehaviour_Il2CppClass {
  Il2CppClass_1 _1;
  __MonoBehaviour_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __MonoBehaviour_Il2CppVtbl vtbl;
};

class MonoBehaviour {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C7D220;
  static inline    MonoBehaviour* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C839A8;
  static inline    __MonoBehaviour_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline MonoBehaviour* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (MonoBehaviour**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __MonoBehaviour_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__MonoBehaviour_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __MonoBehaviour_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x389390))(this);
  }
  bool IsInvoking() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1071FE0))(this);
  }
  void CancelInvoke() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1072030))(this);
  }
  void Invoke(System_String* methodName, float time) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*, System_String*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1072080))(this, methodName, time);
  }
  void InvokeRepeating(System_String* methodName, float time, float repeatRate) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*, System_String*, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10720A0))(this, methodName, time, repeatRate);
  }
  void CancelInvoke(System_String* methodName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10721A0))(this, methodName);
  }
  bool IsInvoking(System_String* methodName) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1072200))(this, methodName);
  }
  ModdingAPI::Exposed::UnityEngine::Coroutine* StartCoroutine(System_String* methodName) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Coroutine*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1072260))(this, methodName);
  }
  ModdingAPI::Exposed::UnityEngine::Coroutine* StartCoroutine(System_String* methodName, Il2CppObject* value) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Coroutine*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*, System_String*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1072270))(this, methodName, value);
  }
  ModdingAPI::Exposed::UnityEngine::Coroutine* StartCoroutine(ModdingAPI::Exposed::System::Collections::IEnumerator* routine) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Coroutine*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*, ModdingAPI::Exposed::System::Collections::IEnumerator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1072400))(this, routine);
  }
  ModdingAPI::Exposed::UnityEngine::Coroutine* StartCoroutine_Auto(ModdingAPI::Exposed::System::Collections::IEnumerator* routine) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Coroutine*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*, ModdingAPI::Exposed::System::Collections::IEnumerator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1072580))(this, routine);
  }
  void StopCoroutine(ModdingAPI::Exposed::System::Collections::IEnumerator* routine) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*, ModdingAPI::Exposed::System::Collections::IEnumerator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1072590))(this, routine);
  }
  void StopCoroutine(ModdingAPI::Exposed::UnityEngine::Coroutine* routine) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*, ModdingAPI::Exposed::UnityEngine::Coroutine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1072710))(this, routine);
  }
  void StopCoroutine(System_String* methodName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1072890))(this, methodName);
  }
  void StopAllCoroutines() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10728F0))(this);
  }
  bool get_useGUILayout() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1072940))(this);
  }
  void set_useGUILayout(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1072990))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Coroutine* StartCoroutineManaged(System_String* methodName, Il2CppObject* value) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Coroutine*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*, System_String*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1072B60))(this, methodName, value);
  }
  ModdingAPI::Exposed::UnityEngine::Coroutine* StartCoroutineManaged2(ModdingAPI::Exposed::System::Collections::IEnumerator* enumerator) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Coroutine*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*, ModdingAPI::Exposed::System::Collections::IEnumerator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1072BD0))(this, enumerator);
  }
  void StopCoroutineManaged(ModdingAPI::Exposed::UnityEngine::Coroutine* routine) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*, ModdingAPI::Exposed::UnityEngine::Coroutine*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1072C30))(this, routine);
  }
  void StopCoroutineFromEnumeratorManaged(ModdingAPI::Exposed::System::Collections::IEnumerator* routine) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*, ModdingAPI::Exposed::System::Collections::IEnumerator*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1072C90))(this, routine);
  }
  System_String* GetScriptClassName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1072CF0))(this);
  }

  // Static methods:
  static inline void print(Il2CppObject* message) {
    reinterpret_cast<void(__fastcall*)(Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10729F0))(message);
  }
  static inline void Internal_CancelInvokeAll(ModdingAPI::Exposed::UnityEngine::MonoBehaviour* self) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1072030))(self);
  }
  static inline bool Internal_IsInvokingAll(ModdingAPI::Exposed::UnityEngine::MonoBehaviour* self) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1071FE0))(self);
  }
  static inline void InvokeDelayed(ModdingAPI::Exposed::UnityEngine::MonoBehaviour* self, System_String* methodName, float time, float repeatRate) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*, System_String*, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1072A90))(self, methodName, time, repeatRate);
  }
  static inline void CancelInvoke(ModdingAPI::Exposed::UnityEngine::MonoBehaviour* self, System_String* methodName) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x10721A0))(self, methodName);
  }
  static inline bool IsInvoking(ModdingAPI::Exposed::UnityEngine::MonoBehaviour* self, System_String* methodName) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::MonoBehaviour*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1072200))(self, methodName);
  }
  static inline bool IsObjectMonoBehaviour(ModdingAPI::Exposed::UnityEngine::Object* obj) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Object*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1072B10))(obj);
  }
};
}