// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::Rewired::Components {
struct __PlayerController_Il2CppStaticFields {
};

struct __PlayerController_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_OnAwake;
  VirtualInvokeData _5_OnAwakeFinished;
  VirtualInvokeData _6_OnStart;
  VirtualInvokeData _7_OnEnabled;
  VirtualInvokeData _8_OnDisabled;
  VirtualInvokeData _9_OnDestroyed;
  VirtualInvokeData _10_OnReset;
  VirtualInvokeData _11_OnValidated;
  VirtualInvokeData _12_Initialize;
  VirtualInvokeData _13_TryInitialize;
  VirtualInvokeData _14_CreateSource;
  VirtualInvokeData _15_GetCreateSourceArgs;
  VirtualInvokeData _16_PostInitialize;
  VirtualInvokeData _17_Deinitialize;
  VirtualInvokeData _18_Subscribe;
  VirtualInvokeData _19_Unsubscribe;
  VirtualInvokeData _20_Rewired_IPlayerController_get_enabled;
  VirtualInvokeData _21_Rewired_IPlayerController_set_enabled;
  VirtualInvokeData _22_get_playerId;
  VirtualInvokeData _23_set_playerId;
  VirtualInvokeData _24_get_buttons;
  VirtualInvokeData _25_get_axes;
  VirtualInvokeData _26_get_elements;
  VirtualInvokeData _27_get_buttonCount;
  VirtualInvokeData _28_get_axisCount;
  VirtualInvokeData _29_get_elementCount;
  VirtualInvokeData _30_add_ButtonStateChangedEvent;
  VirtualInvokeData _31_remove_ButtonStateChangedEvent;
  VirtualInvokeData _32_add_AxisValueChangedEvent;
  VirtualInvokeData _33_remove_AxisValueChangedEvent;
  VirtualInvokeData _34_add_EnabledStateChangedEvent;
  VirtualInvokeData _35_remove_EnabledStateChangedEvent;
  VirtualInvokeData _36_GetButton;
  VirtualInvokeData _37_GetButtonDown;
  VirtualInvokeData _38_GetButtonUp;
  VirtualInvokeData _39_GetAxis;
  VirtualInvokeData _40_GetAxisRaw;
  VirtualInvokeData _41_GetElement;
  VirtualInvokeData _42_GetElement;
  VirtualInvokeData _43_CreateDefaultElementInfos;
};

struct __PlayerController_Il2CppClass {
  Il2CppClass_1 _1;
  __PlayerController_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __PlayerController_Il2CppVtbl vtbl;
};

class PlayerController {
public:
  // Il2Cpp fields:
  __PlayerController_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::Rewired::PlayerController* ComponentWrapper_1_ovJjdavCVCSQaRYvkKYaPvETjMV;
  bool ComponentWrapper_1_esYehwKhrldtApGnRVqbmuVUkFZ;
  ModdingAPI::Exposed::Rewired::InputManager_Base* _rewiredInputManager;
  int32_t _playerId;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* _elements;
  ModdingAPI::Exposed::Rewired::Components::PlayerController::ButtonStateChangedHandler* _onButtonStateChanged;
  ModdingAPI::Exposed::Rewired::Components::PlayerController::AxisValueChangedHandler* _onAxisValueChanged;
  ModdingAPI::Exposed::Rewired::Components::PlayerController::EnabledStateChangedHandler* _onEnabledStateChanged;

  // Member methods:
  int32_t get_playerId() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B3880))(this);
  }
  void set_playerId(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B3920))(this, value);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IList_T_* get_buttons() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IList_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B3C20))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IList_T_* get_axes() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IList_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B3CC0))(this);
  }
  ModdingAPI::Exposed::System::Collections::Generic::IList_T_* get_elements() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::IList_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B3D60))(this);
  }
  int32_t get_buttonCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B3E00))(this);
  }
  int32_t get_axisCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B3F80))(this);
  }
  int32_t get_elementCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B4100))(this);
  }
  void add_ButtonStateChangedEvent(ModdingAPI::Exposed::System::Action_T1__T2_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*, ModdingAPI::Exposed::System::Action_T1__T2_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B41A0))(this, value);
  }
  void remove_ButtonStateChangedEvent(ModdingAPI::Exposed::System::Action_T1__T2_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*, ModdingAPI::Exposed::System::Action_T1__T2_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B4240))(this, value);
  }
  void add_AxisValueChangedEvent(ModdingAPI::Exposed::System::Action_T1__T2_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*, ModdingAPI::Exposed::System::Action_T1__T2_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B4310))(this, value);
  }
  void remove_AxisValueChangedEvent(ModdingAPI::Exposed::System::Action_T1__T2_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*, ModdingAPI::Exposed::System::Action_T1__T2_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B43B0))(this, value);
  }
  void add_EnabledStateChangedEvent(ModdingAPI::Exposed::System::Action_T_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*, ModdingAPI::Exposed::System::Action_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B4450))(this, value);
  }
  void remove_EnabledStateChangedEvent(ModdingAPI::Exposed::System::Action_T_* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*, ModdingAPI::Exposed::System::Action_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B4500))(this, value);
  }
  bool GetButton(int32_t index) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B45E0))(this, index);
  }
  bool GetButtonDown(int32_t index) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B4690))(this, index);
  }
  bool GetButtonUp(int32_t index) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B4740))(this, index);
  }
  float GetAxis(int32_t index) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B47F0))(this, index);
  }
  float GetAxisRaw(int32_t index) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B49A0))(this, index);
  }
  ModdingAPI::Exposed::Rewired::PlayerController::Element* GetElement(int32_t index) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::PlayerController::Element*(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B4B50))(this, index);
  }
  void OnAwake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B4C00))(this);
  }
  void OnAwakeFinished() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B4C90))(this);
  }
  void OnEnabled() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B4D40))(this);
  }
  void OnDisabled() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B4E00))(this);
  }
  void OnValidated() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B4EC0))(this);
  }
  void OnReset() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B4FF0))(this);
  }
  void Subscribe() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B5560))(this);
  }
  void Unsubscribe() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B59A0))(this);
  }
  Il2CppObject* GetCreateSourceArgs() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319970))(this);
  }
  ModdingAPI::Exposed::Rewired::PlayerController* CreateSource(Il2CppObject* args) {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::PlayerController*(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B5E20))(this, args);
  }
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* CreateDefaultElementInfos() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B65B0))(this);
  }
  void ZefMPUKWLxGTUaLVCWftplGyQNb(int32_t , bool ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B7AF0))(this, , );
  }
  void ylPEvowloYhzWGVgUwDKvxKnsgD(int32_t , float ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B7C40))(this, , );
  }
  void VdVqmDOPhsswpzEYAKisDqubcxM(bool ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B7D60))(this, );
  }
  void nXjeqhBOAdYBMknDhdLRwOneWWA() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B7E50))(this);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B7F30))(this);
  }
  bool Rewired::IPlayerController::get_enabled() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B82E0))(this);
  }
  void Rewired::IPlayerController::set_enabled(bool ) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::Components::PlayerController*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7B8330))(this, );
  }
};
}