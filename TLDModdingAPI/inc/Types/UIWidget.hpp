// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Color.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector4.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Matrix4x4.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Vector2.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Bounds.hpp"


namespace ModdingAPI::Exposed {
struct __UIWidget_Il2CppStaticFields {
};

struct __UIWidget_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_get_isAnchoredHorizontally;
  VirtualInvokeData _5_get_isAnchoredVertically;
  VirtualInvokeData _6_get_canBeAnchored;
  VirtualInvokeData _7_get_alpha;
  VirtualInvokeData _8_set_alpha;
  VirtualInvokeData _9_CalculateFinalAlpha;
  VirtualInvokeData _10_get_localCorners;
  VirtualInvokeData _11_get_worldCorners;
  VirtualInvokeData _12_Invalidate;
  VirtualInvokeData _13_GetSides;
  VirtualInvokeData _14_OnEnable;
  VirtualInvokeData _15_OnInit;
  VirtualInvokeData _16_OnDisable;
  VirtualInvokeData _17_OnAnchor;
  VirtualInvokeData _18_SetRect;
  VirtualInvokeData _19_ParentHasChanged;
  VirtualInvokeData _20_OnStart;
  VirtualInvokeData _21_OnUpdate;
  VirtualInvokeData _22_get_localSize;
  VirtualInvokeData _23_get_drawingDimensions;
  VirtualInvokeData _24_get_material;
  VirtualInvokeData _25_set_material;
  VirtualInvokeData _26_get_mainTexture;
  VirtualInvokeData _27_set_mainTexture;
  VirtualInvokeData _28_get_shader;
  VirtualInvokeData _29_set_shader;
  VirtualInvokeData _30_MarkAsChanged;
  VirtualInvokeData _31_Awake;
  VirtualInvokeData _32_UpgradeFrom265;
  VirtualInvokeData _33_MakePixelPerfect;
  VirtualInvokeData _34_get_minWidth;
  VirtualInvokeData _35_get_minHeight;
  VirtualInvokeData _36_get_border;
  VirtualInvokeData _37_set_border;
  VirtualInvokeData _38_OnFill;
};

struct __UIWidget_Il2CppClass {
  Il2CppClass_1 _1;
  __UIWidget_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __UIWidget_Il2CppVtbl vtbl;
};

class UIWidget {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C8EC20;
  static inline    UIWidget* _pStaticObjectInstance = nullptr;

public:
// Singleton object getter:
  static inline UIWidget* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (UIWidget**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

  // Il2Cpp fields:
  __UIWidget_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;
  ModdingAPI::Exposed::UIRect::AnchorPoint* leftAnchor;
  ModdingAPI::Exposed::UIRect::AnchorPoint* rightAnchor;
  ModdingAPI::Exposed::UIRect::AnchorPoint* bottomAnchor;
  ModdingAPI::Exposed::UIRect::AnchorPoint* topAnchor;
  int32_t updateAnchors;
  ModdingAPI::Exposed::UnityEngine::GameObject* mGo;
  ModdingAPI::Exposed::UnityEngine::Transform* mTrans;
  ModdingAPI::Exposed::BetterList_T_* mChildren;
  bool mChanged;
  bool mStarted;
  bool mParentFound;
  bool UIRect_mUpdateAnchors;
  int32_t UIRect_mUpdateFrame;
  bool UIRect_mAnchorsCached;
  ModdingAPI::Exposed::UIRoot* UIRect_mRoot;
  ModdingAPI::Exposed::UIRect* UIRect_mParent;
  bool UIRect_mRootSet;
  ModdingAPI::Exposed::UnityEngine::Camera* mCam;
  float finalAlpha;
  ModdingAPI::Exposed::UnityEngine::Color mColor;
  int32_t mPivot;
  int32_t mWidth;
  int32_t mHeight;
  int32_t mDepth;
  ModdingAPI::Exposed::UIWidget::OnDimensionsChanged* onChange;
  ModdingAPI::Exposed::UIWidget::OnPostFillCallback* onPostFill;
  ModdingAPI::Exposed::UIDrawCall::OnRenderCallback* mOnRender;
  bool autoResizeBoxCollider;
  bool hideIfOffScreen;
  int32_t keepAspectRatio;
  float aspectRatio;
  ModdingAPI::Exposed::UIWidget::HitCheck* hitCheck;
  ModdingAPI::Exposed::UIPanel* panel;
  ModdingAPI::Exposed::UIGeometry* geometry;
  bool fillGeometry;
  bool mPlayMode;
  ModdingAPI::Exposed::UnityEngine::Vector4 mDrawRegion;
  ModdingAPI::Exposed::UnityEngine::Matrix4x4 mLocalToPanel;
  bool mIsVisibleByAlpha;
  bool mIsVisibleByPanel;
  bool mIsInFront;
  float mLastAlpha;
  bool mMoved;
  ModdingAPI::Exposed::UIDrawCall* drawCall;
  ModdingAPI::Exposed::UnityEngine::Vector3_array* mCorners;
  int32_t mAlphaFrameID;
  int32_t mMatrixFrame;
  ModdingAPI::Exposed::UnityEngine::Vector3 mOldV0;
  ModdingAPI::Exposed::UnityEngine::Vector3 mOldV1;

  // Member methods:
  ModdingAPI::Exposed::UIDrawCall::OnRenderCallback* get_onRender() {
    return reinterpret_cast<ModdingAPI::Exposed::UIDrawCall::OnRenderCallback*(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x4F1BE0))(this);
  }
  void set_onRender(ModdingAPI::Exposed::UIDrawCall::OnRenderCallback* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*, ModdingAPI::Exposed::UIDrawCall::OnRenderCallback*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204A9E0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector4 get_drawRegion() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector4(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204ABE0))(this);
  }
  void set_drawRegion(ModdingAPI::Exposed::UnityEngine::Vector4 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*, ModdingAPI::Exposed::UnityEngine::Vector4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204ABF0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 get_pivotOffset() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204AD80))(this);
  }
  int32_t get_width() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F1040))(this);
  }
  void set_width(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204AD90))(this, value);
  }
  int32_t get_height() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1BD6CB0))(this);
  }
  void set_height(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204B0D0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Color get_color() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Color(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204B400))(this);
  }
  void set_color(ModdingAPI::Exposed::UnityEngine::Color value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*, ModdingAPI::Exposed::UnityEngine::Color)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204B410))(this, value);
  }
  float get_alpha() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15F1780))(this);
  }
  void set_alpha(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204B490))(this, value);
  }
  bool get_isVisible() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204B4C0))(this);
  }
  bool get_hasVertices() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204B590))(this);
  }
  int32_t get_rawPivot() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F1030))(this);
  }
  void set_rawPivot(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204B5C0))(this, value);
  }
  int32_t get_pivot() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x5F1030))(this);
  }
  void set_pivot(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204B610))(this, value);
  }
  int32_t get_depth() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CEAD0))(this);
  }
  void set_depth(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204B9E0))(this, value);
  }
  int32_t get_raycastDepth() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204BBA0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3_array* get_localCorners() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3_array*(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204BCD0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 get_localSize() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204BE90))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 get_localCenter() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204BFD0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3_array* get_worldCorners() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3_array*(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204C1D0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 get_worldCenter() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204C570))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector4 get_drawingDimensions() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector4(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204C640))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Material* get_material() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Material*(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3077B0))(this);
  }
  void set_material(ModdingAPI::Exposed::UnityEngine::Material* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*, ModdingAPI::Exposed::UnityEngine::Material*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204C8D0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Texture* get_mainTexture() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Texture*(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204C950))(this);
  }
  void set_mainTexture(ModdingAPI::Exposed::UnityEngine::Texture* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*, ModdingAPI::Exposed::UnityEngine::Texture*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204CA30))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Shader* get_shader() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Shader*(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204CAB0))(this);
  }
  void set_shader(ModdingAPI::Exposed::UnityEngine::Shader* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*, ModdingAPI::Exposed::UnityEngine::Shader*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204CBC0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector2 get_relativeSize() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector2(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204CC40))(this);
  }
  bool get_hasBoxCollider() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204CCD0))(this);
  }
  void SetDimensions(int32_t w, int32_t h) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204CE20))(this, w, h);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3_array* GetSides(ModdingAPI::Exposed::UnityEngine::Transform* relativeTo) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3_array*(__fastcall*)(ModdingAPI::Exposed::UIWidget*, ModdingAPI::Exposed::UnityEngine::Transform*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204CFB0))(this, relativeTo);
  }
  float CalculateFinalAlpha(int32_t frameID) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UIWidget*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204D520))(this, frameID);
  }
  void UpdateFinalAlpha(int32_t frameID) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204D560))(this, frameID);
  }
  void Invalidate(bool includeChildren) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204D6A0))(this, includeChildren);
  }
  float CalculateCumulativeAlpha(int32_t frameID) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UIWidget*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204D8A0))(this, frameID);
  }
  void SetRect(float x, float y, float width, float height) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*, float, float, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204D9A0))(this, x, y, width, height);
  }
  void ResizeCollider() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204DF10))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Bounds CalculateBounds() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Bounds(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204E4E0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Bounds CalculateBounds(ModdingAPI::Exposed::UnityEngine::Transform* relativeParent) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Bounds(__fastcall*)(ModdingAPI::Exposed::UIWidget*, ModdingAPI::Exposed::UnityEngine::Transform*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204E520))(this, relativeParent);
  }
  void SetDirty() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204EB80))(this);
  }
  void RemoveFromPanel() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204EC90))(this);
  }
  void MarkAsChanged() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204ED70))(this);
  }
  ModdingAPI::Exposed::UIPanel* CreatePanel() {
    return reinterpret_cast<ModdingAPI::Exposed::UIPanel*(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204EFE0))(this);
  }
  void CheckLayer() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204F210))(this);
  }
  void ParentHasChanged() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204F570))(this);
  }
  void Awake() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204F720))(this);
  }
  void OnInit() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204F7C0))(this);
  }
  void UpgradeFrom265() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204F9D0))(this);
  }
  void OnStart() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204FB80))(this);
  }
  void OnAnchor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204FB90))(this);
  }
  void OnUpdate() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20508C0))(this);
  }
  void OnApplicationPause(bool paused) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2050980))(this, paused);
  }
  void OnDisable() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20509A0))(this);
  }
  void OnDestroy() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20509C0))(this);
  }
  bool UpdateVisibility(bool visibleByAlpha, bool visibleByPanel) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UIWidget*, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20509D0))(this, visibleByAlpha, visibleByPanel);
  }
  bool UpdateTransform(int32_t frame) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UIWidget*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2050A00))(this, frame);
  }
  bool UpdateGeometry(int32_t frame) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UIWidget*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2051060))(this, frame);
  }
  void WriteToBuffers(ModdingAPI::Exposed::BetterList_T_* v, ModdingAPI::Exposed::BetterList_T_* u, ModdingAPI::Exposed::BetterList_T_* c, ModdingAPI::Exposed::BetterList_T_* n, ModdingAPI::Exposed::BetterList_T_* t) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*, ModdingAPI::Exposed::BetterList_T_*, ModdingAPI::Exposed::BetterList_T_*, ModdingAPI::Exposed::BetterList_T_*, ModdingAPI::Exposed::BetterList_T_*, ModdingAPI::Exposed::BetterList_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20515E0))(this, v, u, c, n, t);
  }
  void MakePixelPerfect() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2051610))(this);
  }
  int32_t get_minWidth() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3201C0))(this);
  }
  int32_t get_minHeight() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3201C0))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector4 get_border() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector4(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20518F0))(this);
  }
  void set_border(ModdingAPI::Exposed::UnityEngine::Vector4 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*, ModdingAPI::Exposed::UnityEngine::Vector4)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, value);
  }
  void OnFill(ModdingAPI::Exposed::BetterList_T_* verts, ModdingAPI::Exposed::BetterList_T_* uvs, ModdingAPI::Exposed::BetterList_T_* cols) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*, ModdingAPI::Exposed::BetterList_T_*, ModdingAPI::Exposed::BetterList_T_*, ModdingAPI::Exposed::BetterList_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, verts, uvs, cols);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x20519A0))(this);
  }

  // Static methods:
  static inline int32_t FullCompareFunc(ModdingAPI::Exposed::UIWidget* left, ModdingAPI::Exposed::UIWidget* right) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UIWidget*, ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204E0B0))(left, right);
  }
  static inline int32_t PanelCompareFunc(ModdingAPI::Exposed::UIWidget* left, ModdingAPI::Exposed::UIWidget* right) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UIWidget*, ModdingAPI::Exposed::UIWidget*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x204E2F0))(left, right);
  }
};
}