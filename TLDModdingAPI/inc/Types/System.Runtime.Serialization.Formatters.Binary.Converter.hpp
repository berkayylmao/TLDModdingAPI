// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary {
struct __Converter_Il2CppStaticFields {
  int32_t primitiveTypeEnumLength;
  ModdingAPI::Exposed::System::Type_array* typeA;
  ModdingAPI::Exposed::System::Type_array* arrayTypeA;
  ModdingAPI::Exposed::System::String_array* valueA;
  ModdingAPI::Exposed::System::TypeCode_array* typeCodeA;
  ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE_array* codeA;
  ModdingAPI::Exposed::System::Type* typeofISerializable;
  ModdingAPI::Exposed::System::Type* typeofString;
  ModdingAPI::Exposed::System::Type* typeofConverter;
  ModdingAPI::Exposed::System::Type* typeofBoolean;
  ModdingAPI::Exposed::System::Type* typeofByte;
  ModdingAPI::Exposed::System::Type* typeofChar;
  ModdingAPI::Exposed::System::Type* typeofDecimal;
  ModdingAPI::Exposed::System::Type* typeofDouble;
  ModdingAPI::Exposed::System::Type* typeofInt16;
  ModdingAPI::Exposed::System::Type* typeofInt32;
  ModdingAPI::Exposed::System::Type* typeofInt64;
  ModdingAPI::Exposed::System::Type* typeofSByte;
  ModdingAPI::Exposed::System::Type* typeofSingle;
  ModdingAPI::Exposed::System::Type* typeofTimeSpan;
  ModdingAPI::Exposed::System::Type* typeofDateTime;
  ModdingAPI::Exposed::System::Type* typeofUInt16;
  ModdingAPI::Exposed::System::Type* typeofUInt32;
  ModdingAPI::Exposed::System::Type* typeofUInt64;
  ModdingAPI::Exposed::System::Type* typeofObject;
  ModdingAPI::Exposed::System::Type* typeofSystemVoid;
  ModdingAPI::Exposed::System::Reflection::Assembly* urtAssembly;
  System_String* urtAssemblyString;
  ModdingAPI::Exposed::System::Type* typeofTypeArray;
  ModdingAPI::Exposed::System::Type* typeofObjectArray;
  ModdingAPI::Exposed::System::Type* typeofStringArray;
  ModdingAPI::Exposed::System::Type* typeofBooleanArray;
  ModdingAPI::Exposed::System::Type* typeofByteArray;
  ModdingAPI::Exposed::System::Type* typeofCharArray;
  ModdingAPI::Exposed::System::Type* typeofDecimalArray;
  ModdingAPI::Exposed::System::Type* typeofDoubleArray;
  ModdingAPI::Exposed::System::Type* typeofInt16Array;
  ModdingAPI::Exposed::System::Type* typeofInt32Array;
  ModdingAPI::Exposed::System::Type* typeofInt64Array;
  ModdingAPI::Exposed::System::Type* typeofSByteArray;
  ModdingAPI::Exposed::System::Type* typeofSingleArray;
  ModdingAPI::Exposed::System::Type* typeofTimeSpanArray;
  ModdingAPI::Exposed::System::Type* typeofDateTimeArray;
  ModdingAPI::Exposed::System::Type* typeofUInt16Array;
  ModdingAPI::Exposed::System::Type* typeofUInt32Array;
  ModdingAPI::Exposed::System::Type* typeofUInt64Array;
  ModdingAPI::Exposed::System::Type* typeofMarshalByRefObject;
};

struct __Converter_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __Converter_Il2CppClass {
  Il2CppClass_1 _1;
  __Converter_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Converter_Il2CppVtbl vtbl;
};

class Converter {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C57130;
  static inline    Converter* _pStaticObjectInstance = nullptr;

  static constexpr uint64_t                     _rvaClassInstance     = 0x3C55D20;
  static inline    __Converter_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Singleton object getter:
  static inline Converter* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (Converter**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

// Static class getter:
  static inline __Converter_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__Converter_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __Converter_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Static fields:
  static inline __CppStaticProperty<int32_t> primitiveTypeEnumLength = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->primitiveTypeEnumLength; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type_array*> typeA = __CppStaticProperty<ModdingAPI::Exposed::System::Type_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeA; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type_array*> arrayTypeA = __CppStaticProperty<ModdingAPI::Exposed::System::Type_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->arrayTypeA; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::String_array*> valueA = __CppStaticProperty<ModdingAPI::Exposed::System::String_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->valueA; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::TypeCode_array*> typeCodeA = __CppStaticProperty<ModdingAPI::Exposed::System::TypeCode_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeCodeA; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE_array*> codeA = __CppStaticProperty<ModdingAPI::Exposed::System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->codeA; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofISerializable = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofISerializable; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofString = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofString; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofConverter = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofConverter; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofBoolean = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofBoolean; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofByte = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofByte; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofChar = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofChar; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofDecimal = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofDecimal; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofDouble = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofDouble; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofInt16 = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofInt16; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofInt32 = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofInt32; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofInt64 = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofInt64; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofSByte = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofSByte; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofSingle = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofSingle; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofTimeSpan = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofTimeSpan; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofDateTime = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofDateTime; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofUInt16 = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofUInt16; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofUInt32 = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofUInt32; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofUInt64 = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofUInt64; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofObject = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofObject; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofSystemVoid = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofSystemVoid; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Reflection::Assembly*> urtAssembly = __CppStaticProperty<ModdingAPI::Exposed::System::Reflection::Assembly*>(
   []() { return &GetStaticClassInstance()->pStaticFields->urtAssembly; }
  );
  static inline __CppStaticProperty<System_String*> urtAssemblyString = __CppStaticProperty<System_String*>(
   []() { return &GetStaticClassInstance()->pStaticFields->urtAssemblyString; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofTypeArray = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofTypeArray; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofObjectArray = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofObjectArray; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofStringArray = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofStringArray; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofBooleanArray = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofBooleanArray; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofByteArray = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofByteArray; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofCharArray = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofCharArray; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofDecimalArray = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofDecimalArray; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofDoubleArray = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofDoubleArray; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofInt16Array = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofInt16Array; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofInt32Array = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofInt32Array; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofInt64Array = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofInt64Array; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofSByteArray = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofSByteArray; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofSingleArray = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofSingleArray; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofTimeSpanArray = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofTimeSpanArray; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofDateTimeArray = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofDateTimeArray; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofUInt16Array = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofUInt16Array; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofUInt32Array = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofUInt32Array; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofUInt64Array = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofUInt64Array; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Type*> typeofMarshalByRefObject = __CppStaticProperty<ModdingAPI::Exposed::System::Type*>(
   []() { return &GetStaticClassInstance()->pStaticFields->typeofMarshalByRefObject; }
  );

  // Static methods:
  static inline int32_t ToCode(ModdingAPI::Exposed::System::Type* type) {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Type*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x969940))(type);
  }
  static inline bool IsWriteAsByteArray(int32_t code) {
    return reinterpret_cast<bool(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x969C10))(code);
  }
  static inline int32_t TypeLength(int32_t code) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x969C80))(code);
  }
  static inline ModdingAPI::Exposed::System::Type* ToArrayType(int32_t code) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type*(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x969D00))(code);
  }
  static inline void InitTypeA() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x969E40))();
  }
  static inline void InitArrayTypeA() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x96A4F0))();
  }
  static inline ModdingAPI::Exposed::System::Type* ToType(int32_t code) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Type*(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x96ABC0))(code);
  }
  static inline ModdingAPI::Exposed::System::Array* CreatePrimitiveArray(int32_t code, int32_t length) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Array*(__fastcall*)(int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x96AD00))(code, length);
  }
  static inline bool IsPrimitiveArray(ModdingAPI::Exposed::System::Type* type, Il2CppObject* typeInformation) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Type*, Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x96AE80))(type, typeInformation);
  }
  static inline void InitValueA() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x96B1F0))();
  }
  static inline System_String* ToComType(int32_t code) {
    return reinterpret_cast<System_String*(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x96B850))(code);
  }
  static inline void InitTypeCodeA() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x96B990))();
  }
  static inline int32_t ToTypeCode(int32_t code) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x96BC80))(code);
  }
  static inline void InitCodeA() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x96BDB0))();
  }
  static inline int32_t ToPrimitiveTypeEnum(int32_t typeCode) {
    return reinterpret_cast<int32_t(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x96C0F0))(typeCode);
  }
  static inline Il2CppObject* FromString(System_String* value, int32_t code) {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x96C220))(value, code);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x96C450))();
  }
};
}