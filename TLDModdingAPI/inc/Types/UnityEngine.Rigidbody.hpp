// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.UnityEngine.Vector3.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Quaternion.hpp"
#include "ModdingAPI.Exposed.UnityEngine.RaycastHit.hpp"


namespace ModdingAPI::Exposed::UnityEngine {
struct __Rigidbody_Il2CppStaticFields {
};

struct __Rigidbody_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __Rigidbody_Il2CppClass {
  Il2CppClass_1 _1;
  __Rigidbody_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __Rigidbody_Il2CppVtbl vtbl;
};

class Rigidbody {
  static constexpr uint64_t         _rvaObjectInstance     = 0x3C4DDC8;
  static inline    Rigidbody* _pStaticObjectInstance = nullptr;

public:
// Singleton object getter:
  static inline Rigidbody* GetSingletonInstance() {
    while (!_pStaticObjectInstance) {
      Sleep(100);
      auto* ppObjectInstance = (Rigidbody**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaObjectInstance);
      if (ppObjectInstance)
        _pStaticObjectInstance = *ppObjectInstance;
    }
    return _pStaticObjectInstance;
  }

  // Il2Cpp fields:
  __Rigidbody_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x389390))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 get_velocity() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1536D60))(this);
  }
  void set_velocity(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1536DE0))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 get_angularVelocity() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1536E40))(this);
  }
  void set_angularVelocity(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1536EC0))(this, value);
  }
  float get_drag() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1536F20))(this);
  }
  void set_drag(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1536F70))(this, value);
  }
  float get_angularDrag() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1536FD0))(this);
  }
  void set_angularDrag(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537020))(this, value);
  }
  float get_mass() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537080))(this);
  }
  void set_mass(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15370D0))(this, value);
  }
  void SetDensity(float density) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537130))(this, density);
  }
  bool get_useGravity() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537190))(this);
  }
  void set_useGravity(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15371E0))(this, value);
  }
  float get_maxDepenetrationVelocity() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537240))(this);
  }
  void set_maxDepenetrationVelocity(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537290))(this, value);
  }
  bool get_isKinematic() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15372F0))(this);
  }
  void set_isKinematic(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537340))(this, value);
  }
  bool get_freezeRotation() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15373A0))(this);
  }
  void set_freezeRotation(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15373F0))(this, value);
  }
  int32_t get_constraints() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537450))(this);
  }
  void set_constraints(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15374A0))(this, value);
  }
  int32_t get_collisionDetectionMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537500))(this);
  }
  void set_collisionDetectionMode(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537550))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 get_centerOfMass() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15375B0))(this);
  }
  void set_centerOfMass(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537630))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 get_worldCenterOfMass() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537690))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Quaternion get_inertiaTensorRotation() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Quaternion(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537710))(this);
  }
  void set_inertiaTensorRotation(ModdingAPI::Exposed::UnityEngine::Quaternion value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Quaternion)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537790))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 get_inertiaTensor() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15377F0))(this);
  }
  void set_inertiaTensor(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537870))(this, value);
  }
  bool get_detectCollisions() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15378D0))(this);
  }
  void set_detectCollisions(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537920))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 get_position() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537980))(this);
  }
  void set_position(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537A00))(this, value);
  }
  ModdingAPI::Exposed::UnityEngine::Quaternion get_rotation() {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Quaternion(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537A60))(this);
  }
  void set_rotation(ModdingAPI::Exposed::UnityEngine::Quaternion value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Quaternion)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537AE0))(this, value);
  }
  int32_t get_interpolation() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537B40))(this);
  }
  void set_interpolation(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537B90))(this, value);
  }
  int32_t get_solverIterations() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537BF0))(this);
  }
  void set_solverIterations(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537C40))(this, value);
  }
  float get_sleepThreshold() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537CA0))(this);
  }
  void set_sleepThreshold(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537CF0))(this, value);
  }
  float get_maxAngularVelocity() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537D50))(this);
  }
  void set_maxAngularVelocity(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537DA0))(this, value);
  }
  void MovePosition(ModdingAPI::Exposed::UnityEngine::Vector3 position) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537E00))(this, position);
  }
  void MoveRotation(ModdingAPI::Exposed::UnityEngine::Quaternion rot) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Quaternion)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537E60))(this, rot);
  }
  void Sleep() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537EC0))(this);
  }
  bool IsSleeping() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537F10))(this);
  }
  void WakeUp() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537F60))(this);
  }
  void ResetCenterOfMass() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537FB0))(this);
  }
  void ResetInertiaTensor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538000))(this);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetRelativePointVelocity(ModdingAPI::Exposed::UnityEngine::Vector3 relativePoint) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538050))(this, relativePoint);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 GetPointVelocity(ModdingAPI::Exposed::UnityEngine::Vector3 worldPoint) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15380E0))(this, worldPoint);
  }
  int32_t get_solverVelocityIterations() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538170))(this);
  }
  void set_solverVelocityIterations(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15381C0))(this, value);
  }
  float get_sleepVelocity() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538220))(this);
  }
  void set_sleepVelocity(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538270))(this, value);
  }
  float get_sleepAngularVelocity() {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15382D0))(this);
  }
  void set_sleepAngularVelocity(float value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538320))(this, value);
  }
  void SetMaxAngularVelocity(float a) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537DA0))(this, a);
  }
  bool get_useConeFriction() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x67FC90))(this);
  }
  void set_useConeFriction(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this, value);
  }
  int32_t get_solverIterationCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537BF0))(this);
  }
  void set_solverIterationCount(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1537C40))(this, value);
  }
  int32_t get_solverVelocityIterationCount() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538170))(this);
  }
  void set_solverVelocityIterationCount(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15381C0))(this, value);
  }
  void AddForce(ModdingAPI::Exposed::UnityEngine::Vector3 force, int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538380))(this, force, mode);
  }
  void AddForce(ModdingAPI::Exposed::UnityEngine::Vector3 force) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15383F0))(this, force);
  }
  void AddForce(float x, float y, float z, int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float, float, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538460))(this, x, y, z, mode);
  }
  void AddForce(float x, float y, float z) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15384E0))(this, x, y, z);
  }
  void AddRelativeForce(ModdingAPI::Exposed::UnityEngine::Vector3 force, int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538560))(this, force, mode);
  }
  void AddRelativeForce(ModdingAPI::Exposed::UnityEngine::Vector3 force) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15385D0))(this, force);
  }
  void AddRelativeForce(float x, float y, float z, int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float, float, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538640))(this, x, y, z, mode);
  }
  void AddRelativeForce(float x, float y, float z) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15386C0))(this, x, y, z);
  }
  void AddTorque(ModdingAPI::Exposed::UnityEngine::Vector3 torque, int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538740))(this, torque, mode);
  }
  void AddTorque(ModdingAPI::Exposed::UnityEngine::Vector3 torque) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15387B0))(this, torque);
  }
  void AddTorque(float x, float y, float z, int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float, float, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538820))(this, x, y, z, mode);
  }
  void AddTorque(float x, float y, float z) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15388A0))(this, x, y, z);
  }
  void AddRelativeTorque(ModdingAPI::Exposed::UnityEngine::Vector3 torque, int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538920))(this, torque, mode);
  }
  void AddRelativeTorque(ModdingAPI::Exposed::UnityEngine::Vector3 torque) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538990))(this, torque);
  }
  void AddRelativeTorque(float x, float y, float z, int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float, float, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538A00))(this, x, y, z, mode);
  }
  void AddRelativeTorque(float x, float y, float z) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538A80))(this, x, y, z);
  }
  void AddForceAtPosition(ModdingAPI::Exposed::UnityEngine::Vector3 force, ModdingAPI::Exposed::UnityEngine::Vector3 position, int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538B00))(this, force, position, mode);
  }
  void AddForceAtPosition(ModdingAPI::Exposed::UnityEngine::Vector3 force, ModdingAPI::Exposed::UnityEngine::Vector3 position) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538B80))(this, force, position);
  }
  void AddExplosionForce(float explosionForce, ModdingAPI::Exposed::UnityEngine::Vector3 explosionPosition, float explosionRadius, float upwardsModifier, int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float, ModdingAPI::Exposed::UnityEngine::Vector3, float, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538C10))(this, explosionForce, explosionPosition, explosionRadius, upwardsModifier, mode);
  }
  void AddExplosionForce(float explosionForce, ModdingAPI::Exposed::UnityEngine::Vector3 explosionPosition, float explosionRadius, float upwardsModifier) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float, ModdingAPI::Exposed::UnityEngine::Vector3, float, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538CB0))(this, explosionForce, explosionPosition, explosionRadius, upwardsModifier);
  }
  void AddExplosionForce(float explosionForce, ModdingAPI::Exposed::UnityEngine::Vector3 explosionPosition, float explosionRadius) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float, ModdingAPI::Exposed::UnityEngine::Vector3, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538D50))(this, explosionForce, explosionPosition, explosionRadius);
  }
  void Internal_ClosestPointOnBounds(ModdingAPI::Exposed::UnityEngine::Vector3 point, ModdingAPI::Exposed::UnityEngine::Vector3 outPos, float distance) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538DF0))(this, point, outPos, distance);
  }
  ModdingAPI::Exposed::UnityEngine::Vector3 ClosestPointOnBounds(ModdingAPI::Exposed::UnityEngine::Vector3 position) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538E70))(this, position);
  }
  ModdingAPI::Exposed::UnityEngine::RaycastHit SweepTest(ModdingAPI::Exposed::UnityEngine::Vector3 direction, float maxDistance, int32_t queryTriggerInteraction, bool hasHit) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::RaycastHit(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, float, int32_t, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1538FC0))(this, direction, maxDistance, queryTriggerInteraction, hasHit);
  }
  bool SweepTest(ModdingAPI::Exposed::UnityEngine::Vector3 direction, ModdingAPI::Exposed::UnityEngine::RaycastHit hitInfo, float maxDistance, int32_t queryTriggerInteraction) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::RaycastHit, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15390B0))(this, direction, hitInfo, maxDistance, queryTriggerInteraction);
  }
  bool SweepTest(ModdingAPI::Exposed::UnityEngine::Vector3 direction, ModdingAPI::Exposed::UnityEngine::RaycastHit hitInfo, float maxDistance) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::RaycastHit, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539290))(this, direction, hitInfo, maxDistance);
  }
  bool SweepTest(ModdingAPI::Exposed::UnityEngine::Vector3 direction, ModdingAPI::Exposed::UnityEngine::RaycastHit hitInfo) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::RaycastHit)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15392C0))(this, direction, hitInfo);
  }
  ModdingAPI::Exposed::UnityEngine::RaycastHit_array* Internal_SweepTestAll(ModdingAPI::Exposed::UnityEngine::Vector3 direction, float maxDistance, int32_t queryTriggerInteraction) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::RaycastHit_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539300))(this, direction, maxDistance, queryTriggerInteraction);
  }
  ModdingAPI::Exposed::UnityEngine::RaycastHit_array* SweepTestAll(ModdingAPI::Exposed::UnityEngine::Vector3 direction, float maxDistance, int32_t queryTriggerInteraction) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::RaycastHit_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539380))(this, direction, maxDistance, queryTriggerInteraction);
  }
  ModdingAPI::Exposed::UnityEngine::RaycastHit_array* SweepTestAll(ModdingAPI::Exposed::UnityEngine::Vector3 direction, float maxDistance) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::RaycastHit_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539500))(this, direction, maxDistance);
  }
  ModdingAPI::Exposed::UnityEngine::RaycastHit_array* SweepTestAll(ModdingAPI::Exposed::UnityEngine::Vector3 direction) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::RaycastHit_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539530))(this, direction);
  }
  void get_velocity_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539570))(this, ret);
  }
  void set_velocity_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15395D0))(this, value);
  }
  void get_angularVelocity_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539630))(this, ret);
  }
  void set_angularVelocity_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539690))(this, value);
  }
  void get_centerOfMass_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15396F0))(this, ret);
  }
  void set_centerOfMass_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539750))(this, value);
  }
  void get_worldCenterOfMass_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15397B0))(this, ret);
  }
  void get_inertiaTensorRotation_Injected(ModdingAPI::Exposed::UnityEngine::Quaternion ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Quaternion)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539810))(this, ret);
  }
  void set_inertiaTensorRotation_Injected(ModdingAPI::Exposed::UnityEngine::Quaternion value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Quaternion)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539870))(this, value);
  }
  void get_inertiaTensor_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15398D0))(this, ret);
  }
  void set_inertiaTensor_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539930))(this, value);
  }
  void get_position_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539990))(this, ret);
  }
  void set_position_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x15399F0))(this, value);
  }
  void get_rotation_Injected(ModdingAPI::Exposed::UnityEngine::Quaternion ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Quaternion)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539A50))(this, ret);
  }
  void set_rotation_Injected(ModdingAPI::Exposed::UnityEngine::Quaternion value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Quaternion)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539AB0))(this, value);
  }
  void MovePosition_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 position) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539B10))(this, position);
  }
  void MoveRotation_Injected(ModdingAPI::Exposed::UnityEngine::Quaternion rot) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Quaternion)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539B70))(this, rot);
  }
  void GetRelativePointVelocity_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 relativePoint, ModdingAPI::Exposed::UnityEngine::Vector3 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539BD0))(this, relativePoint, ret);
  }
  void GetPointVelocity_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 worldPoint, ModdingAPI::Exposed::UnityEngine::Vector3 ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539C40))(this, worldPoint, ret);
  }
  void AddForce_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 force, int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539CB0))(this, force, mode);
  }
  void AddRelativeForce_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 force, int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539D20))(this, force, mode);
  }
  void AddTorque_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 torque, int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539D90))(this, torque, mode);
  }
  void AddRelativeTorque_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 torque, int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539E00))(this, torque, mode);
  }
  void AddForceAtPosition_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 force, ModdingAPI::Exposed::UnityEngine::Vector3 position, int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539E70))(this, force, position, mode);
  }
  void AddExplosionForce_Injected(float explosionForce, ModdingAPI::Exposed::UnityEngine::Vector3 explosionPosition, float explosionRadius, float upwardsModifier, int32_t mode) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, float, ModdingAPI::Exposed::UnityEngine::Vector3, float, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539EF0))(this, explosionForce, explosionPosition, explosionRadius, upwardsModifier, mode);
  }
  void Internal_ClosestPointOnBounds_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 point, ModdingAPI::Exposed::UnityEngine::Vector3 outPos, float distance) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, ModdingAPI::Exposed::UnityEngine::Vector3, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1539F80))(this, point, outPos, distance);
  }
  void SweepTest_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 direction, float maxDistance, int32_t queryTriggerInteraction, bool hasHit, ModdingAPI::Exposed::UnityEngine::RaycastHit ret) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, float, int32_t, bool, ModdingAPI::Exposed::UnityEngine::RaycastHit)>(Helpers::Memory::GetInstance().MakeAbsolute(0x153A000))(this, direction, maxDistance, queryTriggerInteraction, hasHit, ret);
  }
  ModdingAPI::Exposed::UnityEngine::RaycastHit_array* Internal_SweepTestAll_Injected(ModdingAPI::Exposed::UnityEngine::Vector3 direction, float maxDistance, int32_t queryTriggerInteraction) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::RaycastHit_array*(__fastcall*)(ModdingAPI::Exposed::UnityEngine::Rigidbody*, ModdingAPI::Exposed::UnityEngine::Vector3, float, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x153A090))(this, direction, maxDistance, queryTriggerInteraction);
  }
};
}