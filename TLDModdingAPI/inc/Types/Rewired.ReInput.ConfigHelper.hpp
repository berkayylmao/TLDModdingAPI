// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::Rewired::ReInput {
struct __ConfigHelper_Il2CppStaticFields {
  ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper* ZPSxeiFHMaLmCvPePgbLgrzWLIr;
};

struct __ConfigHelper_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __ConfigHelper_Il2CppClass {
  Il2CppClass_1 _1;
  __ConfigHelper_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __ConfigHelper_Il2CppVtbl vtbl;
};

class ConfigHelper {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C92F38;
  static inline    __ConfigHelper_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __ConfigHelper_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__ConfigHelper_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __ConfigHelper_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x2FEC40))(this);
  }
  bool get_useXInput() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x629090))(this);
  }
  void set_useXInput(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x629330))(this, value);
  }
  int32_t get_updateLoop() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x629870))(this);
  }
  void set_updateLoop(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x629960))(this, value);
  }
  int32_t get_windowsStandalonePrimaryInputSource() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x629BC0))(this);
  }
  void set_windowsStandalonePrimaryInputSource(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x629CB0))(this, value);
  }
  int32_t get_osxStandalonePrimaryInputSource() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x629FD0))(this);
  }
  void set_osxStandalonePrimaryInputSource(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62A0C0))(this, value);
  }
  int32_t get_linuxStandalonePrimaryInputSource() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62A350))(this);
  }
  void set_linuxStandalonePrimaryInputSource(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62A440))(this, value);
  }
  int32_t get_windowsUWPPrimaryInputSource() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62A660))(this);
  }
  void set_windowsUWPPrimaryInputSource(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62A750))(this, value);
  }
  bool get_windowsUWPSupportHIDDevices() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62A9E0))(this);
  }
  void set_windowsUWPSupportHIDDevices(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62AB70))(this, value);
  }
  int32_t get_xboxOnePrimaryInputSource() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62ADE0))(this);
  }
  void set_xboxOnePrimaryInputSource(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62AED0))(this, value);
  }
  int32_t get_ps4PrimaryInputSource() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62B120))(this);
  }
  void set_ps4PrimaryInputSource(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62B210))(this, value);
  }
  int32_t get_webGLPrimaryInputSource() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62B490))(this);
  }
  void set_webGLPrimaryInputSource(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62B580))(this, value);
  }
  bool get_alwaysUseUnityInput() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62B800))(this);
  }
  void set_alwaysUseUnityInput(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62B8F0))(this, value);
  }
  bool get_disableNativeInput() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62B800))(this);
  }
  void set_disableNativeInput(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62BB40))(this, value);
  }
  bool get_nativeMouseSupport() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62BB50))(this);
  }
  void set_nativeMouseSupport(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62BC40))(this, value);
  }
  bool get_nativeKeyboardSupport() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62BEE0))(this);
  }
  void set_nativeKeyboardSupport(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62BFD0))(this, value);
  }
  bool get_enhancedDeviceSupport() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62C1C0))(this);
  }
  void set_enhancedDeviceSupport(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62C390))(this, value);
  }
  int32_t get_joystickRefreshRate() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62C650))(this);
  }
  void set_joystickRefreshRate(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62C740))(this, value);
  }
  bool get_ignoreInputWhenAppNotInFocus() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62C8B0))(this);
  }
  void set_ignoreInputWhenAppNotInFocus(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62C9B0))(this, value);
  }
  bool get_android_supportUnknownGamepads() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62CB40))(this);
  }
  void set_android_supportUnknownGamepads(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62CC30))(this, value);
  }
  int32_t get_defaultJoystickAxis2DDeadZoneType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62CE50))(this);
  }
  void set_defaultJoystickAxis2DDeadZoneType(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62CF40))(this, value);
  }
  int32_t get_defaultJoystickAxis2DSensitivityType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62D0D0))(this);
  }
  void set_defaultJoystickAxis2DSensitivityType(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62D1C0))(this, value);
  }
  int32_t get_defaultAxisSensitivityType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62D330))(this);
  }
  void set_defaultAxisSensitivityType(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62D420))(this, value);
  }
  bool get_force4WayHats() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62D560))(this);
  }
  void set_force4WayHats(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62D650))(this, value);
  }
  bool get_activateActionButtonsOnNegativeValue() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62D790))(this);
  }
  void set_activateActionButtonsOnNegativeValue(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62D880))(this, value);
  }
  int32_t get_throttleCalibrationMode() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62D9D0))(this);
  }
  void set_throttleCalibrationMode(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62DAC0))(this, value);
  }
  bool get_deferControllerConnectedEventsOnStart() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62DCA0))(this);
  }
  void set_deferControllerConnectedEventsOnStart(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62DD90))(this, value);
  }
  bool get_autoAssignJoysticks() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62DF10))(this);
  }
  void set_autoAssignJoysticks(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62E000))(this, value);
  }
  int32_t get_maxJoysticksPerPlayer() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62E140))(this);
  }
  void set_maxJoysticksPerPlayer(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62E230))(this, value);
  }
  bool get_distributeJoysticksEvenly() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62E3E0))(this);
  }
  void set_distributeJoysticksEvenly(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62E4D0))(this, value);
  }
  bool get_assignJoysticksToPlayingPlayersOnly() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62E610))(this);
  }
  void set_assignJoysticksToPlayingPlayersOnly(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62E700))(this, value);
  }
  bool get_reassignJoystickToPreviousOwnerOnReconnect() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62E880))(this);
  }
  void set_reassignJoystickToPreviousOwnerOnReconnect(bool value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62E970))(this, value);
  }
  int32_t get_logLevel() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62EAF0))(this);
  }
  void set_logLevel(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x62EBE0))(this, value);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*> ZPSxeiFHMaLmCvPePgbLgrzWLIr = __CppStaticProperty<ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*>(
   []() { return &GetStaticClassInstance()->pStaticFields->ZPSxeiFHMaLmCvPePgbLgrzWLIr; }
  );

  // Static methods:
  static inline ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper* get_Instance() {
    return reinterpret_cast<ModdingAPI::Exposed::Rewired::ReInput::ConfigHelper*(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x628F30))();
  }
};
}