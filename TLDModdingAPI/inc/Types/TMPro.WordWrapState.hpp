// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.TMPro.TMP_LineInfo.hpp"
#include "ModdingAPI.Exposed.UnityEngine.Color32.hpp"
#include "ModdingAPI.Exposed.TMPro.TMP_FontStyleStack.hpp"
#include "ModdingAPI.Exposed.TMPro.TMP_RichTextTagStack_T_.hpp"
#include "ModdingAPI.Exposed.TMPro.Extents.hpp"

namespace ModdingAPI::Exposed::TMPro {
struct __WordWrapState_Il2CppObject {
  int32_t previous_WordBreak;
  int32_t total_CharacterCount;
  int32_t visible_CharacterCount;
  int32_t visible_SpriteCount;
  int32_t visible_LinkCount;
  int32_t firstCharacterIndex;
  int32_t firstVisibleCharacterIndex;
  int32_t lastCharacterIndex;
  int32_t lastVisibleCharIndex;
  int32_t lineNumber;
  float maxCapHeight;
  float maxAscender;
  float maxDescender;
  float maxLineAscender;
  float maxLineDescender;
  float previousLineAscender;
  float xAdvance;
  float preferredWidth;
  float preferredHeight;
  float previousLineScale;
  int32_t wordCount;
  int32_t fontStyle;
  float fontScale;
  float fontScaleMultiplier;
  float currentFontSize;
  float baselineOffset;
  float lineOffset;
  ModdingAPI::Exposed::TMPro::TMP_TextInfo* textInfo;
  ModdingAPI::Exposed::TMPro::TMP_LineInfo lineInfo;
  ModdingAPI::Exposed::UnityEngine::Color32 vertexColor;
  ModdingAPI::Exposed::UnityEngine::Color32 underlineColor;
  ModdingAPI::Exposed::UnityEngine::Color32 strikethroughColor;
  ModdingAPI::Exposed::UnityEngine::Color32 highlightColor;
  ModdingAPI::Exposed::TMPro::TMP_FontStyleStack basicStyleStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ colorStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ underlineColorStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ strikethroughColorStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ highlightColorStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ colorGradientStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ sizeStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ indentStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ fontWeightStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ styleStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ baselineStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ actionStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ materialReferenceStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ lineJustificationStack;
  int32_t spriteAnimationID;
  ModdingAPI::Exposed::TMPro::TMP_FontAsset* currentFontAsset;
  ModdingAPI::Exposed::TMPro::TMP_SpriteAsset* currentSpriteAsset;
  ModdingAPI::Exposed::UnityEngine::Material* currentMaterial;
  int32_t currentMaterialIndex;
  ModdingAPI::Exposed::TMPro::Extents meshExtents;
  bool tagNoParsing;
  bool isNonBreakingSpace;
};
struct __WordWrapState_Il2CppStaticFields {
};

struct __WordWrapState_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __WordWrapState_Il2CppClass {
  Il2CppClass_1 _1;
  __WordWrapState_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __WordWrapState_Il2CppVtbl vtbl;
};

class WordWrapState {
public:
  // Member fields:
  int32_t previous_WordBreak;
  int32_t total_CharacterCount;
  int32_t visible_CharacterCount;
  int32_t visible_SpriteCount;
  int32_t visible_LinkCount;
  int32_t firstCharacterIndex;
  int32_t firstVisibleCharacterIndex;
  int32_t lastCharacterIndex;
  int32_t lastVisibleCharIndex;
  int32_t lineNumber;
  float maxCapHeight;
  float maxAscender;
  float maxDescender;
  float maxLineAscender;
  float maxLineDescender;
  float previousLineAscender;
  float xAdvance;
  float preferredWidth;
  float preferredHeight;
  float previousLineScale;
  int32_t wordCount;
  int32_t fontStyle;
  float fontScale;
  float fontScaleMultiplier;
  float currentFontSize;
  float baselineOffset;
  float lineOffset;
  ModdingAPI::Exposed::TMPro::TMP_TextInfo* textInfo;
  ModdingAPI::Exposed::TMPro::TMP_LineInfo lineInfo;
  ModdingAPI::Exposed::UnityEngine::Color32 vertexColor;
  ModdingAPI::Exposed::UnityEngine::Color32 underlineColor;
  ModdingAPI::Exposed::UnityEngine::Color32 strikethroughColor;
  ModdingAPI::Exposed::UnityEngine::Color32 highlightColor;
  ModdingAPI::Exposed::TMPro::TMP_FontStyleStack basicStyleStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ colorStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ underlineColorStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ strikethroughColorStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ highlightColorStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ colorGradientStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ sizeStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ indentStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ fontWeightStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ styleStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ baselineStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ actionStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ materialReferenceStack;
  ModdingAPI::Exposed::TMPro::TMP_RichTextTagStack_T_ lineJustificationStack;
  int32_t spriteAnimationID;
  ModdingAPI::Exposed::TMPro::TMP_FontAsset* currentFontAsset;
  ModdingAPI::Exposed::TMPro::TMP_SpriteAsset* currentSpriteAsset;
  ModdingAPI::Exposed::UnityEngine::Material* currentMaterial;
  int32_t currentMaterialIndex;
  ModdingAPI::Exposed::TMPro::Extents meshExtents;
  bool tagNoParsing;
  bool isNonBreakingSpace;

};
}