// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"
#include "ModdingAPI.Exposed.System.Xml.XmlCharType.hpp"
#include "ModdingAPI::Exposed::System::Decimal.hpp"
#include "ModdingAPI::Exposed::System::TimeSpan.hpp"
#include "ModdingAPI::Exposed::System::DateTime.hpp"
#include "ModdingAPI::Exposed::System::DateTimeOffset.hpp"
#include "ModdingAPI::Exposed::System::Guid.hpp"
#include "ModdingAPI.Exposed.System.Decimal.hpp"
#include "ModdingAPI.Exposed.System.Guid.hpp"
#include "ModdingAPI.Exposed.System.DateTime.hpp"


namespace ModdingAPI::Exposed::System::Xml {
struct __XmlConvert_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Xml::XmlCharType xmlCharType;
  ModdingAPI::Exposed::System::Char_array* crt;
  int32_t c_EncodedCharLength;
  ModdingAPI::Exposed::System::Text::RegularExpressions::Regex* c_EncodeCharPattern;
  ModdingAPI::Exposed::System::Text::RegularExpressions::Regex* c_DecodeCharPattern;
  ModdingAPI::Exposed::System::Char_array* WhitespaceChars;
};

struct __XmlConvert_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __XmlConvert_Il2CppClass {
  Il2CppClass_1 _1;
  __XmlConvert_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __XmlConvert_Il2CppVtbl vtbl;
};

class XmlConvert {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C3F788;
  static inline    __XmlConvert_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __XmlConvert_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__XmlConvert_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __XmlConvert_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::XmlCharType> xmlCharType = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::XmlCharType>(
   []() { return &GetStaticClassInstance()->pStaticFields->xmlCharType; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Char_array*> crt = __CppStaticProperty<ModdingAPI::Exposed::System::Char_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->crt; }
  );
  static inline __CppStaticProperty<int32_t> c_EncodedCharLength = __CppStaticProperty<int32_t>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_EncodedCharLength; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*> c_EncodeCharPattern = __CppStaticProperty<ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_EncodeCharPattern; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*> c_DecodeCharPattern = __CppStaticProperty<ModdingAPI::Exposed::System::Text::RegularExpressions::Regex*>(
   []() { return &GetStaticClassInstance()->pStaticFields->c_DecodeCharPattern; }
  );
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Char_array*> WhitespaceChars = __CppStaticProperty<ModdingAPI::Exposed::System::Char_array*>(
   []() { return &GetStaticClassInstance()->pStaticFields->WhitespaceChars; }
  );

  // Static methods:
  static inline System_String* EncodeName(System_String* name) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C3540))(name);
  }
  static inline System_String* EncodeLocalName(System_String* name) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C35E0))(name);
  }
  static inline System_String* DecodeName(System_String* name) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C3680))(name);
  }
  static inline System_String* EncodeName(System_String* name, bool first, bool local) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*, bool, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C4040))(name, first, local);
  }
  static inline int32_t FromHex(wchar_t digit) {
    return reinterpret_cast<int32_t(__fastcall*)(wchar_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C4B00))(digit);
  }
  static inline ModdingAPI::Exposed::System::Byte_array* FromBinHexString(System_String* s, bool allowOddCount) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Byte_array*(__fastcall*)(System_String*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C4B30))(s, allowOddCount);
  }
  static inline System_String* ToBinHexString(ModdingAPI::Exposed::System::Byte_array* inArray) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Byte_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C4C00))(inArray);
  }
  static inline System_String* VerifyName(System_String* name) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C4CC0))(name);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryVerifyName(System_String* name) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C4E40))(name);
  }
  static inline System_String* VerifyQName(System_String* name, int32_t exceptionType) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C5120))(name, exceptionType);
  }
  static inline System_String* VerifyNCName(System_String* name) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C52D0))(name);
  }
  static inline System_String* VerifyNCName(System_String* name, int32_t exceptionType) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C54C0))(name, exceptionType);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryVerifyNCName(System_String* name) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C5640))(name);
  }
  static inline System_String* VerifyTOKEN(System_String* token) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C5740))(token);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryVerifyTOKEN(System_String* token) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C58B0))(token);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryVerifyNMTOKEN(System_String* name) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C5AD0))(name);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryVerifyNormalizedString(System_String* str) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C5E90))(str);
  }
  static inline System_String* ToString(bool value) {
    return reinterpret_cast<System_String*(__fastcall*)(bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C6050))(value);
  }
  static inline System_String* ToString(ModdingAPI::Exposed::System::Decimal value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Decimal)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C60E0))(value);
  }
  static inline System_String* ToString(char value) {
    return reinterpret_cast<System_String*(__fastcall*)(char)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C6120))(value);
  }
  static inline System_String* ToString(int16_t value) {
    return reinterpret_cast<System_String*(__fastcall*)(int16_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C6150))(value);
  }
  static inline System_String* ToString(int32_t value) {
    return reinterpret_cast<System_String*(__fastcall*)(int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C6180))(value);
  }
  static inline System_String* ToString(int64_t value) {
    return reinterpret_cast<System_String*(__fastcall*)(int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C61B0))(value);
  }
  static inline System_String* ToString(uint8_t value) {
    return reinterpret_cast<System_String*(__fastcall*)(uint8_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C61E0))(value);
  }
  static inline System_String* ToString(uint16_t value) {
    return reinterpret_cast<System_String*(__fastcall*)(uint16_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C6210))(value);
  }
  static inline System_String* ToString(uint32_t value) {
    return reinterpret_cast<System_String*(__fastcall*)(uint32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C6240))(value);
  }
  static inline System_String* ToString(uint64_t value) {
    return reinterpret_cast<System_String*(__fastcall*)(uint64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C6270))(value);
  }
  static inline System_String* ToString(float value) {
    return reinterpret_cast<System_String*(__fastcall*)(float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C62A0))(value);
  }
  static inline System_String* ToString(double value) {
    return reinterpret_cast<System_String*(__fastcall*)(double)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C63D0))(value);
  }
  static inline System_String* ToString(ModdingAPI::Exposed::System::TimeSpan value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::TimeSpan)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C6530))(value);
  }
  static inline System_String* ToString(ModdingAPI::Exposed::System::DateTime value, int32_t dateTimeOption) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::DateTime, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C6590))(value, dateTimeOption);
  }
  static inline System_String* ToString(ModdingAPI::Exposed::System::DateTimeOffset value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::DateTimeOffset)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C6840))(value);
  }
  static inline System_String* ToString(ModdingAPI::Exposed::System::Guid value) {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Guid)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C6880))(value);
  }
  static inline bool ToBoolean(System_String* s) {
    return reinterpret_cast<bool(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C6890))(s);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryToBoolean(System_String* s, bool result) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*, bool)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C6AB0))(s, result);
  }
  static inline wchar_t ToChar(System_String* s) {
    return reinterpret_cast<wchar_t(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C6DD0))(s);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryToChar(System_String* s, wchar_t result) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*, wchar_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C6EE0))(s, result);
  }
  static inline ModdingAPI::Exposed::System::Decimal ToDecimal(System_String* s) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Decimal(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C7170))(s);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryToDecimal(System_String* s, ModdingAPI::Exposed::System::Decimal result) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*, ModdingAPI::Exposed::System::Decimal)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C7260))(s, result);
  }
  static inline ModdingAPI::Exposed::System::Decimal ToInteger(System_String* s) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Decimal(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C7500))(s);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryToInteger(System_String* s, ModdingAPI::Exposed::System::Decimal result) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*, ModdingAPI::Exposed::System::Decimal)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C75F0))(s, result);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryToSByte(System_String* s, char result) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*, char)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C7890))(s, result);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryToInt16(System_String* s, int16_t result) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*, int16_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C7B10))(s, result);
  }
  static inline int32_t ToInt32(System_String* s) {
    return reinterpret_cast<int32_t(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C7D90))(s);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryToInt32(System_String* s, int32_t result) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C7DE0))(s, result);
  }
  static inline int64_t ToInt64(System_String* s) {
    return reinterpret_cast<int64_t(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C8060))(s);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryToInt64(System_String* s, int64_t result) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*, int64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C80B0))(s, result);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryToByte(System_String* s, uint8_t result) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*, uint8_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C8330))(s, result);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryToUInt16(System_String* s, uint16_t result) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*, uint16_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C85A0))(s, result);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryToUInt32(System_String* s, uint32_t result) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*, uint32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C8810))(s, result);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryToUInt64(System_String* s, uint64_t result) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*, uint64_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C8A90))(s, result);
  }
  static inline float ToSingle(System_String* s) {
    return reinterpret_cast<float(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C8D10))(s);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryToSingle(System_String* s, float result) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C8EB0))(s, result);
  }
  static inline double ToDouble(System_String* s) {
    return reinterpret_cast<double(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C9230))(s);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryToDouble(System_String* s, double result) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*, double)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C93E0))(s, result);
  }
  static inline double ToXPathDouble(Il2CppObject* o) {
    return reinterpret_cast<double(__fastcall*)(Il2CppObject*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C9770))(o);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryToTimeSpan(System_String* s, ModdingAPI::Exposed::System::TimeSpan result) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*, ModdingAPI::Exposed::System::TimeSpan)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C99D0))(s, result);
  }
  static inline ModdingAPI::Exposed::System::Guid ToGuid(System_String* s) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Guid(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C9AE0))(s);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryToGuid(System_String* s, ModdingAPI::Exposed::System::Guid result) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*, ModdingAPI::Exposed::System::Guid)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C9B00))(s, result);
  }
  static inline ModdingAPI::Exposed::System::DateTime SwitchToLocalTime(ModdingAPI::Exposed::System::DateTime value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(ModdingAPI::Exposed::System::DateTime)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C9E50))(value);
  }
  static inline ModdingAPI::Exposed::System::DateTime SwitchToUtcTime(ModdingAPI::Exposed::System::DateTime value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::DateTime(__fastcall*)(ModdingAPI::Exposed::System::DateTime)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C9EE0))(value);
  }
  static inline ModdingAPI::Exposed::System::Uri* ToUri(System_String* s) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Uri*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9C9F80))(s);
  }
  static inline ModdingAPI::Exposed::System::Exception* TryToUri(System_String* s, ModdingAPI::Exposed::System::Uri* result) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*, ModdingAPI::Exposed::System::Uri*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CA1F0))(s, result);
  }
  static inline bool StrEqual(ModdingAPI::Exposed::System::Char_array* chars, int32_t strPos1, int32_t strLen1, System_String* str2) {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Char_array*, int32_t, int32_t, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CA620))(chars, strPos1, strLen1, str2);
  }
  static inline System_String* TrimString(System_String* value) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CA6D0))(value);
  }
  static inline System_String* TrimStringStart(System_String* value) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CA7B0))(value);
  }
  static inline System_String* TrimStringEnd(System_String* value) {
    return reinterpret_cast<System_String*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CA870))(value);
  }
  static inline ModdingAPI::Exposed::System::String_array* SplitString(System_String* value) {
    return reinterpret_cast<ModdingAPI::Exposed::System::String_array*(__fastcall*)(System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CA930))(value);
  }
  static inline bool IsNegativeZero(double value) {
    return reinterpret_cast<bool(__fastcall*)(double)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CAA10))(value);
  }
  static inline int64_t DoubleToInt64Bits(double value) {
    return reinterpret_cast<int64_t(__fastcall*)(double)>(Helpers::Memory::GetInstance().MakeAbsolute(0x7F8460))(value);
  }
  static inline ModdingAPI::Exposed::System::Exception* CreateException(System_String* res, System_String* arg, int32_t exceptionType, int32_t lineNo, int32_t linePos) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*, System_String*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CAAD0))(res, arg, exceptionType, lineNo, linePos);
  }
  static inline ModdingAPI::Exposed::System::Exception* CreateException(System_String* res, ModdingAPI::Exposed::System::String_array* args, int32_t exceptionType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*, ModdingAPI::Exposed::System::String_array*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CADB0))(res, args, exceptionType);
  }
  static inline ModdingAPI::Exposed::System::Exception* CreateException(System_String* res, ModdingAPI::Exposed::System::String_array* args, int32_t exceptionType, int32_t lineNo, int32_t linePos) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*, ModdingAPI::Exposed::System::String_array*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CAE80))(res, args, exceptionType, lineNo, linePos);
  }
  static inline ModdingAPI::Exposed::System::Exception* CreateInvalidSurrogatePairException(wchar_t low, wchar_t hi) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(wchar_t, wchar_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CB0F0))(low, hi);
  }
  static inline ModdingAPI::Exposed::System::Exception* CreateInvalidSurrogatePairException(wchar_t low, wchar_t hi, int32_t exceptionType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(wchar_t, wchar_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CB230))(low, hi, exceptionType);
  }
  static inline ModdingAPI::Exposed::System::Exception* CreateInvalidSurrogatePairException(wchar_t low, wchar_t hi, int32_t exceptionType, int32_t lineNo, int32_t linePos) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(wchar_t, wchar_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CB300))(low, hi, exceptionType, lineNo, linePos);
  }
  static inline ModdingAPI::Exposed::System::Exception* CreateInvalidHighSurrogateCharException(wchar_t hi) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(wchar_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CB520))(hi);
  }
  static inline ModdingAPI::Exposed::System::Exception* CreateInvalidHighSurrogateCharException(wchar_t hi, int32_t exceptionType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(wchar_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CB720))(hi, exceptionType);
  }
  static inline ModdingAPI::Exposed::System::Exception* CreateInvalidHighSurrogateCharException(wchar_t hi, int32_t exceptionType, int32_t lineNo, int32_t linePos) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(wchar_t, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CB8B0))(hi, exceptionType, lineNo, linePos);
  }
  static inline ModdingAPI::Exposed::System::Exception* CreateInvalidCharException(wchar_t invChar, wchar_t nextChar) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(wchar_t, wchar_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CB9E0))(invChar, nextChar);
  }
  static inline ModdingAPI::Exposed::System::Exception* CreateInvalidCharException(wchar_t invChar, wchar_t nextChar, int32_t exceptionType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(wchar_t, wchar_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CBBB0))(invChar, nextChar, exceptionType);
  }
  static inline ModdingAPI::Exposed::System::Exception* CreateInvalidNameCharException(System_String* name, int32_t index, int32_t exceptionType) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Exception*(__fastcall*)(System_String*, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CBD10))(name, index, exceptionType);
  }
  static inline ModdingAPI::Exposed::System::ArgumentException* CreateInvalidNameArgumentException(System_String* name, System_String* argumentName) {
    return reinterpret_cast<ModdingAPI::Exposed::System::ArgumentException*(__fastcall*)(System_String*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CBE40))(name, argumentName);
  }
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x9CC090))();
  }
};
}