// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::System::Xml::Schema {
struct __SchemaAttDef_Il2CppStaticFields {
  ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef* Empty;
};

struct __SchemaAttDef_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
  VirtualInvokeData _4_System_Xml_IDtdDefaultAttributeInfo_get_DefaultValueExpanded;
  VirtualInvokeData _5_System_Xml_IDtdDefaultAttributeInfo_get_DefaultValueTyped;
  VirtualInvokeData _6_System_Xml_IDtdDefaultAttributeInfo_get_ValueLineNumber;
  VirtualInvokeData _7_System_Xml_IDtdDefaultAttributeInfo_get_ValueLinePosition;
  VirtualInvokeData _8_System_Xml_IDtdAttributeInfo_get_Prefix;
  VirtualInvokeData _9_System_Xml_IDtdAttributeInfo_get_LocalName;
  VirtualInvokeData _10_System_Xml_IDtdAttributeInfo_get_LineNumber;
  VirtualInvokeData _11_System_Xml_IDtdAttributeInfo_get_LinePosition;
  VirtualInvokeData _12_System_Xml_IDtdAttributeInfo_get_IsNonCDataType;
  VirtualInvokeData _13_System_Xml_IDtdAttributeInfo_get_IsDeclaredInExternal;
  VirtualInvokeData _14_System_Xml_IDtdAttributeInfo_get_IsXmlAttribute;
};

struct __SchemaAttDef_Il2CppClass {
  Il2CppClass_1 _1;
  __SchemaAttDef_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __SchemaAttDef_Il2CppVtbl vtbl;
};

class SchemaAttDef {
  static constexpr uint64_t                     _rvaClassInstance     = 0x3C3DEA0;
  static inline    __SchemaAttDef_Il2CppClass* _pStaticClassInstance = nullptr;

public:
// Static class getter:
  static inline __SchemaAttDef_Il2CppClass* GetStaticClassInstance() {
    while (!_pStaticClassInstance) {
      Sleep(100);
      auto* ppClassInstance = (__SchemaAttDef_Il2CppClass**)Helpers::Memory::GetInstance().MakeAbsolute(_rvaClassInstance);
      if (ppClassInstance)
        _pStaticClassInstance = *ppClassInstance;
    }
    return _pStaticClassInstance;
  }

  // Il2Cpp fields:
  __SchemaAttDef_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  ModdingAPI::Exposed::System::Xml::XmlQualifiedName* name;
  System_String* prefix;
  bool isDeclaredInExternal;
  int32_t presence;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaType* schemaType;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaDatatype* datatype;
  System_String* defaultValueRaw;
  Il2CppObject* defaultValueTyped;
  int64_t maxLength;
  int64_t minLength;
  ModdingAPI::Exposed::System::Collections::Generic::List_T_* values;
  System_String* defExpanded;
  int32_t lineNum;
  int32_t linePos;
  int32_t valueLineNum;
  int32_t valueLinePos;
  int32_t reserved;
  bool defaultValueChecked;
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaAttribute* schemaAttribute;

  // Member methods:
  void ::ctor(ModdingAPI::Exposed::System::Xml::XmlQualifiedName* name, System_String* prefix) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*, ModdingAPI::Exposed::System::Xml::XmlQualifiedName*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x48B2B0))(this, name, prefix);
  }
  void ::ctor(ModdingAPI::Exposed::System::Xml::XmlQualifiedName* name) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*, ModdingAPI::Exposed::System::Xml::XmlQualifiedName*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x48B2C0))(this, name);
  }
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x48B2D0))(this);
  }
  System_String* System::Xml::IDtdAttributeInfo::get_Prefix() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x48B2E0))(this);
  }
  System_String* System::Xml::IDtdAttributeInfo::get_LocalName() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x48B2F0))(this);
  }
  int32_t System::Xml::IDtdAttributeInfo::get_LineNumber() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3839C0))(this);
  }
  int32_t System::Xml::IDtdAttributeInfo::get_LinePosition() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3839E0))(this);
  }
  bool System::Xml::IDtdAttributeInfo::get_IsNonCDataType() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x48B310))(this);
  }
  bool System::Xml::IDtdAttributeInfo::get_IsDeclaredInExternal() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x46FCC0))(this);
  }
  bool System::Xml::IDtdAttributeInfo::get_IsXmlAttribute() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x48B340))(this);
  }
  System_String* System::Xml::IDtdDefaultAttributeInfo::get_DefaultValueExpanded() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x48B350))(this);
  }
  Il2CppObject* System::Xml::IDtdDefaultAttributeInfo::get_DefaultValueTyped() {
    return reinterpret_cast<Il2CppObject*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x319960))(this);
  }
  int32_t System::Xml::IDtdDefaultAttributeInfo::get_ValueLineNumber() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383A00))(this);
  }
  int32_t System::Xml::IDtdDefaultAttributeInfo::get_ValueLinePosition() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383A20))(this);
  }
  int32_t get_LinePosition() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3839E0))(this);
  }
  void set_LinePosition(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3839F0))(this, value);
  }
  int32_t get_LineNumber() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3839C0))(this);
  }
  void set_LineNumber(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x3839D0))(this, value);
  }
  int32_t get_ValueLinePosition() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383A20))(this);
  }
  void set_ValueLinePosition(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383A30))(this, value);
  }
  int32_t get_ValueLineNumber() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383A00))(this);
  }
  void set_ValueLineNumber(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x383A10))(this, value);
  }
  System_String* get_DefaultValueExpanded() {
    return reinterpret_cast<System_String*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x48B360))(this);
  }
  void set_DefaultValueExpanded(System_String* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*, System_String*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x33A4B0))(this, value);
  }
  int32_t get_TokenizedType() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x48B3F0))(this);
  }
  void set_TokenizedType(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x48B420))(this, value);
  }
  int32_t get_Reserved() {
    return reinterpret_cast<int32_t(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x48B440))(this);
  }
  void set_Reserved(int32_t value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x48B450))(this, value);
  }
  bool get_DefaultValueChecked() {
    return reinterpret_cast<bool(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x48B460))(this);
  }
  ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaAttribute* get_SchemaAttribute() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaAttribute*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x321390))(this);
  }
  void set_SchemaAttribute(ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaAttribute* value) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*, ModdingAPI::Exposed::System::Xml::Schema::XmlSchemaAttribute*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x47E020))(this, value);
  }
  void CheckXmlSpace(ModdingAPI::Exposed::System::Xml::IValidationEventHandling* validationEventHandling) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*, ModdingAPI::Exposed::System::Xml::IValidationEventHandling*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x48B470))(this, validationEventHandling);
  }
  ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef* Clone() {
    return reinterpret_cast<ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*(__fastcall*)(ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x48B810))(this);
  }

  // Static fields:
  static inline __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*> Empty = __CppStaticProperty<ModdingAPI::Exposed::System::Xml::Schema::SchemaAttDef*>(
   []() { return &GetStaticClassInstance()->pStaticFields->Empty; }
  );

  // Static methods:
  static inline void ::cctor() {
    reinterpret_cast<void(__fastcall*)()>(Helpers::Memory::GetInstance().MakeAbsolute(0x48B940))();
  }
};
}