// clang-format off
//
//   BSD 4-Clause License
//
//   Copyright (c) 2020 Berkay Yigit <berkaytgy@gmail.com>
//   All rights reserved.
//
//   Redistribution and use in source and binary forms, with or without
//   modification, are permitted provided that the following conditions are met:
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
//   3. All advertising materials mentioning features or use of this software
//      must display the following acknowledgement:
//      This product includes software developed by Berkay Yigit.
//      To support the developer, please donate to:
//      "https://www.paypal.me/berkayylmao".
//   4. Neither the name of "berkayylmao's The Long Dark Mods" nor the
//      names of its contributors may be used to endorse or promote products
//      derived from this software without specific prior written permission.
//
//   THIS SOFTWARE IS PROVIDED BY Berkay Yigit ''AS IS'' AND  ANY EXPRESS OR
//   IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
//   OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
//   IN NO EVENT SHALL Berkay Yigit BE LIABLE FOR ANY DIRECT, INDIRECT,
//   INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
//   BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
// clang-format on

/*
 * Generated by Il2CppTypeDumper (by berkayylmao) on 10:43 02/05/2020 UTC.
 * MIT License
 * Copyright(c) 2020 Berkay Yigit <berkaytgy@gmail.com>
 *
 * A fork of Il2CppDumper (by Perfare)
 * Il2CppDumper license:
 *   MIT License
 *   Copyright(c) 2016 Perfare
 */

#pragma once
#include "Il2CppBase.h"


namespace ModdingAPI::Exposed::EasyRoads3Dv3 {
struct __OOQCCQOCDO_Il2CppStaticFields {
};

struct __OOQCCQOCDO_Il2CppVtbl {
  VirtualInvokeData _0_Equals;
  VirtualInvokeData _1_Finalize;
  VirtualInvokeData _2_GetHashCode;
  VirtualInvokeData _3_ToString;
};

struct __OOQCCQOCDO_Il2CppClass {
  Il2CppClass_1 _1;
  __OOQCCQOCDO_Il2CppStaticFields* pStaticFields;
  Il2CppClass_2 _2;
  __OOQCCQOCDO_Il2CppVtbl vtbl;
};

class OOQCCQOCDO {
public:
  // Il2Cpp fields:
  __OOQCCQOCDO_Il2CppClass* __pClassInstance;
  void* __monitor;

  // Member fields:
  intptr_t Object_m_CachedPtr;

  // Member methods:
  void ::ctor() {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::OOQCCQOCDO*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x389390))(this);
  }

  // Static methods:
  static inline void OQDCOOOOCO(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings* scr, ModdingAPI::Exposed::System::Collections::Generic::List_T_* meshVecs, ModdingAPI::Exposed::System::Collections::Generic::List_T_* meshUVs, ModdingAPI::Exposed::System::Collections::Generic::List_T_* triList, ModdingAPI::Exposed::System::Collections::Generic::List_T_* materialList, ModdingAPI::Exposed::System::Collections::Generic::List_T_* connectionMaterialList) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x113E5D0))(scr, meshVecs, meshUVs, triList, materialList, connectionMaterialList);
  }
  static inline float GetCenterUVY(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings* scr, float uvTiling, ModdingAPI::Exposed::System::Collections::Generic::List_T_* vecArray, int32_t connection) {
    return reinterpret_cast<float(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*, float, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x113F100))(scr, uvTiling, vecArray, connection);
  }
  static inline void OCCODCCOOC(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings* scr, ModdingAPI::Exposed::System::Collections::Generic::List_T_* vecArray, ModdingAPI::Exposed::System::Collections::Generic::List_T_* uvArray, int32_t frontLeft, int32_t topBottom, ModdingAPI::Exposed::System::Collections::Generic::List_T_* meshVecs, ModdingAPI::Exposed::System::Collections::Generic::List_T_* meshUVs, ModdingAPI::Exposed::System::Collections::Generic::List_T_* triList, ModdingAPI::Exposed::System::Collections::Generic::List_T_* intArray, int32_t startRow, int32_t triArrayIndex, int32_t centerPointIndex) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t, int32_t, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x113F340))(scr, vecArray, uvArray, frontLeft, topBottom, meshVecs, meshUVs, triList, intArray, startRow, triArrayIndex, centerPointIndex);
  }
  static inline ModdingAPI::Exposed::System::Collections::Generic::List_T_* OQDQQQCCQD(ModdingAPI::Exposed::System::Collections::Generic::List_T_* intArray) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::System::Collections::Generic::List_T_*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1140390))(intArray);
  }
  static inline ModdingAPI::Exposed::System::Collections::Generic::List_T_* OQDCDQQDQO(ModdingAPI::Exposed::System::Collections::Generic::List_T_* col1, ModdingAPI::Exposed::System::Collections::Generic::List_T_* col2, int32_t startRow) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x11410C0))(col1, col2, startRow);
  }
  static inline ModdingAPI::Exposed::System::Collections::Generic::List_T_* OQOOCDOOOQ(ModdingAPI::Exposed::System::Collections::Generic::List_T_* col1, ModdingAPI::Exposed::System::Collections::Generic::List_T_* col2, ModdingAPI::Exposed::System::Collections::Generic::List_T_* vecs1, ModdingAPI::Exposed::System::Collections::Generic::List_T_* vecs2, int32_t frontLeft, int32_t topBottom, int32_t startRow) {
    return reinterpret_cast<ModdingAPI::Exposed::System::Collections::Generic::List_T_*(__fastcall*)(ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t, int32_t, int32_t)>(Helpers::Memory::GetInstance().MakeAbsolute(0x11416B0))(col1, col2, vecs1, vecs2, frontLeft, topBottom, startRow);
  }
  static inline void InitODOCDQCCCD(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings* scr) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1141F90))(scr);
  }
  static inline void ODOCDQCCCD(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings* scr, ModdingAPI::Exposed::System::Collections::Generic::List_T_* vecArray, ModdingAPI::Exposed::System::Collections::Generic::List_T_* uvs, ModdingAPI::Exposed::System::Collections::Generic::List_T_* uvArray, int32_t verthorz, float uvTiling) {
    reinterpret_cast<void(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, ModdingAPI::Exposed::System::Collections::Generic::List_T_*, int32_t, float)>(Helpers::Memory::GetInstance().MakeAbsolute(0x1142080))(scr, vecArray, uvs, uvArray, verthorz, uvTiling);
  }
  static inline ModdingAPI::Exposed::UnityEngine::Vector3_array* OQOQCDODCO(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings* scr, ModdingAPI::Exposed::UnityEngine::Vector3_array* vecs) {
    return reinterpret_cast<ModdingAPI::Exposed::UnityEngine::Vector3_array*(__fastcall*)(ModdingAPI::Exposed::EasyRoads3Dv3::ERCrossings*, ModdingAPI::Exposed::UnityEngine::Vector3_array*)>(Helpers::Memory::GetInstance().MakeAbsolute(0x11426B0))(scr, vecs);
  }
};
}